timestamp,name,track,_,code,github,_,number,_
2023. 8. 23 오후 10:29:25,테스트,AI,1 - ,-,-,2023. 8. 24,1,1
2023. 8. 24 오전 9:55:08,김민태,Unity,1 - 짝수와 홀수,"public class Solution {
    public string solution(int num) {
        string answer = """";
        if(num%2 == 0){
            answer = ""Even"";
        }
        else{
            answer = ""Odd"";
        }
        return answer;
    }
}",https://github.com/rlaalsxo?tab=repositories,2023. 8. 24,1,1
2023. 8. 24 오전 9:55:14,김대열,Unity,1 - 짝수와 홀수,"#include <string>
#include <vector>

using namespace std;

string solution(int num) {
    return num % 2 ? ""Odd"" : ""Even"";
}",,2023. 8. 24,1,1
2023. 8. 24 오전 9:55:17,채이환,Unity,1 - 짝수와 홀수,"public class Solution {
    public string solution(int num) {
        if (num%2==0) return ""Even"";
        else return ""Odd"";        
    }
}",,2023. 8. 24,1,1
2023. 8. 24 오전 9:56:10,이주연,Unity,1 - 짝수와 홀수,"#include <string>
#include <vector>

using namespace std;

string solution(int num) {
    string answer = """";
    if(num % 2 == 0 || num == 0)
        answer = ""Even"";
    else
        answer = ""Odd"";
    return answer;
}",,2023. 8. 24,1,1
2023. 8. 24 오전 9:57:08,김광수,Unity,1 - 짝수와 홀수,"public class Solution {
    public string solution(int num) {
        return num % 2 == 0 ? ""Even"" : ""Odd"";
    }
}",https://github.com/kksoo0131/Study/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12937.%E2%80%85%EC%A7%9D%EC%88%98%EC%99%80%E2%80%85%ED%99%80%EC%88%98,2023. 8. 24,1,1
2023. 8. 24 오전 9:58:09,김민태,Unity,2 - 평균 구하기,"public class Solution {
    public double solution(int[] arr) {
        double answer = 0;
        for(int i = 0; i < arr.Length; i++){
            answer += arr[i];
        }
        answer /= arr.Length;
        return answer;
    }
}",https://github.com/rlaalsxo?tab=repositories,2023. 8. 24,2,1
2023. 8. 24 오전 9:58:29,김진규,Unity,1 - 짝수와 홀수,"internal class EvenOdd
    {
        static void Main(string[] args)
        {
            Solution sol1 = new Solution();
            for (int i = 0; i < 10; i++)
            {
                Console.WriteLine($""{sol1.solution(i)}"");
            }
        }
    }

    public class Solution
    {
        public string solution(int num)
        {
            string answer = """";
            answer = num % 2 == 0 ? ""Even"" : ""Odd"";
            return answer;
        }
    }",https://github.com/kjg5370/CodeKada,2023. 8. 24,1,1
2023. 8. 24 오전 9:58:44,김대열,Unity,2 - 평균 구하기,"#include <string>
#include <vector>

using namespace std;

double solution(vector<int> arr) {
    double answer = 0.0;
    auto sum = 0;
    for (int i = 0;i < arr.size();i++){
         sum += arr[i];
    }
    answer = sum/(double)arr.size();
    return answer;
}",,2023. 8. 24,2,1
2023. 8. 24 오전 9:59:23,채이환,Unity,2 - 평균 구하기,"using System.Linq;

public class Solution {
    public double solution(int[] arr) {
        double answer = 0;
        answer = (double)arr.Sum()/arr.Count();
        return answer;
    }
}",,2023. 8. 24,2,1
2023. 8. 24 오전 9:59:42,이주연,Unity,2 - 평균 구하기,"#include <string>
#include <vector>

using namespace std;

double solution(vector<int> arr) {
    double answer = 0;
    
    for(int i=0; i<arr.size(); i++)
    {
        answer += (double)arr[i];
    }
    
    answer /= (double)arr.size();
    return answer;
}",,2023. 8. 24,2,1
2023. 8. 24 오전 9:59:56,안영진,Unity,1 - 짝수와 홀수,"public class Solution {
    public string solution(int num) {
        string answer = """";
        answer = num % 2 == 0 ? ""Even"" : ""Odd"";
        return answer;
    }
}",,2023. 8. 24,1,1
2023. 8. 24 오전 10:00:12,장성림,Unity,1 - 짝수와 홀수,"public class Solution {
    public string solution(int num) {
        string answer = """";
        if (num % 2 == 0)
            answer = ""Even"";
        else
            answer = ""Odd"";        
        return answer;
    }
}",https://github.com/hoobhoob,2023. 8. 24,1,1
2023. 8. 24 오전 10:00:13,이홍준,Unity,1 - 짝수와 홀수,"public class Solution {
    public string solution(int num) {
        string answer = """";
        
        if (num % 2 == 0)
        {
            answer = ""Even"";
        }
        else
        {
            answer = ""Odd"";
        }
        
        return answer;
    }
}",https://github.com/dlghdwns97/Study/blob/main/1.%20%EC%A7%9D%EC%88%98%EC%99%80%20%ED%99%80%EC%88%98.cs,2023. 8. 24,1,1
2023. 8. 24 오전 10:00:15,정재호,Unity,1 - 짝수와 홀수,"public class Solution
{
    public string solution(int num)
    {
        string answer = """";
        if (num % 2 == 0)
        {
            answer = ""Even"";
        }
        else
        {
            answer = ""Odd"";
        }
        return answer;
    }
}",,2023. 8. 24,1,1
2023. 8. 24 오전 10:00:18,신우석,Unity,1 - 짝수와 홀수,"public class Solution {
    public string solution(int num) {
        if (num == 0) return ""Even"";
        else if (num < 0) num *= -1;
        
        if (num % 2 == 0) return ""Even"";
        else // num % 2 != 0
            return ""Odd"";
    }
}",https://github.com/seoksii/AlgorithmCodeKata/blob/main/20230824/%5B12937%5D%EC%A7%9D%EC%88%98%EC%99%80%20%ED%99%80%EC%88%98.cs,2023. 8. 24,1,1
2023. 8. 24 오전 10:00:28,조영오,Unity,1 - 짝수와 홀수,"public class Solution {
    public string solution(int num) {
        string answer = """";
        
        if(num%2 == 0) answer = ""Even"";
        else answer = ""Odd"";
        return answer;
    }
}",https://github.com/jyo217?tab=repositories,2023. 8. 24,1,1
2023. 8. 24 오전 10:00:49,임전혁,Unity,1 - 짝수와 홀수,"public class Solution {
    public string solution(int num) {
        string answer = """";
        
        if (num % 2 == 0 || num == 0) 
        {
            answer = ""Even"";
        } else {
            answer = ""Odd"";
        }
        
        return answer;
    }
}",https://github.com/yarogono/Algorithm_CSharp/blob/master/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12937.%E2%80%85%EC%A7%9D%EC%88%98%EC%99%80%E2%80%85%ED%99%80%EC%88%98/%EC%A7%9D%EC%88%98%EC%99%80%E2%80%85%ED%99%80%EC%88%98.cs,2023. 8. 24,1,1
2023. 8. 24 오전 10:00:58,박민혁,Unity,1 - 짝수와 홀수,"public class Solution {
    public string solution(int num) {
        string answer = ""Odd"";
        if(num%2==0)
        {
         answer=""Even"";   
        }
        return answer;
    }
}",,2023. 8. 24,1,1
2023. 8. 24 오전 10:01:18,이선재,Unity,1 - 짝수와 홀수,"#include <string>
#include <vector>

using namespace std;

string solution(int num) {
    return num % 2 == 0 ? ""Even"" : ""Odd"";
}",https://github.com/shehdrbs123/spartaB10/blob/main/%EC%9D%B4%EC%84%A0%EC%9E%AC/Programmers/%EC%A7%9D%EC%88%98%EC%99%80%20%ED%99%80%EC%88%98,2023. 8. 24,1,1
2023. 8. 24 오전 10:01:33,채이환,Unity,3 - 자릿수 더하기,"using System;

public class Solution {
    public int solution(int n) {
        int answer = 0;
        while(n>0)
        {
            answer += n%10;
            n = n/10;
        }
        return answer;
    }
}",,2023. 8. 24,3,1
2023. 8. 24 오전 10:01:38,김하늘,Unity,1 - 짝수와 홀수,"public class Solution 
{
    public string solution(int num) 
    {
        if (num % 2 != 0) return ""Odd"";
        else return ""Even"";
    }
}",,2023. 8. 24,1,1
2023. 8. 24 오전 10:01:41,정재호,Unity,2 - 평균 구하기,"public class Solution
{
    public double solution(int[] arr)
    {
        double answer = 0;
        double sum = 0;

        for (int i = 0; i < arr.Length; i++)
        {
            sum += arr[i];
        }
        return answer = sum / arr.Length;
    }
}",,2023. 8. 24,2,1
2023. 8. 24 오전 10:01:54,이선재,Unity,1 - 짝수와 홀수,"#include <string>
#include <vector>

using namespace std;

string solution(int num) {
    return num % 2 == 0 ? ""Even"" : ""Odd"";
}",https://github.com/shehdrbs123/spartaB10/blob/main/%EC%9D%B4%EC%84%A0%EC%9E%AC/Programmers/%EC%A7%9D%EC%88%98%EC%99%80%20%ED%99%80%EC%88%98,2023. 8. 24,1,1
2023. 8. 24 오전 10:02:10,조영오,Unity,2 - 평균 구하기,"public class Solution {
    public double solution(int[] arr) {
        double answer = 0;
        
        foreach(int num in arr){
            answer += num;
        }
        
        answer /= arr.Length;
        return answer;
    }
}",,2023. 8. 24,2,1
2023. 8. 24 오전 10:02:25,김민상,Unity,1 - 짝수와 홀수,"def solution(num):
    return [""Even"", ""Odd""][num % 2]",,2023. 8. 24,1,1
2023. 8. 24 오전 10:02:41,박준규,Unity,1 - 짝수와 홀수,"public class Solution
{
    static public string solution(int num)
    {
        string answer;
        if (num / 2 == 0)
        {
            answer = ""Even"";
        }
        else
        {
            answer = ""Odd"";
        }
        Console.WriteLine(answer);
        return answer;
    }

    static void Main()
    {
        solution(3);
    }
}",,2023. 8. 24,1,1
2023. 8. 24 오전 10:02:41,박도현,Unity,1 - 짝수와 홀수,"public class Solution {
    public string solution(int num) {
        string answer = """";
        if(num % 2 ==0)
        {
            answer = ""Even"";
        }else{answer = ""Odd"";}
        return answer;
    }
}",,2023. 8. 24,1,1
2023. 8. 24 오전 10:02:46,한병권,Unity,1 - 짝수와 홀수,"public class Leve1_01
{
    public class Solution
    {
        public string solution(int num)
        {
            string answer = num % 2 == 0 ? ""Even"" : ""Odd"";
            return answer;
        }
    }
}
",https://github.com/hbg9212/algorithm,2023. 8. 24,1,1
2023. 8. 24 오전 10:03:02,임젆겨,Unity,2 - 평균 구하기,"public class Solution {
    public double solution(int[] arr) {
        double answer = 0;
        
        double sum = 0;
        for (int i = 0; i < arr.Length; i++)
        {
            sum += arr[i];
        }
        
        answer = sum / arr.Length;
        return answer;
    }
}",https://github.com/yarogono/Algorithm_CSharp/blob/master/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12944.%E2%80%85%ED%8F%89%EA%B7%A0%E2%80%85%EA%B5%AC%ED%95%98%EA%B8%B0/%ED%8F%89%EA%B7%A0%E2%80%85%EA%B5%AC%ED%95%98%EA%B8%B0.cs,2023. 8. 24,2,1
2023. 8. 24 오전 10:03:16,김형중,Unity,1 - 짝수와 홀수,"public class Solution 
{
    public string solution(int num) 
    {
        if (num % 2 == 0)
        {
            return ""Even"";
        }
        else
        {
            return ""Odd"";
        }
    }
}",,2023. 8. 24,1,1
2023. 8. 24 오전 10:03:53,채이환,Unity,4 - 약수의 합,"using System;

public class Solution {
    public int solution(int n) {
        int answer = 0;
        for (int i=1; i<=n; ++i)
        {
            if (n%i==0)
                answer += i;
        }
        return answer;
    }
}",,2023. 8. 24,4,1
2023. 8. 24 오전 10:03:55,김광수,Unity,2 - 평균 구하기,"using System.Linq;
public class Solution {
    public double solution(int[] arr) {
        return arr.Sum() / (double)arr.Length;
    }
}",https://github.com/kksoo0131/Study/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12944.%E2%80%85%ED%8F%89%EA%B7%A0%E2%80%85%EA%B5%AC%ED%95%98%EA%B8%B0,2023. 8. 24,2,1
2023. 8. 24 오전 10:04:05,정주찬,Unity,1 - 짝수와 홀수,"﻿using System;

namespace SpartaAlgorithm
{
    class Program
    {
        static void Main(string[] args)
        {
            solution(3);
        }

        private static void solution(int num)
        {
            string answer = """";
            if (num % 2 == 0)
            {
                answer = ""Even"";
            }
            else
            {
                answer = ""Odd"";
            }
        }
    }
}",https://github.com/JeongJuChan/Algorithm/tree/main,2023. 8. 24,1,1
2023. 8. 24 오전 10:04:06,신현,Unity,1 - 짝수와 홀수,"public class Solution {
    public string solution(int num) {
        string answer = """";
        if( num % 2 == 0){
            answer = ""Even"";
        }else{
            answer =""Odd"";
        }
        return answer;
    }
}",https://github.com/Shyunju/codTaka.git,2023. 8. 24,1,1
2023. 8. 24 오전 10:04:23,정재호,Unity,3 - 자릿수 더하기,"using System;

public class Solution
{
    public int solution(int n)
    {
        int answer = 0;

        char[] chars = n.ToString().ToCharArray();

        for (int i = 0; i < chars.Length; i++)
        {
            answer += chars[i] -'0';
        }

        return answer;
    }
}",,2023. 8. 24,3,1
2023. 8. 24 오전 10:04:26,이세진,Unity,1 - 짝수와 홀수,"public class Solution {
    public string solution(int num) {
        
        
        
        if(num % 2 == 0)
        {
            return ""Even"";
        }
        else
        {
            return ""Odd"";
        }
        
    }
}",,2023. 8. 24,1,1
2023. 8. 24 오전 10:04:31,이주연,Unity,3 - 자릿수 더하기,"#include <iostream>

using namespace std;
int solution(int n)
{
    int answer = 0;

    while(n != 0)
    {
        answer += (n % 10);
        n /= 10;
        
    }
    
    return answer;
}",,2023. 8. 24,3,1
2023. 8. 24 오전 10:04:40,임전혁,Unity,2 - 평균 구하기,"public class Solution {
    public double solution(int[] arr) {
        double answer = 0;
        
        double sum = 0;
        for (int i = 0; i < arr.Length; i++)
        {
            sum += arr[i];
        }
        
        answer = sum / arr.Length;
        return answer;
    }
}",https://github.com/yarogono/Algorithm_CSharp/blob/master/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12944.%E2%80%85%ED%8F%89%EA%B7%A0%E2%80%85%EA%B5%AC%ED%95%98%EA%B8%B0/%ED%8F%89%EA%B7%A0%E2%80%85%EA%B5%AC%ED%95%98%EA%B8%B0.cs,2023. 8. 24,2,1
2023. 8. 24 오전 10:04:41,강성호,Unity,1 - 짝수와 홀수,"public class Solution {
    public string solution(int num) {
       string answer = """";
		if (num % 2 == 0) answer = ""Even"";
		else answer = ""Odd"";
		return answer;
    }
}",,2023. 8. 24,1,1
2023. 8. 24 오전 10:04:53,박지원,Unity,1 - 짝수와 홀수,"public class Solution {
    public string solution(int num) {
        return num%2 == 0 ? ""Even"" : ""Odd"";
    }
}",https://github.com/jwonp9127/AlgorithmStudy/tree/f9e01641f74e41bafa748e898f23ba24eba29c58/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12937.%E2%80%85%EC%A7%9D%EC%88%98%EC%99%80%E2%80%85%ED%99%80%EC%88%98,2023. 8. 24,1,1
2023. 8. 24 오전 10:04:56,안소정,Unity,1 - 짝수와 홀수,"public class Solution {
    public string solution(int num) {
        string answer = """";
        string Even = ""Even"";
        string Odd = ""Odd"";
        if (num % 2 == 0)
            return answer = Even;
            else return answer = Odd;
        
    }
}",,2023. 8. 24,1,1
2023. 8. 24 오전 10:05:35,이현지,Unity,1 - 짝수와 홀수,"public class Solution {
    public string solution(int num) {
        string answer;
        if (num % 2 == 0) answer = ""Even"";
        else answer = ""Odd"";
        return answer;
    }",,2023. 8. 24,1,1
2023. 8. 24 오전 10:05:40,김예준,Unity,1 - 짝수와 홀수,"#include <string>

using namespace std;

string solution(int num) {
    if (num % 2 == 0) return ""Even"";
    else return ""Odd"";
}",,2023. 8. 24,1,1
2023. 8. 24 오전 10:05:56,채이환,Unity,5 - 나머지가 1이 되는 수 찾기,"using System;

public class Solution {
    public int solution(int n) {
        int answer = 0;
        for (int i=1; i<n; ++i)
        {
            if (n%i==1)
            {
                answer = i;
                break;
            }
        }
        return answer;
    }
}",,2023. 8. 24,5,1
2023. 8. 24 오전 10:05:59,김민상,Unity,2 - 평균 구하기,"public class Solution {
    public double solution(int[] arr) {
        double answer = 0;
        
        for(int i = 0; i < arr.Length; i++)
        {
            answer += arr[i];
        }
        
        return answer / arr.Length;
    }
}",,2023. 8. 24,2,1
2023. 8. 24 오전 10:06:06,김호연,Unity,1 - 짝수와 홀수,"public class Solution {
    public string solution(int num) {
         string answer;
        if(num % 2 == 0)
         {
             answer = ""Even"";
         }
        else
        {
            answer = ""Odd"";
        }
        
        return answer;
    }
}",,2023. 8. 24,1,1
2023. 8. 24 오전 10:06:11,한병권,Unity,2 - 평균 구하기,"public class Solution {
    public double solution(int[] arr) {
        double answer = 0;
        
        for(int i = 0; i < arr.Length; i++)
        {
            answer += arr[i];
        }
        
        answer = answer / arr.Length;
        
        return answer;
    }
}",https://github.com/hbg9212/algorithm,2023. 8. 24,2,1
2023. 8. 24 오전 10:06:17,이소이,Unity,1 - 짝수와 홀수,"public class Solution {
    public string solution(int num) {
        string answer = """";
        
        if (num % 2 == 0)
            answer = ""Even"";
        else
            answer = ""Odd"";

        return answer;
    }
}",https://github.com/leesy015599/AlgorithmCodeKata,2023. 8. 24,1,1
2023. 8. 24 오전 10:06:29,김나운,Unity,1 - 짝수와 홀수,"public class Solution {
    public string solution(int num) {
        string answer = """";
        
        if(num%2 == 0){
            answer = ""Even"";
        }else{
            answer = ""Odd"";
        }
        
        return answer;
    }
}",,2023. 8. 24,1,1
2023. 8. 24 오전 10:06:33,김광수,Unity,3 - 자릿수 더하기,"using System;

public class Solution {
    public int solution(int n) {
        string str = n.ToString();
        int answer = 0;
        foreach(char c in str){
            answer += int.Parse(c.ToString());
        }
        
        return answer;
    }
}",https://github.com/kksoo0131/Study/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12931.%E2%80%85%EC%9E%90%EB%A6%BF%EC%88%98%E2%80%85%EB%8D%94%ED%95%98%EA%B8%B0,2023. 8. 24,3,1
2023. 8. 24 오전 10:06:34,노동균,Unity,1 - 짝수와 홀수,"using System;
public class Solution {
    public string solution(int num) {
        string answer = ""Even"";
        
        int rest = Math.Abs(num%2);
        if(rest == 1)
            answer = ""Odd"";
            
        return answer;
    }
}",https://github.com/shehdrbs123/Sparta/blob/main/Algorithm/Programmers/%EC%A7%9D%EC%88%98%EC%99%80%ED%99%80%EC%88%98.cs,2023. 8. 24,1,1
2023. 8. 24 오전 10:06:49,차요한,Unity,1 - 짝수와 홀수,"public class Solution {
    public string solution(int num) {
        string answer = """";
        
        if((num%2)==0)
        {
            answer=""Even"";
        }
        else
        {
            answer=""Odd"";
        }
        
        return answer;
    }
}",https://github.com/HOHOJO/Algorithm_test,2023. 8. 24,1,1
2023. 8. 24 오전 10:07:01,김예준,Unity,2 - 평균 구하기,"#include <string>
#include <vector>

using namespace std;

double solution(vector<int> arr) {
    double answer = 0;
    
    for (int i = 0; i < arr.size(); i++)
    {
        answer += arr[i];
    }
    
    answer /= arr.size();
    
    return answer;
}",,2023. 8. 24,2,1
2023. 8. 24 오전 10:07:19,이선재,Unity,2 - 평균 구하기,"public class Solution {
    public double solution(int[] arr) {
        double answer = 0;
        
        for(int i = 0; i < arr.Length; i++){
            answer += arr[i];
        }
        
        return answer / arr.Length;
    }
}",https://github.com/shehdrbs123/spartaB10/blob/main/%EC%9D%B4%EC%84%A0%EC%9E%AC/Programmers/%ED%8F%89%EA%B7%A0%20%EA%B5%AC%ED%95%98%EA%B8%B0,2023. 8. 24,2,1
2023. 8. 24 오전 10:07:22,김강현,Unity,1 - 짝수와 홀수,"    public string solution(int num) 
    {
        string answer = """";
        if(num % 2 == 0)
        {
            answer = ""Even"";
        }
        else
        {
            answer = ""Odd"";
        }
        return answer;
    }",,2023. 8. 24,1,1
2023. 8. 24 오전 10:07:26,이홍준,Unity,2 - 평균 구하기,"public class Solution {
    public double solution(int[] arr) {
        double answer = 0;
        double sum = 0;
        
        for (int i = 0; i < arr.Length; i++)
        {
            sum += arr[i];
        }
        
        answer = sum / arr.Length;
        
        return answer;
    }
}",https://github.com/dlghdwns97/Study/blob/main/2.%20%ED%8F%89%EA%B7%A0%20%EA%B5%AC%ED%95%98%EA%B8%B0.cs,2023. 8. 24,2,1
2023. 8. 24 오전 10:07:48,김민태,Unity,3 - 자릿수 더하기,"using System;

public class Solution {
    public int solution(int n) {
        int answer = 0;
        while(n>0){
            answer += n%10;
            n /=10;
        }
        return answer;
    }
}",https://github.com/rlaalsxo?tab=repositories,2023. 8. 24,3,1
2023. 8. 24 오전 10:07:51,정재훈,Unity,1 - 짝수와 홀수,"public class Solution {
    public string solution(int num) {
        string answer = """";
        if(num%2==0){
            answer= ""Even"";
        }
        else{
            answer= ""Odd"";
        }
        return answer;
    }
}",,2023. 8. 24,1,1
2023. 8. 24 오전 10:07:54,정재호,Unity,4 - 약수의 합,"public class Solution
{
    public int solution(int n)
    {
        int answer = 0;

        for (int i = 1; i <= n; i++)
        {
            if (n % i == 0)
            {
                answer += i;
            }
        }

        return answer;
    }
}",,2023. 8. 24,4,1
2023. 8. 24 오전 10:07:57,김어진,Unity,1 - 짝수와 홀수,"public class Solution {
    public string solution(int num) {
        string answer = """";
        if(num%2==0){
            answer = ""Even"";
        }
        else {
            answer = ""Odd"";
        }
        
        return answer;
    }
}",,2023. 8. 24,1,1
2023. 8. 24 오전 10:08:04,신현주,Unity,2 - 평균 구하기,"public class Solution {
    public double solution(int[] arr) {
        double answer = 0;
        double sum = 0;
        for( int i = 0; i < arr.Length; i++){
            sum += arr[i];
        }
        answer = sum / arr.Length;
        return answer;
    }
}",https://github.com/Shyunju/codTaka.git,2023. 8. 24,2,1
2023. 8. 24 오전 10:08:31,임전혁,Unity,3 - 자릿수 더하기,"using System;

public class Solution {
    public int solution(int n) {
        int answer = 0;
        string nStr = n.ToString();
        
        for (int i = 0; i < nStr.Length; i++)
            answer += int.Parse(nStr[i].ToString());
        
        return answer;
    }
}",https://github.com/yarogono/Algorithm_CSharp/blob/master/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12931.%E2%80%85%EC%9E%90%EB%A6%BF%EC%88%98%E2%80%85%EB%8D%94%ED%95%98%EA%B8%B0/%EC%9E%90%EB%A6%BF%EC%88%98%E2%80%85%EB%8D%94%ED%95%98%EA%B8%B0.cs,2023. 8. 24,3,1
2023. 8. 24 오전 10:08:38,김예준,Unity,3 - 자릿수 더하기,"using System;

public class Solution {
    public int solution(int n) {
        int answer = 0;
        
        while (n != 0)
        {
            answer += n % 10;
            n /= 10;
        }
        
        return answer;
    }
}",,2023. 8. 24,3,1
2023. 8. 24 오전 10:09:02,김광수,Unity,4 - 약수의 합,"public class Solution {
    public int solution(int n) {
        int answer = 0;
        
        for(int i = 1; i <= n ; i++){
            answer += n % i == 0 ? n / i : 0; 
        }
        return answer;
    }
}",https://github.com/kksoo0131/Study/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12928.%E2%80%85%EC%95%BD%EC%88%98%EC%9D%98%E2%80%85%ED%95%A9,2023. 8. 24,4,1
2023. 8. 24 오전 10:09:21,안소정,Unity,2 - 평균 구하기,"public class Solution {
    public double solution(int[] arr) {
        double answer = 0;
        int[] sum = new int[arr.Length];
        for (int i = 0; i < arr.Length; i++)
        {
            answer += arr[i];
        }
        double average = (double)answer / arr.Length;
        return answer = average;
    }
}",,2023. 8. 24,2,1
2023. 8. 24 오전 10:09:29, 지민규,Unity,1 - 짝수와 홀수,"public class Solution {
    public string solution(int num) {
        if (num >= 0)
        {
            string answer = (num % 2 == 1)?""Odd"":""Even"";
            return answer;
        }
        else
        {
            string answer = ((num*(-1)) % 2 == 1)?""Odd"":""Even"";
            return answer;
        }
    
    }
}",,2023. 8. 24,1,1
2023. 8. 24 오전 10:09:40,박준규,Unity,2 - 평균 구하기,"static public double solution(int[] arr)
{
    double answer = 0;
    for (int i = 0; i < arr.Length; i++)
    {
        answer += arr[i];
    }
    answer = answer / arr.Length;
    Console.WriteLine(answer);
    return answer;
}",,2023. 8. 24,2,1
2023. 8. 24 오전 10:09:45,임전혁,Unity,4 - 약수의 합,"public class Solution {
    public int solution(int n) {
        int resultSum = 0;
        for(int i = 1; i <= n / 2; i++) {
            if(n % i == 0) {
                resultSum += i;
            }
        }
        return resultSum + n;
    }
}",https://github.com/yarogono/Algorithm_CSharp/blob/master/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12928.%E2%80%85%EC%95%BD%EC%88%98%EC%9D%98%E2%80%85%ED%95%A9/%EC%95%BD%EC%88%98%EC%9D%98%E2%80%85%ED%95%A9.cs,2023. 8. 24,4,1
2023. 8. 24 오전 10:09:47,박민혁,Unity,2 - 평균 구하기,"public class Solution {
    public double solution(int[] arr) {
        double answer = 0;
        for(int i=0; i<arr.Length;++i)
        {
            answer+=arr[i];
        }
        answer=answer/arr.Length;
        return answer;
    }
}",,2023. 8. 24,2,1
2023. 8. 24 오전 10:09:51,정재호,Unity,5 - 나머지가 1이 되는 수 찾기,"using System;

public class Solution
{
    public int solution(int n)
    {
        int answer = 0;

        for (int i = 1; i <= n; i++)
        {
            if (n % i == 1)
            {
                answer = i;
                break;
            }
        }

        return answer;
    }
}",,2023. 8. 24,5,1
2023. 8. 24 오전 10:10:11,정주찬,Unity,2 - 평균 구하기,"using System.Linq;
public class Solution {
    public double solution(int[] arr) {
        double answer = 0;
            answer = arr.Average();
            return answer;
    }
}",https://github.com/JeongJuChan/Algorithm,2023. 8. 24,2,1
2023. 8. 24 오전 10:10:19,김하늘,Unity,2 - 평균 구하기,"public class Solution 
{
    public double solution(int[] arr) 
    {
        double sum = 0;
        foreach (double num in arr)
            sum += num;
        return sum / arr.Length;
    }
}",,2023. 8. 24,2,1
2023. 8. 24 오전 10:10:24,조영오,Unity,3 - 자릿수 더하기,"using System;

public class Solution {
    public int solution(int n) {
        int answer = 0;
        
        while(true){
            if(n < 10){ answer += n; break;}
            answer += (n % 10);
            n /= 10;
        }
        
        
        
        return answer;
    }
}",,2023. 8. 24,3,1
2023. 8. 24 오전 10:10:40,김도현A,Unity,1 - 짝수와 홀수,"public class Solution {
    public string solution(int num) {
        string answer = """";
        if (num%2==0)
        {
            answer = ""Even"";
        }
        else
        {
            answer = ""Odd"";
        }
        return answer;
    }
}",,2023. 8. 24,1,1
2023. 8. 24 오전 10:10:42,임전혁,Unity,5 - 나머지가 1이 되는 수 찾기,"using System;

public class Solution {
    public int solution(int n) {
        for(int i = 1; i < n; i++) {
            if(n % i == 1) {
                return i;
            }
        }
        return 0;
    }
}",https://github.com/yarogono/Algorithm_CSharp/blob/master/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/87389.%E2%80%85%EB%82%98%EB%A8%B8%EC%A7%80%EA%B0%80%E2%80%851%EC%9D%B4%E2%80%85%EB%90%98%EB%8A%94%E2%80%85%EC%88%98%E2%80%85%EC%B0%BE%EA%B8%B0/%EB%82%98%EB%A8%B8%EC%A7%80%EA%B0%80%E2%80%851%EC%9D%B4%E2%80%85%EB%90%98%EB%8A%94%E2%80%85%EC%88%98%E2%80%85%EC%B0%BE%EA%B8%B0.cs,2023. 8. 24,5,1
2023. 8. 24 오전 10:10:51,안영진,Unity,2 - 평균 구하기,"public class Solution {
    public double solution(int[] arr) {
        double answer = 0;
        
        for(int i = 0; i < arr.Length; i++){
            answer += arr[i];
        }
        
        answer = answer / arr.Length;
        
        return answer;
    }
}",https://github.com/AYJ12/NbCamp,2023. 8. 24,2,1
2023. 8. 24 오전 10:10:51,이현지,Unity,2 - 평균 구하기,"public class Solution {
    public double solution(int[] arr) 
    {
        double answer = 0;
        
        foreach (int i in arr)
        {
            answer += i;
        }
        
        answer /= arr.Length;
        
        return answer;
    }
}",,2023. 8. 24,2,1
2023. 8. 24 오전 10:11:11,김나운,Unity,2 - 평균 구하기,"public class Solution {
    public double solution(int[] arr) {
        double answer = 0;
        int sum = 0;
        
        for(int i = 0; i<arr.Length; i++){
            sum += arr[i];
        }
        answer = sum / (double)arr.Length;
        
        return answer;
    }
}",,2023. 8. 24,2,1
2023. 8. 24 오전 10:11:11,박민혁,Unity,3 - 자릿수 더하기,"using System;

public class Solution {
    public int solution(int n) {
        int answer = 0;
        while(n>0)
        {
         answer+=n%10;
            n=n/10;
        }
        return answer;
    }
}",,2023. 8. 24,3,1
2023. 8. 24 오전 10:11:16,김민태,Unity,4 - 약수의 합,"public class Solution {
    public int solution(int n) {
        int answer = 0;
        for(int i = 1; i<=n; i++){
            if(n%i ==0){
                answer += i;
            }
        }
        return answer;
    }
}",https://github.com/rlaalsxo?tab=repositories,2023. 8. 24,4,1
2023. 8. 24 오전 10:11:18,이승연,Unity,1 - 짝수와 홀수,"public class Solution {
    public string solution(int num) {
        string answer = """";
        
        if(num%2==0)
        {
            answer=""Even"";
        }
        
        else if(num==0)
        {
            answer=""Even"";
        }
        
        else
        {
            answer=""Odd"";
        }
        
        return answer;
        
        
        
        
    }
}",,2023. 8. 24,1,1
2023. 8. 24 오전 10:11:30,김진규,Unity,2 - 평균 구하기,"public class Solution {
    public double solution(int[] arr) {
        double answer = 0;
        int sum = 0;
        foreach(int num in arr)
        {
            sum += num;
        }
        answer = (double)sum / arr.Length;
        return answer;
    }
}",,2023. 8. 24,2,1
2023. 8. 24 오전 10:11:34,권선영,Unity,1 - 짝수와 홀수,"public class Solution {
    public string solution(int num) {
        string answer = """";
        
        if (num% 2 == 0)
        {
           answer = ""Even"";  
        }
        else
        {
            answer = ""Odd"";  
        }
        
        return answer;
    }
}",https://github.com/Tealss,2023. 8. 24,1,1
2023. 8. 24 오전 10:11:35,최석준,Unity,1 - 짝수와 홀수,"char* solution(int num) {

    // 리턴할 값은 메모리를 동적 할당해주세요
    char* answer = (char*)malloc(5-num%2);

    if(num%2==0) {
        answer=""Even"";
    }
    else {
        answer=""Odd"";
    }
    return answer;
}",,2023. 8. 24,1,1
2023. 8. 24 오전 10:11:57,이소이,Unity,2 - 평균 구하기,"public class Solution {
    public double solution(int[] arr) {
        double answer = 0;
        
        int index = 0;
        while (index < arr.Length)
        {
            answer += arr[index++];
        }
        answer /= index;
        
        return answer;
    }
}",https://github.com/leesy015599/AlgorithmCodeKata,2023. 8. 24,2,1
2023. 8. 24 오전 10:11:58,김광수,Unity,5 - 나머지가 1이 되는 수 찾기,"using System;

public class Solution {
    public int solution(int n) {
        int answer = 0;
        
        for(int i=1; i<= n ; i++){
            
            if (n % i == 1){
                answer = i;
                break;
            }
        }
        return answer;
    }
}",https://github.com/kksoo0131/Study/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/87389.%E2%80%85%EB%82%98%EB%A8%B8%EC%A7%80%EA%B0%80%E2%80%851%EC%9D%B4%E2%80%85%EB%90%98%EB%8A%94%E2%80%85%EC%88%98%E2%80%85%EC%B0%BE%EA%B8%B0,2023. 8. 24,5,1
2023. 8. 24 오전 10:12:07,지민규,Unity,2 - 평균 구하기,"public class Solution {
    public double solution(int[] arr) {
        double answer = 0;
        foreach (double element in arr)
        {
            answer += element;
        }
        answer /= arr.Length;
        return answer;
    }
}",,2023. 8. 24,2,1
2023. 8. 24 오전 10:12:19,이세진,Unity,2 - 평균 구하기,"public class Solution {
    public double solution(int[] arr) {   
        double answer = 0;
        
        for(int i = 0; i < arr.Length; i++)
        {
            answer = answer + arr[i];
        }

        answer /= arr.Length ;
        
        return answer;
    }
}",,2023. 8. 24,2,1
2023. 8. 24 오전 10:12:19,이주연,Unity,4 - 약수의 합,"#include <string>
#include <vector>
#include <cmath>

using namespace std;

int solution(int n) {
    int answer = 0;
    
    if(n == 0)
        return 0;
    if(n == 1)
        return 1;
    
    for(int i=1; i<=sqrt(n); i++)
    {
        if(n % i == 0)
        {
            if(i == (n / i))
            {
                answer += i;
            }
            else
            {
                answer += (i + (n / i));
            }
        }
    }
    
    
    return answer;
}",,2023. 8. 24,4,1
2023. 8. 24 오전 10:12:46,임전혁,Unity,6 - x만큼 간격이 있는 n개의 숫자,"public class Solution {
    public long[] solution(int x, int n) {
        long[] answer = new long[n];
        for(int i = 0; i < n; i++) {
            answer[i] = (long)x * (i + 1);
        }
        return answer;
    }
}",https://github.com/yarogono/Algorithm_CSharp/blob/master/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12954.%E2%80%85x%EB%A7%8C%ED%81%BC%E2%80%85%EA%B0%84%EA%B2%A9%EC%9D%B4%E2%80%85%EC%9E%88%EB%8A%94%E2%80%85n%EA%B0%9C%EC%9D%98%E2%80%85%EC%88%AB%EC%9E%90/x%EB%A7%8C%ED%81%BC%E2%80%85%EA%B0%84%EA%B2%A9%EC%9D%B4%E2%80%85%EC%9E%88%EB%8A%94%E2%80%85n%EA%B0%9C%EC%9D%98%E2%80%85%EC%88%AB%EC%9E%90.cs,2023. 8. 24,6,1
2023. 8. 24 오전 10:12:49,이정환,Unity,1 - 짝수와 홀수,"using System;

namespace _0824algo
{
    internal class Program
    {
        public class Solution
        {
            static void Main(string[] args)
            {
                string input = Console.ReadLine();
                int num = int.Parse(input);
                Console.WriteLine(solution(num));
                
            }
            static public string solution(int num)
            {
                string answer;
                if (num % 2 == 0)
                {
                    answer = ""Odd"";
                }
                else
                {
                    answer = ""Even"";
                }

                return answer;
            }
        }
    }
}",https://github.com/jhwan328/algorithmPratice.git,2023. 8. 24,1,1
2023. 8. 24 오전 10:13:07,강성호,Unity,2 - 평균 구하기,"public class Solution {
    public double solution(int[] arr) {
       double answer = 0;
			int sum = 0;
			foreach(int i in arr)
			{
				sum += i;
			}
			answer = (double)sum / arr.Length;
			return answer;
    }
}",,2023. 8. 24,2,1
2023. 8. 24 오전 10:13:17,박민혁,Unity,4 - 약수의 합,"public class Solution {
    public int solution(int n) {
        int answer = 0;
        for(int i=1; i<=n;i++)
        {
            if(n%i==0)
            {
                answer+=i;
            }   
        }
        return answer;
    }
}",,2023. 8. 24,4,1
2023. 8. 24 오전 10:13:33,김민상,Unity,3 - 자릿수 더하기,"public class Solution {
    public int solution(int n) {
        int answer = 0;
        
        while (n > 0)
        {
            answer += n % 10;
            n /= 10;
        }
        
        return answer;
    }
}",,2023. 8. 24,3,1
2023. 8. 24 오전 10:13:38,신우석,Unity,2 - 평균 구하기,"using System;

public class Solution {
    public double solution(int[] arr) {
        double answer = 0;
        foreach (int i in arr)
            answer += Convert.ToDouble(i);
        return answer / Convert.ToDouble(arr.Length);
    }
}",https://github.com/seoksii/AlgorithmCodeKata/blob/main/20230824/%5B12944%5D%ED%8F%89%EA%B7%A0%20%EA%B5%AC%ED%95%98%EA%B8%B0.cs,2023. 8. 24,2,1
2023. 8. 24 오전 10:13:43,신해준,Unity,1 - 짝수와 홀수,"public class Solution 
{
    public string solution(int num) 
    {
        if (num % 2 == 0)
        {
            return ""Even"";
        }
        else
        {
            return ""Odd"";
        }
    }
}
",,2023. 8. 24,1,1
2023. 8. 24 오전 10:13:50,이선재,Unity,3 - 자릿수 더하기,"using System;

public class Solution {
    public int solution(int n) {
        int answer = 0;
        
        string sn = n.ToString();
        
        for(int i = 0; i < sn.Length; i++){
            answer += sn[i] - '0';
        }
        
        return answer;
    }
}",https://github.com/shehdrbs123/spartaB10/blob/main/%EC%9D%B4%EC%84%A0%EC%9E%AC/Programmers/%EC%9E%90%EB%A6%BF%EC%88%98%20%EB%8D%94%ED%95%98%EA%B8%B0,2023. 8. 24,3,1
2023. 8. 24 오전 10:13:55,신우석,Unity,3 - 자릿수 더하기,"using System;

public class Solution {
    public int solution(int n) {
        int answer = 0;
        while (n > 0) {
            answer += n % 10;
            n /= 10;
        }
        return answer;
    }
}",https://github.com/seoksii/AlgorithmCodeKata/blob/main/20230824/%5B12931%5D%EC%9E%90%EB%A6%BF%EC%88%98%20%EB%8D%94%ED%95%98%EA%B8%B0.cs,2023. 8. 24,3,1
2023. 8. 24 오전 10:13:59,진우성,Unity,1 - 짝수와 홀수,"public class Solution
    {
        public string solution(int num)
        {
            string answer = """";
            if (num % 2 == 0)
            {
                answer = ""Even"";
                Console.WriteLine($""{num} {answer}"");
            }
            else
            {
                answer = ""Odd"";
                Console.WriteLine($""{num} {answer}"");

            }
            return answer;
            
        }
    }
    internal class Program
    {
        static void Main(string[] args)
        {
            Solution s = new Solution();
            Console.WriteLine (""숫자를 입력하세요"");
            int temp = int.Parse(Console.ReadLine());
            s.solution(temp);
        }
    }",,2023. 8. 24,1,1
2023. 8. 24 오전 10:14:03,조영오,Unity,4 - 약수의 합,"public class Solution {
    public int solution(int n) {
        int answer = 0;
        int div = 1;
        
        while(div <= n){
            if(n%div == 0){answer+=div;}
            div++;
        }
        
        return answer;
    }
}",,2023. 8. 24,4,1
2023. 8. 24 오전 10:14:12,김규승,Unity,82 - 프로세스,"using System;
using System.Collections.Generic;

public class Solution {
    
    public int solution(int[] priorities, int location) {
        
        Queue<int> queue = new Queue<int>();
        foreach(var i in priorities)
        {
            queue.Enqueue(i);
        }
        
        int count  = 0;
        int answer = location;
        while(queue.Count != 0)
        {
            
            var i = queue.Dequeue();
            
            bool isMax = true;
            foreach(var q in queue)
            {
                if(i < q)
                {
                    isMax = false;
                    break;
                }
            }
            
            if(!isMax)
            {
                queue.Enqueue(i);
            }
            else
            {
                
                ++count;
                if(location == 0)
                {
                    return count;
                }
            }
            
            location = (queue.Count + location - 1) % queue.Count;
            
        }
        
        return answer;
        
    }
    
}",,2023. 8. 24,82,3
2023. 8. 24 오전 10:14:16,이주연,Unity,5 - 나머지가 1이 되는 수 찾기,"#include <string>
#include <vector>

using namespace std;

int solution(int n) {
    int answer = 0;
    
    for(int i = 1; i < n; i++)
    {
        if(n % i == 1)
        {
            answer = i;
            break;
        }
    }
    
    return answer;
}",,2023. 8. 24,5,1
2023. 8. 24 오전 10:14:17,신우석,Unity,4 - 약수의 합,"public class Solution {
    public int solution(int n) {
        int answer = 0;
        int k = 1;
        while (k * k < n) {
            if (n % k == 0)
                answer += k + (n / k);
            ++k;
        }
        
        if (k * k == n)
            answer += k;
        return answer;
    }
}",https://github.com/seoksii/AlgorithmCodeKata/blob/main/20230824/%5B12928%5D%EC%95%BD%EC%88%98%EC%9D%98%20%ED%95%A9.cs,2023. 8. 24,4,1
2023. 8. 24 오전 10:14:32,이형빈,Unity,1 - 짝수와 홀수,"public class Solution {
    public string solution(int num) 
    {
        string answer = """";
        
        if(num%2==1)
        {
            answer += ""Odd"";
            
        }
        else
        {
           answer += ""Even"";
        }
        return answer;
    }
}",,2023. 8. 24,1,1
2023. 8. 24 오전 10:14:35,신우석,Unity,5 - 나머지가 1이 되는 수 찾기,"using System;

public class Solution {
    public int solution(int n) {
        int i = 1;
        while (i < n)
            if (n % ++i == 1) return i;
        return i;
    }
}",https://github.com/seoksii/AlgorithmCodeKata/blob/main/20230824/%5B87389%5D%EB%82%98%EB%A8%B8%EC%A7%80%EA%B0%80%201%EC%9D%B4%20%EB%90%98%EB%8A%94%20%EC%88%98%20%EC%B0%BE%EA%B8%B0.cs,2023. 8. 24,5,1
2023. 8. 24 오전 10:14:38,박민호,Unity,1 - 짝수와 홀수,"public class Solution {
    public string solution(int num) {
        string answer;
        if(num==0){
            answer = ""Even"";
        }
        else if(num%2==0){
            answer = ""Even"";
        }
        else{
            answer = ""Odd"";
        }
        
        return answer;
    }
}",,2023. 8. 24,1,1
2023. 8. 24 오전 10:14:45,김진환,Unity,1 - 짝수와 홀수,"public static string solution(int num)
        {
            if (num % 2 == 0)
                return ""Even"";
            else
                return ""Odd"";
        }",https://github.com/NewRound/AlgorithmKata.git,2023. 8. 24,1,1
2023. 8. 24 오전 10:14:45,김광수,Unity,6 - x만큼 간격이 있는 n개의 숫자,"public class Solution {
    public long[] solution(int x, int n) {
        long[] answer = new long[n];
        answer[0] = x;
        for (int i = 1; i < n; i++){
            answer[i] = answer [i-1] + x;
        }
        return answer;
    }
}",https://github.com/kksoo0131/Study/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12954.%E2%80%85x%EB%A7%8C%ED%81%BC%E2%80%85%EA%B0%84%EA%B2%A9%EC%9D%B4%E2%80%85%EC%9E%88%EB%8A%94%E2%80%85n%EA%B0%9C%EC%9D%98%E2%80%85%EC%88%AB%EC%9E%90,2023. 8. 24,6,1
2023. 8. 24 오전 10:14:53,신우석,Unity,6 - x만큼 간격이 있는 n개의 숫자,"using System.Collections.Generic;

public class Solution {
    public long[] solution(int x, int n)
    {
        List<long> answer = new List<long>();

        for (int i = 1; i <= n; i++)
            answer.Add((long)x * (long)i);

        return answer.ToArray();
    }
}",https://github.com/seoksii/AlgorithmCodeKata/blob/main/20230824/%5B12954%5Dx%EB%A7%8C%ED%81%BC%20%EA%B0%84%EA%B2%A9%EC%9D%B4%20%EC%9E%88%EB%8A%94%20n%EA%B0%9C%EC%9D%98%20%EC%88%AB%EC%9E%90,2023. 8. 24,6,1
2023. 8. 24 오전 10:14:56,한병권,Unity,3 - 자릿수 더하기,"    public class Solution
    {
        public int solution(int n)
        {
            int answer = 0;

            while (n % 10 > 0 || n >= 10)
            {
                answer += n % 10;
                n = n / 10;
            }

            return answer;
        }
    }",https://github.com/hbg9212/algorithm,2023. 8. 24,3,1
2023. 8. 24 오전 10:15:10,박민혁,Unity,5 - 나머지가 1이 되는 수 찾기,"using System;

public class Solution {
    public int solution(int n) {
        int answer = 0;
        int x=2;
        while(true)
        {
            if(n%x==1)
            {
                answer=x;
                break;
            }
            ++x;
        }
        return answer;
    }
}",,2023. 8. 24,5,1
2023. 8. 24 오전 10:15:17,노동균,Unity,2 - 평균 구하기,"public class Solution {
    public double solution(int[] arr) {
        double answer = 0;
        
        int num=0;
        for(int i=0;i<arr.Length;++i)
        {
            num += arr[i];
        }
        answer = (double)num / arr.Length;
        return answer;
    }
}",https://github.com/shehdrbs123/Sparta/blob/main/Algorithm/Programmers/%ED%8F%89%EA%B7%A0%20%EA%B5%AC%ED%95%98%EA%B8%B0.cs,2023. 8. 24,2,1
2023. 8. 24 오전 10:15:39,조영오,Unity,5 - 나머지가 1이 되는 수 찾기,"using System;

public class Solution {
    public int solution(int n) {
        int answer = 0;
        int x = 1;
        while(true){
            if(n%x == 1)break;
            x++;
        }
        
        answer = x;
        return answer;
    }
}",,2023. 8. 24,5,1
2023. 8. 24 오전 10:15:50,박도현,AI,2 - 평균 구하기,"public class Solution {
    public double solution(int[] arr) {
        double answer = 0;
        
            int i;
            for (i = 0; i < arr.Length; i++)
            {
                answer += arr[i];

            }
            answer = answer / arr.Length;
        
        return answer;
    }
}",,2023. 8. 24,2,1
2023. 8. 24 오전 10:16:04,김민태,Unity,5 - 나머지가 1이 되는 수 찾기,"using System;

public class Solution {
    public int solution(int n) {
        int answer = 0;
        for(int i = 1; i<int.MaxValue; i++){
            if(n%i == 1){
                answer = i;
                break;
            }
        }
        return answer;
    }
}",https://github.com/rlaalsxo?tab=repositories,2023. 8. 24,5,1
2023. 8. 24 오전 10:16:16,이소이,Unity,3 - 자릿수 더하기,"using System;

public class Solution {
    public int solution(int n) {
        int answer = 0;
        
        while (n != 0)
        {
            answer += n % 10;
            n /= 10;
        }
        
        return answer;
    }
}",https://github.com/leesy015599/AlgorithmCodeKata,2023. 8. 24,3,1
2023. 8. 24 오전 10:16:30,이홍준,Unity,3 - 자릿수 더하기,"using System;

public class Solution {
    public int solution(int n) {
        int answer = 0;
        
        while(n > 0)
        {
            answer += n % 10;
            n = n / 10;
        }
        
        return answer;
    }
}",https://github.com/dlghdwns97/Study/blob/main/3.%20%EC%9E%90%EB%A6%BF%EC%88%98%20%EB%8D%94%ED%95%98%EA%B8%B0.cs,2023. 8. 24,3,1
2023. 8. 24 오전 10:16:52,김민상,Unity,4 - 약수의 합,"public class Solution {
    public int solution(int n) {
        int answer = 0;
        
        for (int i = 1; i <= n; i++)
        {
            if (n % i == 0)
            {
                answer += i;
            }
        }
        
        return answer;
    }
}",https://github.com/berylstar/MyCOTE,2023. 8. 24,4,1
2023. 8. 24 오전 10:16:55,곽민규,Unity,1 - 짝수와 홀수,"public class Solution {  
    public string solution(int num) {
        if (num % 2 == 0) {
            return ""Even"";
        } else {
            return ""Odd"";
        }
    } 
}",https://github.com/kwakminkyu,2023. 8. 24,1,1
2023. 8. 24 오전 10:17:07,김예준,Unity,4 - 약수의 합,"public class Solution {
    public int solution(int n) {
        int answer = 0;
        
        for (int i = 1; i * i <= n; i++)
        {
            if (n % i == 0)
            {
                answer += i;
                if (n / i != i) answer += n / i;
            }
            
        }
        
        return answer;
    }
}",,2023. 8. 24,4,1
2023. 8. 24 오전 10:17:07,이경현,Unity,1 - 짝수와 홀수,"namespace Algorithm
{
    internal class _1_1OddEven
    {
        public string solution(int num)
        {
            if (num % 2 == 0) return ""Even"";
            else return ""Odd"";
        }
    }
}",https://github.com/516lkh/Algorithm,2023. 8. 24,1,1
2023. 8. 24 오전 10:17:17,신현주,Unity,3 - 자릿수 더하기,"using System;

public class Solution {
    public int solution(int n) {
        int ten =1;
        int answer = 0;
        for(int i =0; i < 9 ; i++){
            if( n / ten == 0){
                break;
            }else{
                ten = ten * 10;
            }
        }
        ten = ten / 10;
        while( n != 0){
            answer += n / ten;
            n = n % ten;
            ten = ten / 10;
        }
        
        return answer;
    }
}",https://github.com/Shyunju/codTaka.git,2023. 8. 24,3,1
2023. 8. 24 오전 10:17:20,이주연,Unity,6 - x만큼 간격이 있는 n개의 숫자,"#include <string>
#include <vector>

using namespace std;

vector<long long> solution(int x, int n) {
    vector<long long> answer;
    
    for(int i = 1; i <= n; i++)
    {
        answer.push_back(x * i);
    }
    
    return answer;
}",,2023. 8. 24,6,1
2023. 8. 24 오전 10:17:44,강성호,Unity,3 - 자릿수 더하기,"using System;

public class Solution {
    public int solution(int n) {
        int answer = 0;	
			while (n > 0)
			{
				answer += n % 10;
				n = n / 10;
			}
			return answer;
    }
}",,2023. 8. 24,3,1
2023. 8. 24 오전 10:17:50,정주찬,Unity,3 - 자릿수 더하기,"using System;

public class Solution {
    public int solution(int n) {
        int answer = 0;
        while (n > 0)
        {
            answer += n % 10;
            n = n / 10;
        }
        return answer;
    }
}",https://github.com/JeongJuChan/Algorithm/blob/main/SpartaAlgorithm/%EC%9E%90%EB%A6%BF%EC%88%98_%EB%8D%94%ED%95%98%EA%B8%B0.cs,2023. 8. 24,3,1
2023. 8. 24 오전 10:18:03,조범준,Unity,1 - 짝수와 홀수,"public class Solution {
    public string solution(int num) {
        string answer = ""Odd"";
        if(num % 2 == 0)
            answer = ""Even"";
        return answer;
    }
}",https://github.com/KimMaYa1/BaekJoonEx/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12937.%E2%80%85%EC%A7%9D%EC%88%98%EC%99%80%E2%80%85%ED%99%80%EC%88%98,2023. 8. 24,1,1
2023. 8. 24 오전 10:18:11,박준규,Unity,3 - 자릿수 더하기,"namespace Algorithm
{
    public class Solution
    {
        static public int solution(int n)
        {
            int answer = 0;
            while (n>0)
            {
                answer += n % 10;
                n=n/10;
            }
            Console.WriteLine(answer);
            return answer;
        }
        static void Main()
        {
            solution(12345);
        }
    }    
}",,2023. 8. 24,3,1
2023. 8. 24 오전 10:18:13,지민규,Unity,3 - 자릿수 더하기,"using System;

public class Solution {
    public int solution(int n) {
        int answer = 0;
        string ansString = n.ToString();
        for (int i = 0; i < ansString.Length; i++)
        {
            answer += (ansString[i]-'0');
        }
        return answer;
    }
}",,2023. 8. 24,3,1
2023. 8. 24 오전 10:18:27,정재호,Unity,6 - x만큼 간격이 있는 n개의 숫자,"public class Solution
{
    public long[] solution(int x, int n)
    {
        long[] answer = new long[n];

        for (int i = 1; i <= n; i++)
        {
            answer[i - 1] = (long)x * i;
        }

        return answer;
    }
}",,2023. 8. 24,6,1
2023. 8. 24 오전 10:18:28,이도현,Unity,1 - 짝수와 홀수,"public class Solution {
    public string solution(int num) {
        string answer;
        if(num%2==0)
            answer = ""Even"";
        else
            answer = ""Odd"";
        return answer;
    }
}",,2023. 8. 24,1,1
2023. 8. 24 오전 10:18:43,조범준,Unity,2 - 평균 구하기,"public class Solution {
    public double solution(int[] arr) {
        double answer = 0;
        foreach(int i in arr)
        {
            answer += i;
        }
        return answer / arr.Length;
    }
}",https://github.com/KimMaYa1/BaekJoonEx/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12944.%E2%80%85%ED%8F%89%EA%B7%A0%E2%80%85%EA%B5%AC%ED%95%98%EA%B8%B0,2023. 8. 24,2,1
2023. 8. 24 오전 10:18:50,신현,Unity,1 - 짝수와 홀수,"public class Solution {
    public string solution(int num) {
        string answer = """";
        if( num % 2 == 0){
            answer = ""Even"";
        }else{
            answer =""Odd"";
        }
        return answer;
    }
}",https://github.com/Shyunju/codTaka.git,2023. 8. 24,1,1
2023. 8. 24 오전 10:18:51,이현지,Unity,3 - 자릿수 더하기,"using System;

public class Solution {
    public int solution(int n) {
        string num = n.ToString();
        int answer = 0;
        foreach (char c in num)
        {
            answer += int.Parse(c.ToString());
        }
        
        return answer;
    }
}",,2023. 8. 24,3,1
2023. 8. 24 오전 10:18:54,이선재,Unity,4 - 약수의 합,"public class Solution {
    public int solution(int n) {
        int answer = 0;
        
        for(int i = 1; i <= n; i++){
            if(n % i == 0)
                answer += i;
        }
        
        return answer;
    }
}",https://github.com/shehdrbs123/spartaB10/blob/main/%EC%9D%B4%EC%84%A0%EC%9E%AC/Programmers/%EC%95%BD%EC%88%98%EC%9D%98%20%ED%95%A9,2023. 8. 24,4,1
2023. 8. 24 오전 10:18:55,차요한,Unity,2 - 평균 구하기,"public class Solution {
    public double solution(int[] arr) {
        double answer = 0;
        double sum=0;
        foreach(int num in arr)
        {
            sum+=num;
        }
        answer=sum/arr.Length;
        return answer;
    }
}",https://github.com/HOHOJO/Algorithm_test,2023. 8. 24,2,1
2023. 8. 24 오전 10:19:00,이도현,Unity,2 - 평균 구하기,"using System.Linq;

public class Solution {
    public double solution(int[] arr) {
        double answer=0;
        foreach (var i in arr)
            answer+=i;
        return answer/arr.Count();
    }
}",,2023. 8. 24,2,1
2023. 8. 24 오전 10:19:21,이정환,Unity,2 - 평균 구하기,"public class Solution {
    public double solution(int[] arr) {
        double total=0.0f;
        int count =0;
        foreach(int num in arr){
            total += num;
            count++;
        }
        double answer = total / count;
        return answer;
    }
}",,2023. 8. 24,2,1
2023. 8. 24 오전 10:19:24,김호연,Unity,2 - 평균 구하기,"public class Solution
{
    public double solution(int[] arr)
    {

        double sum = 0;

        for (int i = 0; i < arr.Length; i++)
        {
            sum += arr[i];
        }
        
        double answer = sum / arr.Length;
        return answer;
    }
}",,2023. 8. 24,2,1
2023. 8. 24 오전 10:19:28,이주연,Unity,7 - 자연수 뒤집어 배열로 만들기,"#include <string>
#include <vector>

using namespace std;

vector<int> solution(long long n) {
    vector<int> answer;
    
    while(n != 0)
    {
        int num = n % 10;
        answer.emplace_back(num);
        n /= 10;
    }
    
    return answer;
}",,2023. 8. 24,7,1
2023. 8. 24 오전 10:19:37,김예준,Unity,5 - 나머지가 1이 되는 수 찾기,"using System;

public class Solution {
    public int solution(int n) {
        int answer = 0;
        
        for (int i = 2; i < n; i++)
        {
            if (n % i == 1)
            {
                answer = i;
                break;
            }
        }
        
        return answer;
    }
}",,2023. 8. 24,5,1
2023. 8. 24 오전 10:19:45,임전혁,Unity,7 - 자연수 뒤집어 배열로 만들기,"public class Solution {
    public int[] solution(long n) {
        string inputStr = n.ToString();
        int[] answer = new int[inputStr.Length];
        
        int index = 0;
        for (int i = inputStr.Length - 1; i >= 0; i--)
        {
            answer[index] = int.Parse(inputStr[i].ToString());
            index++;
        }
        
        return answer;
    }
}",https://github.com/yarogono/Algorithm_CSharp/blob/master/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12932.%E2%80%85%EC%9E%90%EC%97%B0%EC%88%98%E2%80%85%EB%92%A4%EC%A7%91%EC%96%B4%E2%80%85%EB%B0%B0%EC%97%B4%EB%A1%9C%E2%80%85%EB%A7%8C%EB%93%A4%EA%B8%B0/%EC%9E%90%EC%97%B0%EC%88%98%E2%80%85%EB%92%A4%EC%A7%91%EC%96%B4%E2%80%85%EB%B0%B0%EC%97%B4%EB%A1%9C%E2%80%85%EB%A7%8C%EB%93%A4%EA%B8%B0.cs,2023. 8. 24,7,1
2023. 8. 24 오전 10:19:52,장성림,Unity,2 - 평균 구하기,"public class Solution {
    public double solution(int[] arr) {
        double answer = 0;
        for (int i = 0; i < arr.Length; i++)
        {
            answer += arr[i];
        }
        answer /= arr.Length;
        return answer;
    }
}",https://github.com/hoobhoob,2023. 8. 24,2,1
2023. 8. 24 오전 10:20:13,김진규,Unity,3 - 자릿수 더하기,"public class Solution {
    public int solution(int n) {
        int answer = 0;
               while(n > 0)
               {
                   answer += n %10;
                   n /= 10;
               }
        return answer;
    }
}",,2023. 8. 24,3,1
2023. 8. 24 오전 10:20:18,강성호,Unity,4 - 약수의 합,"public class Solution {
    public int solution(int n) {
        int answer = 0;
			for(int i = 1; i <= n; i++)
			{
				if(n % i == 0)
				{
					answer += i;
				}
			}
			return answer;
    }
}",,2023. 8. 24,4,1
2023. 8. 24 오전 10:20:18,김민상,Unity,5 - 나머지가 1이 되는 수 찾기,"public class Solution {
    public int solution(int n) {        
        for (int i = 2; i < n; i++)
        {
            if (n % i == 1)
            {
                return i;
            }
        }
        
        return 0;
    }
}",https://github.com/berylstar/MyCOTE/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/87389.%E2%80%85%EB%82%98%EB%A8%B8%EC%A7%80%EA%B0%80%E2%80%851%EC%9D%B4%E2%80%85%EB%90%98%EB%8A%94%E2%80%85%EC%88%98%E2%80%85%EC%B0%BE%EA%B8%B0,2023. 8. 24,5,1
2023. 8. 24 오전 10:20:22,김형중,Unity,2 - 평균 구하기,"public class Solution {
    public double solution(int[] arr) {
        double answer = 0;
        for (int i = 0; i < arr.Length; i++)
        {
            answer += arr[i];
        }
        answer /= arr.Length;
        return answer;
    }
}",,2023. 8. 24,2,1
2023. 8. 24 오전 10:20:39,지민규,Unity,4 - 약수의 합,"public class Solution {
    public int solution(int n) {
        int answer = 0;
        for (int i = 1; i < n + 1; i ++)
        {
            if (n % i == 0)
            {
                answer += i;
            }
        }
        return answer;
    }
}",,2023. 8. 24,4,1
2023. 8. 24 오전 10:20:40,임전혁,Unity,8 - 문자열을 정수로 바꾸기,"public class Solution {
    public int solution(string s) {
        int answer = 0;
        answer = int.Parse(s);
        return answer;
    }
}",https://github.com/yarogono/Algorithm_CSharp/blob/master/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12925.%E2%80%85%EB%AC%B8%EC%9E%90%EC%97%B4%EC%9D%84%E2%80%85%EC%A0%95%EC%88%98%EB%A1%9C%E2%80%85%EB%B0%94%EA%BE%B8%EA%B8%B0/%EB%AC%B8%EC%9E%90%EC%97%B4%EC%9D%84%E2%80%85%EC%A0%95%EC%88%98%EB%A1%9C%E2%80%85%EB%B0%94%EA%BE%B8%EA%B8%B0.cs,2023. 8. 24,8,1
2023. 8. 24 오전 10:20:41,이주연,Unity,8 - 문자열을 정수로 바꾸기,"#include <string>
#include <vector>

using namespace std;

int solution(string s) {
    int answer = stoi(s);
    return answer;
}",,2023. 8. 24,8,1
2023. 8. 24 오전 10:21:06,장현교,Unity,1 - 짝수와 홀수,"public class Solution {
    public string solution(int num)
    {
        string answer;
        answer = (num % 2 == 0) ? ""\""Even\"""" : ""\""Odd\"""";
        return answer;
    }
}",,2023. 8. 24,1,1
2023. 8. 24 오전 10:21:36,김하늘,Unity,3 - 자릿수 더하기,"using System;

public class Solution 
{
    public int solution(int n) 
    {
        int answer = 0;
        while (n >= 10)
        {
            answer += n % 10;
            n /= 10;
        }
        answer += n;
        return answer;
    }
}",,2023. 8. 24,3,1
2023. 8. 24 오전 10:21:36,김광수,Unity,7 - 자연수 뒤집어 배열로 만들기,"public class Solution {
    public int[] solution(long n) {
        string str = n.ToString();
        int[] answer = new int[str.Length];
        
        for (int i =0; i < str.Length ; i++){
            answer[i] = int.Parse(str[str.Length - i-1].ToString());
        }
        
        return answer;
    }
}",https://github.com/kksoo0131/Study/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12932.%E2%80%85%EC%9E%90%EC%97%B0%EC%88%98%E2%80%85%EB%92%A4%EC%A7%91%EC%96%B4%E2%80%85%EB%B0%B0%EC%97%B4%EB%A1%9C%E2%80%85%EB%A7%8C%EB%93%A4%EA%B8%B0,2023. 8. 24,7,1
2023. 8. 24 오전 10:21:45,김진환,Unity,2 - 평균 구하기,"double answer = 0;
for(int i = 0; i < arr.Length;i++)
{
       answer += arr[i];
}
answer /= arr.Length;
return answer;",https://github.com/NewRound/AlgorithmKata.git,2023. 8. 24,2,1
2023. 8. 24 오전 10:21:59,이현지,Unity,4 - 약수의 합,"public class Solution {
    public int solution(int n) {
        int answer = 0;
        for (int i = 1; i < n + 1; i++)
        {
            if (n % i == 0) answer += i;
        }
        return answer;
    }
}",,2023. 8. 24,4,1
2023. 8. 24 오전 10:22:00,정재호,Unity,7 - 자연수 뒤집어 배열로 만들기,"using System;

public class Solution
{
    public int[] solution(long n)
    {
        char[] chars = n.ToString().ToCharArray();

        Array.Reverse(chars);

        int[] answer = new int[chars.Length];
        for (int i = 0; i < chars.Length; i++)
        {
            answer[i] = chars[i] - '0';
        }

        return answer;
    }
}",,2023. 8. 24,7,1
2023. 8. 24 오전 10:22:05,이홍준,Unity,4 - 약수의 합,"public class Solution {
    public int solution(int n) {
        int answer = 0;
        
        for (int i = 1; i < n+1; i++)
        {
            if (n % i == 0)
            {
                answer += i;
            }
            else {}
        }
        
        return answer;
    }
}",https://github.com/dlghdwns97/Study/blob/main/4.%20%EC%95%BD%EC%88%98%EC%9D%98%20%ED%95%A9.cs,2023. 8. 24,4,1
2023. 8. 24 오전 10:22:14,지민규,Unity,5 - 나머지가 1이 되는 수 찾기,"public class Solution {
    public int solution(int n) {
        int answer = 0;
        for (int i = 1; i < n + 1; i ++)
        {
            if (n % i == 1)
            {
                answer += i;
                break;
            }
        }
        return answer;
    }
}",,2023. 8. 24,5,1
2023. 8. 24 오전 10:22:22,윤지연,Unity,1 - 짝수와 홀수," public string solution(int num) {
        if(num % 2 == 0 || num == 0)
        {
            return ""Even"";
        }
        return ""Odd"";
    }",https://github.com/jungbosong/Codekata.git,2023. 8. 24,1,1
2023. 8. 24 오전 10:22:23,강성호,Unity,5 - 나머지가 1이 되는 수 찾기,"using System;

public class Solution {
    public int solution(int n) {
       int answer = 0;
			for(int i = 1; i <= n; i++)
			{
				if(n % i == 1)
				{
					answer = i;
					break;
				}
			}
			return answer;
    }
}",,2023. 8. 24,5,1
2023. 8. 24 오전 10:22:32,이소이,Unity,4 - 약수의 합,"public class Solution {
    public int solution(int n) {
        int answer = 0;
        
        int divisor = 0;
        
        while (++divisor <= n)
        {
            if (n % divisor == 0)
                answer += divisor;
        }
        
        return answer;
    }
}",https://github.com/leesy015599/AlgorithmCodeKata/blob/master/Level1/no4.cs,2023. 8. 24,4,1
2023. 8. 24 오전 10:22:36,문준권,Unity,1 - 짝수와 홀수,"public class Solution {
    public string solution(int num) {
        string answer = (num % 2 == 0 ? ""Even"" : ""Odd"" );
        return answer;
    }
}",,2023. 8. 24,1,1
2023. 8. 24 오전 10:22:37,김어진,Unity,2 - 평균 구하기,"public class Solution {
    public double solution(int[] arr) { 
        double answer = 0;
        double sum = 0;
        int count = 0;
        for (int i=0; i<arr.Length; i++){
            sum += arr[i];
            count += 1;               
        }
        answer = sum / count;
        return answer;
    }
}",,2023. 8. 24,2,1
2023. 8. 24 오전 10:22:45,노재우,Unity,1 - 짝수와 홀수,"public class Solution {
    public string solution(int num) {
        string answer = """";
        if(num % 2 == 0)
        {
            answer = ""Even"";
        }else
        {
            answer = ""Odd"";
        }
        return answer;
    }
}",https://github.com/Chu-Nyan/CodeKata,2023. 8. 24,1,1
2023. 8. 24 오전 10:22:45,정주찬,Unity,4 - 약수의 합,"public class Solution {
    public int solution(int n) {
        int answer = 0;
        for (int i = 1; i <= n; i++)
        {
            if (n % i == 0)
            {
                answer += i;
            }
        }
        return answer;
    }
}",https://github.com/JeongJuChan/Algorithm/blob/main/SpartaAlgorithm/%EC%95%BD%EC%88%98%EC%9D%98_%ED%95%A9.cs,2023. 8. 24,4,1
2023. 8. 24 오전 10:23:23,조영오,Unity,6 - x만큼 간격이 있는 n개의 숫자,"public class Solution {
    public long[] solution(int x, int n) {
        long[] answer = new long[n];
        
        for(int i = 0; i < answer.Length; i++){
            answer[i] = (long)x*(i+1);
        }
        
        return answer;
    }
}",,2023. 8. 24,6,1
2023. 8. 24 오전 10:23:35,조범준,Unity,3 - 자릿수 더하기,"public class Solution {
    public int solution(int n) {
        int answer = 0;
        while(n != 0)
        {
            answer += n % 10;
            n = n / 10;
        }
        return answer;
    }
}",https://github.com/KimMaYa1/BaekJoonEx/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12931.%E2%80%85%EC%9E%90%EB%A6%BF%EC%88%98%E2%80%85%EB%8D%94%ED%95%98%EA%B8%B0,2023. 8. 24,3,1
2023. 8. 24 오전 10:23:36,이선재,Unity,5 - 나머지가 1이 되는 수 찾기,"using System;

public class Solution {
    public int solution(int n) {
        int answer = 0;
        
        for(int i = 1; i <= n; i++){
            if(n % i == 1){
                answer = i;
                
                break;
            }
        }
        
        return answer;
    }
}",https://github.com/shehdrbs123/spartaB10/blob/main/%EC%9D%B4%EC%84%A0%EC%9E%AC/Programmers/%EB%82%98%EB%A8%B8%EC%A7%80%EA%B0%80%201%EC%9D%B4%20%EB%90%98%EB%8A%94%20%EC%88%98%20%EC%B0%BE%EA%B8%B0,2023. 8. 24,5,1
2023. 8. 24 오전 10:24:23,조병우,Unity,1 - 짝수와 홀수,"#include <stdio.h>

#include <stdbool.h>

#include  <stdlib.h>


char* solution(int num) {
    
    char* answer = (char*)malloc(sizeof (char)*5);
    
    if(num % 2 ==0)answer = ""Even""; //2로 나눠서 떨어지면 짝수
    
    else answer = ""Odd""; //아니면 홀수
    
    return answer;  //결과값 출력
    
}",,2023. 8. 24,1,1
2023. 8. 24 오전 10:24:40,장현교,Unity,2 - 평균 구하기,"public class Solution
{
    public double solution(int[] arr)
    {
        double answer;
        answer = arr.Average();
        return answer;
    }
}",,2023. 8. 24,2,1
2023. 8. 24 오전 10:24:51,김하늘,Unity,4 - 약수의 합,"public class Solution 
{
    public int solution(int n) 
    {
        int answer = 0;
        for (int i = 1; i <= n; i++)
        {
            if (n % i == 0)
                answer += i;
        }
        return answer;
    }
}",,2023. 8. 24,4,1
2023. 8. 24 오전 10:24:58,이주연,Unity,9 - 정수 제곱근 판별,"#include <string>
#include <vector>
#include <cmath>

using namespace std;

long long solution(long long n) {
    long long answer = 0;
    
    if(sqrt(n) - (int)sqrt(n) == 0)
    {
        answer = powl(sqrt(n)+1, 2);
    }
    else
        answer = -1;
    
    return answer;
}",,2023. 8. 24,9,1
2023. 8. 24 오전 10:25:06,박준규,Unity,4 - 약수의 합,"namespace Algorithm
{
    public class Solution
    {        
        static public int solution(int n)
        {
            int measure = 0;
            int answer = 0;
            for (int i = 1; i <= n; i++)
            {
                if (n % i == 0)
                {
                    measure = i;
                    answer += measure;
                }                
            }
            Console.WriteLine(answer);
            return answer;
        }
        static void Main()
        {
            solution(12);
        }
    }    
}",,2023. 8. 24,4,1
2023. 8. 24 오전 10:25:10,신현주,Unity,4 - 약수의 합,"public class Solution {
    public int solution(int n) {
        int answer = 0;
        for( int i = 1; i <=3000 ; i++){
            if(n == 0)
                break;
            if( n % i == 0){
                answer += i;
            }
        }
        return answer;
    }
}",https://github.com/Shyunju/codTaka.git,2023. 8. 24,4,1
2023. 8. 24 오전 10:25:15,김민상,Unity,6 - x만큼 간격이 있는 n개의 숫자,"public class Solution {
    public long[] solution(int x, int n) {
        long[] answer = new long[n];

        for (int i = 0; i < n; i++)
        {
            answer[i] = x * (i + 1);
        }

        return answer;
    }
}",,2023. 8. 24,6,1
2023. 8. 24 오전 10:25:28,박지원,Unity,2 - 평균 구하기,"using System.Linq;

public class Solution {
    public double solution(int[] arr) {
        return ((double) arr.Sum() / arr.Length);
    }
}",https://github.com/jwonp9127/AlgorithmStudy/tree/7837ead2d8065aaf511d414504bd7eac7585867a/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12944.%E2%80%85%ED%8F%89%EA%B7%A0%E2%80%85%EA%B5%AC%ED%95%98%EA%B8%B0,2023. 8. 24,2,1
2023. 8. 24 오전 10:25:34,이홍준,Unity,5 - 나머지가 1이 되는 수 찾기,"using System;

public class Solution {
    public int solution(int n) {
        int answer = 1;
        
        while(n % answer != 1)
        {
            answer += 1;
        }
        
        return answer;
    }
}",https://github.com/dlghdwns97/Study/blob/main/5.%20%EB%82%98%EB%A8%B8%EC%A7%80%EA%B0%80%201%EC%9D%B4%20%EB%90%98%EB%8A%94%20%EC%88%98%20%EC%B0%BE%EA%B8%B0.cs,2023. 8. 24,5,1
2023. 8. 24 오전 10:25:40,이소이,Unity,5 - 나머지가 1이 되는 수 찾기,"using System;

public class Solution {
    public int solution(int n) {
        int answer = 0;
                
        while (answer++ < n)
        {
            if (n % answer == 1)
                break ;
        }
        
        return answer;
    }
}",https://github.com/leesy015599/AlgorithmCodeKata/blob/master/Level1/no5.cs,2023. 8. 24,5,1
2023. 8. 24 오전 10:25:51,이현지,Unity,5 - 나머지가 1이 되는 수 찾기,"using System;

public class Solution {
    public int solution(int n) {
        int answer = 0;
        for (int i = 1; i < n; i++)
        {
            if (n % i == 1)
            {
                answer = i;
                break;
            }
        }
        return answer;
    }
}",,2023. 8. 24,5,1
2023. 8. 24 오전 10:26:23,김연우,AI,1 - 짝수와 홀수,"char* solution(int num) 
{
    if (num % 2 == 0) 
    {
        return ""Even"";
    } 
    else 
    {
        return ""Odd"";
    }
}
int main() {
    printf(""%s\n"", solution(3)); 
    printf(""%s\n"", solution(4)); 
    return 0;
}",,2023. 8. 24,1,1
2023. 8. 24 오전 10:26:51,김나운,Unity,3 - 자릿수 더하기,"public class Solution {
    public int solution(int n) {
        int sum = 0;
        
        while (n > 0) {
            sum += n % 10;  
            n /= 10;        
        }
        
        return sum;
    }
}",,2023. 8. 24,3,1
2023. 8. 24 오전 10:27:01,김민태,Unity,6 - x만큼 간격이 있는 n개의 숫자,"public class Solution {
    public long[] solution(int x, int n) {
        long[] answer = new long[n];
        for(int i=0; i<n; i++)
        {
            if(i!=0){
                answer[i] += answer[i-1] + x;
            }
            else{
                answer[i] = x;
            }
        }
        return answer;
    }
}",https://github.com/rlaalsxo?tab=repositories,2023. 8. 24,6,1
2023. 8. 24 오전 10:27:24,김형중,Unity,3 - 자릿수 더하기,"using System;

public class Solution {
    public int solution(int n) {
        int answer = 0;
        
        while (n>0)
        {
            answer += n % 10;
            n = n / 10;
        }
        return answer;
    }
}",,2023. 8. 24,3,1
2023. 8. 24 오전 10:27:29,정재호,Unity,8 - 문자열을 정수로 바꾸기,"public class Solution
{
    public int solution(string s)
    {
        char[] chars = s.ToCharArray();

        string ss = """";
        foreach (char c in chars)
        {
            if('0' <= c && c <= '9')
            {
                ss += c.ToString();
            }
        }

        int answer = int.Parse(ss);

        if (chars[0] == '-')
        {
            answer = -1 * answer;
        }
        else
        {
            return answer;
        }

        return answer;
    }
}",,2023. 8. 24,8,1
2023. 8. 24 오전 10:27:36,장성림,Unity,3 - 자릿수 더하기,"public class Solution {
    public int solution(int n) {
        int answer = 0;
        for (int i = 10; n >= 1; n /= 10){
            answer += n % i;
        }
        return answer;
    }
}",https://github.com/hoobhoob,2023. 8. 24,3,1
2023. 8. 24 오전 10:27:55,정재훈,Unity,2 - 평균 구하기,"public class Solution {
    public double solution(int[] arr) {
        double answer = 0;
        for(int i = 0; i < arr.Length; i ++){
            answer += arr[i];
        }
        answer = answer/arr.Length;
        return answer;
    }
}",,2023. 8. 24,2,1
2023. 8. 24 오전 10:27:58,김민상,Unity,6 - x만큼 간격이 있는 n개의 숫자,"public class Solution {
    public long[] solution(int x, int n) {
        long[] answer = new long[n];

        for (int i = 0; i < n; i++)
        {
            answer[i] = (long)x * (i + 1);
        }

        return answer;
    }
}",,2023. 8. 24,6,1
2023. 8. 24 오전 10:28:00,이경현,Unity,2 - 평균 구하기,"            if (arr.Length == 0) { return 0; }

            double average = 0;
            foreach(int i in arr)
            {
                average += (double)i;
            }
            if (average == 0) return average;
            else return average / arr.Length;",https://github.com/516lkh/Algorithm,2023. 8. 24,2,1
2023. 8. 24 오전 10:28:18,김광수,Unity,8 - 문자열을 정수로 바꾸기,"public class Solution {
    public int solution(string s) {
        int answer = 0;
        string sign = s.Substring(0,1);
        string minus = s.Substring(1,s.Length-1);
        
        
        return sign == ""-"" ? int.Parse(minus) * -1 : int.Parse(s);
    }
}",https://github.com/kksoo0131/Study/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12925.%E2%80%85%EB%AC%B8%EC%9E%90%EC%97%B4%EC%9D%84%E2%80%85%EC%A0%95%EC%88%98%EB%A1%9C%E2%80%85%EB%B0%94%EA%BE%B8%EA%B8%B0,2023. 8. 24,8,1
2023. 8. 24 오전 10:28:22,정주찬,Unity,5 - 나머지가 1이 되는 수 찾기,"using System;

public class Solution {
    public int solution(int n) {
        int answer = 1;
        while (n % answer != 1)
        {
            answer++;
        }
        return answer;
    }
}",https://github.com/JeongJuChan/Algorithm/blob/main/SpartaAlgorithm/%EB%82%98%EB%A8%B8%EC%A7%80%EA%B0%80_1%EC%9D%B4_%EB%90%98%EB%8A%94_%EC%88%98_%EC%B0%BE%EA%B8%B0.cs,2023. 8. 24,5,1
2023. 8. 24 오전 10:28:30,이형빈,Unity,2 - 평균 구하기,"public class Solution {
    public double solution(int[] arr) 
    {
        double answer = 0;

        for(int i = 0; i<arr.Length; i++)
        {
            answer += arr[i];            
        }
        return answer/arr.Length;
    }
}",,2023. 8. 24,2,1
2023. 8. 24 오전 10:28:40,김형중,Unity,3 - 자릿수 더하기,"public class Solution {
    public int solution(int n) {
        int answer = 0;
        
        while (n>0)
        {
            answer += n % 10;
            n = n / 10;
        }
        return answer;
    }
}",,2023. 8. 24,3,1
2023. 8. 24 오전 10:29:00,조영오,Unity,7 - 자연수 뒤집어 배열로 만들기,"using System;

public class Solution {
    public int[] solution(long n) {
        
        string num = n.ToString();
        
        int[] answer = new int[num.Length];
        
        for(int i = 0 ;i<num.Length;i++){
            answer[i] = (int)Char.GetNumericValue(num[num.Length-(i+1)]);
        }
        
        
        return answer;
    }
}",,2023. 8. 24,7,1
2023. 8. 24 오전 10:29:30,조범준,Unity,4 - 약수의 합,"public class Solution {
    public int solution(int n) {
        int answer = 0;
        for(int i = 1; i <= n; i++)
        {
            if(n % i == 0)
            {
                answer += i;
            }
        }
        return answer;
    }
}",https://github.com/KimMaYa1/BaekJoonEx/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12928.%E2%80%85%EC%95%BD%EC%88%98%EC%9D%98%E2%80%85%ED%95%A9,2023. 8. 24,4,1
2023. 8. 24 오전 10:29:44,노재우,Unity,2 - 평균 구하기,"public class Solution 
{
    public double solution(int[] arr) 
    {
        double answer = 0f;
        foreach (int num in arr)
        {
            answer += num;
        }
        answer = answer/arr.Length;
        
        return answer;
    }
}",https://github.com/Chu-Nyan/CodeKata,2023. 8. 24,2,1
2023. 8. 24 오전 10:29:49,한병권,Unity,4 - 약수의 합,"public class Solution {
    public int solution(int n) {
        int answer = 0;
        
        for(int i = 1; i < n/2; i++)
        {
            if( n % i == 0) answer += i;
        }
        answer += n%2 == 0 ? n/2 : 0;
        
        answer += n;
        
        return answer;
    }
}",https://github.com/hbg9212/algorithm,2023. 8. 24,4,1
2023. 8. 24 오전 10:29:57,김민석,Unity,1 - 짝수와 홀수,"public class Solution {
    public string solution(int num) 
    {
        if (num % 2 == 0)
        {
            return ""Even"";
        }
        else
        {
            return ""Odd"";
        }
    }
}",https://github.com/ms0753/codekata,2023. 8. 24,1,1
2023. 8. 24 오전 10:30:16,김도현A,Unity,2 - 평균 구하기,"public class Solution {
    public double solution(int[] arr) {
        double answer = 0;
        for ( int cnt = 0; cnt < arr.Length; cnt++)
        {
            answer += arr[cnt];
        }
        return answer / arr.Length;
    }
}

",,2023. 8. 24,2,1
2023. 8. 24 오전 10:30:16,이세진,Unity,3 - 자릿수 더하기,"using System;

public class Solution {
    public int solution(int n) {
        int answer = 0;
        int num = 0;
           
         while(n > 0)
         {
            num = n / 10;
            num *= 10;
            answer += (n - num);
            n /=10;
         }
        
        return answer;
    }
}",,2023. 8. 24,3,1
2023. 8. 24 오전 10:30:29,김진규,Unity,4 - 약수의 합,"public class Solution {
    public int solution(int n) {
        int answer = 0;
        for(int i = 1;i <= n; i++)
        {
            if(n%i ==0)
                answer += i;
        }
        return answer;
    }
}",,2023. 8. 24,4,1
2023. 8. 24 오전 10:30:33,이선재,Unity,6 - x만큼 간격이 있는 n개의 숫자,"public class Solution {
    public long[] solution(int x, int n) {
        long[] answer = new long[n];
        
        for(long i = 1; i <= n; i++){
            answer[i-1] = i * x;
        }
        
        return answer;
    }
}",https://github.com/shehdrbs123/spartaB10/blob/main/%EC%9D%B4%EC%84%A0%EC%9E%AC/Programmers/x%EB%A7%8C%ED%81%BC%20%EA%B0%84%EA%B2%A9%EC%9D%B4%20%EC%9E%88%EB%8A%94%20n%EA%B0%9C%EC%9D%98%20%EC%88%AB%EC%9E%90,2023. 8. 24,6,1
2023. 8. 24 오전 10:31:07,이주연,Unity,10 - 정수 내림차순으로 배치하기,"#include <string>
#include <vector>
#include <algorithm>

using namespace std;

bool compare(int i, int j)
{
    return i > j;
}

long long solution(long long n) {
    long long answer = 0;
    string strAnswer = """";
    vector<int> v;
    
    while(n != 0)
    {
        int num = (n % 10);
        v.emplace_back(num);
        n /= 10;
    }
    
    sort(v.begin(), v.end(), compare);
    
    for(int i=0; i < v.size(); i++)
    {
        strAnswer += (v[i] + '0');
    }
    
    answer = stol(strAnswer);
    
    return answer;
}",,2023. 8. 24,10,1
2023. 8. 24 오전 10:31:29,장성림,Unity,4 - 약수의 합,"public class Solution {
    public int solution(int n) {
        int answer = 0;
        for (int i = 1; i <= n; i++){
            if (n % i == 0)
                answer += i;
        }
        return answer;
    }
}",https://github.com/hoobhoob,2023. 8. 24,4,1
2023. 8. 24 오전 10:31:42,박민호,Unity,2 - 평균 구하기,"using System.Linq;
public class Solution {
    public double solution(int[] arr) {
        
        double answer = arr.Sum();
        answer /= (double)arr.Length;
        return answer;
    }
}",,2023. 8. 24,2,1
2023. 8. 24 오전 10:32:14,이장원,Unity,1 - 짝수와 홀수,"public class Solution
    {
      
            public string solution(int num)
            {
                if (num % 2 == 0) 
                    
                    return ""Even"";

                else 
                    
                    return ""Odd"";
            }
        
    }",,2023. 8. 24,1,1
2023. 8. 24 오전 10:32:19,김호연,Unity,3 - 자릿수 더하기,"using System;

public class Solution {
    public int solution(int n) {
        
        int answer = 0;
        string str = n.ToString();
        
        for(int i=0; i < str.Length; i++)
        {
            answer += int.Parse(str[i].ToString());
        }
        
        return answer;
    }
}",,2023. 8. 24,3,1
2023. 8. 24 오전 10:32:30,김명식,Unity,1 - 짝수와 홀수,"public class Solution {
    public string solution(int num) {
        string answer = ""Even"";
        if(num%2==0)
        {
            answer = ""Even"";
        }
        else
        {
            answer = ""Odd"";
        }
        return answer;
    }
}",https://github.com/D0ryeon/Algorithm-Code-Kata,2023. 8. 24,1,1
2023. 8. 24 오전 10:32:34,임전혁,Unity,9 - 정수 제곱근 판별,"using System;

public class Solution {
    public long solution(long n) {
        long answer = 0;
        double squareRoot = Math.Sqrt(n);

        if(squareRoot - (int)squareRoot > 0) {
            return answer = -1;
        }
        answer = (long)(Math.Pow(squareRoot + 1, 2));
        return answer;
    }
}",https://github.com/yarogono/Algorithm_CSharp/blob/master/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12934.%E2%80%85%EC%A0%95%EC%88%98%E2%80%85%EC%A0%9C%EA%B3%B1%EA%B7%BC%E2%80%85%ED%8C%90%EB%B3%84/%EC%A0%95%EC%88%98%E2%80%85%EC%A0%9C%EA%B3%B1%EA%B7%BC%E2%80%85%ED%8C%90%EB%B3%84.cs,2023. 8. 24,9,1
2023. 8. 24 오전 10:32:40,이경현,Unity,3 - 자릿수 더하기,"
    public class _1_3ciphers
    {
        public int solution(int n)
        {
            int answer = 0;
            while (n > 0)
            {
                answer += n % 10;
                n /= 10;
            }
            return answer;
        }
    }",https://github.com/516lkh/Algorithm,2023. 8. 24,3,1
2023. 8. 24 오전 10:33:11,김명식,Unity,2 - 평균 구하기,"public class Solution {
    public string solution(int num) {
        string answer = ""Even"";
        if(num%2==0)
        {
            answer = ""Even"";
        }
        else
        {
            answer = ""Odd"";
        }
        return answer;
    }
}",https://github.com/D0ryeon/Algorithm-Code-Kata,2023. 8. 24,2,1
2023. 8. 24 오전 10:33:50,박준규,Unity,5 - 나머지가 1이 되는 수 찾기,"static public int solution(int n)
{
    int answer = 0;
    for (int i = 1; i <= n; i++)
    {
        if (n % i == 1)
        {
            answer = i;
            break;
        }
    }
    Console.WriteLine(answer);
    return answer;
}",,2023. 8. 24,5,1
2023. 8. 24 오전 10:33:54,이주연,Unity,11 - 하샤드 수,"#include <string>
#include <vector>

using namespace std;

bool solution(int x) {
    bool answer = true;
    int n = x;
    int sum = 0;
    
    while(n != 0)
    {
        sum += (n % 10);
        n /= 10;
    }
    
    answer = (x % sum == 0) ? true : false; 
    
    return answer;
}",,2023. 8. 24,11,1
2023. 8. 24 오전 10:33:58,한병권,Unity,5 - 나머지가 1이 되는 수 찾기,"public class Solution
{
    public int solution(int n)
    {
        int answer = n;
        int i = n;
        while (i > 1)
        {
            if (n % i == 1) answer = i;
            --i;
        }
        return answer;
    }
}",https://github.com/hbg9212/algorithm,2023. 8. 24,5,1
2023. 8. 24 오전 10:34:50,최수용,Unity,1 - 짝수와 홀수,"
 public class Solution
    {
        public string solution(int num)
        {
            string answer = """";
            answer = (num % 2 == 0) ? ""Even"" : ""Odd"";
            return answer;
        }
    }",https://github.com/Zif1519/CodeKata,2023. 8. 24,1,1
2023. 8. 24 오전 10:34:58,신현주,Unity,5 - 나머지가 1이 되는 수 찾기,"using System;

public class Solution {
    public int solution(int n) {
        int answer = 0;
        for( int i = n; i > 0; i--){
            if( n % i == 1){
                answer = i;
            }
        }
        return answer;
    }
}",https://github.com/Shyunju/codTaka.git,2023. 8. 24,5,1
2023. 8. 24 오전 10:35:11,강성호,Unity,6 - x만큼 간격이 있는 n개의 숫자,"public class Solution {
    public long[] solution(int x, int n) {
     long[] answer = new long[n];

			for (int i = 0; i < n; i++)
			{
				answer[i] = (long)x * (i + 1);
			}
			
			return answer;
    }
}",,2023. 8. 24,6,1
2023. 8. 24 오전 10:35:17,이소이,Unity,6 - x만큼 간격이 있는 n개의 숫자,"public class Solution {
    public long[] solution(int x, int n) {
        long[] answer = new long[n];
        int index = 0;
        while (index < n)
        {
            answer[index] = (long)x * (index + 1);
            index++;
        }
        return answer;
    }
}",https://github.com/leesy015599/AlgorithmCodeKata/blob/master/Level1/no6.cs,2023. 8. 24,6,1
2023. 8. 24 오전 10:35:20,김형중,Unity,4 - 약수의 합,"public class Solution {
    public int solution(int n) {
        int answer = 0;
        
        for (int i = 1; i <= n; i++)
        {
            if (n % i == 0)
            {
                answer += i;
            }
        }
        return answer;
    }
}",,2023. 8. 24,4,1
2023. 8. 24 오전 10:35:24,안소정,Unity,3 - 자릿수 더하기,"using System;

public class Solution {
    public int solution(int n) {
        int answer = 0;
     while(n != 0)
     {
         answer += n % 10;
         n = n / 10;

     }
        return answer;
    }
}",,2023. 8. 24,3,1
2023. 8. 24 오전 10:35:25,차요한,Unity,3 - 자릿수 더하기,"using System;

public class Solution {
    public int solution(int n) {
        int answer = 0;
        int digit=10;
        while(true)
        {
            if(n>0)
            {

                answer += n-n/digit*digit;
                n/=digit;
            }
            else
            {
                break;
            }
        }
        
        return answer;
    }
}",https://github.com/HOHOJO/Algorithm_test,2023. 8. 24,3,1
2023. 8. 24 오전 10:35:27,정주찬,Unity,6 - x만큼 간격이 있는 n개의 숫자,"public class Solution {
    public long[] solution(int x, int n) {
        long[] answer = new long[n];
        answer[0] = x;
        int i = 1;
        while (i < n)
        {
            answer[i] = answer[i - 1] + x;
            i++;
        }
        return answer;
    }
}",https://github.com/JeongJuChan/Algorithm/blob/main/SpartaAlgorithm/x%EB%A7%8C%ED%81%BC_%EA%B0%84%EA%B2%A9%EC%9D%B4_%EC%9E%88%EB%8A%94_n%EA%B0%9C%EC%9D%98_%EC%88%AB%EC%9E%90.cs,2023. 8. 24,6,1
2023. 8. 24 오전 10:35:38,박민호,Unity,3 - 자릿수 더하기,"using System;

public class Solution {
    public int solution(int n) {
        int answer = 0;
        while(n>0){
            answer += n%10;
            n/=10;
        }
        return answer;
    }
}",,2023. 8. 24,3,1
2023. 8. 24 오전 10:35:47,이주연,Unity,12 - 두 정수 사이의 합,"#include <string>
#include <vector>

using namespace std;

long long solution(int a, int b) {
    long long answer = 0;
    
    int maxNum = a > b ? a : b;
    int minNum = a < b ? a : b;
    
    for(int i = minNum; i <= maxNum; i++)
    {
        answer += i;
    }
    
    return answer;
}",,2023. 8. 24,12,1
2023. 8. 24 오전 10:36:16,김호연,Unity,4 - 약수의 합,"public class Solution {
    public int solution(int n) {
        int answer = 0;
        
        for(int i = 1; i <= n; i++)
        {
            if(n % i == 0)
            {
                answer+=i;
            }
        }
        return answer;
    }
}",,2023. 8. 24,4,1
2023. 8. 24 오전 10:36:21,최장범,Unity,2 - 평균 구하기,"using System.Linq;

public class Solution {
    public double solution(int[] arr) {
        return arr.Average();
    }
}",,2023. 8. 24,2,1
2023. 8. 24 오전 10:36:38,김민상,Unity,7 - 자연수 뒤집어 배열로 만들기,"public class Solution {
    public int[] solution(long n) {
        int[] answer = new int[n.ToString().Length];
        
        int i = 0;
        while (n > 0)
        {
            answer[i] = (int)(n % 10);
            n /= 10;
            i += 1;
        }
        
        return answer;
    }
}",https://github.com/berylstar/MyCOTE/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12932.%E2%80%85%EC%9E%90%EC%97%B0%EC%88%98%E2%80%85%EB%92%A4%EC%A7%91%EC%96%B4%E2%80%85%EB%B0%B0%EC%97%B4%EB%A1%9C%E2%80%85%EB%A7%8C%EB%93%A4%EA%B8%B0,2023. 8. 24,7,1
2023. 8. 24 오전 10:36:49,지민규,Unity,6 - x만큼 간격이 있는 n개의 숫자,"public class Solution {
    public long[] solution(int x, int n) {
        long[] answer = new long[n];
        for(int i = 0; i < n; i++)
        {
            if(i != 0)
            {
                answer[i] += answer[i - 1] + x;
            }    
            else
            {
                answer[i] = x;
            }
        }
        return answer;
    }
}",,2023. 8. 24,6,1
2023. 8. 24 오전 10:36:50,조병우,Unity,2 - 평균 구하기,"#include <stdio.h>
#include <stdbool.h>
#include <stdlib.h>

// arr_len은 배열 arr의 길이입니다.
double solution(int arr[], size_t arr_len) {
    double answer = 0; //평균값 초기화
    double total = 0; //총합 초기화
    for(int i = 0; i<arr_len; i++){
        total +=arr[i];
    }; //arr_len 배열만큼 반복해서 i값을 추가하고 total은 총합
    
    answer = total/arr_len; //평균값 = 총합/배열수
    return answer; //결과값 출력
}",,2023. 8. 24,2,1
2023. 8. 24 오전 10:36:55,최장,Unity,1 - 짝수와 홀수,"public class Solution {
    public string solution(int num) 
    {
        if(num % 2 == 0)
        {
            return ""Even"";    
        }
        else
        {
            return ""Odd"";    
        }
    }
}",,2023. 8. 24,1,1
2023. 8. 24 오전 10:37:04,김하늘,Unity,5 - 나머지가 1이 되는 수 찾기,"using System;

public class Solution 
{
    public int solution(int n) 
    {
        int answer = 0;
        int i = 1;
        while (answer == 0)
        {
            if (n % i == 1)
                answer = i;
            i++;
        }
        return answer;
    }
}",,2023. 8. 24,5,1
2023. 8. 24 오전 10:37:06,김광수,Unity,9 - 정수 제곱근 판별,"using System;
public class Solution {
    public long solution(long n) {
        long answer = 0;
        double trysqrt = Math.Sqrt(n);

        return trysqrt == (int)trysqrt ? (long)Math.Pow(trysqrt+1, 2) : -1;
    }
}",https://github.com/kksoo0131/Study/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12934.%E2%80%85%EC%A0%95%EC%88%98%E2%80%85%EC%A0%9C%EA%B3%B1%EA%B7%BC%E2%80%85%ED%8C%90%EB%B3%84,2023. 8. 24,9,1
2023. 8. 24 오전 10:37:07,장현교,Unity,3 - 자릿수 더하기,"public class Solution
{
    public int solution(int n)
    {
        int num = n;
        int answer = 0;
        while (num > 0)
        {
            answer += (num % 10);
            num /= 10;
        }
        return answer;
    }
}",,2023. 8. 24,3,1
2023. 8. 24 오전 10:37:10,김진규,Unity,5 - 나머지가 1이 되는 수 찾기,"public class Solution {
    public int solution(int n) {
        int answer = 0;
        int minX = n;
        for(int i =n; i >= 1; i--){
            if(n%i == 1 && i < minX)
                minX = i;
        }
        answer = minX;
        return answer;
    }
}",,2023. 8. 24,5,1
2023. 8. 24 오전 10:37:17,김나운,Unity,4 - 약수의 합,"public class Solution {
    public int solution(int n) {
        int answer = 0;
        
        for(int i = 1; i < n+1; i++){
            if(n%i == 0){
            answer += i;
            }
        }
        
        return answer;
    }
}",,2023. 8. 24,4,1
2023. 8. 24 오전 10:37:36,신해준,Unity,2 - 평균 구하기,"public class Solution 
{
    public double solution(int[] arr) 
    {
        double sum = 0;
        
        for (int i =0 ; i < arr.Length; i++ )
        {
             sum += arr[i];
        }
        double answer = (double)sum / arr.Length;
        return answer;
    }
}",,2023. 8. 24,2,1
2023. 8. 24 오전 10:37:49,김주형,Unity,1 - 짝수와 홀수,"public class Solution
{
    public string solution(int num) 
    {
        string result = """";
            
        if (num % 2 == 0)
        {
            result = ""Even"";
        }   
        else result = ""Odd"";  
                       
        string answer = result;
        return answer;
    }
}",,2023. 8. 24,1,1
2023. 8. 24 오전 10:37:51,김민상,Unity,8 - 문자열을 정수로 바꾸기,"public class Solution {
    public int solution(string s) {
        return int.Parse(s);
    }
}",https://github.com/berylstar/MyCOTE/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12925.%E2%80%85%EB%AC%B8%EC%9E%90%EC%97%B4%EC%9D%84%E2%80%85%EC%A0%95%EC%88%98%EB%A1%9C%E2%80%85%EB%B0%94%EA%BE%B8%EA%B8%B0,2023. 8. 24,8,1
2023. 8. 24 오전 10:37:58,장성림,Unity,5 - 나머지가 1이 되는 수 찾기,"public class Solution {
    public int solution(int n) {
        int answer = 0;
        for (int i = 2; i < n; i++){
            if ((n-1) % i == 0){
                answer = i;
                break;
            }
        }
        return answer;
    }
}",https://github.com/hoobhoob,2023. 8. 24,5,1
2023. 8. 24 오전 10:38:32,박지원,Unity,3 - 자릿수 더하기,"using System;

public class Solution {
    public int solution(int n) {
        int answer = 0;
        while(true){
            answer += n%10;
            n /= 10;
            if(n<=0) break;
        }
        return answer;
    }
}",https://github.com/jwonp9127/AlgorithmStudy/tree/7d2a00286d1ee32438a8fa67cf40ce6d0c0001ae/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12931.%E2%80%85%EC%9E%90%EB%A6%BF%EC%88%98%E2%80%85%EB%8D%94%ED%95%98%EA%B8%B0,2023. 8. 24,3,1
2023. 8. 24 오전 10:38:42,김주형,Unity,2 - 평균 구하기,"public class Solution
{
    public double solution(int[] arr) 
    {
        double answer = 0;
        double sum = 0;
        
        for (int i = 0; i <arr.Length; i++)
        {
            sum += arr[i];
        }
        answer = sum / arr.Length;
            
        return answer;
    }
}",,2023. 8. 24,2,1
2023. 8. 24 오전 10:39:04,박민호,Unity,4 - 약수의 합,"public class Solution {
    public int solution(int n) {
        int answer = 0;
        for (int i=1;i<=n;i++){
            if(n%i==0){
                answer += i;
            }
        }
        
        return answer;
    }
}",,2023. 8. 24,4,1
2023. 8. 24 오전 10:39:13,이경현,Unity,4 - 약수의 합,"    public class A_1_4_aliquot
    {
        public int solution(int n)
        {
            if (n > 0)
            {
                int sum = 0;
                for (int i = 1; i <= n; i++)
                {
                    if (n % i == 0) sum += i;
                }
                return sum;
            }

            return 0;
        }
    }",https://github.com/516lkh/Algorithm,2023. 8. 24,4,1
2023. 8. 24 오전 10:39:42,권선영,Unity,2 - 평균 구하기,"Public class Solution {
    Public double solution(int[] arr) {
        double answer = 0;
        for(int i=0;i<arr.Length;i++)
        {
            answer += arr[i];
        }
        answer /= arr.Length;
        return answer;
    }
}",https://github.com/Tealss,2023. 8. 24,2,1
2023. 8. 24 오전 10:40:02,김민태,Unity,7 - 자연수 뒤집어 배열로 만들기,"using System;

public class Solution {
    public int[] solution(long n) {
        string temp = n.ToString();
        int[] answer = new int[temp.Length];
        for(int i = 0; i<temp.Length; i++){
            answer[i] = (int)Char.GetNumericValue(temp[temp.Length - 1 - i]);
        }
        return answer;
    }
}",https://github.com/rlaalsxo?tab=repositories,2023. 8. 24,7,1
2023. 8. 24 오전 10:40:18,이소이,Unity,7 - 자연수 뒤집어 배열로 만들기,"public class Solution {
    public int[] solution(long n) {
        int size = 0;
        long tempN = n;
        while (tempN != 0)
        {
            tempN /= 10;
            size++;
        }        
        
        int[] answer = new int[size];
        int index = 0;
        while (index < size)
        {
            answer[index++] = (int)(n % 10);
            n /= 10;
        }
                
        return answer;
    }
}",https://github.com/leesy015599/AlgorithmCodeKata/blob/master/Level1/no7.cs,2023. 8. 24,7,1
2023. 8. 24 오전 10:40:32,한병권,Unity,6 - x만큼 간격이 있는 n개의 숫자,"public class Solution {
    public long[] solution(int x, int n) {
        long[] answer = new long[n];
        
        for(long i = 0; i < n; i++)
        {
            answer[i] = x + (x *i);
        }
        
        return answer;
    }
}",https://github.com/hbg9212/algorithm,2023. 8. 24,6,1
2023. 8. 24 오전 10:41:26,이세진,Unity,4 - 약수의 합,"public class Solution {
    public int solution(int n) {
        int answer = 0;
        
        for(int i = 1 ; i  <= n / 2 ; i++)
        {
            for(int j = 0 ; j <= n;j++)
            {
                if(i * j == n)
                {
                    answer += i;
                }
                
            }
        }      
        answer += n;
        
        return answer;
    }
}",,2023. 8. 24,4,1
2023. 8. 24 오전 10:41:48,최수용,Unity,2 - 평균 구하기,"
public class Solution {
    public double solution(int[] arr) {
        double answer = 0;
        foreach(double a in arr){
            answer += a;
        }
        answer /= arr.Length;
        return answer;
    }
}",https://github.com/Zif1519/CodeKata,2023. 8. 24,2,1
2023. 8. 24 오전 10:42:04,김민태,Unity,8 - 문자열을 정수로 바꾸기,"public class Solution {
    public int solution(string s) {
        int answer = 0;
        answer = int.Parse(s);
        return answer;
    }
}",https://github.com/rlaalsxo?tab=repositories,2023. 8. 24,8,1
2023. 8. 24 오전 10:42:24,박민호,Unity,5 - 나머지가 1이 되는 수 찾기,"using System;

public class Solution {
    public int solution(int n) {
        int answer = 0;
        for(int i=1;i<n;i++){
            if(n%i==1){
                answer=i;
                break;
            }
        }
        return answer;
    }
}",,2023. 8. 24,5,1
2023. 8. 24 오전 10:42:28,박민혁,Unity,6 - x만큼 간격이 있는 n개의 숫자,"public class Solution {
    public long[] solution(int x, int n) {
        long[] answer = new long[n];
        long longx=x;
            for (int i = 0; i < n; i++)
            {
                answer[i] = longx;
                longx+=x;
            }        
            return answer;
    }
}",,2023. 8. 24,6,1
2023. 8. 24 오전 10:42:38,김형중,Unity,5 - 나머지가 1이 되는 수 찾기,"public class Solution {
    public int solution(int n) {
        int answer = 0;
        
        for (int x = 1; x < n-1; x++)
            if (n % x == 1)
            {
                answer = x;
                break;
            }
        
        if (answer == 0) answer = n - 1;
        
        return answer;
    }
}",,2023. 8. 24,5,1
2023. 8. 24 오전 10:42:45,김도현A,Unity,3 - 자릿수 더하기,"using System;

public class Solution {
    public int solution(int n) {
        int answer = 0;
        
        while (n != 0)
        {
            answer += n%10;
            n /= 10; 
            
        }
        
        
        
        
        return answer;
    }
}",,2023. 8. 24,3,1
2023. 8. 24 오전 10:42:54,김강현,Unity,2 - 평균 구하기,"public class Solution {
    public double solution(int[] arr)
    {
        int sum=0;
        for(int i = 0 ; i < arr.Length ; i++)
        {
            sum += arr[i];
        }
        
        double answer = (double)sum / arr.Length;
        return answer;
    }
}",,2023. 8. 24,2,1
2023. 8. 24 오전 10:43:03,김진규,Unity,6 - x만큼 간격이 있는 n개의 숫자,"public class Solution {
    public long[] solution(int x, int n) {
        long[] answer = new long[n];
        for(int i=0; i<n; i++)
        {
            answer[i] = (long)x * (i+1);
        }
        return answer;
    }
}",,2023. 8. 24,6,1
2023. 8. 24 오전 10:43:04,윤지연,Unity,2 - 평균 구하기,"public double solution(int[] arr) {
        double answer = 0;
        int cnt = 0;
        foreach(int num in arr)
        {
            answer += num;
            cnt++;
        }
        return answer/cnt;
        
        // 다른 풀이
        // return arr.Average();
    }",https://github.com/jungbosong/Codekata/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12944.%E2%80%85%ED%8F%89%EA%B7%A0%E2%80%85%EA%B5%AC%ED%95%98%EA%B8%B0,2023. 8. 24,2,1
2023. 8. 24 오전 10:43:09,조범준,Unity,5 - 나머지가 1이 되는 수 찾기,"using System;

public class Solution {
    public int solution(int n) {
        int answer = 2;
        int num = 3;
        while(true)
        {
            if(n < 3)
            {
                break;
            }
            else if(n % answer == 1)
            {
                num = answer;
                break;
            }
            answer++;
        }
        return num;
    }
}",https://github.com/KimMaYa1/BaekJoonEx/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/87389.%E2%80%85%EB%82%98%EB%A8%B8%EC%A7%80%EA%B0%80%E2%80%851%EC%9D%B4%E2%80%85%EB%90%98%EB%8A%94%E2%80%85%EC%88%98%E2%80%85%EC%B0%BE%EA%B8%B0,2023. 8. 24,5,1
2023. 8. 24 오전 10:43:22,김명식,Unity,3 - 자릿수 더하기,"using System;

public class Solution {
    public int solution(int n) {
        int answer = 0;
        char[] chr = n.ToString().ToCharArray();
        
        foreach(char c in chr)
        {
            answer += Int32.Parse(c.ToString());  
        }
        
        return answer;
    }
}",https://github.com/D0ryeon/Algorithm-Code-Kata,2023. 8. 24,3,1
2023. 8. 24 오전 10:43:26,이홍준,Unity,6 - x만큼 간격이 있는 n개의 숫자,"public class Solution {
    public long[] solution(int x, int n) {
        long[] answer = new long[n];
        
        for (int i = 0; i < n; i++)
        {
            if (i == 0)
            {
                answer[i] = x;
            }
            else
            {
                answer[i] += answer[i - 1] + x;   
            }       
        }
        
        return answer;
    }
}",https://github.com/dlghdwns97/Study/blob/main/6.%20x%EB%A7%8C%ED%81%BC%20%EA%B0%84%EA%B2%A9%EC%9D%B4%20%EC%9E%88%EB%8A%94%20n%EA%B0%9C%EC%9D%98%20%EC%88%AB%EC%9E%90.cs,2023. 8. 24,6,1
2023. 8. 24 오전 10:43:42,김민상,Unity,9 - 정수 제곱근 판별,"using System;
public class Solution {
    public long solution(long n)
    {
        if (Math.Pow(n, 0.5f) % 1 > 0)
            return -1;
        else
            return (long)Math.Pow((Math.Pow(n, 0.5f) + 1), 2);
    }
}",https://github.com/berylstar/MyCOTE/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12934.%E2%80%85%EC%A0%95%EC%88%98%E2%80%85%EC%A0%9C%EA%B3%B1%EA%B7%BC%E2%80%85%ED%8C%90%EB%B3%84,2023. 8. 24,9,1
2023. 8. 24 오전 10:43:43,김어진,Unity,3 - 자릿수 더하기,"using System;

public class Solution {
    public int solution(int n) {
        int answer = 0;
        while(n>0){
            answer += n%10;
            n = n/10;
        }
        return answer;
    }
}",,2023. 8. 24,3,1
2023. 8. 24 오전 10:43:50,문현우,Unity,1 - 짝수와 홀수,"public class Solution {
    public string solution(int num) {
        if (num % 2 == 0) {
            return ""Even"";
        } else {
            return ""Odd"";
        }
    }
}",https://github.com/Munch310/Algorithm-Csharp.git,2023. 8. 24,1,1
2023. 8. 24 오전 10:44:00,장현교,Unity,4 - 약수의 합,"public int solution(int n)
{
    int answer = 0;
    for ( int i = 1; i <= n; i++ )
    {
        if ( n % i == 0 )
        {
            answer += i;
        }
    }
    return answer;
}",,2023. 8. 24,4,1
2023. 8. 24 오전 10:44:12,조영오,Unity,8 - 문자열을 정수로 바꾸기,"using System;

public class Solution {
    public int solution(string s) {
        int answer = 0;
        int temp = 0;
        
        for(int i = s.Length-1 ;i >= 0;i--){
            if(i == 0 && (s[0] == '+' || s[0] == '-')){
                if(s[0] == '-'){answer *= -1;}
            }
            else{
                temp = (int)Char.GetNumericValue(s[i]);
                for(int j = 0;j < s.Length-(i+1);j++){
                    temp *= 10;
                }
                
                answer += temp;       
            }   
        }
        
        return answer;
    }
}",,2023. 8. 24,8,1
2023. 8. 24 오전 10:44:41,박지원,Unity,4 - 약수의 합,"public class Solution {
    public int solution(int n) {
        int answer = 0;
        for(int i=1; i <= n; i++){
            if(n%i == 0)    answer += i;
        }
        return answer;
    }
}",https://github.com/jwonp9127/AlgorithmStudy/tree/f486fcb813cf22a1c0188225c98f64fad1b1c14a/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12928.%E2%80%85%EC%95%BD%EC%88%98%EC%9D%98%E2%80%85%ED%95%A9,2023. 8. 24,4,1
2023. 8. 24 오전 10:44:45,이경현,Unity,5 - 나머지가 1이 되는 수 찾기,"    public class A_1_5_remainder1
    {
        public int solution(int n)
        {
            for(int i = 2; i < n; i++)
            {
                if (n % i == 1) return i;
            }

            return -1;
        }
    }",https://github.com/516lkh/Algorithm,2023. 8. 24,5,1
2023. 8. 24 오전 10:45:21,안소정,Unity,4 - 약수의 합,"public class Solution {
    public int solution(int n) {
        int answer = 0;
        for(int i = 1; i <= n; i++)
        {
            if(n%i == 0)
                answer += i;
        }
        return answer;
    }
}",,2023. 8. 24,4,1
2023. 8. 24 오전 10:45:22,조병우,Unity,3 - 자릿수 더하기,"#include <stdio.h>
#include <stdbool.h>
#include <stdlib.h>

int solution(int n) {
    int answer = 0;
    while(n > 0){
            answer += n%10; //n을 10으로 나눴을때 나머지값을 더한다.
            n/=10; //n을 10으로 나누길 반복
        }
    return answer;
}",,2023. 8. 24,3,1
2023. 8. 24 오전 10:45:28,서재민,Unity,1 - 짝수와 홀수,"char* solution(int num) 
{
    if (num % 2 == 0)
        return ""Even"";
    else
        return ""Odd"";
}",https://github.com/SeoJaeMin619/algorithm,2023. 8. 24,1,1
2023. 8. 24 오전 10:45:28,곽민규,Unity,2 - 평균 구하기,"public class Solution {
    public double solution(int[] arr) {
        double sum = 0;
        for (int i = 0; i < arr.Length; i++) {
            sum += arr[i];
        }
        return sum / arr.Length;
    }
}",https://github.com/kwakminkyu,2023. 8. 24,2,1
2023. 8. 24 오전 10:45:35,박민혁,Unity,7 - 자연수 뒤집어 배열로 만들기,"public class Solution {
    public int[] solution(long n) {
        string a=n.ToString();
        int[] answer = new int[a.Length];
        int i=0;
        while(n>0)
        {
            answer[i]=(int)(n%10);
            n=n/10;
            ++i;
            
        }
        return answer;
    }
}",,2023. 8. 24,7,1
2023. 8. 24 오전 10:45:39,문현우,Unity,2 - 평균 구하기,"public class Solution {
    public double solution(int[] arr) {
        double answer = 0;
        for(int i = 0; i < arr.Length; i++){
            answer += (double)arr[i];
        }
        return answer / arr.Length;
    }
}",https://github.com/Munch310/Algorithm-Csharp/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12944.%E2%80%85%ED%8F%89%EA%B7%A0%E2%80%85%EA%B5%AC%ED%95%98%EA%B8%B0,2023. 8. 24,2,1
2023. 8. 24 오전 10:45:50,이선재,Unity,7 - 자연수 뒤집어 배열로 만들기,"public class Solution {
    public int[] solution(long n) {
        string sn = n.ToString();
        int[] answer = new int[sn.Length];
        
        for(int i = sn.Length; i > 0; i--){
            answer[sn.Length - i] = sn[i-1] - '0';
        }
        
        return answer;
    }
}",https://github.com/shehdrbs123/spartaB10/blob/main/%EC%9D%B4%EC%84%A0%EC%9E%AC/Programmers/%EC%9E%90%EC%97%B0%EC%88%98%20%EB%92%A4%EC%A7%91%EC%96%B4%20%EB%B0%B0%EC%97%B4%EB%A1%9C%20%EB%A7%8C%EB%93%A4%EA%B8%B0,2023. 8. 24,7,1
2023. 8. 24 오전 10:46:01,이주연,Unity,13 - 콜라츠 추측,"#include <string>
#include <vector>

using namespace std;

int solution(int num) {
    int answer = 0;
    int n = 0;
    long long input = num;
    
    if(num == 1)
        return 0;
    
    while(n != 500)
    {
        
        n+=1;
        input = (input % 2 == 0) ? (input / 2) : (input * 3) + 1;
        if(input == 1)
        {
            answer = n;
            break;
        }
    }
    
    if(n >= 500)
        answer = -1;
    return answer;
}",,2023. 8. 24,13,1
2023. 8. 24 오전 10:46:18,김진환,Unity,3 - 자릿수 더하기,"public int solution(int n)
        {
            int answer = 0;
            string number = n.ToString();
            foreach(char c in number)
            {
                answer += c - '0';
            }
            return answer;
        }",https://github.com/NewRound/AlgorithmKata.git,2023. 8. 24,3,1
2023. 8. 24 오전 10:46:25,손병의,Unity,1 - 짝수와 홀수,"1. 짝수와 홀수

public class Solution   
{
    public string solution(int num) 
    {
        string answer = """";
        if(num % 2 == 0 )
        {
            return answer = ""Even"";
        }
        else
        {
          return answer = ""Odd"";
        }
        
        
    }
}

2. 평균 구하기
public class Solution 
{
    public double solution(int[] arr) 
    {
        double answer = 0;
        double sum = 0;
        
        for(int i = 0; i<arr.Length; i++)
        {
            sum += arr[i];
        }
        answer = sum / arr.Length;
        
        return answer;
    }
}

3. 자릿수 더하기
using System;

public class Solution 
{
    public int solution(int n) 
    {
        int answer = 0;
        
        while(n !=0)
        {
            answer += n %10;
            n = n/10;
        }
        
        
        return answer;
    }
}

4. 약수의 합
public class Solution
{
    public int solution(int n) 
    {
        
        int sum = 0;
        
        for(int i = 1; i <= n; i++)
        {
            if(n%i ==0) sum +=i;
        }
        
        return sum;
    }
}",https://github.com/Son-BE/CodeKata,2023. 8. 24,1,1
2023. 8. 24 오전 10:47:06,문현우,Unity,3 - 자릿수 더하기,"using System;

public class Solution {
    public int solution(int n) {
        int _n = n;
        int answer = 0;

        while (_n > 0) {
            int _splitN = _n % 10;
            answer += _splitN;
            _n /= 10;
        }

        return answer;
    }
}",https://github.com/Munch310/Algorithm-Csharp/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12931.%E2%80%85%EC%9E%90%EB%A6%BF%EC%88%98%E2%80%85%EB%8D%94%ED%95%98%EA%B8%B0,2023. 8. 24,3,1
2023. 8. 24 오전 10:47:28,김호연,Unity,5 - 나머지가 1이 되는 수 찾기,"using System;

public class Solution {
    public int solution(int n) {
        int answer = 0;
        for(int i = 2; i <= n; i++)
        {
            if(n % i == 1)
            {
                answer = i;
                break;
            }
        }
        return answer;
    }
}",,2023. 8. 24,5,1
2023. 8. 24 오전 10:47:37,차요한,Unity,4 - 약수의 합,"    public int solution(int n) {
        int answer = 0;
        
        for(int i = 1 ; i<=n ; i++)
        {
            if((n%i)==0)
            {
                answer+=i;
            }
        }
        return answer;
    }",https://github.com/HOHOJO/Algorithm_test,2023. 8. 24,4,1
2023. 8. 24 오전 10:48:12,이선재,Unity,8 - 문자열을 정수로 바꾸기,"public class Solution {
    public int solution(string s) {
        return int.Parse(s);
    }
}",https://github.com/shehdrbs123/spartaB10/blob/main/%EC%9D%B4%EC%84%A0%EC%9E%AC/Programmers/%EB%AC%B8%EC%9E%90%EC%97%B4%EC%9D%84%20%EC%A0%95%EC%88%98%EB%A1%9C%20%EB%B0%94%EA%BE%B8%EA%B8%B0,2023. 8. 24,8,1
2023. 8. 24 오전 10:49:02,김준범,Unity,1 - 짝수와 홀수,"public class Solution 
{
    public string solution(int num) 
    {
        string answer = """";
        
        if(num % 2 == 0)
            answer += ""Even"";
        else
            answer += ""Odd"";    
        
        return answer;
    }
}",,2023. 8. 24,1,1
2023. 8. 24 오전 10:49:03,김민태,Unity,9 - 정수 제곱근 판별,"using System;

public class Solution {
    public long solution(long n) {
        long answer = 0;
        long x = (long)Math.Sqrt(n);
        answer = (x*x == n) ? (x+1)*(x+1) : -1;
        return answer;
    }
}",https://github.com/rlaalsxo?tab=repositories,2023. 8. 24,9,1
2023. 8. 24 오전 10:49:04,윤지연,Unity,3 - 자릿수 더하기,"public int solution(int n) {
        int answer = 0;
        string tmp = n.ToString();
        foreach(char c in tmp)
        {
            answer += (int)c-'0';
        }
        return answer;
    }",https://github.com/jungbosong/Codekata/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12944.%E2%80%85%ED%8F%89%EA%B7%A0%E2%80%85%EA%B5%AC%ED%95%98%EA%B8%B0,2023. 8. 24,3,1
2023. 8. 24 오전 10:49:33,김나운,Unity,5 - 나머지가 1이 되는 수 찾기,"public class Solution {
    public int solution(int n) {
        int answer = 0;
        int min = int.MaxValue;

        for (int i = 1; i < n + 1; i++) {
            if (n % i == 1 && i < min) {
                min = i;
            }
        }

        answer = min;
        return answer;
    }
}",,2023. 8. 24,5,1
2023. 8. 24 오전 10:49:43,이형빈,Unity,3 - 자릿수 더하기,"using System;

public class Solution {
    public int solution(int n) 
    {
        int answer = 0;
        while(n>0)
        {
            answer +=n%10;
            n = n/10;
      
            
        }
        
        return answer;
    }
}",,2023. 8. 24,3,1
2023. 8. 24 오전 10:49:44,진우성,Unity,2 - 평균 구하기,"public class Solution {
    public double solution(int[] arr) {
        double answer = 0;
            double sum = 0;
            for(int i  = 0; i < arr.Length; i++)
            {
                sum += arr[i];
            }
            answer = sum / arr.Length;
            return answer;
    }
}",,2023. 8. 24,2,1
2023. 8. 24 오전 10:49:55,이현지,Unity,6 - x만큼 간격이 있는 n개의 숫자,"public class Solution {
    public long[] solution(int x, int n) 
    {
        long[] answer = new long[n];
        
        for (int i = 0; i < n; i++)
        {
            answer[i] = (long)x * (i + 1);
        }
        return answer;
    }
}",,2023. 8. 24,6,1
2023. 8. 24 오전 10:50:17,조범준,Unity,6 - x만큼 간격이 있는 n개의 숫자,"public class Solution {
    public long[] solution(int x, int n) {
        long[] answer = new long[n];
        answer[0] = x;
        for(int i = 1; i < n; i++){
            answer[i] = x + answer[i - 1];
        }
        return answer;
    }
}",https://github.com/KimMaYa1/BaekJoonEx/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12954.%E2%80%85x%EB%A7%8C%ED%81%BC%E2%80%85%EA%B0%84%EA%B2%A9%EC%9D%B4%E2%80%85%EC%9E%88%EB%8A%94%E2%80%85n%EA%B0%9C%EC%9D%98%E2%80%85%EC%88%AB%EC%9E%90/x%EB%A7%8C%ED%81%BC%E2%80%85%EA%B0%84%EA%B2%A9%EC%9D%B4%E2%80%85%EC%9E%88%EB%8A%94%E2%80%85n%EA%B0%9C%EC%9D%98%E2%80%85%EC%88%AB%EC%9E%90.cs,2023. 8. 24,6,1
2023. 8. 24 오전 10:50:20,김대열,Unity,121 - N-Queen,"static int diagonalUpper[24] = {0,};
static int diagonalLower[24] = {0,};
static int vertical[13] = {0,};
static int horizontal[13]= {0,};
#include<vector>
using namespace std;

int solution(int n, int &cnt, int x) {
    if(x == n + 1){
        return 1;
    }
    int answer = 0;
    
    for (int y = 1 ; y <= n ;y++){
        if(horizontal[y] || diagonalLower[n - x + y] || diagonalUpper[x + y ]) continue;
        horizontal[y] = diagonalLower[n - x + y] = diagonalUpper[x + y ] = 1;
        answer += solution(n, cnt, x + 1);
        horizontal[y] = diagonalLower[n - x + y] = diagonalUpper[x + y ] = 0;
    }
    
    return answer;
}

int solution(int n){
    int cnt = 0;
    return solution(n,cnt, 1);
}
",,2023. 8. 24,121,5
2023. 8. 24 오전 10:50:22,김규승,Unity,65 - 최댓값과 최솟값,"#include <iostream>
#include <string>
#include <sstream>
#include <vector>

using namespace std;

string solution(string s) {
    
    int     maxValue{-10000000};
    int     minValue{100000000};
    int     value{0};
    bool    isMinus = false;
    for(int i = 0; i < s.size(); ++i)
    {
        
        if(s[i] == '-')
        {
            isMinus = true;
        }
        else if(s[i] == ' ')
        {
            
            if(isMinus)
            {
                value *= -1;
            }
            
            maxValue = max(maxValue, value);
            minValue = min(minValue, value);
            
            value   = 0;
            isMinus = false;
            
        }
        else
        {
            value = value * 10 + (s[i] - '0');
        }
        
    }
    
    if(isMinus)
    {
        value *= -1;
    }
    
    maxValue = max(maxValue, value);
    minValue = min(minValue, value);
    
    stringstream ss;
    ss << minValue << ' ' << maxValue;
    
    return ss.str();
    
}",,2023. 8. 24,65,3
2023. 8. 24 오전 10:50:26,이정환,Unity,3 - 자릿수 더하기," public int solution(int n)
    {
        int answer = 0;
        while (n >0)
        {
            answer += n % 10;
            n /= 10;
        }
        return answer;
    }",,2023. 8. 24,3,1
2023. 8. 24 오전 10:50:51,정재호,Unity,9 - 정수 제곱근 판별,"using System;

public class Solution
{
    public long solution(long n)
    {
        long answer = 0;
        double sqrt = MathF.Sqrt(n);

        if (n % sqrt == 0)
        {
            answer = (long)Math.Pow(sqrt+1, 2);
        }
        else
        {
            answer = -1;
        }

        return answer;
    }
}",,2023. 8. 24,9,1
2023. 8. 24 오전 10:51:05,장현교,Unity,4 - 약수의 합,"public class Solution
{
    public int solution(int n)
    {
        int answer = 0;
        for ( int i = (n - 1); i > 1; i-- )
        {
            if ( n % i == 1 )
            {
                answer = i;
            }
        }
        return answer;
    }
}",,2023. 8. 24,4,1
2023. 8. 24 오전 10:51:50,신현주,Unity,6 - x만큼 간격이 있는 n개의 숫자,"using System.Linq;
public class Solution {
    public long[] solution(int x, int n) {
        long[] answer = new long[n];
        long a = (long)x;
        long sum = a;
        answer[0] = a;
        for( int i = 1; i < n ; i++){
            sum += a;
            answer[i] = sum;
        }
        return answer;
    }
}",https://github.com/Shyunju/codTaka.git,2023. 8. 24,6,1
2023. 8. 24 오전 10:52:02,김정민,Unity,1 - 짝수와 홀수,"public class Solution
        {
            public string solution(int num)
            {
                return (num %2 == 0) ? ""Even"" : ""Odd"";
            }
        }",https://github.com/j-miiin/Algorithm_Study/tree/main/SPARTA_ALGORITHM_2023/Level1,2023. 8. 24,1,1
2023. 8. 24 오전 10:52:03,박지원,Unity,5 - 나머지가 1이 되는 수 찾기,"using System;

public class Solution {
    public int solution(int n) {
        for(int x=1; x<n; x++){
            if(n%x == 1)    return x;
        }
        return 0; //error
    }
}",https://github.com/jwonp9127/AlgorithmStudy/tree/6b12d3b91149ac6fe15724672478660201ef24bd/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/87389.%E2%80%85%EB%82%98%EB%A8%B8%EC%A7%80%EA%B0%80%E2%80%851%EC%9D%B4%E2%80%85%EB%90%98%EB%8A%94%E2%80%85%EC%88%98%E2%80%85%EC%B0%BE%EA%B8%B0,2023. 8. 24,5,1
2023. 8. 24 오전 10:52:10,함영주,Unity,1 - 짝수와 홀수,"public class Solution {
    public string solution(int num) {
        string answer = """";

         if (num % 2 == 0)
    {
         answer = ""Even"";

    }
    else 
    {
         answer = ""Odd"";

    }
           return answer;

    }
}
",,2023. 8. 24,1,1
2023. 8. 24 오전 10:52:11,박희원,Unity,1 - 짝수와 홀수,"public class Solution {
    public string solution(int num) {
        return num %2 == 0 ? ""Even"": ""Odd"";
    }
}",https://github.com/phw97123/Algorithm_Csharp.git,2023. 8. 24,1,1
2023. 8. 24 오전 10:52:19,김어진,Unity,4 - 약수의 합,"public class Solution {
    public int solution(int n) {
        int answer = 0;
        for(int i=1; i<n; i++){
            if(n%i==0){
                answer += i;
            }
        }
        answer += n;
        return answer;
    }
}",,2023. 8. 24,4,1
2023. 8. 24 오전 10:52:21,김준범,Unity,2 - 평균 구하기,"public class Solution {
    public double solution(int[] arr) 
    {
        double answer = 0;
        
        for (int i = 0; i < arr.Length; i++)
            answer += arr[i];
        
        answer /= arr.Length;
        return answer;
    }
}",,2023. 8. 24,2,1
2023. 8. 24 오전 10:52:34,장현교,Unity,5 - 나머지가 1이 되는 수 찾기,"public class Solution
{
    public int solution(int n)
    {
        int answer = 0;
        for ( int i = (n - 1); i > 1; i-- )
        {
            if ( n % i == 1 )
            {
                answer = i;
            }
        }
        return answer;
    }
}",,2023. 8. 24,5,1
2023. 8. 24 오전 10:52:35,차요한,Unity,5 - 나머지가 1이 되는 수 찾기,"using System;

public class Solution {
    public int solution(int n) {
        int answer = 0;
        for(int i = n ; i>0 ;i--)
        {
            if((n%i)==1)
            {
                answer=i;
            }
        }
        return answer;
    }
}",https://github.com/HOHOJO/Algorithm_test,2023. 8. 24,5,1
2023. 8. 24 오전 10:52:41,김정민,Unity,2 - 평균 구하기,"public class Solution
        {
            public double solution(int[] arr)
            {
                double answer = 0;
                double sum = 0;
                foreach (int i in arr) sum += i;
                answer = sum / arr.Length;
                return answer;
            }
        }",https://github.com/j-miiin/Algorithm_Study/blob/main/SPARTA_ALGORITHM_2023/Level1/02_GetAverage.cs,2023. 8. 24,2,1
2023. 8. 24 오전 10:52:45,김민태,Unity,10 - 정수 내림차순으로 배치하기,"using System;

public class Solution {
    public long solution(long n) {
        long answer = 0;
        char[] temp = n.ToString().ToCharArray();
        Array.Sort(temp);
        Array.Reverse(temp);
        answer = long.Parse(new string(temp));
        return answer;
    }
}",https://github.com/rlaalsxo?tab=repositories,2023. 8. 24,10,1
2023. 8. 24 오전 10:52:45,신우석,Unity,7 - 자연수 뒤집어 배열로 만들기,"using System;
using System.Collections.Generic;

public class Solution {
    public int[] solution(long n) {
        List<int> answer = new List<int>();
        while (n > 0) {
            answer.Add((int)(n % 10));
            n /= 10;
        }
        return answer.ToArray();
    }
}",https://github.com/seoksii/AlgorithmCodeKata/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12932.%E2%80%85%EC%9E%90%EC%97%B0%EC%88%98%E2%80%85%EB%92%A4%EC%A7%91%EC%96%B4%E2%80%85%EB%B0%B0%EC%97%B4%EB%A1%9C%E2%80%85%EB%A7%8C%EB%93%A4%EA%B8%B0,2023. 8. 24,7,1
2023. 8. 24 오전 10:52:46,이주연,Unity,14 - 서울에서 김서방 찾기,"#include <string>
#include <vector>

using namespace std;

string solution(vector<string> seoul) {
    string answer = """";
    
    for(int i = 0; i < seoul.size(); i++)
    {
        if(seoul[i] == (""Kim""))
        {
            answer = ""김서방은 ""+ to_string(i)+""에 있다"";
            break;
        }
    }
    return answer;
}",,2023. 8. 24,14,1
2023. 8. 24 오전 10:52:47,노재우,Unity,3 - 자릿수 더하기,"using System;

public class Solution 
{
    public int solution(int n) 
    {
        int answer = 0;
        for (int i = 0; i < n.ToString().Length; i++)
        {
            string num = n.ToString();
            answer += int.Parse(num[i].ToString());
        }
        return answer;
    }
}",https://github.com/Chu-Nyan/CodeKata,2023. 8. 24,3,1
2023. 8. 24 오전 10:52:56,김도현A,Unity,4 - 약수의 합,"public class Solution {
    public int solution(int n) {
        int answer = 0;
        
        if (n >= 0 && n <= 3000)
        {
        for (int i = 1; i <= n; i++)
        {
            if ( n % i == 0)
            {
                answer += i;
            }
        }
        }
        
        
        return answer;
    }
}",,2023. 8. 24,4,1
2023. 8. 24 오전 10:53:07,임전혁,Unity,10 - 정수 내림차순으로 배치하기,"using System.Text;

public class Solution {
    public long solution(long n) {
        long answer = 0;
        string nStr = n.ToString();
        
        StringBuilder sb = new StringBuilder();
        int[] numArr = new int[nStr.Length];
        
        for (int i = 0; i < nStr.Length; i++)
        {
            numArr[i] = int.Parse(nStr[i].ToString());
        }
        
        int indexMin = 0;
        for (int i = 0; i < nStr.Length - 1; i++)
        {
            indexMin = i;
            for (int j = i; j < nStr.Length; j++)
            {
                if (numArr[j] > numArr[indexMin]) {
                    indexMin = j;
                }
            }
            int tempNum = numArr[indexMin];
            numArr[indexMin] = numArr[i];
            numArr[i] = tempNum;
            
        }
        
        
        foreach (int num in numArr)
        {
            sb.Append(num);
        }

        
        answer = long.Parse(sb.ToString());
        return answer;
    }
}",https://github.com/yarogono/Algorithm_CSharp/blob/master/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12933.%E2%80%85%EC%A0%95%EC%88%98%E2%80%85%EB%82%B4%EB%A6%BC%EC%B0%A8%EC%88%9C%EC%9C%BC%EB%A1%9C%E2%80%85%EB%B0%B0%EC%B9%98%ED%95%98%EA%B8%B0/%EC%A0%95%EC%88%98%E2%80%85%EB%82%B4%EB%A6%BC%EC%B0%A8%EC%88%9C%EC%9C%BC%EB%A1%9C%E2%80%85%EB%B0%B0%EC%B9%98%ED%95%98%EA%B8%B0.cs,2023. 8. 24,10,1
2023. 8. 24 오전 10:53:13,박희원,Unity,2 - 평균 구하기,"public class Solution {
    public double solution(int[] arr) {
        double answer = 0;
                for(int i = 0; i<arr.Length; i++)
                {
                    answer+= arr[i];
                }
                return answer / arr.Length;
    }
}",https://github.com/phw97123/Algorithm_Csharp.git,2023. 8. 24,2,1
2023. 8. 24 오전 10:53:17,손병의,Unity,5 - 나머지가 1이 되는 수 찾기,"using System;

public class Solution 
{
    public int solution(int n) 
    {
       int answer =0;
       for (int x =2; x <n; x++)
           if(n%x == 1)
           {
               answer = x;
               break;
           }
        return answer;
    }
}",,2023. 8. 24,5,1
2023. 8. 24 오전 10:53:18,신우석,Unity,8 - 문자열을 정수로 바꾸기,"using System;

public class Solution {
    public int solution(string s) {
        return Int32.Parse(s);
    }
}",https://github.com/seoksii/AlgorithmCodeKata/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12925.%E2%80%85%EB%AC%B8%EC%9E%90%EC%97%B4%EC%9D%84%E2%80%85%EC%A0%95%EC%88%98%EB%A1%9C%E2%80%85%EB%B0%94%EA%BE%B8%EA%B8%B0,2023. 8. 24,8,1
2023. 8. 24 오전 10:53:31,김경원,Unity,1 - 짝수와 홀수,"정수 num이 짝수일 경우 ""Even""을 반환하고 홀수인 경우 ""Odd""를 반환하는 함수, solution을 완성해주세요.",https://github.com/y5ask82/test1.git,2023. 8. 24,1,1
2023. 8. 24 오전 10:53:37,김정민,Unity,3 - 자릿수 더하기,"public class Solution
        {
            public int solution(int n)
            {
                int answer = 0;
                string numStr = n.ToString();
                for (int i = 0; i < numStr.Length; i++)
                {
                    answer += int.Parse(numStr[i]+"""");
                }
                return answer;
            }
        }",https://github.com/j-miiin/Algorithm_Study/blob/main/SPARTA_ALGORITHM_2023/Level1/03_AddNum.cs,2023. 8. 24,3,1
2023. 8. 24 오전 10:53:41,최석준,Unity,2 - 평균 구하기,"double solution(int arr[], size_t arr_len) {
    double sum = 0, answer = 0;
        
    for(int i = 0; i < arr_len; i++){
        sum = sum + arr[i];
    }
    answer = sum / arr_len;
    
    return answer;
}",,2023. 8. 24,2,1
2023. 8. 24 오전 10:53:42,박민혁,Unity,8 - 문자열을 정수로 바꾸기,"public class Solution {
    public int solution(string s) {
        int answer = int.Parse(s);
        
        return answer;
    }
}",,2023. 8. 24,8,1
2023. 8. 24 오전 10:53:47,손병의,Unity,2 - 평균 구하기,"public class Solution 
{
    public double solution(int[] arr) 
    {
        double answer = 0;
        double sum = 0;
        
        for(int i = 0; i<arr.Length; i++)
        {
            sum += arr[i];
        }
        answer = sum / arr.Length;
        
        return answer;
    }
}",,2023. 8. 24,2,1
2023. 8. 24 오전 10:53:49,이정환,Unity,4 - 약수의 합,"public class Solution {
    public int solution(int n) {
        int divisor =1;
        int answer = 0;
        while(divisor < n+1){
        
            if(n% divisor == 0)
            {
            answer += divisor;
            }
            divisor++;
        }
        return answer;
    }
}",,2023. 8. 24,4,1
2023. 8. 24 오전 10:53:55,박희원,AI,3 - 자릿수 더하기," int answer = 0;

            while (n > 0)
            {
                answer += n % 10;
                n /= 10;
            }
            return answer;",https://github.com/phw97123/Algorithm_Csharp.git,2023. 8. 24,3,1
2023. 8. 24 오전 10:53:57,신우석,Unity,9 - 정수 제곱근 판별,"public class Solution {
    public long solution(long n) {
        long k = 1;
        while (k * k < n)
            ++k;
        if (k * k == n) return n + 2 * k + 1;
        return (long)-1;
    }
}",https://github.com/seoksii/AlgorithmCodeKata/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12934.%E2%80%85%EC%A0%95%EC%88%98%E2%80%85%EC%A0%9C%EA%B3%B1%EA%B7%BC%E2%80%85%ED%8C%90%EB%B3%84,2023. 8. 24,9,1
2023. 8. 24 오전 10:54:04,김정민,Unity,4 - 약수의 합,"public class Solution
        {
            public int solution(int n)
            {
                int answer = 0;
                for (int i = 1; i <= n; i++)
                {
                    if (n % i == 0) answer += i;
                }
                return answer;
            }
        }",https://github.com/j-miiin/Algorithm_Study/blob/main/SPARTA_ALGORITHM_2023/Level1/04_SumOfDivisor.cs,2023. 8. 24,4,1
2023. 8. 24 오전 10:54:05,김명식,Unity,4 - 약수의 합,"public class Solution {
    public int solution(int n) {
        int answer = 0;
        
        for(int i=1; i<=n; i++)
        {
            if((n%i==0)){
             answer+=i;   
            } 
        }
        
        return answer;
    }
}",https://github.com/D0ryeon/Algorithm-Code-Kata,2023. 8. 24,4,1
2023. 8. 24 오전 10:54:10,최수용,Unity,3 - 자릿수 더하기,"using System;

public class Solution {
    public int solution(int n) {
        int answer = 0;
        while(n != 0){
            answer += n%10;
            n = n/10;
        }
        return answer;
    }
}",https://github.com/Zif1519/CodeKata,2023. 8. 24,3,1
2023. 8. 24 오전 10:54:14,김광수,Unity,10 - 정수 내림차순으로 배치하기,"using System;
public class Solution
    {
        public long solution(long n)
        {
            long answer = 0;
            char[] charArray = n.ToString().ToCharArray();

            Array.Sort(charArray);
            Array.Reverse(charArray);
            
            string str = new string(charArray);
            
            return long.Parse(str);
        }
    }",https://github.com/kksoo0131/Study/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12933.%E2%80%85%EC%A0%95%EC%88%98%E2%80%85%EB%82%B4%EB%A6%BC%EC%B0%A8%EC%88%9C%EC%9C%BC%EB%A1%9C%E2%80%85%EB%B0%B0%EC%B9%98%ED%95%98%EA%B8%B0,2023. 8. 24,10,1
2023. 8. 24 오전 10:54:16,정주찬,Unity,7 - 자연수 뒤집어 배열로 만들기,"using System;
public class Solution {
    public int[] solution(long n) {
        char[] cArr = n.ToString().ToCharArray();
            int[] answer = new int[cArr.Length];

            for (int i = 0; i < cArr.Length / 2; i++)
            {
                char temp = cArr[i];
                cArr[i] = cArr[cArr.Length - 1 - i];
                cArr[cArr.Length - 1 - i] = temp;
            }

            for (int i = 0; i < cArr.Length; i++)
            {
                answer[i] = cArr[i] - '0';
                //Console.WriteLine(answer[i]);
            }
        return answer;
    }
}",https://github.com/JeongJuChan/Algorithm/blob/main/SpartaAlgorithm/%EC%9E%90%EC%97%B0%EC%88%98_%EB%92%A4%EC%A7%91%EC%96%B4_%EB%B0%B0%EC%97%B4%EB%A1%9C_%EB%A7%8C%EB%93%A4%EA%B8%B0.cs,2023. 8. 24,7,1
2023. 8. 24 오전 10:54:18,신우석,Unity,10 - 정수 내림차순으로 배치하기,"public class Solution {
    public long solution(long n) {
        int[] count = new int[10] {0, 0, 0, 0, 0, 0, 0, 0, 0, 0};
        
        while (n > 0) {
            ++count[n % 10];
            n /= 10;
        }
        
        long answer = 0;
        for (int i = 9; i >= 0; --i)
            for (int j = 0; j < count[i]; ++j)
                answer = answer * 10 + i;
        return answer;
    }
}",https://github.com/seoksii/AlgorithmCodeKata/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12933.%E2%80%85%EC%A0%95%EC%88%98%E2%80%85%EB%82%B4%EB%A6%BC%EC%B0%A8%EC%88%9C%EC%9C%BC%EB%A1%9C%E2%80%85%EB%B0%B0%EC%B9%98%ED%95%98%EA%B8%B0,2023. 8. 24,10,1
2023. 8. 24 오전 10:54:26,김정민,Unity,5 - 나머지가 1이 되는 수 찾기,"public class Solution
        {
            public int solution(int n)
            {
                int answer = 0;
                for (int i = 1; i <= n; i++)
                {
                    if (n % i == 1)
                    {
                        answer = i;
                        break;
                    }
                }
                return answer;
            }
        }",https://github.com/j-miiin/Algorithm_Study/blob/main/SPARTA_ALGORITHM_2023/Level1/05_OneRemainder.cs,2023. 8. 24,5,1
2023. 8. 24 오전 10:54:44,손병의,AI,3 - 자릿수 더하기,"using System;

public class Solution 
{
    public int solution(int n) 
    {
        int answer = 0;
        
        while(n !=0)
        {
            answer += n %10;
            n = n/10;
        }
        
        
        return answer;
    }
}",,2023. 8. 24,3,1
2023. 8. 24 오전 10:54:54,이세진,Unity,5 - 나머지가 1이 되는 수 찾기,"using System;

public class Solution {
    public int solution(int n) {
        int answer = 1;
        
        while(n % answer != 1)
        {
            answer++;
        }
        
        
        return answer;
    }
}",,2023. 8. 24,5,1
2023. 8. 24 오전 10:54:57,김정민,Unity,6 - x만큼 간격이 있는 n개의 숫자,"public class Solution
        {
            public long[] solution(int x, int n)
            {
                long[] answer = new long[n];
                int idx = 0;
                long cur = x;
                while (idx < n)
                {
                    answer[idx] = cur;
                    cur += x;
                    idx++;
                }
                return answer;
            }
        }",https://github.com/j-miiin/Algorithm_Study/blob/main/SPARTA_ALGORITHM_2023/Level1/06_ArrayWithGap.cs,2023. 8. 24,6,1
2023. 8. 24 오전 10:55:15,박희원,Unity,4 - 약수의 합,"  int answer = 0;

            for(int i  = 1; i<n+1; i++)
            {
                if (n % i == 0)
                {
                    answer+=i; 
                }
            }

            return answer;",https://github.com/phw97123/Algorithm_Csharp.git,2023. 8. 24,4,1
2023. 8. 24 오전 10:55:20,함영주,Unity,2 - 평균 구하기,"public class Solution {
    public double solution(int[] arr) {
        double answer = 0;
        
        int sum = 0;
        
        for (int i = 0; i < arr.Length; i++)
        {
            sum += arr[i];
        }
        
        return answer = (double)sum/ arr.Length;
    }
}",,2023. 8. 24,2,1
2023. 8. 24 오전 10:55:20,심우진,Unity,2 - 평균 구하기,"using System;

public class Solution {
    public double solution(int[] arr) {
        double sum = 0;

        if (arr.Length < 1 || arr.Length > 100) {
            throw new ArgumentException(""Array length should be between 1 and 100."");
        }

        for (int i = 0; i < arr.Length; i++) {
            if (arr[i] < -10000 || arr[i] > 10000) {
                throw new ArgumentException(""Array element should be between -10,000 and 10,000."");
            }
            sum += arr[i];
        }

        return sum / arr.Length;
    }
}
",https://github.com/agasa0624/at,2023. 8. 24,2,1
2023. 8. 24 오전 10:55:25,김정민,Unity,7 - 자연수 뒤집어 배열로 만들기,"public class Solution
        {
            public int[] solution(long n)
            {
                string numStr = n.ToString();
                int[] answer = new int[numStr.Length];
                for (int i = 0, j = numStr.Length-1; i < numStr.Length; i++, j--)
                {
                    answer[i] = int.Parse(numStr[j]+"""");
                }
                return answer;
            }
        }",https://github.com/j-miiin/Algorithm_Study/blob/main/SPARTA_ALGORITHM_2023/Level1/07_ReverseNaturalNum.cs,2023. 8. 24,7,1
2023. 8. 24 오전 10:55:29,손병의,Unity,4 - 약수의 합,"public class Solution
{
    public int solution(int n) 
    {
        
        int sum = 0;
        
        for(int i = 1; i <= n; i++)
        {
            if(n%i ==0) sum +=i;
        }
        
        return sum;
    }
}",,2023. 8. 24,4,1
2023. 8. 24 오전 10:55:33,신우석,Unity,11 - 하샤드 수,"public class Solution {
    public bool solution(int x) {
        int divider = 0;
        int n = x;
        while (n >0) {
            divider += n % 10;
            n /= 10;
        }
        
        return x % divider == 0;
    }
}",https://github.com/seoksii/AlgorithmCodeKata/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12947.%E2%80%85%ED%95%98%EC%83%A4%EB%93%9C%E2%80%85%EC%88%98,2023. 8. 24,11,1
2023. 8. 24 오전 10:55:41,임전혁,Unity,11 - 하샤드 수,"public class Solution {
    public bool solution(int x) {
        bool answer = true;
        string tempStr = x.ToString();

        int sumNum = 0;
        for(int i = 0; i < tempStr.Length; i++) {
            sumNum += int.Parse(tempStr[i].ToString());
        }

        if(x % sumNum != 0) {
            answer = false;
        }
        
        return answer;
    }
}",https://github.com/yarogono/Algorithm_CSharp/blob/master/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12947.%E2%80%85%ED%95%98%EC%83%A4%EB%93%9C%E2%80%85%EC%88%98/%ED%95%98%EC%83%A4%EB%93%9C%E2%80%85%EC%88%98.cs,2023. 8. 24,11,1
2023. 8. 24 오전 10:55:50,김정민,Unity,8 - 문자열을 정수로 바꾸기,"public class Solution
        {
            public int solution(string s)
            {
                int answer = int.Parse(s);
                return answer;
            }
        }",https://github.com/j-miiin/Algorithm_Study/blob/main/SPARTA_ALGORITHM_2023/Level1/08_StringToNum.cs,2023. 8. 24,8,1
2023. 8. 24 오전 10:55:50,심우진,Unity,1 - 짝수와 홀수,"public class Solution
{
    public string solution(int num)
    {
        if (num % 2 == 0)
        {
            return ""Even"";
        }
        else
        {
            return ""Odd"";
        }
    }
}",https://github.com/agasa0624/at,2023. 8. 24,1,1
2023. 8. 24 오전 10:55:54,김주형,Unity,3 - 자릿수 더하기,"public class Solution
 {
    public int solution(int n)
   {

        int answer = 0;
        while (n > 0)
        {
            answer += n % 10;
            n /= 10;                
        }
        return answer;
    }
}",,2023. 8. 24,3,1
2023. 8. 24 오전 10:55:55,신해준,Unity,3 - 자릿수 더하기,"using System;

public class Solution
{
    public int solution(int n)
    {
        int answer = 0;
        
        while (n > 0)
        {
        int digit = n % 10;
        n /= 10;
        answer += digit;
        }
        
        return answer;
    }
}",,2023. 8. 24,3,1
2023. 8. 24 오전 10:55:57,김진환,Unity,4 - 약수의 합,"public int solution(int n)
        {
            int answer = 0;
            for(int i = 1; i <= n/2; i++)
            {
                if(n%i == 0)
                {
                    answer += i;
                }
            }

            return answer + n;
        }",https://github.com/NewRound/AlgorithmKata.git,2023. 8. 24,4,1
2023. 8. 24 오전 10:56:03,채이환,Unity,6 - x만큼 간격이 있는 n개의 숫자,"public class Solution {
    public long[] solution(int x, int n) {
        long[] answer = new long[n];
        for (int i=0; i<n; ++i)
        {
            answer[i] = x + ((long)x * i);
        }
        return answer;
    }
}",,2023. 8. 24,6,1
2023. 8. 24 오전 10:56:03,김호연,Unity,6 - x만큼 간격이 있는 n개의 숫자,"public class Solution {
    public long[] solution(int x, int n) {
        
          long[] answer = new long[n];

            for (int i = 0; i < n; i++)
            {
                if (i == 0)
                    answer[i] = x;
                else
                    answer[i] = x + answer[i - 1];
            }

            return answer;
    }
}",,2023. 8. 24,6,1
2023. 8. 24 오전 10:56:07,박희원,Unity,5 - 나머지가 1이 되는 수 찾기,"using System;

public class Solution {
    public int solution(int n) {
        
            int answer = 0;
            int i = 2;
            while (true)
            {
                if (n % i == 1)
                {
                    answer = i;
                    break; 
                }
                i++;
            }
            return answer; 
    }
}",https://github.com/phw97123/Algorithm_Csharp.git,2023. 8. 24,5,1
2023. 8. 24 오전 10:56:14,김정민,Unity,9 - 정수 제곱근 판별,"public long solution(long n)
        {
            long answer = 0;
            double sqrtNum = Math.Sqrt(n);
            if (sqrtNum == Math.Floor(sqrtNum)) answer = ((long)sqrtNum + 1) * ((long)sqrtNum + 1);
            else answer = -1;
            return answer;
        }",https://github.com/j-miiin/Algorithm_Study/blob/main/SPARTA_ALGORITHM_2023/Level1/09_IsSquareRoot.cs,2023. 8. 24,9,1
2023. 8. 24 오전 10:56:21,정재호,Unity,10 - 정수 내림차순으로 배치하기,"using System;

public class Solution
{
    public long solution(long n)
    {
        long answer = 0;

        char[] chars = n.ToString().ToCharArray();

        Array.Sort(chars);
        Array.Reverse(chars);

        string sAns = """";

        for (int i = 0; i < chars.Length; i++)
        {
            sAns += (chars[i] -'0').ToString();
        }

        return answer = long.Parse(sAns);
    }
}",,2023. 8. 24,10,1
2023. 8. 24 오전 10:56:25,채이환,Unity,7 - 자연수 뒤집어 배열로 만들기,"using System;

public class Solution {
    public int[] solution(long n) {
        int[] answer = new int[] {};
        for (int i=0; n>0; ++i)
        {
            int num = Convert.ToInt32(n%10);
            if (answer.Length <= i)
            {
                int[] newAnswer = new int[answer.Length+1];
                answer.CopyTo(newAnswer, 0);
                answer = newAnswer;
                answer[answer.Length-1] = num;
            }
            n /=10;
        }
        return answer;
    }
}",,2023. 8. 24,7,1
2023. 8. 24 오전 10:56:33,신우석,Unity,12 - 두 정수 사이의 합,"public class Solution {
    public long solution(int a, int b) {
        int min = a < b ? a : b;
        int max = a > b ? a : b;
        
        long answer = 0;
        for (int i = min; i <= max; i++)
            answer += i;
        
        return answer;
    }
}",https://github.com/seoksii/AlgorithmCodeKata/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12912.%E2%80%85%EB%91%90%E2%80%85%EC%A0%95%EC%88%98%E2%80%85%EC%82%AC%EC%9D%B4%EC%9D%98%E2%80%85%ED%95%A9,2023. 8. 24,12,1
2023. 8. 24 오전 10:56:40,김정민,Unity,10 - 정수 내림차순으로 배치하기,"public class Solution
        {
            public long solution(long n)
            {
                long answer = 0;
                char[] charArr = n.ToString().ToCharArray();
                int[] numArr = new int[charArr.Length];
                for (int i = 0; i < numArr.Length; i++) numArr[i] = int.Parse(charArr[i]+"""");
                Array.Sort(numArr);
                Array.Reverse(numArr);
                string result = """";
                foreach (int i in numArr) result += i;
                answer = long.Parse(result);
                return answer;
            }
        }",https://github.com/j-miiin/Algorithm_Study/blob/main/SPARTA_ALGORITHM_2023/Level1/10_ReverseOrderNum.cs,2023. 8. 24,10,1
2023. 8. 24 오전 10:56:47,채이환,Unity,8 - 문자열을 정수로 바꾸기,"public class Solution {
    public int solution(string s) {
        int answer = 0;
        answer = System.Convert.ToInt32(s);
        return answer;
    }
}",,2023. 8. 24,8,1
2023. 8. 24 오전 10:56:59,박종수,Unity,1 - 짝수와 홀수,"public class Solution {
    public string solution(int num) {
        string answer = """";

        if (num % 2 == 0) {
            answer = ""Even"";
        } else {
            answer = ""Odd"";
        }

        return answer;
    }
}
",https://github.com/pjayas/AlgorithmCodeKata,2023. 8. 24,1,1
2023. 8. 24 오전 10:57:05,채이환,Unity,9 - 정수 제곱근 판별,"using System;

public class Solution {
    public long solution(long n) {
        long answer = 0;
        long small = Convert.ToInt64(Math.Sqrt(n));
        if (n == small * small)
            answer = Convert.ToInt64(Math.Pow(small+1, 2));
        else
            answer = -1;
        return answer;
    }
}",,2023. 8. 24,9,1
2023. 8. 24 오전 10:57:07,김정민,Unity,11 - 하샤드 수," public class Solution
        {
            public bool solution(int x)
            {
                bool answer = true;
                string numStr = x.ToString();
                int digitSum = 0;
                for (int i = 0; i < numStr.Length; i++) digitSum += int.Parse(numStr[i]+"""");
                answer = (x % digitSum == 0);
                return answer;
            }
        }",https://github.com/j-miiin/Algorithm_Study/blob/main/SPARTA_ALGORITHM_2023/Level1/11_HarshadNum.cs,2023. 8. 24,11,1
2023. 8. 24 오전 10:57:22,채이환,Unity,10 - 정수 내림차순으로 배치하기,"using System;
using System.Linq;

public class Solution {
    public long solution(long n) {
        long answer = 0;
        char[] nums = n.ToString().ToArray();
        Array.Sort(nums, (x, y) => { return x > y ? -1 : 1; });
        answer = Convert.ToInt64(string.Concat(nums));
        return answer;
    }
}",,2023. 8. 24,10,1
2023. 8. 24 오전 10:57:28,이하택,Unity,1 - 짝수와 홀수,"public class Solution 
{
    public string solution(int num) 
    {
        int result = num % 2;
        
        if(result == 0)
        {
            string answer = ""Even"";
            return answer;
        }
        else
        {
            string answer = ""Odd"";
            return answer;
        }
    }
}",https://github.com/LeeHataeg/Algorithm,2023. 8. 24,1,1
2023. 8. 24 오전 10:57:30,김정민,Unity,12 - 두 정수 사이의 합,"public long solution(int a, int b)
            {
                long answer = 0;
                if (a <= b) for (long i = a; i <= b; i++) answer += i;
                else for (long i = b; i <= a; i++) answer += i;
                return answer;
            }",https://github.com/j-miiin/Algorithm_Study/blob/main/SPARTA_ALGORITHM_2023/Level1/12_BetweenSum.cs,2023. 8. 24,12,1
2023. 8. 24 오전 10:57:33,신현주,Unity,1 - 짝수와 홀수,"public class Solution {
    public string solution(int num) {
        string answer = """";
        if( num % 2 == 0){
            answer = ""Even"";
        }else{
            answer =""Odd"";
        }
        return answer;
    }
}",https://github.com/Shyunju/codTaka.git,2023. 8. 24,1,1
2023. 8. 24 오전 10:57:49,최장범,Unity,3 - 자릿수 더하기,"using System;

public class Solution {
    public int solution(int n) 
    {
        int answer = 0;
        
        while(n != 0)
        {
            answer += n%10;
            n = n / 10;
        }
        return answer;
    }
}",,2023. 8. 24,3,1
2023. 8. 24 오전 10:57:52,이하택,Unity,2 - 평균 구하기,"public class Solution 
{
    public double solution(int[] arr) 
    {
        double sum = 0;
        for(int i = 0; i < arr.Length ; i++)
        {
            sum += arr[i];
        }
        
        double answer = sum / arr.Length;
        return answer;
    }
}",https://github.com/LeeHataeg/Algorithm,2023. 8. 24,2,1
2023. 8. 24 오전 10:58:22,강성호,Unity,7 - 자연수 뒤집어 배열로 만들기,"using System;
public class Solution {
    public int[] solution(long n) {
        	String str = n.ToString();
			long s = n;
			int[] answer = new int[str.Length];
			for(int i = 0; i < answer.Length; i++)
			{
				answer[i] = (int)(s % 10);
				s = s / 10;
			}
			return answer;
    }
}",,2023. 8. 24,7,1
2023. 8. 24 오전 10:58:32,최장범,Unity,1 - 짝수와 홀수,"public class Solution {
    public string solution(int num) 
    {
        if(num % 2 == 0)
        {
            return ""Even"";    
        }
        else
        {
            return ""Odd"";    
        }
    }
}",,2023. 8. 24,1,1
2023. 8. 24 오전 10:58:34,김규승,Unity,66 - JadenCase 문자열 만들기,"#include <string>
#include <vector>

using namespace std;

string solution(string s) {
  
    string answer = """";
    
    bool isFirst = true;
    char c       = ' ';
    for(int i = 0; i < s.size(); ++i)
    {
        
        c = s[i];
        
        if(isFirst)
        {
            
            isFirst = false;
            if(s[i] >= 'a' && s[i] <= 'z')
            {
                c += 'A' - 'a';
            }
            
        }
        else
        {
            if(s[i] >= 'A' && s[i] <= 'Z')
            {
                c += 'a' - 'A';
            }
        }
        
        if(s[i] == ' ')
        {
            isFirst = true;
        }
        
        answer += c;
        
    }
        
    return answer;
    
}",,2023. 8. 24,66,3
2023. 8. 24 오전 10:59:01,김해찬,Unity,1 - 짝수와 홀수,"public class Solution {
    public string solution(int num) {
        if(num % 2 == 0)
        {
            return ""Even"";
        }
        else
        {
            return ""Odd"";
        }
    }
}",,2023. 8. 24,1,1
2023. 8. 24 오전 10:59:06,채이환,Unity,11 - 하샤드 수,"using System;
using System.Linq;
public class Solution {
    public bool solution(int x) {
        char[] charNums = x.ToString().ToArray();
        int[] nums = new int[charNums.Length];
        int i=0;
        foreach(char c in charNums)
        {
            nums[i++] = Convert.ToInt32(c.ToString());
        }
        int hashad = nums.Sum();
        if (x % hashad == 0)
            return true;
        else
            return false;
    }
}",,2023. 8. 24,11,1
2023. 8. 24 오전 10:59:16,지민규,Unity,7 - 자연수 뒤집어 배열로 만들기,"public class Solution {
    public int[] solution(long n) {
        int arrayNum = n.ToString().Length;
        int[] answer = new int[arrayNum];
        for (int i = 0; i < arrayNum; i++)
        {
            answer[i] = (int)(n % 10);
            n /= 10;
        }
        return answer;
    }
}",,2023. 8. 24,7,1
2023. 8. 24 오전 10:59:28,김해찬,Unity,2 - 평균 구하기,"public class Solution {
    public double solution(int[] arr) {
        int sum = 0;
        
        for(int i = 0; i < arr.Length; i++)
        {
            sum += arr[i];
        }
        
        return (double)sum / arr.Length;
    }
}",,2023. 8. 24,2,1
2023. 8. 24 오전 10:59:43,정재호,Unity,11 - 하샤드 수,"public class Solution
{
    public bool solution(int x)
    {
        char[] chars = x.ToString().ToCharArray();

        int sum = 0;
        for (int i = 0; i < chars.Length; i++)
        {
            sum += chars[i]-'0';
        }

        if (x % sum == 0)
        {
            return true;
        }
        else
        {
            return false;
        }
    }
}",,2023. 8. 24,11,1
2023. 8. 24 오전 10:59:56,김해찬,Unity,3 - 자릿수 더하기,"using System;

public class Solution {
    public int solution(int n) {
        string temp = n.ToString();
        
        int sum = 0;
        
        for(int i = 0; i < temp.Length; i++)
        {
            sum += temp[i] - '0';
        }
        
        return sum;
    }
}",,2023. 8. 24,3,1
2023. 8. 24 오전 10:59:58,우민규,Unity,1 - 짝수와 홀수,"public class Solution {
    public string solution(int num) {
        return (num % 2 == 0)? ""Even"" : ""Odd"";

    }
}",https://github.com/StarterpackSparta/Project1Week.git,2023. 8. 24,1,1
2023. 8. 24 오전 11:00:34,김해찬,Unity,4 - 약수의 합,"using System.Collections;
using System.Collections.Generic;

public class Solution {
    public int solution(int n) {
        
        List<int> arr = new List<int>();
        
        for(int i = 1; i < n+1; i++)
        {
            if(n % i == 0)
            {
                arr.Add(i);
            }
        }
        
        int sum = 0;
        
        for(int i = 0; i < arr.Count; i++)
        {
            sum += arr[i];
        }
        
        return sum;
    }
}",,2023. 8. 24,4,1
2023. 8. 24 오전 11:00:52,테스트,AI,5 - 나머지가 1이 되는 수 찾기,"def solution(num):
    answer = ''
    return answer",,2023. 8. 24,5,1
2023. 8. 24 오전 11:01:02,김해찬,Unity,5 - 나머지가 1이 되는 수 찾기,"using System;

public class Solution {
    public int solution(int n) {
        
        int result = 0;
        
        for(int i = 1; i < n+1; i++)
        {
            if(n % i == 1)
            {
                result = i;
                break;
            }
        }
        
        return result;
    }
}",,2023. 8. 24,5,1
2023. 8. 24 오전 11:01:25,최하나,Unity,1 - 짝수와 홀수,"public class Solution {
    public string solution(int num) {
        string answer = """";
        
        if (num % 2 == 0){
            answer = ""Even"";
        }else{
            answer = ""Odd"";
        }
        
        return answer;
    }
}",https://github.com/coco0715/Algorithms_CodeKata,2023. 8. 24,1,1
2023. 8. 24 오전 11:01:25,김해찬,Unity,6 - x만큼 간격이 있는 n개의 숫자,"public class Solution {
    public long[] solution(int x, int n) {
        long[] answer = new long[n];
        
        int temp = x;
        
        long X = x;
        
        for(int i = 0; i < n; i++)
        {
            answer[i] = X;
            
            X += temp;
        }
        
        return answer;
    }
}",,2023. 8. 24,6,1
2023. 8. 24 오전 11:01:48,김해찬,Unity,7 - 자연수 뒤집어 배열로 만들기,"public class Solution {
    public int[] solution(long n) {
        
        string temp = n.ToString();
        
        int[] arr = new int[temp.Length];
        
        int idx = 0;
        
        for(int i = temp.Length-1; i > -1; i--)
        {
            arr[idx] = temp[i] - '0';
            idx++;
        }
        
        return arr;
        
    }
}",,2023. 8. 24,7,1
2023. 8. 24 오전 11:01:54,이승연,Unity,2 - 평균 구하기,"public class Solution {
    public double solution(int[] arr) {
        double answer = 0;
                
         double sum = 0;


        if (arr.Length < 0 || arr.Length > 100)
        {

            return answer;
        }

    else
    {
    

        for (int i = 0; i < arr.Length; i++)
        {
             if (arr[i]<-10000 || arr[i] > 10000)
            {
                
                return answer;

            }
            sum += arr[i];
        }
        return answer= sum / arr.Length;
    }
        
        
        
    }
}",,2023. 8. 24,2,1
2023. 8. 24 오전 11:02:09,박준규,Unity,6 - x만큼 간격이 있는 n개의 숫자,"public class Solution 
{
    public long[] solution(int x, int n) 
    {
        long[] answer = new long[n];
        for (int i = 0; i < n; i++)
        {
            answer[i] = x + x * i;
        }
        return answer;
    }
}",,2023. 8. 24,6,1
2023. 8. 24 오전 11:02:16,김해찬,Unity,8 - 문자열을 정수로 바꾸기,"public class Solution {
    public int solution(string s) {
        int answer = int.Parse(s);
        return answer;
    }
}",,2023. 8. 24,8,1
2023. 8. 24 오전 11:02:36,송승훈,Unity,1 - 짝수와 홀수,"public class Solution {
    public string solution(int num) {
        string answer = """";
        
      if( num%2 == 0)
      {
          answer = ""Even"";
              
      }
        else
        {
            answer = ""Odd"";
        }
          
        return answer;
    }
}",https://github.com/DoDokang318/CodeKata.git,2023. 8. 24,1,1
2023. 8. 24 오전 11:02:45,김해찬,Unity,9 - 정수 제곱근 판별,"using System;

public class Solution {
    public long solution(long n) {
        long a = (long)Math.Sqrt(n);
        
        if(a * a == n)
        {
            return (a+1) * (a+1);
        }
        else
        {
            return -1;
        }
    }
}",,2023. 8. 24,9,1
2023. 8. 24 오전 11:03:13,송승훈,Unity,2 - 평균 구하기,"public class Solution {
    public double solution(int[] arr) {
        double answer = 0;
        double num = 0 ;
        for(int i =0 ; i < arr.Length ; i++)
        {
            
           num+= arr[i];
        }
        answer = num/arr.Length;
        
        return answer;
    }
}",https://github.com/DoDokang318/CodeKata.git,2023. 8. 24,2,1
2023. 8. 24 오전 11:03:22,김해찬,Unity,10 - 정수 내림차순으로 배치하기,"using System;
using System.Collections;
using System.Collections.Generic;

public class Solution {
    public long solution(long n) {
        List<int> arr = new List<int>();
        
        string temp = n.ToString();
        
        for(int i = 0; i < temp.Length; i++)
        {
            arr.Add(temp[i] - '0');
        }
        
        
        arr.Sort(new Comparison<int>((n1, n2) => n2.CompareTo(n1)));
        
        
        string temp2 = """";
        
        for(int i = 0; i < arr.Count; i++)
        {
            temp2 += arr[i];
        }
        
        return long.Parse(temp2);
    }
}",,2023. 8. 24,10,1
2023. 8. 24 오전 11:03:43,송승훈,Unity,3 - 자릿수 더하기,"using System;

public class Solution {
    public int solution(int n) {
        int answer = 0;       
      string strnum = n.ToString();
    char[] myChar = strnum.ToCharArray();
        
        for(int i = 0 ; i < myChar.Length; i++)
        {
            int num = int.Parse(myChar[i].ToString());
            answer+=num;
        }
        
        
        
        
        return answer;
    }
}",https://github.com/DoDokang318/CodeKata.git,2023. 8. 24,3,1
2023. 8. 24 오전 11:03:47,김해찬,Unity,11 - 하샤드 수,"public class Solution {
    public bool solution(int x) {
        string temp = x.ToString();
        
        int sum = 0;
        
        for(int i = 0; i < temp.Length; i++)
        {
            sum += temp[i] - '0';
        }
        
        if(x % sum == 0)
        {
            return true;
        }
        else
        {
            return false;
        }
    }
}",,2023. 8. 24,11,1
2023. 8. 24 오전 11:04:11,송승훈,Unity,4 - 약수의 합,"public class Solution {
    public int solution(int n) {
        int answer = 0;
        //for 문으로 1분 터  n 까지  나머지가 0 인 것만  더한다 
        for(int i = 1 ; i <= n ; i++ )
        {
            if(n%i==0)
            {             
                answer+=i;
            }
        }
        
        return answer;
    }
}",https://github.com/DoDokang318/CodeKata.git,2023. 8. 24,4,1
2023. 8. 24 오전 11:04:16,김해찬,Unity,12 - 두 정수 사이의 합,"public class Solution {
    public long solution(int a, int b) {
        long answer = 0;
        
        int start = 0;
        int to = 0;
        
        if(a > b)
        {
            start = b;
            to = a+1;
        }
        else
        {
            start = a;
            to = b+1;
        }
        
        for(int i = start; i < to; i++)
        {
            answer += i;
        }
        
        return answer;
    }
}",,2023. 8. 24,12,1
2023. 8. 24 오전 11:04:44,김해찬,Unity,13 - 콜라츠 추측,"public class Solution {
    public int solution(int num) {
        if(num == 1)
        {
            return 0;
        }
        
        long x = num;
        
        int answer = -1;
        
        int cnt = 0;
        
        for(int i = 0; i < 500; i++)
        {
            if(x == 1)
            {
                cnt = i;
                break;
            }
            
            if(x % 2 == 0)
            {
                x /= 2;
            }
            else if(x % 2 != 0)
            {
                x *= 3;
                ++x;
            }
        }
        
        if(cnt != 0)
        {
            return cnt;
        }
        
        return answer;
    }
}",,2023. 8. 24,13,1
2023. 8. 24 오전 11:05:12,김해찬,Unity,14 - 서울에서 김서방 찾기,"public class Solution {
    public string solution(string[] seoul) {
        for(int i = 0; i < seoul.Length; i++)
        {
            if(seoul[i] == ""Kim"")
            {
                return ""김서방은 ""+(i)+""에 있다"";
            }
        }
        
        return null;
    }
}",,2023. 8. 24,14,1
2023. 8. 24 오전 11:05:33,최수용,Unity,4 - 약수의 합,"public class Solution {
    public int solution(int n) {
        int answer = 0;
        for(int i=1; i <= n ; i++)
        { answer += ( n%i == 0 ) ? i : 0 ;}
        return answer;
    }
}",https://github.com/Zif1519/CodeKata,2023. 8. 24,4,1
2023. 8. 24 오전 11:05:38,고영현,Unity,1 - 짝수와 홀수,"public class Solution {
    public string solution(int num) {
    string answer = (num % 2 == 0) ? ""Even"" : ""Odd"";
        return answer;
    }
}",https://github.com/kyhyum/Coding-Study,2023. 8. 24,1,1
2023. 8. 24 오전 11:05:48,김해찬,Unity,15 - 나누어 떨어지는 숫자,"using System.Collections;
using System.Collections.Generic;

public class Solution {
    public int[] solution(int[] arr, int divisor) {
        
        List<int> lst = new List<int>();
                
        for(int i = 0; i < arr.Length; i++)
        {
            if(arr[i] % divisor == 0)
            {
                lst.Add(arr[i]);
            }
        }
        
        lst.Sort();
        
        int[] answer = new int[lst.Count];
        
        for(int i = 0; i < lst.Count; i++)
        {
            answer[i] = lst[i];
        }
        
        if(lst.Count == 0)
        {
            return new int[1]{-1};
        }
        
        return answer;
    }
}",,2023. 8. 24,15,1
2023. 8. 24 오전 11:06:14,김해찬,Unity,16 - 음양 더하기,"using System;

public class Solution {
    public int solution(int[] absolutes, bool[] signs) {
        int answer = 0;
        
        for(int i = 0; i < absolutes.Length; i++)
        {   
            if(signs[i] == false)
            {
                absolutes[i] -= (absolutes[i] * 2);
            }
            
            answer += absolutes[i];
        }
        
        return answer;
    }
}",,2023. 8. 24,16,1
2023. 8. 24 오전 11:06:33,고영현,Unity,2 - 평균 구하기,"#include <string>
#include <vector>

using namespace std;

double solution(vector<int> arr) {
     double sum = 0;
        for(int i = 0; i< arr.size() ; i++){
            sum += arr[i];
        }
        double answer = sum/arr.size();
        return answer;
}",https://github.com/kyhyum/Coding-Study,2023. 8. 24,2,1
2023. 8. 24 오전 11:06:38,노동균,Unity,3 - 자릿수 더하기,"using System;

public class Solution {
    public int solution(int n) {
        int answer = 0;
        int num=0;
        int rest=0;
        
        while(n>0)
        {
            num = n%10;
            n /= 10;
            answer += num;
        }
        
        
        return answer;
    }
}",https://github.com/shehdrbs123/Sparta/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12931.%E2%80%85%EC%9E%90%EB%A6%BF%EC%88%98%E2%80%85%EB%8D%94%ED%95%98%EA%B8%B0,2023. 8. 24,3,1
2023. 8. 24 오전 11:06:42,김해찬,Unity,17 - 핸드폰 번호 가리기,"public class Solution {
    public string solution(string phone_number) {
        
        string temp = """";
        
        for(int i = 0; i < phone_number.Length-4; i++)
        {
            temp += '*';
        }
        
        int len = phone_number.Length;
        
        for(int i = 4; i > 0; i--)
        {
            temp += phone_number[len - i];
        }
        
        return temp;
    }
}",,2023. 8. 24,17,1
2023. 8. 24 오전 11:07:08,김해찬,Unity,18 - 없는 숫자 더하기,"using System;

public class Solution {
    public int solution(int[] numbers) {
        bool[] check = new bool[10];
        
        for(int i = 0; i < numbers.Length; i++)
        {
            check[numbers[i]] = true;
        }
        
        int sum = 0;
        for(int i = 0; i < check.Length; i++)
        {
            if(check[i] == false)
            {
                sum += i;
            }
        }
        
        return sum;
    }
}",,2023. 8. 24,18,1
2023. 8. 24 오전 11:07:17,한병권,Unity,7 - 자연수 뒤집어 배열로 만들기,"using System;
public class Solution
{
    public int[] solution(long n)
    {
        int c = (int)Math.Log10(n);
        int[] answer = new int[++c];
        for (int i = 0; i < c; i++)
        {
            answer[i] = (int)(n % 10);
            n = n / 10;
        }

        return answer;
    }
}",https://github.com/hbg9212/algorithm,2023. 8. 24,7,1
2023. 8. 24 오전 11:07:20,고영현,Unity,3 - 자릿수 더하기,"#include <iostream>

using namespace std;
int solution(int n)
{
    int answer = 0;
    int x = 10;
    while(n != 0){
        answer += (n % x);
        n /= x;
    }

    return answer;
}",https://github.com/kyhyum/Coding-Study,2023. 8. 24,3,1
2023. 8. 24 오전 11:07:39,노동균,Unity,1 - 짝수와 홀수,"// 앞에 보낸 링크 수정하려구요
using System;
public class Solution {
    public string solution(int num) {
        string answer = ""Even"";
        
        int rest = Math.Abs(num%2);
        if(rest == 1)
            answer = ""Odd"";
            
        return answer;
    }
}",https://github.com/shehdrbs123/Sparta/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12937.%E2%80%85%EC%A7%9D%EC%88%98%EC%99%80%E2%80%85%ED%99%80%EC%88%98/%EC%A7%9D%EC%88%98%EC%99%80%E2%80%85%ED%99%80%EC%88%98.cs,2023. 8. 24,1,1
2023. 8. 24 오전 11:07:51,고영현,Unity,4 - 약수의 합,"#include <string>
#include <vector>

using namespace std;

int solution(int n) {
    int answer = 0;
    for(int i = n ; i > 0 ; i--){
        if(n % i == 0)
            answer += i;
    }
    return answer;
}",https://github.com/kyhyum/Coding-Study,2023. 8. 24,4,1
2023. 8. 24 오전 11:08:01,이진형,AI,1 - 짝수와 홀수,"def solution(num):
    if num%2==0:
        return 'Even'
    else:
        return  ""Odd""",,2023. 8. 24,1,1
2023. 8. 24 오전 11:08:11,이선재,Unity,9 - 정수 제곱근 판별,"using System;
public class Solution {
    public long solution(long n) {
        long answer = 0;
        
        if(n % Math.Sqrt(n)  == 0)
            answer = (long)Math.Pow(Math.Sqrt(n)+1, 2);
        else
            return -1;
        
        return answer;
    }
}",https://github.com/shehdrbs123/spartaB10/blob/main/%EC%9D%B4%EC%84%A0%EC%9E%AC/Programmers/%EC%A0%95%EC%88%98%20%EC%A0%9C%EA%B3%B1%EA%B7%BC%20%ED%8C%90%EB%B3%84,2023. 8. 24,9,1
2023. 8. 24 오전 11:08:19,노동균,Unity,2 - 평균 구하기,"public class Solution {
    public double solution(int[] arr) {
        double answer = 0;
        
        int num=0;
        for(int i=0;i<arr.Length;++i)
        {
            num += arr[i];
        }
        answer = (double)num / arr.Length;
        return answer;
    }
}",https://github.com/shehdrbs123/Sparta/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12944.%E2%80%85%ED%8F%89%EA%B7%A0%E2%80%85%EA%B5%AC%ED%95%98%EA%B8%B0,2023. 8. 24,2,1
2023. 8. 24 오전 11:08:21,고영현,Unity,5 - 나머지가 1이 되는 수 찾기,"#include <string>
#include <vector>

using namespace std;

int solution(int n) {
    int answer = 0;
    int i = 1;
    while(1){
        if(n % i == 1)
            return i;
        i++;
    }
}",https://github.com/kyhyum/Coding-Study,2023. 8. 24,5,1
2023. 8. 24 오전 11:08:29,우민규,Unity,2 - 평균 구하기,"public class Solution {
    public double solution(int[] arr) {
        double answer = 0;
        
        for(int i = 0; i < arr.Length; i++)
        {
            answer += arr[i];
        }
                 
        return answer /= arr.Length;
    }
}",https://github.com/Woomingyu/Programmers.git,2023. 8. 24,2,1
2023. 8. 24 오전 11:08:42,노동균,Unity,4 - 약수의 합,"using System;
public class Solution {
    public int solution(int n) {
        int answer = 0;
        
        double num = Math.Sqrt(n);
        
        for(int i=1;i<=num;++i)
        {
            if(n%i == 0)
            {
                int dividee = n/i;
                if(i != dividee)
                    answer += dividee;    
                answer += i;
            } 
        }
        
        return answer;
    }
}",https://github.com/shehdrbs123/Sparta/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12928.%E2%80%85%EC%95%BD%EC%88%98%EC%9D%98%E2%80%85%ED%95%A9,2023. 8. 24,4,1
2023. 8. 24 오전 11:08:47,고영현,Unity,6 - x만큼 간격이 있는 n개의 숫자,"#include <string>
#include <vector>

using namespace std;

vector<long long> solution(int x, int n) {
    vector<long long> answer;
    for(long i = 0 ; i < n ; i++){
           answer.push_back(x*(i+1));
        }
    return answer;
}",https://github.com/kyhyum/Coding-Study,2023. 8. 24,6,1
2023. 8. 24 오전 11:09:10,고영현,Unity,7 - 자연수 뒤집어 배열로 만들기,"#include <string>
#include <vector>

using namespace std;

vector<int> solution(long long n) {
    vector<int> answer;
    while(n != 0){
        answer.push_back(n % 10);
        n /= 10;
    }
    return answer;
}",https://github.com/kyhyum/Coding-Study,2023. 8. 24,7,1
2023. 8. 24 오전 11:09:15,노동균,Unity,5 - 나머지가 1이 되는 수 찾기,"using System;

public class Solution {
    public int solution(int n) {
        int answer = 0;
        
        for(int i=1;i<n;i++)
        {
            if(n%i == 1)
                return i;
        }
        
        return answer;
    }
}",https://github.com/shehdrbs123/Sparta/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/87389.%E2%80%85%EB%82%98%EB%A8%B8%EC%A7%80%EA%B0%80%E2%80%851%EC%9D%B4%E2%80%85%EB%90%98%EB%8A%94%E2%80%85%EC%88%98%E2%80%85%EC%B0%BE%EA%B8%B0,2023. 8. 24,5,1
2023. 8. 24 오전 11:09:28,김해찬,Unity,19 - 제일 작은 수 제거하기,"using System.Collections.Generic;

public class Solution {
    public int[] solution(int[] arr) {
        if(arr.Length == 0 || arr.Length == 1)
        {
            return new int[1]{-1};
        }
        else
        {
            int min = int.MaxValue;
            
            for(int i = 0; i < arr.Length; i++)
            {
                if(arr[i] < min)
                {
                    min = arr[i];
                }
            }
            
            List<int> lst = new List<int>();
            
            int[] newArr = new int[arr.Length-1];
            
            for(int i = 0; i < arr.Length; i++)
            {
                if(arr[i] == min)
                {
                    continue;
                }
                else
                {
                    lst.Add(arr[i]);
                }
            }
            
            for(int i = 0; i < lst.Count; i++)
            {
                newArr[i] = lst[i];
            }
            
            return newArr;
        }
    }
}",,2023. 8. 24,19,1
2023. 8. 24 오전 11:09:35,고영현,Unity,8 - 문자열을 정수로 바꾸기,"#include <string>
#include <vector>

using namespace std;

int solution(string s) {
    int answer = stoi(s);
    return answer;
}",https://github.com/kyhyum/Coding-Study,2023. 8. 24,8,1
2023. 8. 24 오전 11:09:42,노동균,Unity,6 - x만큼 간격이 있는 n개의 숫자,"public class Solution {
    public long[] solution(int x, int n) {
        long[] answer = new long[n];
        
        for(long i=0;i<n;++i)
        {
            answer[i] = x*(i+1);
        }
        
        return answer;
    }
}",https://github.com/shehdrbs123/Sparta/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12954.%E2%80%85x%EB%A7%8C%ED%81%BC%E2%80%85%EA%B0%84%EA%B2%A9%EC%9D%B4%E2%80%85%EC%9E%88%EB%8A%94%E2%80%85n%EA%B0%9C%EC%9D%98%E2%80%85%EC%88%AB%EC%9E%90,2023. 8. 24,6,1
2023. 8. 24 오전 11:09:58,고영현,Unity,9 - 정수 제곱근 판별,"#include <string>
#include <vector>
#include <cmath>
using namespace std;

long long solution(long long n) {
    for(long long i = 1 ; i <= n ; i++){
        if(i * i == n){
            return (i+1) * (i+1);
        }
        if(i * i > n){
            break;
        }
    }
    return -1;
}",https://github.com/kyhyum/Coding-Study,2023. 8. 24,9,1
2023. 8. 24 오전 11:10:10,노동균,Unity,7 - 자연수 뒤집어 배열로 만들기,"using System;
public class Solution {
    public int[] solution(long n) {
        int[] answer;
        string strNum = n.ToString();
        int strLength = strNum.Length;
        answer = new int[strLength];
        
        for(int i=0;i<strLength;++i)
        {
            answer[i] = strNum[strLength-1-i] - '0';
        }        
        
        return answer;
    }
}",https://github.com/shehdrbs123/Sparta/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12932.%E2%80%85%EC%9E%90%EC%97%B0%EC%88%98%E2%80%85%EB%92%A4%EC%A7%91%EC%96%B4%E2%80%85%EB%B0%B0%EC%97%B4%EB%A1%9C%E2%80%85%EB%A7%8C%EB%93%A4%EA%B8%B0,2023. 8. 24,7,1
2023. 8. 24 오전 11:10:20,고영현,Unity,10 - 정수 내림차순으로 배치하기,"#include <string>
#include <vector>
#include <algorithm>
using namespace std;

long long solution(long long n) {
    long long answer = 0;
    vector<int> nums;
    while(n != 0){
        nums.push_back(n % 10);
        n /= 10;
    }
    sort(nums.begin(),nums.end());
    int x = 1;
    for(int i = 0 ; i < nums.size() ; i++){
        answer += (nums[i] * x);
        x *= 10;
    }
    return answer;
}",https://github.com/kyhyum/Coding-Study,2023. 8. 24,10,1
2023. 8. 24 오전 11:10:33,양수홍,AI,1 - 짝수와 홀수,"def solution(num):
    answer = ''
    if num%2==0:
        answer+=""Even""
    else :
        answer+=""Odd""
    return answer",,2023. 8. 24,1,1
2023. 8. 24 오전 11:10:36,이진형,AI,2 - 평균 구하기,"def solution(arr):
    a=sum(arr)
    a=a/len(arr)
    return a",,2023. 8. 24,2,1
2023. 8. 24 오전 11:10:42,고영현,Unity,11 - 하샤드 수,"using System; 

public class Solution {
    public bool solution(int x) {
        String y = x.ToString();
        int sum = 0;
        for(int i = 0; i<y.Length ; i++){
           sum += (int)Char.GetNumericValue(y[i]);
        }
        bool answer = true;
        if(x%sum != 0){
         answer = false;
        }
        return answer;
    }
}",https://github.com/kyhyum/Coding-Study,2023. 8. 24,11,1
2023. 8. 24 오전 11:10:43,노동균,Unity,8 - 문자열을 정수로 바꾸기,"using System;
public class Solution {
    public int solution(string s) {
        long answer = 0;
        int idx = 0;
        int length = 0;
        int digit = 0;
        bool isMinas = false;

        length = s.Length;
        digit = length-1;
          
        for(;idx<length;++idx)
        {
            if(!(s[idx] == '-' || s[idx] == '+'))
                answer += (long)(s[idx]-'0') * (long)Math.Pow(10,digit);
            digit-=1;
        }
        
        if(s[0] == '-')
            answer *= -1;
        
                
        // 쉬운 방법.....
        //answer = int.Parse(s);
        
        return (int)answer;
    }
}",https://github.com/shehdrbs123/Sparta/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12925.%E2%80%85%EB%AC%B8%EC%9E%90%EC%97%B4%EC%9D%84%E2%80%85%EC%A0%95%EC%88%98%EB%A1%9C%E2%80%85%EB%B0%94%EA%BE%B8%EA%B8%B0,2023. 8. 24,8,1
2023. 8. 24 오전 11:11:06,고영현,Unity,12 - 두 정수 사이의 합,"#include <string>
#include <vector>

using namespace std;

long long solution(int a, int b) {
    long long answer = 0;
    if(a > b){
        int temp = b;
        b = a;
        a = temp;
    }
    for(int i = a ; i <= b ; i++)
        answer += i;
    return answer;
}",https://github.com/kyhyum/Coding-Study,2023. 8. 24,12,1
2023. 8. 24 오전 11:11:30,고영현,Unity,13 - 콜라츠 추측,"#include <string>
#include <vector>

using namespace std;

int solution(int num) {
    int answer = 0;
    long long n = num;
    for(int i = 0 ; i < 500 ; i++){
        if(n == 1){
            return i;
        }
        else{
            if(n % 2 == 0)
                n /= 2;
            else{
                n *= 3;
                n += 1;
            }
        }
    }
    return -1;
}",https://github.com/kyhyum/Coding-Study,2023. 8. 24,13,1
2023. 8. 24 오전 11:11:34,조범준,Unity,7 - 자연수 뒤집어 배열로 만들기,"public class Solution {
    public int[] solution(long n) {
        int[] answer = new int[n.ToString().Length];
        
        int i = 0;
        while(n > 0)
        {
            answer[i] = (int)(n % 10);
            i++;
            n = n / 10;
        }
        return answer;
    }
}",https://github.com/KimMaYa1/BaekJoonEx/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12932.%E2%80%85%EC%9E%90%EC%97%B0%EC%88%98%E2%80%85%EB%92%A4%EC%A7%91%EC%96%B4%E2%80%85%EB%B0%B0%EC%97%B4%EB%A1%9C%E2%80%85%EB%A7%8C%EB%93%A4%EA%B8%B0,2023. 8. 24,7,1
2023. 8. 24 오전 11:11:52,조호진,AI,1 - 짝수와 홀수,"def solution(num):
    answer = ''
    if num %2 ==0:
        answer = 'Even'
    else:
        answer = ""Odd""
    return answer",https://github.com/bm4706/Algorithm_practice,2023. 8. 24,1,1
2023. 8. 24 오전 11:11:54,고영현,Unity,14 - 서울에서 김서방 찾기,"#include <string>
#include <vector>

using namespace std;

string solution(vector<string> seoul) {
    string answer = ""김서방은 "";
    for(int i = 0 ; i < seoul.size() ; i++){
        if(seoul[i] == ""Kim""){
            answer += to_string(i);
        }
    }
    answer += ""에 있다"";
    return answer;
}",https://github.com/kyhyum/Coding-Study,2023. 8. 24,14,1
2023. 8. 24 오전 11:12:25,양수홍,AI,2 - 평균 구하기,"def solution(arr):
    answer = 0
    for num in arr:
        answer+=num
    answer/=len(arr)
    return answer",,2023. 8. 24,2,1
2023. 8. 24 오전 11:12:40,조호진,AI,2 - 평균 구하기,"def solution(arr):
    return sum(arr)/len(arr)",https://github.com/bm4706/Algorithm_practice,2023. 8. 24,2,1
2023. 8. 24 오전 11:13:02,이진형,AI,3 - 자릿수 더하기,"def solution(n):
    n=str(n)
    a=0
    for i in n:
        a+=int(i)
    return a",,2023. 8. 24,3,1
2023. 8. 24 오전 11:13:29,유채연,Unity,1 - 짝수와 홀수,"        string answer = """";
        if(num%2==0)  answer=""Even"";
        else answer=""Odd"";
        return answer;",https://github.com/ychy0006/AlgorithmCodeKata,2023. 8. 24,1,1
2023. 8. 24 오전 11:14:22,최장범,Unity,4 - 약수의 합,"public class Solution {
    public int solution(int n) {
        int answer = 0;
        
        for(int i = 1; i<=n; i++)
        {
            if(n%i==0) answer += i;
        }
        return answer;
    }
}",,2023. 8. 24,4,1
2023. 8. 24 오전 11:15:14,김윤경,Unity,1 - 짝수와 홀수,"public class Solution 
{
    
    public string solution(int num) 
    {
        string answer = "" "";
        if(num % 2 == 0)
        {
            answer = ""Even"";
            
        }
        else
        {
            answer = ""Odd"";
           
        }
         return answer;
    }
}
",,2023. 8. 24,1,1
2023. 8. 24 오전 11:15:17,김현우,AI,1 - 짝수와 홀수,"function solution(num) {
    return num % 2 ? ""Odd"" : ""Even"";
}",,2023. 8. 24,1,1
2023. 8. 24 오전 11:15:23,양수홍,AI,3 - 자릿수 더하기,"def solution(n):
    answer = 0

    # [실행] 버튼을 누르면 출력 값을 볼 수 있습니다.
    print('Hello Python')
    while n>=1:
        answer+=n%10
        n=n//10
    return answer",,2023. 8. 24,3,1
2023. 8. 24 오전 11:15:31,이진형,AI,4 - 약수의 합,"def solution(n):
    a=0
    for i in range(1,n+1):
        if n%i==0:
            a+=i
    return a",,2023. 8. 24,4,1
2023. 8. 24 오전 11:15:55,명세인,AI,1 - 짝수와 홀수,"def solution(num):
    answer = ''
    if num % 2 == 0:
        answer =  ""Even""
    else:
        answer = ""Odd""
    return answer",,2023. 8. 24,1,1
2023. 8. 24 오전 11:16:08,박도현,Unity,3 - 자릿수 더하기,"using System;

public class Solution {
    public int solution(int n) {
        int answer = 0;
                int length = (int)(Math.Log10(n) + 1);
                int c = n;
                float a;
                int b = 0;
                
                  for (int i = 0; i < length; i++)
                {
                    a = c / 10;
                    b = (int)a * 10;
                    
                   
                    answer += (c - b);// - (int)get);
                    c = b / 10;


                }

                return answer;
    }
}",,2023. 8. 24,3,1
2023. 8. 24 오전 11:16:41,유채연,Unity,2 - 평균 구하기,"        int answer = 0;
        for(int i=0;i<arr.Length;i++){
            answer += arr[i];
        }
        
        return (double)answer/arr.Length;",https://github.com/ychy0006/AlgorithmCodeKata/tree/main/AlgorithmCodeKata,2023. 8. 24,2,1
2023. 8. 24 오전 11:17:06,김현우,AI,2 - 평균 구하기,"function solution(arr) {
    const len = arr.length;
    
    const sum = arr.reduce((acc, cur) => {
        return acc + cur;
    })
    
    return sum/len;
}",,2023. 8. 24,2,1
2023. 8. 24 오전 11:17:19,명세인,AI,2 - 평균 구하기,"def solution(arr):
    answer = 0
    answer = sum(arr)/len(arr)
    return answer",,2023. 8. 24,2,1
2023. 8. 24 오전 11:17:25,유채연,Unity,3 - 자릿수 더하기,"        int answer = 0;
        while(n!=0){
            answer += n%10;
            n/=10;
        }
        return answer;",https://github.com/ychy0006/AlgorithmCodeKata/tree/main/AlgorithmCodeKata,2023. 8. 24,3,1
2023. 8. 24 오전 11:17:43,양수홍,AI,4 - 약수의 합,"def solution(n):
    answer = 0
    for i in range(1,n+1):
        if n%i==0:
            answer+=i
    return answer",,2023. 8. 24,4,1
2023. 8. 24 오전 11:17:55,유채연,Unity,4 - 약수의 합,"        int answer = 0;
        for(int i=1;i<=n/2;i++){
            if(n%i==0) answer+=i;
        }
        return answer+n;",https://github.com/ychy0006/AlgorithmCodeKata/tree/main/AlgorithmCodeKata,2023. 8. 24,4,1
2023. 8. 24 오전 11:18:05,고영현,Unity,15 - 나누어 떨어지는 숫자,"#include <string>
#include <vector>
#include <algorithm>

using namespace std;
bool cmp(int a, int b){
    return a < b;
}
vector<int> solution(vector<int> arr, int divisor) {
    vector<int> answer;
    for(int i = 0 ; i < arr.size() ; i++){
        if(arr[i] % divisor == 0)
            answer.push_back(arr[i]);
    }
    
    if(answer.empty())
        answer.push_back(-1);
    else
        sort(answer.begin(), answer.end(), cmp);
    
    return answer;
}",https://github.com/kyhyum/Coding-Study,2023. 8. 24,15,1
2023. 8. 24 오전 11:18:16,김민상,Unity,10 - 정수 내림차순으로 배치하기,"def solution(n):
    return ''.join(sorted(str(n), reverse=True))",,2023. 8. 24,10,1
2023. 8. 24 오전 11:18:23,이진범,AI,1 - 짝수와 홀수,"def solution(num):
    if num % 2 == 0:
        return ""Even""
    else:
        return ""Odd""",https://github.com/jinbeom92/sparta-leejinbeom/blob/main/%EC%A7%9D%EC%88%98%EC%99%80%20%ED%99%80%EC%88%98,2023. 8. 24,1,1
2023. 8. 24 오전 11:18:31,김현우,AI,3 - 자릿수 더하기,"function solution(n) {
    return String(n).split("""").map(x => Number(x)).reduce((acc, cur) => acc + cur);
}",,2023. 8. 24,3,1
2023. 8. 24 오전 11:18:36,유채연,Unity,5 - 나머지가 1이 되는 수 찾기,"        int answer = 0;
        n-=1;
        for(int i=2;i<=n;i++){
            if(n%i==0) {
                answer = i;
                break;
            }
        }
        return answer;",https://github.com/ychy0006/AlgorithmCodeKata/tree/main/AlgorithmCodeKata,2023. 8. 24,5,1
2023. 8. 24 오전 11:18:50,송명헌,AI,1 - 짝수와 홀수,"def solution(num):
    answer = ''
    if num % 2 == 0:
        return ""Even""
    else:
        return ""Odd""
    return answer",,2023. 8. 24,1,1
2023. 8. 24 오전 11:18:59,유채연,Unity,6 - x만큼 간격이 있는 n개의 숫자,"        long[] answer = new long[n];
        long i = 0;
        while(i<n){
            answer[i] = x * (++i);
        }
        return answer;",https://github.com/ychy0006/AlgorithmCodeKata/tree/main/AlgorithmCodeKata,2023. 8. 24,6,1
2023. 8. 24 오전 11:19:05,조용준,Unity,1 - 짝수와 홀수,"public class Solution
{
    public string solution(int num)
    {
        string answer = """";
        
        if (num%2 == 1 || num%2 == -1)
        {
            answer = ""Odd"";
        }
        else
        {
            answer = ""Even"";
        }
        
        return answer;
    }
}",,2023. 8. 24,1,1
2023. 8. 24 오전 11:19:28,조용준,Unity,2 - 평균 구하기,"public class Solution
{
    public double solution(int[] arr)
    {
        int sum = 0;
        
        for (int i = 0; i < arr.Length; i++)
        {
            sum += arr[i];
        }
        
        double answer = (double)sum / arr.Length;
        return answer;
    }
}",,2023. 8. 24,2,1
2023. 8. 24 오전 11:19:47,조용준,Unity,3 - 자릿수 더하기,"using System;
using System.Collections.Generic;

public class Solution 
{
    public int solution(int n) 
    {
        int answer = 0;
        List<int> quotients = new List<int>();
        List<int> remains = new List<int>();
        quotients.Add(0);
        remains.Add(0);
        
        for (int i = 1; Math.Pow(10, i - 1) <= n; i++)
        {
            quotients.Add((int)(n / Math.Pow(10, i)));
            remains.Add((int)(n % Math.Pow(10, i)));
            
            answer += ((int)(remains[i] - remains[i - 1]) / (int)Math.Pow(10, i - 1));
        }
        
        return answer;
    }
}",,2023. 8. 24,3,1
2023. 8. 24 오전 11:19:52,이진형,AI,5 - 나머지가 1이 되는 수 찾기,"def solution(n):
    x=n-1
    for i in range(1,n):
        if n%i==1 and x>i:
            x=i
            
    return x",,2023. 8. 24,5,1
2023. 8. 24 오전 11:20:02,조영오,Unity,9 - 정수 제곱근 판별,"using System;

public class Solution {
    public long solution(long n) {
        long answer = -1;
        double sqrt = Math.Sqrt(n);
        
        if(Math.Floor(sqrt) == sqrt){
            answer = (long)Math.Pow((sqrt+1),2);
        }
        
        return answer;
    }
}",,2023. 8. 24,9,1
2023. 8. 24 오전 11:20:05,김현우,AI,4 - 약수의 합,"function solution(n) {
    let sum = 0;
    
    for(let i=1; i<=n; i++) {
        if(n % i === 0) {
            sum += i;
        }
    }
    return sum;
}",,2023. 8. 24,4,1
2023. 8. 24 오전 11:20:08,김민재,AI,1 - 짝수와 홀수,"def solution(num):
    answer = ''
    if num % 2 == 0:
        answer = 'Even'
    else:
        answer = 'Odd'
    return answer",https://github.com/Kim-Minjae9872/Code_Kata,2023. 8. 24,1,1
2023. 8. 24 오전 11:20:39,명세인,AI,3 - 자릿수 더하기,"def solution(n):
    answer = 0
    n = str(n)
    for a in n:
        answer += int(a)
    return answer",,2023. 8. 24,3,1
2023. 8. 24 오전 11:20:42,박지원,Unity,6 - x만큼 간격이 있는 n개의 숫자,"using System.Linq;
using System;

public class Solution {
    public long[] solution(int x, int n)
    {
        long[] answer = new long[n];
        for (int cnt = 0; cnt < n; cnt++)
        {
            answer[cnt] = (cnt + 1) * (long)x;
        }
        return answer;
    }
}",https://github.com/jwonp9127/AlgorithmStudy/tree/6e1280a5b00460b593c3471218184cbbc76c585e/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12954.%E2%80%85x%EB%A7%8C%ED%81%BC%E2%80%85%EA%B0%84%EA%B2%A9%EC%9D%B4%E2%80%85%EC%9E%88%EB%8A%94%E2%80%85n%EA%B0%9C%EC%9D%98%E2%80%85%EC%88%AB%EC%9E%90,2023. 8. 24,6,1
2023. 8. 24 오전 11:21:03,김강현,Unity,3 - 자릿수 더하기,"using System;

public class Solution 
{
    public int solution(int n) 
    {
            int[] number = new int[10];
            int k = 100000000;
            int sum = 0;
            for (int i = 0; i < 10; i++)
            {
                 if (k <= 0)
                {
                    break;
                }

                number[i] = n / k;
                n %= k; 
                k /= 10;

                sum += number[i];

            }
            return sum;
    }
}",,2023. 8. 24,3,1
2023. 8. 24 오전 11:21:07,권수민,AI,1 - 짝수와 홀수,"def solution(num):
    if num % 2 == 0:
        return 'Even'
    else:
        return 'Odd'",git@github.com:Stella-Kwon/git-github.com-Stella-Kwon-algorithm_prac.git,2023. 8. 24,1,1
2023. 8. 24 오전 11:21:21,김현우,AI,5 - 나머지가 1이 되는 수 찾기,"function solution(n) {
    for(let i=0; i<n; i++) {
        if(n % i === 1) {
            return i;
        }
    }
}",,2023. 8. 24,5,1
2023. 8. 24 오전 11:21:26,최종민,AI,1 - 짝수와 홀수,"def solution(num):
    if num % 2 == 0:
        answer = 'Even'
    else:
        answer = 'Odd'
    return answer",https://github.com/tesla7211/baekjoon/commit/7fa710f75915cd284c7b31bf4efeceeef238da6f,2023. 8. 24,1,1
2023. 8. 24 오전 11:21:29,정범수,AI,1 - 짝수와 홀수,"def solution(num):
    answer = ""Odd"" if num % 2 else ""Even""
    return answer",https://github.com/sudog1/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12937.%E2%80%85%EC%A7%9D%EC%88%98%EC%99%80%E2%80%85%ED%99%80%EC%88%98,2023. 8. 24,1,1
2023. 8. 24 오전 11:21:34,이진형,AI,6 - x만큼 간격이 있는 n개의 숫자,"def solution(x, n):
    answer = []
    for i in range(1,n+1):
        answer.append(x*i)
    return answer",,2023. 8. 24,6,1
2023. 8. 24 오전 11:22:14,김지수,AI,1 - 짝수와 홀수,"def solution(num):
    if num%2 == 0:
        answer = 'Even'
    else:
        answer = 'Odd'
    return answer",https://github.com/whalesharkpiyong/Algorithmkata.git,2023. 8. 24,1,1
2023. 8. 24 오전 11:22:14,김현우,AI,6 - x만큼 간격이 있는 n개의 숫자,"function solution(x, n) {
    const arr = [];
    
    for(let i=1; i<=n; i++) {
        arr.push(x * i);
    }
    
    return arr;
}",,2023. 8. 24,6,1
2023. 8. 24 오전 11:22:44,김현우,AI,7 - 자연수 뒤집어 배열로 만들기,"function solution(n) {
  return String(n).split("""").map(x => +x ).reverse();
}",,2023. 8. 24,7,1
2023. 8. 24 오전 11:22:55,양수홍,AI,5 - 나머지가 1이 되는 수 찾기,"def solution(n):
    answer = n
    i=n
    while i>0:
        if n%i==1 and i<answer:
            answer=i
        i-=1
    return answer",,2023. 8. 24,5,1
2023. 8. 24 오전 11:22:59,정범수,AI,2 - 평균 구하기,"def solution(arr):
    answer = sum(arr) / len(arr)
    return answer",https://github.com/sudog1/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12944.%E2%80%85%ED%8F%89%EA%B7%A0%E2%80%85%EA%B5%AC%ED%95%98%EA%B8%B0,2023. 8. 24,2,1
2023. 8. 24 오전 11:23:31,김현우,AI,8 - 문자열을 정수로 바꾸기,"function solution(s) {
    return +s;
}",,2023. 8. 24,8,1
2023. 8. 24 오전 11:24:07,조호진,AI,3 - 자릿수 더하기,"def solution(n):
    answer = 0
    
    for i in str(n):
        answer += int(i)
        
    return answer",https://github.com/bm4706/Algorithm_practice,2023. 8. 24,3,1
2023. 8. 24 오전 11:24:13,이진범,AI,2 - 평균 구하기,"def solution(arr):
    a = sum(arr) / len(arr)
    return a",https://github.com/jinbeom92/sparta-leejinbeom/blob/main/%ED%8F%89%EA%B7%A0%20%EA%B5%AC%ED%95%98%EA%B8%B0,2023. 8. 24,2,1
2023. 8. 24 오전 11:24:47,명세인,AI,4 - 약수의 합,"def solution(n):
    answer = 0
    for a in range(1, n+1):
        if n % a == 0:
            answer += a
    return answer",,2023. 8. 24,4,1
2023. 8. 24 오전 11:24:58,정범수,AI,3 - 자릿수 더하기,"def solution(n):
    answer = 0
    while n:
        answer += n % 10
        n //= 10
    return answer",https://github.com/sudog1/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12931.%E2%80%85%EC%9E%90%EB%A6%BF%EC%88%98%E2%80%85%EB%8D%94%ED%95%98%EA%B8%B0,2023. 8. 24,3,1
2023. 8. 24 오전 11:25:41,김현우,AI,9 - 정수 제곱근 판별,"function solution(n) {
    return Math.floor(Math.sqrt(n)) !== Math.sqrt(n) ? -1 : Math.pow(Math.sqrt(n) + 1, 2); 
}",,2023. 8. 24,9,1
2023. 8. 24 오전 11:26:02,이재윤,AI,1 - 짝수와 홀수,"def solution(num):
    if int(num) % 2 == 1:
        answer = 'Odd'
    if int(num) % 2 == 0:
        answer = 'Even'
    if int(num) == 0:
        answer = 'Even'
    return answer

print(solution(3))
print(solution(4))",https://github.com/JaeYoonAI/coding_test.git,2023. 8. 24,1,1
2023. 8. 24 오전 11:26:27,양수홍,AI,6 - x만큼 간격이 있는 n개의 숫자,"def solution(x, n):
    answer = []
    for i in range(0,n):
        answer.append(x+i*x)
    return answer",,2023. 8. 24,6,1
2023. 8. 24 오전 11:27:23,김현우,AI,10 - 정수 내림차순으로 배치하기,"function solution(n) {
    const sum = String(n).split("""").sort((a, b) => b - a).join("""")
    return +sum;
}",,2023. 8. 24,10,1
2023. 8. 24 오전 11:27:26,우민규,Unity,3 - 자릿수 더하기,"using System;

public class Solution {
    public int solution(int n) {
        int answer = 0;
        
        while(n>0)
        {
            answer += n % 10;
            n = n / 10;
        }
        return answer;
    }
}",https://github.com/Woomingyu/Programmers.git,2023. 8. 24,3,1
2023. 8. 24 오전 11:28:30,김현우,AI,11 - 하샤드 수,"function solution(x) {
    let sum = String(x).split("""").reduce((acc, cur) => Number(acc) + Number(cur));
    return x % sum ? false : true;
}",,2023. 8. 24,11,1
2023. 8. 24 오전 11:28:32,최지연,AI,1 - 짝수와 홀수,"def solution(num):
    answer = ''
    if num%2 == 0:
        answer = 'Even'
        return answer
    else:
        answer = 'Odd'
        return answer
    return answer",https://github.com/jiyeonCoder/algorithmPractice,2023. 8. 24,1,1
2023. 8. 24 오전 11:28:37,김해찬,Unity,20 - 가운데 글자 가져오기,"public class Solution {
    public string solution(string s) {
        if(s.Length % 2 == 0)
        {
            string temp = """";
            
            temp += s[(s.Length / 2)-1];
            temp += s[s.Length/2];
            
            return temp;
        }
        else
        {
            return """"+s[s.Length/2];
        }
    }
}",,2023. 8. 24,20,1
2023. 8. 24 오전 11:28:39,양수홍,AI,7 - 자연수 뒤집어 배열로 만들기,"def solution(n):
    answer = []
    while n>=1:
        answer.append(n%10)
        n=n//10
    return answer",,2023. 8. 24,7,1
2023. 8. 24 오전 11:28:59,이진형,AI,7 - 자연수 뒤집어 배열로 만들기,"def solution(n):
    x=str(n)
    y=len(x)
    answer = []
    for i in range(y):
        answer.append(int(x[y-1-i]))
    return answer",,2023. 8. 24,7,1
2023. 8. 24 오전 11:29:57,김해찬,Unity,21 - 수박수박수박수박수박수?,"public class Solution {
    public string solution(int n) {
        string answer = """";
        
        for(int i = 1; i < n+1; i++)
        {
            if(i % 2 == 0)
            {
                answer += ""박"";
            }
            else
            {
                answer += ""수"";
            }
        }
        return answer;
    }
}",,2023. 8. 24,21,1
2023. 8. 24 오전 11:30:16,김현우,AI,12 - 두 정수 사이의 합,"function solution(a, b) {
    let answer = 0;
    
    if(a - b) {
        if(b > a) {
            for(let i=a; i<=b; i++) {
                answer += i;
            }
        } else {
            for(let i=b; i<=a; i++) {
                answer += i;
            }
        }
    } else {
        answer = a;
    }
    return answer;
}",,2023. 8. 24,12,1
2023. 8. 24 오전 11:30:28,정범수,AI,4 - 약수의 합,"def solution(n):
    answer = 0
    i = 1
    while i*i <= n:
        if not n % i:
            temp = n / i
            if i != temp:
                answer += i+temp
            else:
                answer += i
        i += 1
    return answer",https://github.com/sudog1/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12928.%E2%80%85%EC%95%BD%EC%88%98%EC%9D%98%E2%80%85%ED%95%A9,2023. 8. 24,4,1
2023. 8. 24 오전 11:31:36,양덕영,AI,1 - 짝수와 홀수,"def solution(num):
    answer = ''
    if num % 2 == 0:
        answer = ""Even""
    else:
        answer = ""Odd""
    return answer",https://github.com/DeokYoung980130/Ai_Project2023-08-07/tree/45461dd49abc214983f47753766289aec96156eb,2023. 8. 24,1,1
2023. 8. 24 오전 11:31:49,송명헌,AI,2 - 평균 구하기,"def solution(arr):
    answer  = sum(arr) / len(arr)
    return answer",,2023. 8. 24,2,1
2023. 8. 24 오전 11:31:56,심명희,AI,1 - 짝수와 홀수,"char* solution(int num) {
    // 리턴할 값은 메모리를 동적 할당해주세요
    char* answer = (char*)malloc(sizeof(char));
    if (num%2==0)
        answer = ""Even"";
    else
        answer = ""Odd"";
    return answer;
}",,2023. 8. 24,1,1
2023. 8. 24 오전 11:32:04,양수홍,AI,8 - 문자열을 정수로 바꾸기,"def solution(s):
    answer=int(s)
    return answer",,2023. 8. 24,8,1
2023. 8. 24 오전 11:32:17,김해찬,Unity,22 - 내적,"using System;

public class Solution {
    public int solution(int[] a, int[] b) {
        int answer = 0;
        
        for(int i = 0; i < a.Length; i++)
        {
            answer += a[i] * b[i];
        }
        return answer;
    }
}",,2023. 8. 24,22,1
2023. 8. 24 오전 11:32:47,김현우,AI,13 - 콜라츠 추측,"function solution(num) {
    for(let i=0; i<=499; i++) {
        if(num !== 1) {
            num % 2 === 0 ? num = num / 2 : num = num * 3 + 1;
        } else {
            return i;
        }
    }
    return -1;
}",,2023. 8. 24,13,1
2023. 8. 24 오전 11:33:12,최종민,AI,2 - 평균 구하기,"def solution(arr):
    answer = 0
    
    for sum in arr:
        answer += sum
    
    answer /= len(arr)
    return answer",https://github.com/tesla7211/baekjoon/commit/ec5743b7252eca21762205b01eeeb64dbaa96931,2023. 8. 24,2,1
2023. 8. 24 오전 11:33:31,김현우,AI,14 - 서울에서 김서방 찾기,"function solution(seoul) {
    const len = seoul.length;
    
    for(let i=0; i<len; i++) {
        if(seoul[i] === ""Kim"") {
            return `김서방은 ${i}에 있다`;
        }        
    }
}",,2023. 8. 24,14,1
2023. 8. 24 오전 11:34:12,김지수,AI,2 - 평균 구하기,"def solution(arr):
    answer = sum(arr)/len(arr)
    return answer",https://github.com/whalesharkpiyong/Codekata.git,2023. 8. 24,2,1
2023. 8. 24 오전 11:34:14,김현우,AI,15 - 나누어 떨어지는 숫자,"function solution(arr, divisor) {
    arr = arr.sort((a, b) => a - b);
    const filteredArr = arr.filter(el => el % divisor === 0);
    
    return filteredArr.length === 0 ? [-1] : filteredArr;
}",,2023. 8. 24,15,1
2023. 8. 24 오전 11:35:35,정범수,AI,5 - 나머지가 1이 되는 수 찾기,"def solution(n):
    answer = 0
    n -= 1
    if not n % 2:
        answer = 2
    else:
        for x in range(3, n+1, 2):
            if not n % x:
                answer = x
                break
    return answer",https://github.com/sudog1/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/87389.%E2%80%85%EB%82%98%EB%A8%B8%EC%A7%80%EA%B0%80%E2%80%851%EC%9D%B4%E2%80%85%EB%90%98%EB%8A%94%E2%80%85%EC%88%98%E2%80%85%EC%B0%BE%EA%B8%B0,2023. 8. 24,5,1
2023. 8. 24 오전 11:35:49,명세인,AI,5 - 나머지가 1이 되는 수 찾기,"def solution(n):
    answer = 0
    list = []
    for x in range(1,1000001):
        if n % x == 1:
            list.append(x)
            answer = min(list)        
    return answer",,2023. 8. 24,5,1
2023. 8. 24 오전 11:36:18,김현우,AI,16 - 음양 더하기,"function solution(absolutes, signs) {
    let arr = [];
    const len = absolutes.length;
    
    for(let i=0; i<len; i++) {
        if(signs[i]) {
            arr.push(absolutes[i]);
        } else {
            arr.push(-1 * absolutes[i])
        }
    }
    return arr.reduce((acc, cur) => {
        return acc + cur;
    })
}",,2023. 8. 24,16,1
2023. 8. 24 오전 11:36:30,양수홍,AI,9 - 정수 제곱근 판별,"def solution(n):
    answer = 0
    i=1
    while i*i<=n:
        if i*i==n:
            answer=(i+1)*(i+1)
            break
        i+=1
    if answer==0:
        answer=-1
    return answer",,2023. 8. 24,9,1
2023. 8. 24 오전 11:36:32,김정규,AI,1 - 짝수와 홀수,"def solution(num):
    answer = ''
    if num % 2 == 0:
        answer = 'Evan'
    else:
        answer = 'Odd'

    return answer
",https://github.com/JungGyu00/algorithm,2023. 8. 24,1,1
2023. 8. 24 오전 11:36:40,한병권,Unity,8 - 문자열을 정수로 바꾸기,"public class Solution {
    public int solution(string s) {
        int answer = 0;
        bool parseSuccess = int.TryParse(s, out var ret);
        if (parseSuccess)
        {
            answer =  ret;
        }
        return answer;
    }
}",https://github.com/hbg9212/AlgorithmCodekata/tree/main,2023. 8. 24,8,1
2023. 8. 24 오전 11:37:02,김현우,AI,17 - 핸드폰 번호 가리기,"function solution(phone_number) {
    const backNum = phone_number.slice(-4);
    const frontNum = phone_number.slice(0, -4);
    
    return ""*"".repeat(frontNum.length) + backNum;
}",,2023. 8. 24,17,1
2023. 8. 24 오전 11:37:07,김호찬,AI,1 - 짝수와 홀수,"def solution(num):
    if num % 2 == 0:
        return ""Even""
    else:
        return ""Odd""",https://github.com/hckim1/Coding-Practice,2023. 8. 24,1,1
2023. 8. 24 오전 11:37:21,이진형,AI,8 - 문자열을 정수로 바꾸기,"def solution(s):
    if s[0]==""-"":
        return (-int(s[1:]))
    else:
        return (int(s))",,2023. 8. 24,8,1
2023. 8. 24 오전 11:38:18,김민상,Unity,11 - 하샤드 수,"public class Solution {
    public bool solution(int x) {
        int n = x;
        int sum = 0;
        while (x > 0)
        {
            sum += x % 10;
            x /= 10;
        }
        return n % sum == 0;
    }
}",,2023. 8. 24,11,1
2023. 8. 24 오전 11:38:24,이기호,AI,1 - 짝수와 홀수,"def solution(num):
    if (num % 2 == 0)or(num==0):
        answer = ""Even""
    else:
        answer = ""Odd""
    return(answer)",https://github.com/gihohoho/Algorithm,2023. 8. 24,1,1
2023. 8. 24 오전 11:38:44,정범수,AI,6 - x만큼 간격이 있는 n개의 숫자,"def solution(x, n):
    answer = [x*(i+1) for i in range(n)]
    return answer",https://github.com/sudog1/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12954.%E2%80%85x%EB%A7%8C%ED%81%BC%E2%80%85%EA%B0%84%EA%B2%A9%EC%9D%B4%E2%80%85%EC%9E%88%EB%8A%94%E2%80%85n%EA%B0%9C%EC%9D%98%E2%80%85%EC%88%AB%EC%9E%90,2023. 8. 24,6,1
2023. 8. 24 오전 11:38:53,김현우,AI,18 - 없는 숫자 더하기,"function solution(numbers) {
    let arr = [];
    for(let i=0; i<=9; i++) {
        if(numbers.indexOf(i) === -1) {
            arr.push(i);
        }
    }
    return arr.reduce((acc, cur) => acc + cur);
}",,2023. 8. 24,18,1
2023. 8. 24 오전 11:39:32,김재유,AI,1 - 짝수와 홀수,"def solution(num):
    if num % 2 == 0:
        return'Even'
    else:    
        return 'Odd'",https://github.com/jjjU230408/co.te.git,2023. 8. 24,1,1
2023. 8. 24 오전 11:40:15,김해찬,Unity,23 - 약수의 개수와 덧셈,"using System;

public class Solution {
    public int solution(int left, int right) {
        int answer = 0;
        
        for(int i = left; i < right+1; i++)
        {
            int cnt = 0;
            
            int temp = i+1;
            
            for(int j = 1; j < temp; j++)
            {
                if(i % j == 0)
                {
                    cnt++;
                }
            }
            
            if(cnt % 2 == 0)
            {
                answer += i;
            }
            else
            {
                answer -= i;
            }
        }
        
        return answer;
    }
}",,2023. 8. 24,23,1
2023. 8. 24 오전 11:40:25,김현우,AI,19 - 제일 작은 수 제거하기,"function solution(arr) {
    let newArr = [];
    const minNum = Math.min(...arr);
    arr.map(x => {
        if(x !== minNum) {
            newArr.push(x);
        }
    })   
    return arr.length === 1 ? [-1] : newArr;
}",,2023. 8. 24,19,1
2023. 8. 24 오전 11:41:08,김현우,AI,20 - 가운데 글자 가져오기,"function solution(s) {
    const len = s.length;
    let answer = '';
    
    len % 2 ?
        answer = s.slice(Math.floor(len / 2), Math.ceil(len / 2)) :
        answer = s.slice(len / 2 - 1, len / 2 +1);
    
    return answer;
}",,2023. 8. 24,20,1
2023. 8. 24 오전 11:41:42,조호진,AI,4 - 약수의 합,"def solution(n):
    answer = n
    for i in range(1,n):
       if n%i == 0:
            answer +=i
    return answer",https://github.com/bm4706/Algorithm_practice,2023. 8. 24,4,1
2023. 8. 24 오전 11:41:45,김현우,AI,21 - 수박수박수박수박수박수?,"function solution(n) {
    let result = '';
    
    for(let i=0; i<n; i++) {
        i % 2 ? result += ""박"" : result += ""수""; 
    }
    return result;
}",,2023. 8. 24,21,1
2023. 8. 24 오전 11:42:30,김현우,AI,22 - 내적,"function solution(a, b) {
    let answer = 0;
    const len = a.length;
    
    for(let i=0; i<len; i++) {
        answer += a[i] * b[i];
    }
    return answer;
}",,2023. 8. 24,22,1
2023. 8. 24 오전 11:42:48,이기호,AI,2 - 평균 구하기,"def solution(arr):
    answer = sum(arr)/len(arr)

    return (answer)",https://github.com/gihohoho/Algorithm,2023. 8. 24,2,1
2023. 8. 24 오전 11:43:01,이솔,AI,1 - 짝수와 홀수,"def solution(num):
    return 'Odd' if num % 2 else 'Even'",https://github.com/solleepang/algorithm,2023. 8. 24,1,1
2023. 8. 24 오전 11:43:02,정범수,AI,7 - 자연수 뒤집어 배열로 만들기,"def solution(n):
    answer = []
    while n:
        answer.append(n%10)
        n //= 10
    return answer",https://github.com/sudog1/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12932.%E2%80%85%EC%9E%90%EC%97%B0%EC%88%98%E2%80%85%EB%92%A4%EC%A7%91%EC%96%B4%E2%80%85%EB%B0%B0%EC%97%B4%EB%A1%9C%E2%80%85%EB%A7%8C%EB%93%A4%EA%B8%B0,2023. 8. 24,7,1
2023. 8. 24 오전 11:43:29,이솔,AI,2 - 평균 구하기,"def solution(arr):
    return sum(arr)/len(arr)",,2023. 8. 24,2,1
2023. 8. 24 오전 11:43:30,장현웅,AI,1 - 짝수와 홀수,"def solution(num):
    answer = ''
    if num % 2 == 0:
        answer = ""Even""
    else:
        answer = ""Odd""
    return answer
    print(f""{num}은 {answer}입니다."")",https://github.com/HyeonwoongJang/Algorithm,2023. 8. 24,1,1
2023. 8. 24 오전 11:44:13,양덕영,AI,2 - 평균 구하기,"def solution(arr):
    answer = sum(arr) / len(arr)
    return answer",https://github.com/DeokYoung980130/Ai_Project2023-08-07/tree/b09f8a943e03240d9d689aa2d4e96559acc43fe2,2023. 8. 24,2,1
2023. 8. 24 오전 11:44:18,정범수,AI,8 - 문자열을 정수로 바꾸기,"def solution(s):
    return int(s)",https://github.com/sudog1/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12925.%E2%80%85%EB%AC%B8%EC%9E%90%EC%97%B4%EC%9D%84%E2%80%85%EC%A0%95%EC%88%98%EB%A1%9C%E2%80%85%EB%B0%94%EA%BE%B8%EA%B8%B0,2023. 8. 24,8,1
2023. 8. 24 오전 11:44:21,곽정원,AI,1 - 짝수와 홀수,"num = int(input(""정수를 입력하세요. > ""));


def solution(num):
    if (num%2==0 or num==0) :
        answer = ""Even"";
    else :
        answer = ""Odd"";
    return answer

solution(num)",https://github.com/Team-Kawa/nbc/blob/master/asd.py,2023. 8. 24,1,1
2023. 8. 24 오전 11:44:24,김해찬,Unity,24 - 문자열 내림차순으로 배치하기,"using System;
using System.Collections.Generic;

public class Solution {
    public string solution(string s) {
        string answer = """";
        
        List<int> arr = new List<int>();
        
        for(int i = 0; i < s.Length; i++)
        {
            arr.Add((int)s[i]);
        }
        
        arr.Sort(new Comparison<int>((n1, n2) => n2.CompareTo(n1)));
        
        for(int i = 0; i < arr.Count; i++)
        {
            answer += (char)arr[i];
        } 
        
        return answer;
    }
}",,2023. 8. 24,24,1
2023. 8. 24 오전 11:44:33,조범준,Unity,8 - 문자열을 정수로 바꾸기,"public class Solution {
    public int solution(string s) {
        int answer = int.Parse(s);
        
        return answer;
    }
}",https://github.com/KimMaYa1/BaekJoonEx/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12925.%E2%80%85%EB%AC%B8%EC%9E%90%EC%97%B4%EC%9D%84%E2%80%85%EC%A0%95%EC%88%98%EB%A1%9C%E2%80%85%EB%B0%94%EA%BE%B8%EA%B8%B0,2023. 8. 24,8,1
2023. 8. 24 오전 11:44:37,이진범,AI,3 - 자릿수 더하기,"def solution(n):
    answer = 0

    for i in str(n):
        answer += int(i)

    return answer",https://github.com/jinbeom92/sparta-leejinbeom/blob/main/%EC%88%AB%EC%9E%90%20%EB%8D%94%ED%95%98%EA%B8%B0,2023. 8. 24,3,1
2023. 8. 24 오전 11:44:51,이솔,AI,3 - 자릿수 더하기,"def solution(n):
    answer = 0
    num_list = list(str(n))
    
    for i in num_list:
        answer += int(i)

    return answer",,2023. 8. 24,3,1
2023. 8. 24 오전 11:45:12,이솔,AI,4 - 약수의 합,"def solution(n):
    answer = 0
    
    for i in range(1,n+1):
        if not n % i:
            answer += i
    
    return answer",,2023. 8. 24,4,1
2023. 8. 24 오전 11:45:37,이솔,AI,5 - 나머지가 1이 되는 수 찾기,"def solution(n):
    answer = 0
    count = 0
    
    while True:
        count += 1
        if n % count == 1:
            return count",,2023. 8. 24,5,1
2023. 8. 24 오전 11:46:06,이솔,AI,6 - x만큼 간격이 있는 n개의 숫자,"def solution(x, n):

    if x == 0:
        return [0]*n
    else:
        return [i for i in range(x,(n*x-1 if x < 0 else n*x+1),x)]",,2023. 8. 24,6,1
2023. 8. 24 오전 11:46:15,최지연,AI,2 - 평균 구하기,"def solution(arr):
    sumval = 0
    for a in arr:
        sumval += a
    answer = sumval/len(arr)
    return answer",https://github.com/jiyeonCoder/algorithmPractice/blob/main/2average.py,2023. 8. 24,2,1
2023. 8. 24 오전 11:46:30,김민상,Unity,13 - 콜라츠 추측,"public class Solution {
    public int solution(long num) {
        
        for (int i = 0; i < 500; i++)
        {
            if (num == 1)
                return i;
            
            if (num % 2 == 0)
                num /= 2;
            else
                num = num * 3 + 1;
        }
        
        return -1;
    }
}",,2023. 8. 24,13,1
2023. 8. 24 오전 11:47:49,권수민,AI,2 - 평균 구하기,"def solution(arr):
    if len(arr) > 0 and len(arr) < 101:
        for i in arr:
            if i <= 10000 or i >= -10000:
                answer += i
    return answer/len(arr)",https://github.com/Stella-Kwon/git-github.com-Stella-Kwon-algorithm_prac/blob/e04f582c81318798d6a8e0df79a9ec7974774b3b/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12944.%E2%80%85%ED%8F%89%EA%B7%A0%E2%80%85%EA%B5%AC%ED%95%98%EA%B8%B0/%ED%8F%89%EA%B7%A0%E2%80%85%EA%B5%AC%ED%95%98%EA%B8%B0.py,2023. 8. 24,2,1
2023. 8. 24 오전 11:48:22,임규한,AI,1 - 짝수와 홀수,"def solution(num):
    if num % 2 == 0:
        return(""Even"")
    else:
        return(""Odd"")",,2023. 8. 24,1,1
2023. 8. 24 오전 11:48:39,김해찬,Unity,25 - 부족한 금액 계산하기,"using System;

class Solution
{
    public long solution(int price, int money, int count)
    {
        long temp = money;
        
        for(int i = 1; i < count+1; i++)
        {
            temp -= price * i;
        }
        
        if(temp > -1)
        {
            return 0;
        }
        
        return Math.Abs(temp);
    }
}",,2023. 8. 24,25,1
2023. 8. 24 오전 11:48:47,양덕영,AI,3 - 자릿수 더하기,"def solution(n):
    answer = 0

    while n > 0:
        dight = n % 10
        answer += dight
        n //= 10

    return answer",https://github.com/DeokYoung980130/Ai_Project2023-08-07/tree/afdb37e2461b919c243d4be6a2517912be1b8041,2023. 8. 24,3,1
2023. 8. 24 오전 11:50:30,김정규,AI,2 - 평균 구하기,"def solution(arr):
    answer = 0

    for i in arr:
        answer += i

    answer /= len(arr)

    return answer",https://github.com/JungGyu00/algorithm,2023. 8. 24,2,1
2023. 8. 24 오전 11:50:42,김호찬,AI,2 - 평균 구하기,"def solution(arr):

    result = sum(arr) / len(arr)

    return result",https://github.com/hckim1/Coding-Practice,2023. 8. 24,2,1
2023. 8. 24 오전 11:50:57,조호진,AI,5 - 나머지가 1이 되는 수 찾기,"def solution(n):
    answer = 0
    for x in range(1,n):
        if n % x ==1:
            answer = x
            
            break
    return answer",https://github.com/bm4706/Algorithm_practice/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1,2023. 8. 24,5,1
2023. 8. 24 오전 11:51:13,김민상,Unity,12 - 두 정수 사이의 합,"using System;
public class Solution {
    public long solution(int a, int b) {
        long answer = 0;
        
        for (int i = Math.Min(a, b); i <= Math.Max(a, b); i++)
        {
            answer += i;
        }
        
        return answer;
    }
}",,2023. 8. 24,12,1
2023. 8. 24 오전 11:51:17,김해찬,Unity,26 - 문자열 다루기 기본,"public class Solution {
    public bool solution(string s) {
        bool answer = true;
        
        for(int i = 0; i < s.Length; i++)
        {
            if(s[i] < '0' || s[i] > '9')
            {
                answer = false;
            }
        }
        
        if(answer == true && (s.Length == 4 || s.Length == 6))
        {
            return true;
        }
        else
        {
            return false;
        }
    }
}",,2023. 8. 24,26,1
2023. 8. 24 오전 11:51:52,우민규,Unity,4 - 약수의 합,"public class Solution {
    public int solution(int n) {
        int answer = 0;
        
        for(int i = 1; i <= n/2; i++)
        {
          if(n % i == 0)
          {
              answer += i;
          }
        }
        
        return answer + n;
    }
}",https://github.com/Woomingyu/Programmers.git,2023. 8. 24,4,1
2023. 8. 24 오전 11:52:25,김진환,Unity,5 - 나머지가 1이 되는 수 찾기,"public int solution(int n)
        {
            for(int i = 2; i < n / 2; i++)
            {
                if(n%i == 1)
                    return i;
            }
            return n - 1;
        }",https://github.com/NewRound/AlgorithmKata.git,2023. 8. 24,5,1
2023. 8. 24 오전 11:52:34,김진성,Unity,1 - 짝수와 홀수,"public class Solution
{
    public string solution(int num)
    {
        string answer = """";
        if (num % 2 == 0)
        {
            answer = ""Even"";
        }
        else
        {
            answer = ""Odd"";
        }

        return answer;
    }
}",https://github.com/GYALLERHORN/ALGORITHM,2023. 8. 24,1,1
2023. 8. 24 오전 11:52:52,이진형,AI,9 - 정수 제곱근 판별,"import math
def solution(n):
    for i in range(math.ceil((math.sqrt(n)+1))):
        if i*i==n:
            return (i+1)*(i+1)
    return -1",,2023. 8. 24,9,1
2023. 8. 24 오전 11:53:23,김진성,Unity,2 - 평균 구하기,"public class Solution
{
    public double solution(int[] arr)
    {
        double answer = 0;
        double total = 0; // arr의 모든 원소를 다 더할 값 total
        for (int i = 0; i < arr.Length; i++) // arr 길이만큼 반복하며
        {
            total += arr[i]; // total에 arr의 첫번째 원소부터 다 더하고
        }
        answer = total / arr.Length; // 다 더한 값을 arr길이만큼 나눈다.
        return answer;
    } // ?? 이게 아무래도 최선인데?
     // 아니 배열형 변수 내장 메서드에 Average()가 있었네..ㅡㅡ
}
",https://github.com/GYALLERHORN/ALGORITHM,2023. 8. 24,2,1
2023. 8. 24 오전 11:53:24,양덕영,AI,4 - 약수의 합,"def solution(n):
    answer = 0
    
    for i in range(1, n+1):
        if n % i == 0:
            answer += i
            
    return answer",https://github.com/DeokYoung980130/Ai_Project2023-08-07/tree/cefe5fc66661397f5f107f70e96b082db3394d2e,2023. 8. 24,4,1
2023. 8. 24 오전 11:53:24,이성권,Unity,1 - 짝수와 홀수,"public class Solution {
public string solution(int num) {
string answer = """";

if (num% 2 == 0)
{
answer = ""Even"";
}
else
{
answer = ""Odd"";
}

return answer;
}
}",https://github.com/,2023. 8. 24,1,1
2023. 8. 24 오전 11:53:57,김진성,Unity,3 - 자릿수 더하기,"//123을 각 자릿수 숫자를 다 더한 값 : 1 + 2 + 3 = 6 어떻게 하지?
public class Solution
{
    public int solution(int n)
    {
        char[] ciphers = n.ToString().ToCharArray();
        // ToArray는 기존의 배열(컬랙션)을 새로운 배열로 복사한다.
        // 그래서 ToString()으로 만든 문자열을 배열화하는 방법으로는 ToCharArray()가 맞다.
        int answer = 0;
        for (int i = 0; i < ciphers.Length; i++)
        {
            int a = int.Parse(ciphers[i].ToString());
            answer += a;
        }
        return answer;
    }
}
",https://github.com/GYALLERHORN/ALGORITHM,2023. 8. 24,3,1
2023. 8. 24 오전 11:54:17,권수민,AI,3 - 자릿수 더하기,"def solution(n):
    answer = 0
    if n <= 100000000:
        str_n = str(n)
        print(str_n)
        for i in str_n:
            int_n = int(i)
            answer += int_n 
    return answer",https://github.com/Stella-Kwon/git-github.com-Stella-Kwon-algorithm_prac/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12931.%E2%80%85%EC%9E%90%EB%A6%BF%EC%88%98%E2%80%85%EB%8D%94%ED%95%98%EA%B8%B0,2023. 8. 24,3,1
2023. 8. 24 오전 11:55:08,김지수,AI,4 - 약수의 합,"def solution(n):
    answer = 0
    sum = 0
    for i in range(1,n+1):
        if n%i == 0 :   
            sum += i
            answer = sum
    return answer",https://github.com/whalesharkpiyong/Codekata.git,2023. 8. 24,4,1
2023. 8. 24 오전 11:55:13,김민재,AI,2 - 평균 구하기,"def solution(arr):
    answer = 0
    1 <= len(arr) <= 100

    for x in arr:
        answer += x / len(arr)
    
    return answer",https://github.com/Kim-Minjae9872/Code_Kata,2023. 8. 24,2,1
2023. 8. 24 오전 11:56:27,조호진,AI,6 - x만큼 간격이 있는 n개의 숫자,"def solution(x, n):
    answer = []
    for i in range(1,n+1):
        answer.append(i*x)
    return answer",https://github.com/bm4706/Algorithm_practice/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1,2023. 8. 24,6,1
2023. 8. 24 오전 11:56:56,명세인,AI,6 - x만큼 간격이 있는 n개의 숫자,"def solution(x, n):
    answer = []
    for i in range(1,n+1):
        result = i*x
        answer.append(result)
    return answer",,2023. 8. 24,6,1
2023. 8. 24 오전 11:57:10,김현우,AI,23 - 약수의 개수와 덧셈,"function solution(left, right) {
    let empt = [];
    let answer = 0;
    
    for(let i=left; i<=right; i++) {
        for(let j=1; j<=i; j++) {
            if(i % j === 0) {
                empt.push(j);
                if(empt.includes(i)) {
                    empt.length % 2 ? answer = answer - i : answer = answer + i
                    empt = [];
                }
            }
        }
    }
    return answer;
}",,2023. 8. 24,23,1
2023. 8. 24 오전 11:57:31,정범수,AI,9 - 정수 제곱근 판별,"from math import sqrt

def solution(n):
    x = sqrt(n)
    if x.is_integer():
        answer = (x+1)**2
    else:
        answer = -1
    return answer",https://github.com/sudog1/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12934.%E2%80%85%EC%A0%95%EC%88%98%E2%80%85%EC%A0%9C%EA%B3%B1%EA%B7%BC%E2%80%85%ED%8C%90%EB%B3%84,2023. 8. 24,9,1
2023. 8. 24 오전 11:57:59,김정규,AI,3 - 자릿수 더하기,"def solution(n):
    answer = 0
    for i in str(n):
        answer += int(i)
    return answer",https://github.com/JungGyu00/algorithm,2023. 8. 24,3,1
2023. 8. 24 오전 11:58:03,김현우,AI,24 - 문자열 내림차순으로 배치하기,"function solution(s) {
    const lowerCase = [];
    const upperCase = [];
    
    const len = s.length;
    
    for(let i=0; i<len; i++) {
        if(s[i] === s[i].toUpperCase()) {
            upperCase.push(s[i]);
        } else {
            lowerCase.push(s[i]);
        }
    }
    lowerCase.sort().reverse();
    upperCase.sort().reverse();
    
    let joinAlpha = lowerCase.concat(upperCase);
    
    return joinAlpha.join("""")
}",,2023. 8. 24,24,1
2023. 8. 24 오전 11:58:41,심명희,AI,2 - 평균 구하기,"def solution(arr):
    return sum(arr)/len(arr)",,2023. 8. 24,2,1
2023. 8. 24 오전 11:59:42,이진형,AI,10 - 정수 내림차순으로 배치하기,"def solution(n):
    s=str(n)
    b=""""
    for i in range(9,-1,-1):
        a=s.count('{}'.format(i))
        b=b+""{}"".format(i)*a
    return int(b)
",,2023. 8. 24,10,1
2023. 8. 24 오전 11:59:53,김현우,AI,25 - 부족한 금액 계산하기,"function solution(price, money, count) {
    let answer = 0;
    
    for(let i=1; i<=count; i++) {
        answer += price * i;
    }
    if(answer > money) {
            return answer - money;
        } else {
            return 0;
        }
}",,2023. 8. 24,25,1
2023. 8. 24 오후 12:00:04,김민상,Unity,14 - 서울에서 김서방 찾기,"public class Solution {
    public string solution(string[] seoul) {
        for (int i = 0; i < seoul.Length; i++)
        {
            if (seoul[i] == ""Kim"")
                return $""김서방은 {i}에 있다"";
        }
        return """";
    }
}",,2023. 8. 24,14,1
2023. 8. 24 오후 12:00:19,양덕영,AI,5 - 나머지가 1이 되는 수 찾기,"def solution(n):
    x = 2
    while x <= n:
        if n % x == 1:
            return x
        x += 1
    return -1",https://github.com/DeokYoung980130/Ai_Project2023-08-07/tree/a65304ae48472615ed49a6320edc88f5c4f79c05,2023. 8. 24,5,1
2023. 8. 24 오후 12:00:36,김진환,Unity,6 - x만큼 간격이 있는 n개의 숫자,"public long[] solution(int x, int n)
        {
            long[] answer = new long[n];
            for(int i = 0; i < n; i++)
            {
                if (i == 0)
                    answer[i] = x;
                else
                    answer[i] = answer[i - 1] + x;
            }
            return answer;
        }",https://github.com/NewRound/AlgorithmKata.git,2023. 8. 24,6,1
2023. 8. 24 오후 12:00:57,김현우,AI,26 - 문자열 다루기 기본,"function solution(s) {
    const len = s.length;
    
    if(len === 4 || len === 6) {
        return s.split("""").every(el => !isNaN(el))
    }
    return false;
}",,2023. 8. 24,26,1
2023. 8. 24 오후 12:01:02,정범수,AI,10 - 정수 내림차순으로 배치하기,"def solution(n):
    arr = []
    while n:
        arr.append(n%10)
        n //= 10
    answer = 0
    for i in sorted(arr, reverse=True):
        answer *= 10
        answer += i
    return answer",https://github.com/sudog1/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12933.%E2%80%85%EC%A0%95%EC%88%98%E2%80%85%EB%82%B4%EB%A6%BC%EC%B0%A8%EC%88%9C%EC%9C%BC%EB%A1%9C%E2%80%85%EB%B0%B0%EC%B9%98%ED%95%98%EA%B8%B0,2023. 8. 24,10,1
2023. 8. 24 오후 12:01:39,우은진,AI,1 - 짝수와 홀수,"# 짝수와 홀수

def solution(num):
    answer = ''
    if num%2 == 0:
        answer = ""Even""
    else:
        answer = ""Odd""
    return answer",https://github.com/EunjinWoo/SpartaCodingCamp_indiv/tree/main/Algorithm/Programmers/Lev1,2023. 8. 24,1,1
2023. 8. 24 오후 12:02:16,권수민,AI,4 - 약수의 합,"def solution(n):
    answer = 0
    if n >= 0 and n <= 3000:
        for i in range(1, n+1):
            if n % i == 0:
                answer += i
    return answer",https://github.com/Stella-Kwon/git-github.com-Stella-Kwon-algorithm_prac/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12928.%E2%80%85%EC%95%BD%EC%88%98%EC%9D%98%E2%80%85%ED%95%A9,2023. 8. 24,4,1
2023. 8. 24 오후 12:02:16,우은진,AI,2 - 평균 구하기,"# 평귱 구하기

def solution(arr):
    answer = sum(arr)/len(arr)
    return answer",https://github.com/EunjinWoo/SpartaCodingCamp_indiv/tree/main/Algorithm/Programmers/Lev1,2023. 8. 24,2,1
2023. 8. 24 오후 12:02:17,양덕영,AI,6 - x만큼 간격이 있는 n개의 숫자,"def solution(x, n):
    answer = []
    for i in range(1, n + 1):
        answer.append(x * i)
    return answer",https://github.com/DeokYoung980130/Ai_Project2023-08-07/tree/d7b01c7c2702bd120ecee082964b6e29d475f659,2023. 8. 24,6,1
2023. 8. 24 오후 12:02:42,최지연,AI,3 - 자릿수 더하기,"def solution(n):
    answer = 0
    for i in str(n):
        answer += int(i)
    return answer",https://github.com/jiyeonCoder/algorithmPractice/blob/main/3addingCiphers.py,2023. 8. 24,3,1
2023. 8. 24 오후 12:02:44,김현우,AI,27 - 행렬의 덧셈,"function solution(arr1, arr2) {
    return arr1.map((el, idx) => el.map((el2, idx2) => el2 + arr2[idx][idx2]));
}",,2023. 8. 24,27,1
2023. 8. 24 오후 12:02:54,우은진,AI,3 - 자릿수 더하기,"# 자릿수 더하기

def solution(n):
    answer = 0
    
    while n != 0:
        answer += n%10
        n = (n-(n%10)) // 10

    return answer",https://github.com/EunjinWoo/SpartaCodingCamp_indiv/tree/main/Algorithm/Programmers/Lev1,2023. 8. 24,3,1
2023. 8. 24 오후 12:03:25,임규한,AI,2 - 평균 구하기,"def solution(arr):
    answer = sum(arr)
    return (answer / len(arr))",https://github.com/hani654/ALGORITHM-CODE-TAKA,2023. 8. 24,2,1
2023. 8. 24 오후 12:03:47,김호찬,AI,3 - 자릿수 더하기,"def solution():
    Answer = list (str(n))
    Answer_sum = sum(int(Answer))
    
    return Answer_sum",https://github.com/hckim1/Coding-Practice.git,2023. 8. 24,3,1
2023. 8. 24 오후 12:03:51,정범수,AI,11 - 하샤드 수,"def solution(x):
    digit_sum = 0
    temp = x
    while temp:
        digit_sum += temp%10
        temp //= 10
    return not x % digit_sum",https://github.com/sudog1/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12947.%E2%80%85%ED%95%98%EC%83%A4%EB%93%9C%E2%80%85%EC%88%98,2023. 8. 24,11,1
2023. 8. 24 오후 12:04:01,이진형,Unity,11 - 하샤드 수,"def solution(x):
    a=str(x)
    b=0
    for i in range(len(a)):
       b+=int(a[i]) 
    if x%b==0:
        return True
    else:
        return False
    ",,2023. 8. 24,11,1
2023. 8. 24 오후 12:04:16,양덕영,AI,7 - 자연수 뒤집어 배열로 만들기,"def solution(n):
    answer = [int(x) for x in str(n)[::-1]]
    return answer",https://github.com/DeokYoung980130/Ai_Project2023-08-07/tree/a82e7b5247885eca4f1d16232aa1d02ce66dc029,2023. 8. 24,7,1
2023. 8. 24 오후 12:04:53,김현우,AI,28 - 직사각형 별찍기,"process.stdin.setEncoding('utf8');
process.stdin.on('data', data => {
    const n = data.split("" "");
    const a = Number(n[0]), b = Number(n[1]);
    
    let star = """";
    let count = 0;
    
    while(count < b) {
        count++;
        star += `${""*"".repeat(a)}\n`
    }
    console.log(star)
});",,2023. 8. 24,28,1
2023. 8. 24 오후 12:05:08,이기호,AI,3 - 자릿수 더하기,"def solution(n):
    answer=0
    for i in str(n):
        answer = answer + int(i)
    return (answer)",https://github.com/gihohoho/Algorithm,2023. 8. 24,3,1
2023. 8. 24 오후 12:05:44,김해찬,Unity,27 - 행렬의 덧셈,"public class Solution {
    public int[,] solution(int[,] arr1, int[,] arr2) {
        int[,] arr = new int[arr1.GetLength(0), arr1.GetLength(1)];
        
        for(int i = 0; i < arr1.GetLength(0); i++)
        {
            for(int j = 0; j < arr1.GetLength(1); j++)
            {
                arr[i,j] = arr1[i,j] + arr2[i,j];
            }
        }
        
        return arr;
    }
}",,2023. 8. 24,27,1
2023. 8. 24 오후 12:05:52,정범수,AI,12 - 두 정수 사이의 합,"def solution(a, b):
    return (a+b)*(abs(b-a)+1)/2",https://github.com/sudog1/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12912.%E2%80%85%EB%91%90%E2%80%85%EC%A0%95%EC%88%98%E2%80%85%EC%82%AC%EC%9D%B4%EC%9D%98%E2%80%85%ED%95%A9,2023. 8. 24,12,1
2023. 8. 24 오후 12:06:14,우은진,AI,4 - 약수의 합,"# 약수의 합

def solution(n):
    answer = 0
    for i in range(1,n+1): # division by zero error 주의.
        if n%i == 0:
            answer += i
    return answer",https://github.com/EunjinWoo/SpartaCodingCamp_indiv/tree/main/Algorithm/Programmers/Lev1,2023. 8. 24,4,1
2023. 8. 24 오후 12:08:05,한병권,Unity,9 - 정수 제곱근 판별,"using System;
public class Solution {
    public long solution(double n) {
        long answer = -1;
        long i = (long)Math.Sqrt(n);
        if(i*i == n)
        {
            i++;
            answer = i * i;
        }
        return answer;
    }
}",https://github.com/hbg9212/AlgorithmCodekata,2023. 8. 24,9,1
2023. 8. 24 오후 12:08:09,이진형,AI,12 - 두 정수 사이의 합,"import math
def solution(a, b):
    c=(a+b)*(math.fabs(a-b)+1)/2
    return int(c)",,2023. 8. 24,12,1
2023. 8. 24 오후 12:08:25,정범수,AI,13 - 콜라츠 추측,"def solution(num):
    for i in range(500):
        if num == 1:
            return i
        if num % 2:
            num = num*3 + 1
        else:
            num /= 2
    return -1",https://github.com/sudog1/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12943.%E2%80%85%EC%BD%9C%EB%9D%BC%EC%B8%A0%E2%80%85%EC%B6%94%EC%B8%A1,2023. 8. 24,13,1
2023. 8. 24 오후 12:08:36,김해찬,Unity,28 - 직사각형 별찍기,"using System;

public class Example
{
    public static void Main()
    {
        string[] temp = Console.ReadLine().Split(' ');
        
        int n = int.Parse(temp[0]);
        int m = int.Parse(temp[1]);
        
        for(int i = 0; i < m; i++)
        {
            for(int j = 0; j < n; j++)
            {
                Console.Write('*');
            }
            
            Console.Write('\n');
        }
    }
}",,2023. 8. 24,28,1
2023. 8. 24 오후 12:09:39,양수홍,AI,10 - 정수 내림차순으로 배치하기,"def solution(n):
    answer = 0
    s=str(n)
    li=list(s)
    li.sort()
    li.reverse()
    answer=int(''.join(li))
    return answer",,2023. 8. 24,10,1
2023. 8. 24 오후 12:09:53,김지수,AI,5 - 나머지가 1이 되는 수 찾기,"def solution(n):
    for i in range(1,n):
        if n%i == 1:
            return i",https://github.com/whalesharkpiyong/Codekata.git,2023. 8. 24,5,1
2023. 8. 24 오후 12:10:35,심명희,AI,3 - 자릿수 더하기,"def solution(N):
    answer = 0
    for i in str(N):
        answer+=int(i)
    print('Hello Python')

    return answer",,2023. 8. 24,3,1
2023. 8. 24 오후 12:10:42,공혜진,AI,1 - 짝수와 홀수,"def solution(num):
    answer = ''
    if num%2 == 0:
        answer =  ""Even""
    else:
        answer = ""Odd"" 
    return answer

solution(2)",https://github.com/hjzheld/coding_test?files=1,2023. 8. 24,1,1
2023. 8. 24 오후 12:11:16,공혜진,AI,2 - 평균 구하기,"def solution(arr):
    a = sum(arr)
    answer = a / len(arr)
    return answer

print(solution([1,2,3,4]))",https://github.com/hjzheld/coding_test/tree/main,2023. 8. 24,2,1
2023. 8. 24 오후 12:11:39,정범수,AI,14 - 서울에서 김서방 찾기,"def solution(seoul):
    return f'김서방은 {seoul.index(""Kim"")}에 있다'",https://github.com/sudog1/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12919.%E2%80%85%EC%84%9C%EC%9A%B8%EC%97%90%EC%84%9C%E2%80%85%EA%B9%80%EC%84%9C%EB%B0%A9%E2%80%85%EC%B0%BE%EA%B8%B0,2023. 8. 24,14,1
2023. 8. 24 오후 12:11:40,이진범,AI,4 - 약수의 합,"def solution(n):
    a = 0

    for i in range(1, n + 1):
        if n % i == 0:
            a += i

    return a",https://github.com/jinbeom92/sparta-leejinbeom/blob/main/%EC%95%BD%EC%88%98%20%EB%8D%94%ED%95%98%EA%B8%B0,2023. 8. 24,4,1
2023. 8. 24 오후 12:12:40,조호진,AI,7 - 자연수 뒤집어 배열로 만들기,"def solution(n):
    answer = []
    for i in str(n):
        answer.append(int(i))
    answer.reverse()
    return answer",https://github.com/bm4706/Algorithm_practice/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1,2023. 8. 24,7,1
2023. 8. 24 오후 12:12:44,김호찬,AI,4 - 약수의 합,"def solution(n):
    answer = 0
    
    for i in range(1, n + 1):
        if n % 1 == 0:
            answer +=1
            
        return answer",https://github.com/hckim1/Coding-Practice.git,2023. 8. 24,4,1
2023. 8. 24 오후 12:13:12,조장원,AI,1 - 짝수와 홀수,"def solution(num):
    if (num % 2 == 0):
    return 'Even'
else:
    return 'Odd'",https://github.com/jangwonne/code_test,2023. 8. 24,1,1
2023. 8. 24 오후 12:13:36,이재윤,AI,2 - 평균 구하기,"
def solution(arr):
    n = len(arr)
    min_n = 100
    answer = sum(arr)/n
    return answer",https://github.com/JaeYoonAI/coding_test/tree/28173008f167e7e05c2c5704ae04fdeb086e9681/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12944.%E2%80%85%ED%8F%89%EA%B7%A0%E2%80%85%EA%B5%AC%ED%95%98%EA%B8%B0,2023. 8. 24,2,1
2023. 8. 24 오후 12:20:05,최지연,AI,4 - 약수의 합,"def solution(n):
    answer = 0
    for i in range(1, n+1):
        if n%i == 0:
            answer += i
    return answer",https://github.com/jiyeonCoder/algorithmPractice/blob/main/4sumOfDivisors.py,2023. 8. 24,4,1
2023. 8. 24 오후 12:20:48,김해찬,Unity,29 - 최대공약수와 최소공배수,"using System.Collections.Generic;

public class Solution {
    public int[] solution(int n, int m) {
        int[] answer = new int[2];
        
        int max = 0;
        int gcd = 0;
        int lcm = 0;
        
        if(n > m)
        {
            max = n;
        }
        else
        {
            max = m;
        }
        
        bool[] checkN = new bool[max+1];
        bool[] checkM = new bool[max+1];
        
        for(int i = 1; i < n+1; i++)
        {
            if(n % i == 0)
            {
                checkN[i] = true;
            }
        }
        
        for(int i = 1; i < m+1; i++)
        {
            if(m % i == 0)
            {
                checkM[i] = true;
            }
        }
        
        for(int i = max-1; i > -1; i--)
        {
            if(checkN[i] == true && checkM[i] == true)
            {
                gcd = i;
                break;
            }
        }
        
        answer[0] = gcd;
        answer[1] = n * m / gcd;
        
        return answer;
    }
}",,2023. 8. 24,29,1
2023. 8. 24 오후 12:22:25,김진환,Unity,7 - 자연수 뒤집어 배열로 만들기,"public int[] solution(long n)
        {
            string number = n.ToString();
            int[] answer = new int[number.Length];
            for(int i = 0; i < number.Length; i++)
            {
                answer[i] = number[number.Length - 1 - i] - '0';
            }

            return answer;
        }",https://github.com/NewRound/AlgorithmKata.git,2023. 8. 24,7,1
2023. 8. 24 오후 12:23:26,권수민,AI,5 - 나머지가 1이 되는 수 찾기,"
3
4
5
6
7
8
def solution(n):
    answer = 0
    if n >= 0 and n <= 3000:
        for i in range(1, n+1):
            if n % i == 0:
                answer += i
    return answer",,2023. 8. 24,5,1
2023. 8. 24 오후 12:24:26,한병권,Unity,10 - 정수 내림차순으로 배치하기,"using System;
public class Solution {
    public long solution(long n) {
        long c = (long)Math.Log10(n);
        int[] arr = new int[++c];
        for(int i =0; i<c; i++)
        {            
            arr[i] = (int)(n%10);
            n = n/10;
        }
        for(int x = 0; x<c; x++)
        {
            for(int i = 1; i<c; i++)
            {
                if(arr[i-1] < arr[x])
                {
                    int t = arr[x];
                    arr[x] = arr[i-1];
                    arr[i-1] = t;
                }
            }
        }
        long answer = 0;
        for(int i =0; i<c; i++)
        {
            answer = answer *10 + arr[i];
        }

        
        return answer;
    }
}",https://github.com/hbg9212/AlgorithmCodekata,2023. 8. 24,10,1
2023. 8. 24 오후 12:26:10,김해찬,Unity,30 - 3진법 뒤집기,"using System;
using System.Collections.Generic;

public class Solution {
    public int solution(int n) {
        int answer = 0;
        List<int> lst = new List<int>();
        
        while(true)
        {
            if(n == 0)
            {
                break;
            }
            
            lst.Add(n%3);
            n /= 3;
        }
        
        lst.Reverse();
        
        for(int i = 0; i < lst.Count; i++)
        {
            answer += (int)(lst[i] * Math.Pow( 3 ,i));
        }
        return answer;
    }
   
}",,2023. 8. 24,30,1
2023. 8. 24 오후 12:28:28,공혜진,AI,3 - 자릿수 더하기,"def solution(n):
    answer = 0
    for i in str(n):
        answer += int(i)
    return answer


print(solution(987))
",https://github.com/hjzheld/coding_test/tree/main,2023. 8. 24,3,1
2023. 8. 24 오후 12:32:34,김대민,Unity,30 - 3진법 뒤집기,"int solution(int n) {
    int answer = 0;
    vector<int> a;
    while(n)
    {
        a.push_back(n % 3);
        n /= 3;
    }
    //0121
    std::reverse(a.begin(), a.end());
    //1210
    int num = 1;
    for(int i = 0; i < a.size(); ++i)
    {
        answer += a[i] * num;
        num *= 3;
    }
    return answer;
}",https://github.com/KimDaeMins/CodingTest,2023. 8. 24,30,1
2023. 8. 24 오후 12:32:35,한병권,Unity,11 - 하샤드 수,"public class Solution {
    public bool solution(int x) {
        int temp = x;
        int sum = 0;
        
        while (temp%10 > 0 || temp >= 10)
        {
            sum += temp%10;
            temp = temp/10;
        }
        
        bool answer = x%sum == 0 ? true : false;
        
        return answer;
    }
}",https://github.com/hbg9212/AlgorithmCodekata,2023. 8. 24,11,1
2023. 8. 24 오후 12:32:54,조호진,AI,8 - 문자열을 정수로 바꾸기,"def solution(s):
    return int(s)",https://github.com/bm4706/Algorithm_practice,2023. 8. 24,8,1
2023. 8. 24 오후 12:33:10,이혜리,AI,35 - 시저 암호,"def solution(s, n):
    answer = ''
    ans = []
    for i in s:
        if ord(i) == 32:
            res = 32
        else:
            new_s = ord(i)
            res = new_s + n
            if 'A' <= i <= 'Z' and res > 90:
              res -= 26  
            elif res > 122 or 90 < res < 97:
              res -= 26
        ans.append(chr(res))
    answer = """".join(ans)
    
    return answer",https://github.com/hyeleenotharry/Programmers/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12926.%E2%80%85%EC%8B%9C%EC%A0%80%E2%80%85%EC%95%94%ED%98%B8,2023. 8. 24,35,2
2023. 8. 24 오후 12:33:48,이혜리,AI,32 - 삼총사,"from itertools import combinations

def solution(number):
    answer = 0
    for i in combinations(number, 3):
        sum_com = sum(i)
        if sum_com == 0:
            answer += 1
    
    return answer",https://github.com/hyeleenotharry/Programmers/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/131705.%E2%80%85%EC%82%BC%EC%B4%9D%EC%82%AC,2023. 8. 24,32,2
2023. 8. 24 오후 12:33:51,김대민,Unity,20 - 가운데 글자 가져오기,"#include <string>
#include <vector>

using namespace std;

string solution(string s) {
    string answer = """";
    
    int middle = s.size() / 2;
    if(!(s.size() % 2))
    {
        answer += s[middle - 1];
    }
    
        answer += s[middle];
    return answer;
}",https://github.com/KimDaeMins/CodingTest/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12903.%E2%80%85%EA%B0%80%EC%9A%B4%EB%8D%B0%E2%80%85%EA%B8%80%EC%9E%90%E2%80%85%EA%B0%80%EC%A0%B8%EC%98%A4%EA%B8%B0/%EA%B0%80%EC%9A%B4%EB%8D%B0%E2%80%85%EA%B8%80%EC%9E%90%E2%80%85%EA%B0%80%EC%A0%B8%EC%98%A4%EA%B8%B0.cpp,2023. 8. 24,20,1
2023. 8. 24 오후 12:34:21,김대민,Unity,15 - 나누어 떨어지는 숫자,"#include <string>
#include <vector>
#include <algorithm>
using namespace std;

vector<int> solution(vector<int> arr, int divisor) {
    vector<int> answer;
    
    for(auto iter = arr.begin(); iter != arr.end(); ++iter)
    {
        if(!(*iter % divisor))
        {
            answer.push_back(*iter);
        }
    }
    if(answer.empty())
        answer.push_back(-1);
    else
        std::sort(answer.begin(), answer.end());
    
    return answer;
}",https://github.com/KimDaeMins/CodingTest/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12910.%E2%80%85%EB%82%98%EB%88%84%EC%96%B4%E2%80%85%EB%96%A8%EC%96%B4%EC%A7%80%EB%8A%94%E2%80%85%EC%88%AB%EC%9E%90%E2%80%85%EB%B0%B0%EC%97%B4/%EB%82%98%EB%88%84%EC%96%B4%E2%80%85%EB%96%A8%EC%96%B4%EC%A7%80%EB%8A%94%E2%80%85%EC%88%AB%EC%9E%90%E2%80%85%EB%B0%B0%EC%97%B4.cpp,2023. 8. 24,15,1
2023. 8. 24 오후 12:34:46,김대민,Unity,12 - 두 정수 사이의 합,"#include <string>
#include <vector>

using namespace std;

long long solution(int a, int b) {
    long long answer = 0;
    
    if(a > b)
    {
        int temp = a;
        a = b; 
        b = temp;
    }
    for(int i = a; i <= b; ++i)
    {
        answer += i;
    }
    return answer;
}",https://github.com/KimDaeMins/CodingTest/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12912.%E2%80%85%EB%91%90%E2%80%85%EC%A0%95%EC%88%98%E2%80%85%EC%82%AC%EC%9D%B4%EC%9D%98%E2%80%85%ED%95%A9/%EB%91%90%E2%80%85%EC%A0%95%EC%88%98%E2%80%85%EC%82%AC%EC%9D%B4%EC%9D%98%E2%80%85%ED%95%A9.cpp,2023. 8. 24,12,1
2023. 8. 24 오후 12:35:11,김민재,AI,3 - 자릿수 더하기,"def solution(n):
    answer = 0

    if not 0 < n <= 100000000:
        return False
    else:
        for x in str(n):
            answer += int(x)
        return answer",https://github.com/Kim-Minjae9872/Code_Kata,2023. 8. 24,3,1
2023. 8. 24 오후 12:35:17,김대민,Unity,24 - 문자열 내림차순으로 배치하기,"#include <string>
#include <vector>
#include <algorithm>
using namespace std;

string solution(string s) {
    string answer = """";
    std::sort(s.begin(), s.end(), greater<char>());
    answer = s;
    return answer;
}",https://github.com/KimDaeMins/CodingTest/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12917.%E2%80%85%EB%AC%B8%EC%9E%90%EC%97%B4%E2%80%85%EB%82%B4%EB%A6%BC%EC%B0%A8%EC%88%9C%EC%9C%BC%EB%A1%9C%E2%80%85%EB%B0%B0%EC%B9%98%ED%95%98%EA%B8%B0/%EB%AC%B8%EC%9E%90%EC%97%B4%E2%80%85%EB%82%B4%EB%A6%BC%EC%B0%A8%EC%88%9C%EC%9C%BC%EB%A1%9C%E2%80%85%EB%B0%B0%EC%B9%98%ED%95%98%EA%B8%B0.cpp,2023. 8. 24,24,1
2023. 8. 24 오후 12:35:45,김대민,Unity,26 - 문자열 다루기 기본,"#include <iostream>
#include <string>
#include <vector>

using namespace std;

bool solution(string s) {
    bool answer = true;
    
    int i = 0;
    for(; i < s.size(); ++i)
    {
        char digit = s[i];
        if(digit < '0' || digit > '9')
        {
            answer = false;
            break;
        }
    }
    if(i != 4 && i != 6)
       answer = false;
        
    
    return answer;
}",https://github.com/KimDaeMins/CodingTest/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12918.%E2%80%85%EB%AC%B8%EC%9E%90%EC%97%B4%E2%80%85%EB%8B%A4%EB%A3%A8%EA%B8%B0%E2%80%85%EA%B8%B0%EB%B3%B8/%EB%AC%B8%EC%9E%90%EC%97%B4%E2%80%85%EB%8B%A4%EB%A3%A8%EA%B8%B0%E2%80%85%EA%B8%B0%EB%B3%B8.cpp,2023. 8. 24,26,1
2023. 8. 24 오후 12:36:05,김대민,Unity,21 - 수박수박수박수박수박수?,"#include <string>
#include <vector>

using namespace std;

string solution(int n) {
    string answer = """";
    
    for(int i = 0; i < n; ++i)
    {
        if(i & 1)
            answer += ""박"";
        else
            answer += ""수"";
    }
    return answer;
}",https://github.com/KimDaeMins/CodingTest/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12922.%E2%80%85%EC%88%98%EB%B0%95%EC%88%98%EB%B0%95%EC%88%98%EB%B0%95%EC%88%98%EB%B0%95%EC%88%98%EB%B0%95%EC%88%98%EF%BC%9F/%EC%88%98%EB%B0%95%EC%88%98%EB%B0%95%EC%88%98%EB%B0%95%EC%88%98%EB%B0%95%EC%88%98%EB%B0%95%EC%88%98%EF%BC%9F.cpp,2023. 8. 24,21,1
2023. 8. 24 오후 12:36:24,김대민,Unity,8 - 문자열을 정수로 바꾸기,"#include <string>
#include <vector>

using namespace std;

int solution(string s) {
    int answer = stoi(s);
    return answer;
}",https://github.com/KimDaeMins/CodingTest/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12925.%E2%80%85%EB%AC%B8%EC%9E%90%EC%97%B4%EC%9D%84%E2%80%85%EC%A0%95%EC%88%98%EB%A1%9C%E2%80%85%EB%B0%94%EA%BE%B8%EA%B8%B0/%EB%AC%B8%EC%9E%90%EC%97%B4%EC%9D%84%E2%80%85%EC%A0%95%EC%88%98%EB%A1%9C%E2%80%85%EB%B0%94%EA%BE%B8%EA%B8%B0.cpp,2023. 8. 24,8,1
2023. 8. 24 오후 12:36:44,김대민,Unity,4 - 약수의 합,"public class Solution {
    public int solution(int n) {
        int answer = 0;
        
        for(int i = 1; i <= n; ++i)
        {
            if(n % i == 0)
                answer += i;
        }
        return answer;
    }
}",https://github.com/KimDaeMins/CodingTest/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12928.%E2%80%85%EC%95%BD%EC%88%98%EC%9D%98%E2%80%85%ED%95%A9/%EC%95%BD%EC%88%98%EC%9D%98%E2%80%85%ED%95%A9.cs,2023. 8. 24,4,1
2023. 8. 24 오후 12:37:16,김대민,Unity,3 - 자릿수 더하기,"using System;

public class Solution {
    public int solution(int n) {
        int answer = 0;
        
        while(n > 0)
        {
            answer += n % 10;
            n /= 10;
        }
        return answer;
    }
}",https://github.com/KimDaeMins/CodingTest/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12931.%E2%80%85%EC%9E%90%EB%A6%BF%EC%88%98%E2%80%85%EB%8D%94%ED%95%98%EA%B8%B0/%EC%9E%90%EB%A6%BF%EC%88%98%E2%80%85%EB%8D%94%ED%95%98%EA%B8%B0.cs,2023. 8. 24,3,1
2023. 8. 24 오후 12:37:43,김대민,Unity,7 - 자연수 뒤집어 배열로 만들기,"#include <string>
#include <vector>
#include <algorithm>

using namespace std;

vector<int> solution(long long n) {
    vector<int> answer;
    
    while(n > 0)
    {
        answer.push_back(n % 10);
        n /= 10;
    }
    //std::reverse(answer.begin(), answer.end());
    return answer;
}",https://github.com/KimDaeMins/CodingTest/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12932.%E2%80%85%EC%9E%90%EC%97%B0%EC%88%98%E2%80%85%EB%92%A4%EC%A7%91%EC%96%B4%E2%80%85%EB%B0%B0%EC%97%B4%EB%A1%9C%E2%80%85%EB%A7%8C%EB%93%A4%EA%B8%B0/%EC%9E%90%EC%97%B0%EC%88%98%E2%80%85%EB%92%A4%EC%A7%91%EC%96%B4%E2%80%85%EB%B0%B0%EC%97%B4%EB%A1%9C%E2%80%85%EB%A7%8C%EB%93%A4%EA%B8%B0.cpp,2023. 8. 24,7,1
2023. 8. 24 오후 12:38:02,한병권,Unity,12 - 두 정수 사이의 합,"public class Solution {
    public long solution(int a, int b) {
        long answer = 0;
        if(b < a)
        {
            int temp = a;
            a = b;
            b = temp;
        }
        
        while (a<=b)
        {
            answer += a;
            a++;
        }

        return answer;
    }
}",https://github.com/hbg9212/AlgorithmCodekata,2023. 8. 24,12,1
2023. 8. 24 오후 12:38:04,김대민,Unity,10 - 정수 내림차순으로 배치하기,"#include <string>
#include <vector>
#include <algorithm>
using namespace std;

long long solution(long long n) {
    long long answer = 0;
    vector<int> a;
    while(n)
    {
        a.push_back(n % 10);
        n /= 10;
    }
    
    std::sort(a.begin(), a.end());
    int b = 1;
    for(int i = 0; i < a.size(); ++i)
    {
        answer += a[i] * b;
        b *= 10;
    }
    return answer;
}",https://github.com/KimDaeMins/CodingTest/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12933.%E2%80%85%EC%A0%95%EC%88%98%E2%80%85%EB%82%B4%EB%A6%BC%EC%B0%A8%EC%88%9C%EC%9C%BC%EB%A1%9C%E2%80%85%EB%B0%B0%EC%B9%98%ED%95%98%EA%B8%B0/%EC%A0%95%EC%88%98%E2%80%85%EB%82%B4%EB%A6%BC%EC%B0%A8%EC%88%9C%EC%9C%BC%EB%A1%9C%E2%80%85%EB%B0%B0%EC%B9%98%ED%95%98%EA%B8%B0.cpp,2023. 8. 24,10,1
2023. 8. 24 오후 12:38:25,김대민,Unity,9 - 정수 제곱근 판별,"#include <string>
#include <vector>
#include <cmath>
#include <math.h>
using namespace std;

long long solution(long long n) {
    long long answer = 0;
    double a = std::sqrt(n);
    if(a != (int)a)
    {
        answer = -1;
    }
    else
    {
        answer = powl(a + 1 , 2);
    }
    
    
    return answer;
}",https://github.com/KimDaeMins/CodingTest/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12934.%E2%80%85%EC%A0%95%EC%88%98%E2%80%85%EC%A0%9C%EA%B3%B1%EA%B7%BC%E2%80%85%ED%8C%90%EB%B3%84/%EC%A0%95%EC%88%98%E2%80%85%EC%A0%9C%EA%B3%B1%EA%B7%BC%E2%80%85%ED%8C%90%EB%B3%84.cpp,2023. 8. 24,9,1
2023. 8. 24 오후 12:38:47,김대민,Unity,19 - 제일 작은 수 제거하기,"#include <string>
#include <vector>

using namespace std;

vector<int> solution(vector<int> arr) {
    vector<int> answer;
    
    int minIndex;
    int minValue =  INT32_MAX;
    for(int i = 0 ; i < arr.size(); ++i)
    {
        if(minValue > arr[i])
        {
            minIndex = i;
            minValue = arr[i];
        }
    }
    
    if(arr.size() == 1)
    {
        answer.push_back(-1);
    }
    else
    {
        arr.erase(arr.begin() + minIndex);
        answer = arr;
    }
    return answer;
}",https://github.com/KimDaeMins/CodingTest/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12935.%E2%80%85%EC%A0%9C%EC%9D%BC%E2%80%85%EC%9E%91%EC%9D%80%E2%80%85%EC%88%98%E2%80%85%EC%A0%9C%EA%B1%B0%ED%95%98%EA%B8%B0/%EC%A0%9C%EC%9D%BC%E2%80%85%EC%9E%91%EC%9D%80%E2%80%85%EC%88%98%E2%80%85%EC%A0%9C%EA%B1%B0%ED%95%98%EA%B8%B0.cpp,2023. 8. 24,19,1
2023. 8. 24 오후 12:39:12,김대민,Unity,1 - 짝수와 홀수,"#include <string>
#include <vector>

using namespace std;

string solution(int num) {
    string answer = """";
    
    if(num % 2)
        answer = ""Odd"";
    else
        answer = ""Even"";
    return answer;
}",https://github.com/KimDaeMins/CodingTest/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12937.%E2%80%85%EC%A7%9D%EC%88%98%EC%99%80%E2%80%85%ED%99%80%EC%88%98/%EC%A7%9D%EC%88%98%EC%99%80%E2%80%85%ED%99%80%EC%88%98.cpp,2023. 8. 24,1,1
2023. 8. 24 오후 12:39:41,김대민,Unity,13 - 콜라츠 추측,"#include <string>
#include <vector>

using namespace std;

int solution(int num) {
    int answer = -1;
    long n = num;
    for(int i = 0 ;  i < 500; ++i)
    {
        if(n == 1)
        {
            answer = i;
            break;
        }
        
        if(n % 2)
        {
            n = n * 3 + 1;
        }
        else
        {
            n /= 2;
        }
    }
    
    return answer;
}",https://github.com/KimDaeMins/CodingTest/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12943.%E2%80%85%EC%BD%9C%EB%9D%BC%EC%B8%A0%E2%80%85%EC%B6%94%EC%B8%A1/%EC%BD%9C%EB%9D%BC%EC%B8%A0%E2%80%85%EC%B6%94%EC%B8%A1.cpp,2023. 8. 24,13,1
2023. 8. 24 오후 12:40:01,김대민,Unity,2 - 평균 구하기,"public class Solution {
    public double solution(int[] arr) {
        double answer = 0;
        
        foreach(int i in arr)
        {
            answer += i;
        }
        answer /= arr.Length;
        return answer;
    }
}",https://github.com/KimDaeMins/CodingTest/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12944.%E2%80%85%ED%8F%89%EA%B7%A0%E2%80%85%EA%B5%AC%ED%95%98%EA%B8%B0/%ED%8F%89%EA%B7%A0%E2%80%85%EA%B5%AC%ED%95%98%EA%B8%B0.cs,2023. 8. 24,2,1
2023. 8. 24 오후 12:40:19,김대민,Unity,11 - 하샤드 수,"#include <string>
#include <vector>

using namespace std;

bool solution(int x) {
    bool answer = true;
    int a = 0;
    int b = x;
    while(b)
    {
        a += b % 10;
        b /= 10;
    }
    
    if(x % a)
        answer = false;
    return answer;
}",https://github.com/KimDaeMins/CodingTest/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12947.%E2%80%85%ED%95%98%EC%83%A4%EB%93%9C%E2%80%85%EC%88%98/%ED%95%98%EC%83%A4%EB%93%9C%E2%80%85%EC%88%98.cpp,2023. 8. 24,11,1
2023. 8. 24 오후 12:40:42,김대민,Unity,17 - 핸드폰 번호 가리기,"#include <string>
#include <vector>

using namespace std;

string solution(string phone_number) {
    string answer = phone_number;
    
    for(int i = answer.length() - 5; i >= 0; --i)
    {
        answer[i] = '*';
    }
    
    return answer;
}",https://github.com/KimDaeMins/CodingTest/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12948.%E2%80%85%ED%95%B8%EB%93%9C%ED%8F%B0%E2%80%85%EB%B2%88%ED%98%B8%E2%80%85%EA%B0%80%EB%A6%AC%EA%B8%B0/%ED%95%B8%EB%93%9C%ED%8F%B0%E2%80%85%EB%B2%88%ED%98%B8%E2%80%85%EA%B0%80%EB%A6%AC%EA%B8%B0.cpp,2023. 8. 24,17,1
2023. 8. 24 오후 12:41:05,김대민,Unity,27 - 행렬의 덧셈,"#include <string>
#include <vector>

using namespace std;

vector<vector<int>> solution(vector<vector<int>> arr1, vector<vector<int>> arr2) {
    vector<vector<int>> answer;
    
    for(int i = 0; i < arr1.size(); ++i)
    {
        answer.push_back(vector<int>());
        for(int j = 0; j < arr1[i].size(); ++j)
        {
            answer[i].push_back(arr1[i][j] + arr2[i][j]);
        }
    }
    return answer;
}",https://github.com/KimDaeMins/CodingTest/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12950.%E2%80%85%ED%96%89%EB%A0%AC%EC%9D%98%E2%80%85%EB%8D%A7%EC%85%88/%ED%96%89%EB%A0%AC%EC%9D%98%E2%80%85%EB%8D%A7%EC%85%88.cpp,2023. 8. 24,27,1
2023. 8. 24 오후 12:41:27,김대민,Unity,6 - x만큼 간격이 있는 n개의 숫자,"public class Solution {
    public long[] solution(int x, int n) {
        long[] answer = new long[n];
        
        answer[0] = x;
        for(int i = 1; i < n; ++i)
        {
            answer[i] = answer[i - 1] + x;
        }
        return answer;
    }
}",https://github.com/KimDaeMins/CodingTest/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12954.%E2%80%85x%EB%A7%8C%ED%81%BC%E2%80%85%EA%B0%84%EA%B2%A9%EC%9D%B4%E2%80%85%EC%9E%88%EB%8A%94%E2%80%85n%EA%B0%9C%EC%9D%98%E2%80%85%EC%88%AB%EC%9E%90/x%EB%A7%8C%ED%81%BC%E2%80%85%EA%B0%84%EA%B2%A9%EC%9D%B4%E2%80%85%EC%9E%88%EB%8A%94%E2%80%85n%EA%B0%9C%EC%9D%98%E2%80%85%EC%88%AB%EC%9E%90.cs,2023. 8. 24,6,1
2023. 8. 24 오후 12:41:47,김대민,Unity,28 - 직사각형 별찍기,"#include <iostream>

using namespace std;

int main(void) {
    int a;
    int b;
    cin >> a >> b;
    
    for(int i = 0; i < b; ++i)
    {
        for(int j = 0; j < a; ++j)
        {
            cout<< '*';
        }
        cout << '\n';
    }
    
    
    
    
    return 0;
}",https://github.com/KimDaeMins/CodingTest/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12969.%E2%80%85%EC%A7%81%EC%82%AC%EA%B0%81%ED%98%95%E2%80%85%EB%B3%84%EC%B0%8D%EA%B8%B0/%EC%A7%81%EC%82%AC%EA%B0%81%ED%98%95%E2%80%85%EB%B3%84%EC%B0%8D%EA%B8%B0.cpp,2023. 8. 24,28,1
2023. 8. 24 오후 12:42:10,김대민,Unity,30 - 3진법 뒤집기,"#include <string>
#include <vector>
#include <algorithm>
using namespace std;

int solution(int n) {
    int answer = 0;
    vector<int> a;
    while(n)
    {
        a.push_back(n % 3);
        n /= 3;
    }
    //0121
    std::reverse(a.begin(), a.end());
    //1210
    int num = 1;
    for(int i = 0; i < a.size(); ++i)
    {
        answer += a[i] * num;
        num *= 3;
    }
    return answer;
}",https://github.com/KimDaeMins/CodingTest/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/68935.%E2%80%853%EC%A7%84%EB%B2%95%E2%80%85%EB%92%A4%EC%A7%91%EA%B8%B0/3%EC%A7%84%EB%B2%95%E2%80%85%EB%92%A4%EC%A7%91%EA%B8%B0.cpp,2023. 8. 24,30,1
2023. 8. 24 오후 12:42:26,김대민,Unity,22 - 내적,"#include <string>
#include <vector>

using namespace std;

int solution(vector<int> a, vector<int> b) {
    int answer = 0;
    
    for(int i =0; i < a.size() ;++i)
    {
        answer += a[i] * b[i];
    }
    return answer;
}",https://github.com/KimDaeMins/CodingTest/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/70128.%E2%80%85%EB%82%B4%EC%A0%81/%EB%82%B4%EC%A0%81.cpp,2023. 8. 24,22,1
2023. 8. 24 오후 12:42:46,김대민,Unity,16 - 음양 더하기,"#include <string>
#include <vector>

using namespace std;

int solution(vector<int> absolutes, vector<bool> signs) {
    
    int Size = absolutes.size();
    int answer = 0;
    for(int i = 0 ; i < Size; ++i)
    {
        answer += signs[i] ? absolutes[i] : -absolutes[i];
    }
    
    return answer;
}",https://github.com/KimDaeMins/CodingTest/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/76501.%E2%80%85%EC%9D%8C%EC%96%91%E2%80%85%EB%8D%94%ED%95%98%EA%B8%B0/%EC%9D%8C%EC%96%91%E2%80%85%EB%8D%94%ED%95%98%EA%B8%B0.cpp,2023. 8. 24,16,1
2023. 8. 24 오후 12:42:48,김해찬,Unity,31 - 이상한 문자 만들기,"public class Solution {
    public string solution(string s) {
        string answer = """";
        
        string[] temp = s.Split(' ');
        
        for(int i = 0; i < temp.Length; i++)
        {
            for(int j = 0; j < temp[i].Length; j++)
            {
                if((j+1) % 2 == 0 && temp[i][j] >= 'A' && temp[i][j] <= 'Z')
                {
                    answer += (char)(temp[i][j] + 32);
                }
                else if((j+1) % 2 != 0 && temp[i][j] >= 'a' && temp[i][j] <= 'z')
                {
                    answer += (char)(temp[i][j] - 32);
                }
                else
                {
                    answer += temp[i][j];
                }
            }
            
            if(temp.Length - i != 1)
            {
                answer += ' ';
            }
        }
        
        return answer;
    }
}",,2023. 8. 24,31,2
2023. 8. 24 오후 12:43:06,김대민,Unity,23 - 약수의 개수와 덧셈,"#include <string>
#include <vector>

using namespace std;

int solution(int left, int right) {
    int answer = 0;
    
    for(int i = left; i <= right; ++i)
    {
        int count = 0;
        for(int j = 1; j <= i; ++j)
        {
            if(!(i % j))
                ++count;
        }
        answer += count & 1 ? -i : i;
            
    }
    return answer;
}",https://github.com/KimDaeMins/CodingTest/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/77884.%E2%80%85%EC%95%BD%EC%88%98%EC%9D%98%E2%80%85%EA%B0%9C%EC%88%98%EC%99%80%E2%80%85%EB%8D%A7%EC%85%88/%EC%95%BD%EC%88%98%EC%9D%98%E2%80%85%EA%B0%9C%EC%88%98%EC%99%80%E2%80%85%EB%8D%A7%EC%85%88.cpp,2023. 8. 24,23,1
2023. 8. 24 오후 12:43:32,김대민,Unity,25 - 부족한 금액 계산하기,"#include <cmath>

using namespace std;

long long solution(int price, int money, int count)
{
    long long answer = -1;
    
    long long pay = 0;
    for(int i = 1; i <= count; ++i)
    {
        pay += price * i;
    }
    answer = pay - money;
    if(answer < 0)
        answer = 0;
    return answer;
}",https://github.com/KimDaeMins/CodingTest/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/82612.%E2%80%85%EB%B6%80%EC%A1%B1%ED%95%9C%E2%80%85%EA%B8%88%EC%95%A1%E2%80%85%EA%B3%84%EC%82%B0%ED%95%98%EA%B8%B0/%EB%B6%80%EC%A1%B1%ED%95%9C%E2%80%85%EA%B8%88%EC%95%A1%E2%80%85%EA%B3%84%EC%82%B0%ED%95%98%EA%B8%B0.cpp,2023. 8. 24,25,1
2023. 8. 24 오후 12:43:53,김대민,Unity,18 - 없는 숫자 더하기,"#include <string>
#include <vector>

using namespace std;

int solution(vector<int> numbers) {
    int answer = 0;
    int arr[10] = {0,1, 2,3, 4, 5, 6 ,7 ,8 ,9};
    
    for(int i = 0; i < numbers.size(); ++i)
    {
        arr[numbers[i]] = 0;
    }
    for(int i = 1; i  < 10; ++i)
    {
        answer += arr[i];
    }
    if(answer == 0)
        answer = -1;
    return answer;
}",https://github.com/KimDaeMins/CodingTest/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/86051.%E2%80%85%EC%97%86%EB%8A%94%E2%80%85%EC%88%AB%EC%9E%90%E2%80%85%EB%8D%94%ED%95%98%EA%B8%B0/%EC%97%86%EB%8A%94%E2%80%85%EC%88%AB%EC%9E%90%E2%80%85%EB%8D%94%ED%95%98%EA%B8%B0.cpp,2023. 8. 24,18,1
2023. 8. 24 오후 12:44:13,김대민,Unity,5 - 나머지가 1이 되는 수 찾기,"using System;

public class Solution {
    public int solution(int n) {
        int answer = 0;
        
        for(int i = 1; i < n; ++i)
        {
            if(n % i == 1)
            { 
                answer = i;
                break;
            }
        }
        return answer;
    }
}",https://github.com/KimDaeMins/CodingTest/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/87389.%E2%80%85%EB%82%98%EB%A8%B8%EC%A7%80%EA%B0%80%E2%80%851%EC%9D%B4%E2%80%85%EB%90%98%EB%8A%94%E2%80%85%EC%88%98%E2%80%85%EC%B0%BE%EA%B8%B0/%EB%82%98%EB%A8%B8%EC%A7%80%EA%B0%80%E2%80%851%EC%9D%B4%E2%80%85%EB%90%98%EB%8A%94%E2%80%85%EC%88%98%E2%80%85%EC%B0%BE%EA%B8%B0.cs,2023. 8. 24,5,1
2023. 8. 24 오후 12:45:34,김대민,Unity,14 - 서울에서 김서방 찾기,"#include <string>
#include <vector>

using namespace std;

string solution(vector<string> seoul) {
    string answer = ""김서방은 "";
    for(int i = 0 ; i  < seoul.size(); ++i)
    {
        if(seoul[i] == ""Kim"")
        {  
            answer +=  to_string(i); 
            break;
        }
    }
    answer +=""에 있다"";
    return answer;
}",https://github.com/KimDaeMins/CodingTest/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12919.%E2%80%85%EC%84%9C%EC%9A%B8%EC%97%90%EC%84%9C%E2%80%85%EA%B9%80%EC%84%9C%EB%B0%A9%E2%80%85%EC%B0%BE%EA%B8%B0/%EC%84%9C%EC%9A%B8%EC%97%90%EC%84%9C%E2%80%85%EA%B9%80%EC%84%9C%EB%B0%A9%E2%80%85%EC%B0%BE%EA%B8%B0.cpp,2023. 8. 24,14,1
2023. 8. 24 오후 12:47:10,김대민,Unity,29 - 최대공약수와 최소공배수,"#include <string>
#include <vector>

using namespace std;

int gcd(int a, int b) {
    while (b != 0) {
        int temp = b;
        b = a % b;
        a = temp;
    }
    return a;
}

vector<int> solution(int n, int m) {
    vector<int> answer;
    answer.push_back(gcd(n, m));
    answer.push_back(n * m / answer[0]);
    return answer;
}",https://github.com/KimDaeMins/CodingTest/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12940.%E2%80%85%EC%B5%9C%EB%8C%80%EA%B3%B5%EC%95%BD%EC%88%98%EC%99%80%E2%80%85%EC%B5%9C%EC%86%8C%EA%B3%B5%EB%B0%B0%EC%88%98/%EC%B5%9C%EB%8C%80%EA%B3%B5%EC%95%BD%EC%88%98%EC%99%80%E2%80%85%EC%B5%9C%EC%86%8C%EA%B3%B5%EB%B0%B0%EC%88%98.cpp,2023. 8. 24,29,1
2023. 8. 24 오후 12:47:42,김해찬,Unity,32 - 삼총사,"using System;

public class Solution {
    public int solution(int[] number) {
        int answer = 0;
        
        for(int i = 0; i < number.Length; i++)
        {
            for(int j = i+1; j < number.Length; j++)
            {
                for(int k = j+1; k < number.Length; k++)
                {
                    if(number[i] + number[j] + number[k] == 0)
                    {
                        answer++;
                    }
                }
            }
        }
        
        return answer;
    }
}",,2023. 8. 24,32,2
2023. 8. 24 오후 12:47:53,공혜진,AI,4 - 약수의 합,"def solution(n):
    answer = 0
    a = []
    for i in range(1, n + 1) :
        if n % i == 0:
            a.append(i)
            answer = sum(a)
    return answer       


result = solution(12)
print(result)",,2023. 8. 24,4,1
2023. 8. 24 오후 12:48:43,한병권,Unity,13 - 콜라츠 추측,"public class Solution {
    public int solution(long num) {
        int answer = 0;
        while (num > 1)
        {
            if(num % 2 == 0)
            {
                num = num /2;
            }
            else
            {
                num = (num * 3) + 1;
            }
            
            answer++;
            if (answer >= 500)
            {
                answer = -1;
                break;
            }
        }

        return answer;
    }
}",https://github.com/hbg9212/AlgorithmCodekata,2023. 8. 24,13,1
2023. 8. 24 오후 12:49:29,조호진,AI,9 - 정수 제곱근 판별,"def solution(n):
    answer = 0
    a = n**0.5
    if a %1 ==0:
        answer = (a+1)**2
    else:
        answer = -1
    return answer",https://github.com/bm4706/Algorithm_practice,2023. 8. 24,9,1
2023. 8. 24 오후 12:51:36,한병권,Unity,14 - 서울에서 김서방 찾기,"public class Solution {
    public string solution(string[] seoul) {
        string answer = ""김서방은 "";
        
        for(int i = 0; i<seoul.Length; i++)
        {
            if(seoul[i] == ""Kim"")
            {
                answer = answer + i;
            }
        }
        
        answer = answer + ""에 있다"";
        return answer;
    }
}",https://github.com/hbg9212/AlgorithmCodekata,2023. 8. 24,14,1
2023. 8. 24 오후 12:59:39,김정규,AI,4 - 약수의 합,"def solution(n):
    answer = 0
    for i in range(1, n+1):
        if n % i == 0:
            answer += i
    return answer",https://github.com/JungGyu00/algorithm,2023. 8. 24,4,1
2023. 8. 24 오후 1:11:26,한병권,Unity,15 - 나누어 떨어지는 숫자,"public class Solution {
    public int[] solution(int[] arr, int divisor) {
        int[] answer;
        int c = 0;
        for(int i=0; i<arr.Length; i++)
        {
            if(arr[i]%divisor == 0)
                c++;
        }
        if(c == 0)
        {
            c++;
            answer = new int[] {-1};
        }
        else
        {
            answer = new int[c];
            c = 0;
            for(int i=0; i<arr.Length; i++)
            {
                if(arr[i]%divisor == 0)
                    answer[c++] = arr[i];
            }
        }
        
        for(int i = 0; i < c; i++)
        {
            int minIndex = i;

            for (int j = i + 1; j < c; j++)
            {
                if (answer[j] < answer[minIndex])
                {
                    minIndex = j;
                }
            }

            int temp = answer[i];
            answer[i] = answer[minIndex];
            answer[minIndex] = temp;
        }
        
        
        return answer;
    }
}",https://github.com/hbg9212/AlgorithmCodekata,2023. 8. 24,15,1
2023. 8. 24 오후 1:12:04,문현우,Unity,4 - 약수의 합,"public class Solution {
    public int solution(int n) {
        int answer = 0;
        
        for(int i = 1; i<= n; i++)
        {
            if(n%i == 0)
            {
                answer += i;
            }
        }
        return answer;
    }
}",https://github.com/Munch310/Algorithm-Csharp/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12928.%E2%80%85%EC%95%BD%EC%88%98%EC%9D%98%E2%80%85%ED%95%A9,2023. 8. 24,4,1
2023. 8. 24 오후 1:16:48,송명근,Unity,1 - 짝수와 홀수,"public class Solution {
    public string solution(int num) {
        string answer = """";
        if (num % 2 == 0) {
            answer = ""Even"";
        }
        else { answer = ""Odd"";}
        return answer;
    }
}",https://github.com/audrms6494/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12937.%E2%80%85%EC%A7%9D%EC%88%98%EC%99%80%E2%80%85%ED%99%80%EC%88%98,2023. 8. 24,1,1
2023. 8. 24 오후 1:19:36,한병권,Unity,16 - 음양 더하기,"using System;

public class Solution {
    public int solution(int[] absolutes, bool[] signs) {
        int answer = 0;
        
        for(int i = 0; i < absolutes.Length; i++)
        {
            if(signs[i])
            {
                answer += absolutes[i];
            }
            else
            {
                answer -= absolutes[i];
            }
        }
        return answer;
    }
}",https://github.com/hbg9212/AlgorithmCodekata,2023. 8. 24,16,1
2023. 8. 24 오후 1:23:48,김해찬,Unity,33 - 크기가 작은 부분,"using System;

public class Solution {
    public int solution(string t, string p)
    {
        int answer = 0;

        long cut = long.Parse(p);

        for (int i = 0; i <= t.Length - p.Length; i++)
        {
            long temp = long.Parse(t.Substring(i, p.Length));

            if (cut >= temp)
            {
                answer++;
            }
        }

        return answer;
    }
}",,2023. 8. 24,33,2
2023. 8. 24 오후 1:25:29,송명근,Unity,2 - 평균 구하기,"public class Solution {
    public double solution(int[] arr) {
        double answer = 0;
        int sum = 0;
        int length = 0;
        foreach (int i in arr)
        {
            sum += i;
            length += 1;
        }
        answer = (double) sum / length;
        return answer;
    }
}",https://github.com/audrms6494/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12944.%E2%80%85%ED%8F%89%EA%B7%A0%E2%80%85%EA%B5%AC%ED%95%98%EA%B8%B0,2023. 8. 24,2,1
2023. 8. 24 오후 1:25:57,김지우,AI,1 - 짝수와 홀수,"def solution(num):
    if num % 2 == 1:
        return ""Odd""
    if num % 2 != 1:
        return ""Even""
   ",,2023. 8. 24,1,1
2023. 8. 24 오후 1:30:19,김지우,AI,2 - 평균 구하기,"def solution(arr):
    result = sum(arr)/len(arr)
    return result",,2023. 8. 24,2,1
2023. 8. 24 오후 1:31:42,김도현B,Unity,1 - 짝수와 홀수,"public class Solution {
    public string solution(int num) {
        return num % 2 == 0 ? ""Even"" : ""Odd"";
    }
}",https://github.com/subscriptioncat/Algorithm,2023. 8. 24,1,1
2023. 8. 24 오후 1:37:15,김지우,AI,3 - 자릿수 더하기,"def solution(n):
    answer = 0
    for i in str(n):
        answer += int(i)

    return answer",,2023. 8. 24,3,1
2023. 8. 24 오후 1:38:30,김도현B,Unity,2 - 평균 구하기,"using System.Linq;
public class Solution {
    public double solution(int[] arr) {
        return arr.Average();
    }
}",https://github.com/subscriptioncat/Algorithm,2023. 8. 24,2,1
2023. 8. 24 오후 1:39:31,문현우,Unity,5 - 나머지가 1이 되는 수 찾기,"using System;

public class Solution {
    public int solution(int n) {
        int answer = 0;
        for(int x = 1; x < n; x++)
        {
            if( n % x == 1){
                answer = x;
                break;
            }
        }
        return answer;
    }
}",https://github.com/Munch310/Algorithm-Csharp/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/87389.%E2%80%85%EB%82%98%EB%A8%B8%EC%A7%80%EA%B0%80%E2%80%851%EC%9D%B4%E2%80%85%EB%90%98%EB%8A%94%E2%80%85%EC%88%98%E2%80%85%EC%B0%BE%EA%B8%B0,2023. 8. 24,5,1
2023. 8. 24 오후 1:39:48,김해찬,Unity,34 - 최소직사각형,"using System;

public class Solution {
    public  int solution(int[,] sizes)
    {
        int answer = 0;

        int maxX = 0;
        int maxY = 0;

        for (int i = 0; i < sizes.GetLength(0); i++)
        {
            if (sizes[i, 0] < sizes[i, 1])
            {
                int temp = sizes[i, 0];
                sizes[i, 0] = sizes[i, 1];
                sizes[i, 1] = temp;
            }
        }

        for (int i = 0; i < sizes.GetLength(0); i++)
        {
            if (sizes[i, 0] > maxX)
            {
                maxX = sizes[i, 0];
            }
            if (sizes[i, 1] > maxY)
            {
                maxY = sizes[i, 1];
            }
        }

        answer = maxX * maxY;

        return answer;
    }
}",,2023. 8. 24,34,2
2023. 8. 24 오후 1:49:03,김해찬,Unity,35 - 시저 암호,"public class Solution {
    public string solution(string s, int n) {
        string answer = """";
        
        for(int i = 0; i < s.Length; i++)
        {
            if(s[i] == ' ')
            {
                answer += s[i];
            }
            else if(s[i] >= 'A' && s[i] <= 'Z')
            {
                char temp = (char)(s[i] + n);
                
                if(temp > 'Z')
                {
                    temp -= (char)26;
                }
                
                answer += temp;
            }
            else if(s[i] >= 'a' && s[i] <= 'z')
            {
                char temp = (char)(s[i] + n);
                
                if(temp > 'z')
                {
                    temp -= (char)26;
                }
                
                answer += temp;
            }
        }
        return answer;
    }
}",,2023. 8. 24,35,2
2023. 8. 24 오후 1:49:12,김지우,AI,4 - 약수의 합,"def solution(n):
    answer = 0
    for i in range(1, n+1):
        if n % i == 0:
            answer +=  i
        
    return answer",,2023. 8. 24,4,1
2023. 8. 24 오후 1:50:48,차명경,AI,1 - 짝수와 홀수,"def solution(num):
    
    result = num % 2
    
    if result == 0:
        print(""Even"")
        return
    
    else:
        print(""Odd"")
        return
    
print (solution())
",,2023. 8. 24,1,1
2023. 8. 24 오후 1:57:13,김도현B,Unity,3 - 자릿수 더하기,"using System;

public class Solution {
    public int solution(int n) {
        int answer = 0;
        while (n!=0)
        {
            answer += n%10;
            n = n/10;
        }
        return answer;
    }
}",https://github.com/subscriptioncat/Algorithm,2023. 8. 24,3,1
2023. 8. 24 오후 1:57:31,김해찬,Unity,36 - 숫자 문자열과 영단어,"using System;

public class Solution {
    public int solution(string s) {
        int answer = 0;
        
        string[] rules = new string[10] { ""zero"", ""one"", ""two"", ""three"", ""four"", ""five"", ""six"", ""seven"", ""eight"", ""nine""};
        
        string temp = """";
        string hold = """";
        
        for(int i = 0; i < s.Length; i++)
        {
            if(s[i] >= '0' && s[i] <= '9')
            {
                hold += s[i];
            }
            else
            {
                temp += s[i];
                for(int j = 0; j < rules.Length; j++)
                {
                    if(temp == rules[j])
                    {
                        hold += j.ToString();
                        temp = """";
                    }
                }
            }
        }
        
        answer = int.Parse(hold);
        
        return answer;
    }
}",,2023. 8. 24,36,2
2023. 8. 24 오후 1:58:54,차명경,AI,1 - 짝수와 홀수,"def solution(num):
    if num %2 == 0:
        return('Even')
    else:
        return ('Odd')
",https://github.com/myeongkyeongcha/Test,2023. 8. 24,1,1
2023. 8. 24 오후 2:02:12,김도현B,Unity,4 - 약수의 합,"public class Solution {
    public int solution(int n) {
        int answer = 0;
        for(int i = 1; i <= n ; i++){
            answer += n % i == 0 ? i : 0;
        }
        return answer;
    }
}",https://github.com/subscriptioncat/Algorithm/commits/main,2023. 8. 24,4,1
2023. 8. 24 오후 2:05:48,명세인,AI,7 - 자연수 뒤집어 배열로 만들기,"def solution(n):
    answer = []
    n = str(n)
    for a in n:
        answer.append(int(a))
    answer = list(reversed(answer))   # answer = answer[::-1]
    return answer",https://github.com/playersein/Coding_Test/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12932.%E2%80%85%EC%9E%90%EC%97%B0%EC%88%98%E2%80%85%EB%92%A4%EC%A7%91%EC%96%B4%E2%80%85%EB%B0%B0%EC%97%B4%EB%A1%9C%E2%80%85%EB%A7%8C%EB%93%A4%EA%B8%B0,2023. 8. 24,7,1
2023. 8. 24 오후 2:16:20,김도현B,Unity,5 - 나머지가 1이 되는 수 찾기,"using System;

public class Solution {
    public int solution(int n) {
        int answer = 2;
        while(n % answer != 1){
            answer++;
        }
        return answer;
    }
}",https://github.com/subscriptioncat/Algorithm,2023. 8. 24,5,1
2023. 8. 24 오후 2:22:52,우민규,Unity,5 - 나머지가 1이 되는 수 찾기,"using System;

public class Solution {
    public int solution(int n) {
        int answer = 0;
        
        for(int i = 1; ++i < n - 1;) //i = 1 ; 2 < 33 - 1; 2<32 3< 32....
        {
            if(n % i == 1) // 32 2 == 0 31
            {
                answer = i;
                break;
            }
        }
            
        if(answer == 0)
            answer = n - 1;
        
            return answer;
    }
}",https://github.com/Woomingyu/Programmers.git,2023. 8. 24,5,1
2023. 8. 24 오후 2:29:48,김해찬,Unity,37 - 문자열 내 마음대로 정렬하기,"using System.Collections;
using System.Collections.Generic;

public class Solution {
    public string[] solution(string[] strings, int n) {
        string[] answer = new string[strings.Length];
        
        for(int i = 0; i < strings.Length; i++)
        {   
            for(int j = 0; j < strings.Length; j++)
            {
                if(strings[i][n] < strings[j][n])
                {
                    string temp = strings[i];
                    strings[i] = strings[j];
                    strings[j] = temp;
                }
                else if(strings[i][n] == strings[j][n])
                {
                    List<string> lst = new List<string>();
                    
                    lst.Add(strings[i]);
                    lst.Add(strings[j]);
                    
                    lst.Sort();
                    
                    strings[i] = lst[1];
                    strings[j] = lst[0];
                }
            }
        }
        
        for(int i = 0; i < strings.Length; i++)
        {
            answer[i] = strings[i];
        }
        
        return answer;
    }
}",,2023. 8. 24,37,2
2023. 8. 24 오후 2:30:12,한병권,Unity,17 - 핸드폰 번호 가리기,"public class Solution {
    public string solution(string phone_number) {
        string answer = """";
        
        for(int i = 0; i < phone_number.Length; i++)
        {
            if( i < phone_number.Length - 4)
            {
                answer = answer + ""*"";
            }
            else
            {
                answer = answer + phone_number.Substring(i,1);
            }
        }
        
        return answer;
    }
}",https://github.com/hbg9212/AlgorithmCodekata,2023. 8. 24,17,1
2023. 8. 24 오후 2:35:07,박민호,Unity,6 - x만큼 간격이 있는 n개의 숫자,"
public class Solution {
    public long[] solution(int x, int n) {
        long[] answer = new long[n];
        for(long i=0;i<n;i++){
            answer[i]=x*(i+1);
        }       
        return answer;
    }
}",,2023. 8. 24,6,1
2023. 8. 24 오후 2:38:18,한병권,Unity,18 - 없는 숫자 더하기,"using System;

public class Solution {
    public int solution(int[] numbers) {
        int answer = 45;
        
        for(int i = 0; i < numbers.Length; i++)
        {
            answer -= numbers[i];
        }
        
        return answer;
    }
}",https://github.com/hbg9212/AlgorithmCodekata,2023. 8. 24,18,1
2023. 8. 24 오후 2:40:55,김해찬,Unity,38 - K번째수정렬,"using System;
using System.Collections;
using System.Collections.Generic;

public class Solution {
    public int[] solution(int[] array, int[,] commands) {
        int[] answer = new int[commands.GetLength(0)];
        
        for(int i = 0; i < answer.Length; i++)
        {
            int a = commands[i, 0];
            int b = commands[i, 1];
            int c = commands[i, 2];
            
            List<int> lst = new List<int>();
            
            for(int j = a-1; j < b; j++)
            {
                lst.Add(array[j]);
            }
            
            lst.Sort();
            
            answer[i] = lst[c - 1];
        }
        
        return answer;
    }
}",,2023. 8. 24,38,2
2023. 8. 24 오후 2:41:52,김민상,Unity,15 - 나누어 떨어지는 숫자,"using System.Collections.Generic;
public class Solution {
    public int[] solution(int[] arr, int divisor)
    {
        List<int> list = new List<int>();
        foreach (int num in arr)
            if (num % divisor == 0)
                list.Add(num);

        if (list.Count > 0)
            list.Sort();
        else
            return new int[] { -1 };

        return list.ToArray();
    }
}",,2023. 8. 24,15,1
2023. 8. 24 오후 2:46:17,김민상,Unity,16 - 음양 더하기,"public class Solution {
    public int solution(int[] absolutes, bool[] signs) {
        int answer = 0;
        for (int i = 0; i < signs.Length; i++)
            answer += absolutes[i] * (signs[i] ? 1 : -1);
        return answer;
    }
}",,2023. 8. 24,16,1
2023. 8. 24 오후 2:52:01,김민상,Unity,17 - 핸드폰 번호 가리기,"public class Solution {
    public string solution(string phone_number) => """".PadLeft(phone_number.Length - 4, '*') + phone_number.Substring(phone_number.Length - 4);
}",,2023. 8. 24,17,1
2023. 8. 24 오후 2:53:20,차명경,AI,2 - 평균 구하기,"def solution(arr):
    return sum(arr)/len(arr)",https://github.com/myeongkyeongcha/Test/tree/main,2023. 8. 24,2,1
2023. 8. 24 오후 2:54:48,김도현B,Unity,6 - x만큼 간격이 있는 n개의 숫자,"public class Solution {
    public long[] solution(int x, int n) {
        long[] answer = new long[n];
        for(int i = 1; i <= n; i++) 
            answer[ i - 1] = (long)x*i;
        return answer;
    }
}",https://github.com/subscriptioncat/Algorithm,2023. 8. 24,6,1
2023. 8. 24 오후 2:55:01,김민상,Unity,18 - 없는 숫자 더하기,"public class Solution {
    public int solution(int[] numbers) {
        int answer = 45;
        foreach (int num in numbers)
            answer -= num;
        return answer;
    }
}",,2023. 8. 24,18,1
2023. 8. 24 오후 3:02:51,한병권,Unity,19 - 제일 작은 수 제거하기,"public class Solution {
    public int[] solution(int[] arr) {
        int index = arr.Length;
        int[] answer;
        
        if (index == 1)
        {
            answer = new int[] {-1};
        }
        else
        {
            answer = new int[--index]; 
            int temp = arr[0];
            for (int i = 0; i < index; i++)
            {
                if(temp > arr[i +1])
                {
                    temp = arr[i+1];
                }
            }
            index = 0;
            for (int i = 0; i < arr.Length; i++)
            {
                if(arr[i] > temp)
                {
                    answer[index++] = arr[i];     
                }
            }
        }
                
        return answer;
    }
}",https://github.com/hbg9212/AlgorithmCodekata,2023. 8. 24,19,1
2023. 8. 24 오후 3:07:16,김해찬,Unity,39 - 두 개 뽑아서 더하기,"using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;

public class Solution {
    public int[] solution(int[] numbers) {
        List<int> lst = new List<int>();
        
        for(int i = 0; i < numbers.Length; i++)
        {   
            for(int j = 0; j < numbers.Length; j++)
            {
                if(i == j)
                {
                    continue;
                }
                lst.Add(numbers[i] + numbers[j]);
            }
        }
        
        lst = lst.Distinct().ToList();
        
        lst.Sort();
        
        int[] answer = new int[lst.Count];
        
        for(int i = 0; i < lst.Count; i++)
        {
            answer[i] = lst[i];
        }
        
        return answer;
    }
}",,2023. 8. 24,39,2
2023. 8. 24 오후 3:08:16,김도현B,Unity,7 - 자연수 뒤집어 배열로 만들기,"using System;
public class Solution {
    public int[] solution(long n) {
        int[] answer = new int[(int)Math.Log10(n) + 1];
        int i = 0;
        while (n != 0)
        {
            answer[i] = (int)(n % 10);
            n /= 10;
            i++;
        }
        return answer;
    }
}",https://github.com/subscriptioncat/Algorithm,2023. 8. 24,7,1
2023. 8. 24 오후 3:08:38,한병권,Unity,20 - 가운데 글자 가져오기,"public class Solution {
    public string solution(string s) {
        int index = s.Length/2;
        
        bool isEven = s.Length % 2 == 0 ? true : false;
        
        string answer = """";
        
        if(isEven)
        {
            answer = s.Substring(--index,2);    
        }
        else
        {
            answer = s.Substring(index,1);
        }
        
        return answer;
    }
}",https://github.com/hbg9212/AlgorithmCodekata,2023. 8. 24,20,1
2023. 8. 24 오후 3:13:41,한병권,Unity,21 - 수박수박수박수박수박수?,"public class Solution {
    public string solution(int n) {
        bool isEven = n % 2 == 0 ? true : false;
        int index = n/2;
        string answer = """";

        if (isEven)
        {
            for(int i = 0; i < index; i++)
            {
                answer = answer + ""수박"";
            }
        }
        else
        {
            for(int i = 0; i < index; i++)
            {
                answer = answer + ""수박"";
            }
            answer = answer + ""수"";
        }

        return answer;
    }
}",https://github.com/hbg9212/AlgorithmCodekata,2023. 8. 24,21,1
2023. 8. 24 오후 3:13:57,김해찬,Unity,40 - 가장 가까운 같은 글자,"using System;

public class Solution {
    public int[] solution(string s) {
        int[] answer = new int[s.Length];
        
        int[] check = new int[26];
        
        for(int i = 0; i < 26; i++)
        {
            check[i] = -1;
        }
        
        for(int i = 0; i < s.Length; i++)
        {
            if(check[s[i] - 'a'] == -1)
            {
                answer[i] = -1;
                check[s[i] - 'a'] = i;
            }
            else
            {
                answer[i] = i - check[s[i] - 'a'];
                
                check[s[i] - 'a'] = i;
            }
        }
        
        return answer;
    }
}",,2023. 8. 24,40,2
2023. 8. 24 오후 3:14:59,우민규,Unity,6 - x만큼 간격이 있는 n개의 숫자,"public class Solution {
    public long[] solution(int x, int n) {
        long[] answer = new long[n];
        
        for(int i = 0; i < n; i++)
        {
            answer[i] = x + (x * i);
        }
        
        return answer;
    }
}",https://github.com/Woomingyu/Programmers.git,2023. 8. 24,6,1
2023. 8. 24 오후 3:15:52,김도현B,Unity,8 - 문자열을 정수로 바꾸기,"public class Solution {
    public int solution(string s) {
        return int.Parse(s);
    }
}",https://github.com/subscriptioncat/Algorithm,2023. 8. 24,8,1
2023. 8. 24 오후 3:16:35,한병권,Unity,22 - 내적,"using System;

public class Solution {
    public int solution(int[] a, int[] b) {
        int answer = 0;
        
        for (int i = 0; i < a.Length; i++)
        {
            answer += a[i] * b[i];
        }
        
        return answer;
    }
}",https://github.com/hbg9212/AlgorithmCodekata,2023. 8. 24,22,1
2023. 8. 24 오후 3:22:51,김광수,Unity,11 - 하샤드 수,"using System;

public class Solution {
    public bool solution(int x) {
        string str = x.ToString();
        int sum = 0;
        
        foreach(char c in str){
            sum += int.Parse(c.ToString());
        }
        
        return x % sum == 0 ? true : false;
    }
}",https://github.com/kksoo0131/Study/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12947.%E2%80%85%ED%95%98%EC%83%A4%EB%93%9C%E2%80%85%EC%88%98,2023. 8. 24,11,1
2023. 8. 24 오후 3:26:51,배인호,Unity,1 - 짝수와 홀수,"public class Solution {
    public string solution(int num) {
        string answer = """";
        
        if (num % 2 == 0) answer = ""Even"";
        else answer = ""Odd"";
        
        return answer;
    }
}",https://github.com/cutlake2000/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12937.%E2%80%85%EC%A7%9D%EC%88%98%EC%99%80%E2%80%85%ED%99%80%EC%88%98,2023. 8. 24,1,1
2023. 8. 24 오후 3:27:03,한병권,Unity,23 - 약수의 개수와 덧셈,"using System;

public class Solution {
    public int solution(int left, int right) {
        int answer = 0;
        
        for ( int i = left; i <= right; i++)
        {
            int divisor = 1;
            for ( int j = 1; j <= i/2; j++)
            {
                if(i%j == 0) ++divisor;
            }
            
            if(divisor % 2 == 0)
            {
                answer += i;
            }
            else
            {
                answer -= i;
            }
        }
        
        return answer;
    }
}",https://github.com/hbg9212/AlgorithmCodekata,2023. 8. 24,23,1
2023. 8. 24 오후 3:32:19,배인호,Unity,2 - 평균 구하기,"using System.Linq;

public class Solution {
    public double solution(int[] arr) {
        double answer = 0;
        
        answer = arr.Average();
        
        return answer;
    }
}",https://github.com/cutlake2000/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12944.%E2%80%85%ED%8F%89%EA%B7%A0%E2%80%85%EA%B5%AC%ED%95%98%EA%B8%B0,2023. 8. 24,2,1
2023. 8. 24 오후 3:32:33,김해찬,Unity,41 - 푸드 파이트 대회,"using System;
using System.Linq;

public class Solution {
    public string solution(int[] food) {
        string answer = """";
        
        for(int i = 1; i < food.Length; i++)
        {
            for(int j = 0; j < food[i] / 2; j++)
            {
                answer += i.ToString();
            }
        }
        string temp = String.Concat(answer.Reverse());
        answer += ""0"" + temp;
        return answer;
    }
}",,2023. 8. 24,41,2
2023. 8. 24 오후 3:33:15,김광수,Unity,12 - 두 정수 사이의 합,"using System;
public class Solution {
    public long solution(int a, int b) {
        long sum = 0;
        int max = Math.Max(a,b);
        int min = Math.Min(a,b);
        
        for (int i =min; i <=max; i++){
            sum += i;
        }
        
        return sum;
    }
}",https://github.com/kksoo0131/Study/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12912.%E2%80%85%EB%91%90%E2%80%85%EC%A0%95%EC%88%98%E2%80%85%EC%82%AC%EC%9D%B4%EC%9D%98%E2%80%85%ED%95%A9,2023. 8. 24,12,1
2023. 8. 24 오후 3:37:57,김도현B,Unity,9 - 정수 제곱근 판별,"using System;
public class Solution {
    public long solution(long n) {
        return Math.Floor(Math.Sqrt(n)) == Math.Sqrt(n) ? (long)Math.Pow((Math.Sqrt(n)+1),2) : -1;
    }
}",https://github.com/subscriptioncat/Algorithm,2023. 8. 24,9,1
2023. 8. 24 오후 3:47:03,김광수,Unity,13 - 콜라츠 추측,"using System;
public class Solution {
    public int solution(long num) {
        int count = 0;
        
        while(num != 1 && count++ < 500){
            num = num % 2 == 0 ? num/2 : num * 3 + 1;
        }
        
        return count >= 500 ? -1 : count;
    }
}",https://github.com/kksoo0131/Study/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12943.%E2%80%85%EC%BD%9C%EB%9D%BC%EC%B8%A0%E2%80%85%EC%B6%94%EC%B8%A1,2023. 8. 24,13,1
2023. 8. 24 오후 3:54:17,김광수,Unity,14 - 서울에서 김서방 찾기,"using System;
public class Solution {
    public string solution(string[] seoul) {      
        return $""김서방은 {Array.IndexOf(seoul,""Kim"")}에 있다"";
    }
}",https://github.com/kksoo0131/Study/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12919.%E2%80%85%EC%84%9C%EC%9A%B8%EC%97%90%EC%84%9C%E2%80%85%EA%B9%80%EC%84%9C%EB%B0%A9%E2%80%85%EC%B0%BE%EA%B8%B0,2023. 8. 24,14,1
2023. 8. 24 오후 3:58:57,김해찬,Unity,42 - 콜라 문제,"using System;

public class Solution {
    public int solution(int a, int b, int n) {
        int answer = 0;
        
        while(true)
        {
            if(a > n)
            {
                break;
            }
            else
            {
                n -= a;
                n += b;
                answer += b;
            }
        }
        return answer;
    }
}",,2023. 8. 24,42,2
2023. 8. 24 오후 4:00:06,김광수,Unity,15 - 나누어 떨어지는 숫자,"using System.Collections.Generic;
using System.Linq;

public class Solution {
    public int[] solution(int[] arr, int divisor) {
        List<int> list = new List<int>();
        
        foreach(int i in arr){
            if (i % divisor == 0){
                list.Add(i);
            }
        }
        list.Distinct();
        list.Sort();
        return list.Count == 0 ? new int[] {-1} : list.ToArray();
    }
}",https://github.com/kksoo0131/Study/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12910.%E2%80%85%EB%82%98%EB%88%84%EC%96%B4%E2%80%85%EB%96%A8%EC%96%B4%EC%A7%80%EB%8A%94%E2%80%85%EC%88%AB%EC%9E%90%E2%80%85%EB%B0%B0%EC%97%B4,2023. 8. 24,15,1
2023. 8. 24 오후 4:04:18,김광수,Unity,16 - 음양 더하기,"using System;

public class Solution {
    public int solution(int[] absolutes, bool[] signs) {
        int answer = 0;
        
        for(int i =0; i<signs.Length; i++){
            answer += signs[i] ? absolutes[i] : absolutes[i] * -1;
            
        }
        
        return answer;
    }
}",https://github.com/kksoo0131/Study/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/76501.%E2%80%85%EC%9D%8C%EC%96%91%E2%80%85%EB%8D%94%ED%95%98%EA%B8%B0,2023. 8. 24,16,1
2023. 8. 24 오후 4:04:28,김도현B,Unity,10 - 정수 내림차순으로 배치하기,"using System.Linq;
public class Solution {
    public long solution(long n) {
        return long.Parse(new string(n.ToString().ToCharArray().OrderByDescending(c => c).ToArray()));
    }
}",https://github.com/subscriptioncat/Algorithm,2023. 8. 24,10,1
2023. 8. 24 오후 4:09:28,김광수,Unity,17 - 핸드폰 번호 가리기,"using System.Text;
public class Solution
{
    public string solution(string phone_number)
    {
        StringBuilder str = new StringBuilder(phone_number);
        for (int i = 0; i < str.Length - 4; i++)
        {
            str[i] = '*';
        }
        return str.ToString();
    }
}",https://github.com/kksoo0131/Study/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12948.%E2%80%85%ED%95%B8%EB%93%9C%ED%8F%B0%E2%80%85%EB%B2%88%ED%98%B8%E2%80%85%EA%B0%80%EB%A6%AC%EA%B8%B0,2023. 8. 24,17,1
2023. 8. 24 오후 4:10:50,한병권,Unity,24 - 문자열 내림차순으로 배치하기,"using System.Linq;
using System.Collections.Generic;

public class Solution {
    public string solution(string s) {
        string answer = """";
        int index = s.Length;
        List<string> capital = new List<string>();
        List<string> small = new List<string>();
        
        for(int i = 0; i < index; i++)
        {
            string str = s.Substring(i,1);
            if(char.IsUpper(char.Parse(str)))
            {
                capital.Add(str);
            }
            else
            {
                small.Add(str);
            }
        }
        
        capital = capital.OrderByDescending(i => i).ToList();
        small = small.OrderByDescending(i => i).ToList();
        
        foreach(string str in small)
        {
            answer = answer + str;
        }
        foreach(string str in capital)
        {
            answer = answer + str;
        }
        
        return answer;
    }
}",https://github.com/hbg9212/AlgorithmCodekata,2023. 8. 24,24,1
2023. 8. 24 오후 4:13:57,김광수,Unity,18 - 없는 숫자 더하기,"using System;

public class Solution {
    public int solution(int[] numbers) {
        
        int max = 0;
        int sum = 0;
        for (int i= 0; i<=9; i++){
            max += i;
        }
        
        foreach(int i in numbers){
            sum += i;
        }
        
        return max-sum;
    }
}",https://github.com/kksoo0131/Study/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/86051.%E2%80%85%EC%97%86%EB%8A%94%E2%80%85%EC%88%AB%EC%9E%90%E2%80%85%EB%8D%94%ED%95%98%EA%B8%B0,2023. 8. 24,18,1
2023. 8. 24 오후 4:19:49,김도현B,Unity,11 - 하샤드 수,"using System;
public class Solution {
    public bool solution(int x) {
        int sum = 0;
        int n = x;
        for(int i = 0; i < Math.Log10(x)+1; i++)
        {
            sum += n % 10;
            n /= 10;
        }
        return x % sum == 0 ? true : false;
    }
}",https://github.com/subscriptioncat/Algorithm,2023. 8. 24,11,1
2023. 8. 24 오후 4:22:34,김광수,Unity,19 - 제일 작은 수 제거하기,"using System.Collections.Generic;
public class Solution {
    public int[] solution(int[] arr) {
        int minIndex = 0;
        
        List<int> list = new List<int>();
        
        for(int i=0; i< arr.Length; i++){
            minIndex = arr[minIndex] > arr[i] ? i : minIndex;
            list.Add(arr[i]);
        }
        
        list.RemoveAt(minIndex);
        
        if(list.Count == 0 ){
            list.Add(-1);
        }
        
        return list.ToArray();
    }
}",https://github.com/kksoo0131/Study/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12935.%E2%80%85%EC%A0%9C%EC%9D%BC%E2%80%85%EC%9E%91%EC%9D%80%E2%80%85%EC%88%98%E2%80%85%EC%A0%9C%EA%B1%B0%ED%95%98%EA%B8%B0,2023. 8. 24,19,1
2023. 8. 24 오후 4:27:18,김광수,Unity,20 - 가운데 글자 가져오기,"using System;
public class Solution {
    public string solution(string s) {
        string answer = """";
        int length = s.Length;
        return length % 2 ==0 ? s.Substring(length/2-1,2) : s.Substring(length/2,1);
    }
}",https://github.com/kksoo0131/Study/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12903.%E2%80%85%EA%B0%80%EC%9A%B4%EB%8D%B0%E2%80%85%EA%B8%80%EC%9E%90%E2%80%85%EA%B0%80%EC%A0%B8%EC%98%A4%EA%B8%B0,2023. 8. 24,20,1
2023. 8. 24 오후 4:28:26,한병권,Unity,25 - 부족한 금액 계산하기,"using System;

class Solution
{
    public long solution(int price, long money, int count)
    {
        long re = money;
        int index = 0;
        
        while (index < count)
        {
            re -= price * ++index;   
        }
        
        return re > 0 ? 0 : re * -1;
    }
}",https://github.com/hbg9212/AlgorithmCodekata,2023. 8. 24,25,1
2023. 8. 24 오후 4:29:24,김해찬,Unity,43 - 명예의 전당 (1),"using System;
using System.Collections;
using System.Collections.Generic;

public class Solution {
    public int[] solution(int k, int[] score) {
        List<int> lst = new List<int>();
        List<int> ans = new List<int>();
        
        for(int i = 0; i < k; i++)
        {
            if(score.Length == i)
            {
                break;
            }
            
            lst.Add(score[i]);
            lst.Sort();
            
            ans.Add(lst[0]);
        }
        
        if(k < score.Length)
        {
            for(int i = k; i < score.Length; i++)
            {
                if(lst[0] <= score[i])
                {
                   lst[0] = score[i];
                }
            
                lst.Sort();
            
                ans.Add(lst[0]);
            }
        }
        
        int[] answer = new int[ans.Count];
        
        for(int i = 0; i < ans.Count; i++)
        {
            answer[i] = ans[i];
        }
        
        return answer;
    }
}",,2023. 8. 24,43,2
2023. 8. 24 오후 4:33:22,김광수,Unity,21 - 수박수박수박수박수박수?,"using System.Text;
public class Solution {
    public string solution(int n) {
        StringBuilder answer = new StringBuilder();   
        for(int i = 0; i< n; i++){
            answer.Append(i % 2 == 0 ? ""수"" : ""박"");
        }
        return answer.ToString();
    }
}

/*public class Solution {
    public string solution(int n) {
        string answer = """";
        
        for(int i = 0; i< n; i++){
            answer += i % 2 == 0 ? ""수"" : ""박"";
        }
        return answer;
    }
}
//StringBuilder가 훨씬 빠르다
*/
",https://github.com/kksoo0131/Study/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12922.%E2%80%85%EC%88%98%EB%B0%95%EC%88%98%EB%B0%95%EC%88%98%EB%B0%95%EC%88%98%EB%B0%95%EC%88%98%EB%B0%95%EC%88%98%EF%BC%9F/%EC%88%98%EB%B0%95%EC%88%98%EB%B0%95%EC%88%98%EB%B0%95%EC%88%98%EB%B0%95%EC%88%98%EB%B0%95%EC%88%98%EF%BC%9F.cs,2023. 8. 24,21,1
2023. 8. 24 오후 4:35:30,김광수,Unity,22 - 내적,"using System;

public class Solution {
    public int solution(int[] a, int[] b) {
        int answer = 0;
        
        for(int i =0; i< a.Length;i++){
            answer += a[i]*b[i];
        }
        return answer;
    }
}",https://github.com/kksoo0131/Study/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/70128.%E2%80%85%EB%82%B4%EC%A0%81,2023. 8. 24,22,1
2023. 8. 24 오후 4:39:06,심명희,AI,4 - 약수의 합,"def solution(n):
    answer = 0
    sum = 0
    
    for i in range(1, n+1):
        if n % i == 0:
            sum += i
            answer = sum
            
    return answer",,2023. 8. 24,4,1
2023. 8. 24 오후 4:41:41,기현빈,Unity,7 - 자연수 뒤집어 배열로 만들기,"public class Solution {
    public int[] solution(long n) {
        int[] answer = new int[] {};
        return answer;
    }
}",https://github.com/homebd/Algorithm,2023. 8. 24,7,1
2023. 8. 24 오후 4:43:18,김해찬,Unity,44 - 2016년,"public class Solution {
    public string solution(int a, int b) {
        string answer = """";
        string[] dow = new string[] { ""FRI"", ""SAT"", ""SUN"", ""MON"", ""TUE"", ""WED"", ""THU""};
        int[] days = new int[] {31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31};
        
        int month = 1;
        int day = 1;
        int weekCnt = 0;
        
        while(true)
        {
            if(weekCnt == 7)
            {
                weekCnt = 0;
            }
            
            if(a == month && b == day)
            {
                return dow[weekCnt];
            }
            
            if(day == days[month-1])
            {
                day = 1;
                month++;
            }
            else
            {
                day++;
            }
            
            weekCnt++;
        }
        
        return answer;
    }
}",,2023. 8. 24,44,2
2023. 8. 24 오후 4:48:42,김광수,Unity,22 - 내적,"using System;

public class Solution {
    public int solution(int left, int right) {
        int answer = 0;
        
        while(left <= right){
            answer += func(left++);
        }
        
        return answer;
    }
    
    public int func(int num){
        int count =0;
        
        for (int i = 1; i<= num; i++){
            count += num % i == 0 ? 1 : 0;
        }

        return count % 2 == 0 ? num : num * -1 ;
    }
}",https://github.com/kksoo0131/Study/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/77884.%E2%80%85%EC%95%BD%EC%88%98%EC%9D%98%E2%80%85%EA%B0%9C%EC%88%98%EC%99%80%E2%80%85%EB%8D%A7%EC%85%88,2023. 8. 24,22,1
2023. 8. 24 오후 4:51:29,한병권,Unity,26 - 문자열 다루기 기본,"public class Solution {
    public bool solution(string s) {
        bool answer = true;
        
        if (s.Length == 4 || s.Length == 6)
        {
            for (int i = 0; i < s.Length; i++)
            {
                if(!char.IsDigit(char.Parse(s.Substring(i,1)))) answer = false;
            }
        }
        else
        {
            answer = false;
        }
        
        return answer;
    }
}",https://github.com/hbg9212/AlgorithmCodekata,2023. 8. 24,26,1
2023. 8. 24 오후 4:53:01,김해찬,Unity,45 - 카드 뭉치,"using System;

public class Solution {
    public string solution(string[] cards1, string[] cards2, string[] goal) {
        string answer = ""Yes"";
        
        int oneIdx = 0;
        int twoIdx = 0;
        
        for(int i = 0; i < goal.Length; i++)
        {
            bool trigger = false;
            
            if(cards1.Length > oneIdx && cards1[oneIdx] == goal[i])
            {
                oneIdx++;
                trigger = true;
            }
            else if(cards2.Length > twoIdx && cards2[twoIdx] == goal[i])
            {
                twoIdx++;
                trigger = true;
            }
            
            if(trigger == false)
            {
                answer = ""No"";
                break;
            }
        }
        
        return answer;
    }
}",,2023. 8. 24,45,2
2023. 8. 24 오후 4:59:23,김광수,Unity,24 - 문자열 내림차순으로 배치하기,"using System.Collections.Generic;
public class Solution
    {
        public string solution(string s)
        {
            List<char> list = new List<char>();
            foreach (char c in s)
            {
                list.Add(c);
            }

            list.Sort();
            list.Reverse();

            return new string(list.ToArray());
        }
    }",https://github.com/kksoo0131/Study/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12917.%E2%80%85%EB%AC%B8%EC%9E%90%EC%97%B4%E2%80%85%EB%82%B4%EB%A6%BC%EC%B0%A8%EC%88%9C%EC%9C%BC%EB%A1%9C%E2%80%85%EB%B0%B0%EC%B9%98%ED%95%98%EA%B8%B0,2023. 8. 24,24,1
2023. 8. 24 오후 5:02:13,김광수,Unity,25 - 부족한 금액 계산하기,"using System;

class Solution
{
    public long solution(int price, int money, int count)
    {
        long needMoney = 0;
        
        for(int i =1; i<= count; i++){
            needMoney += price * i;
        }
        
        return money >= needMoney ? 0 : needMoney - money;
    }
}",https://github.com/kksoo0131/Study/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/82612.%E2%80%85%EB%B6%80%EC%A1%B1%ED%95%9C%E2%80%85%EA%B8%88%EC%95%A1%E2%80%85%EA%B3%84%EC%82%B0%ED%95%98%EA%B8%B0,2023. 8. 24,25,1
2023. 8. 24 오후 5:05:22,김광수,Unity,26 - 문자열 다루기 기본,"public class Solution {
    public bool solution(string s) {
        return (s.Length == 4 || s.Length == 6) && int.TryParse(s, out int num) ? true : false;
    }
}",https://github.com/kksoo0131/Study/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12918.%E2%80%85%EB%AC%B8%EC%9E%90%EC%97%B4%E2%80%85%EB%8B%A4%EB%A3%A8%EA%B8%B0%E2%80%85%EA%B8%B0%EB%B3%B8,2023. 8. 24,26,1
2023. 8. 24 오후 5:06:48,배인호,Unity,3 - 자릿수 더하기,"using System;

public class Solution
{
    public int solution(int n)
    {
        int answer = 0;
        int digit = (int)Math.Floor(Math.Log10(n) + 1);
        int digitSquare = (int)Math.Pow(10, digit - 1);

        for (int i = 1; i <= digit; i++)
        {
            answer += (n / digitSquare);

            if (i != 9)
            {
                n %= digitSquare;
                digitSquare /= 10;
            }
        }
        return answer;
    }
}",https://github.com/cutlake2000/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12931.%E2%80%85%EC%9E%90%EB%A6%BF%EC%88%98%E2%80%85%EB%8D%94%ED%95%98%EA%B8%B0,2023. 8. 24,3,1
2023. 8. 24 오후 5:08:08,김광수,Unity,27 - 행렬의 덧셈,"public class Solution {
    public int[,] solution(int[,] arr1, int[,] arr2) {
        for(int i =0; i< arr1.GetLength(0); i++){
            for(int j = 0; j< arr1.GetLength(1); j++){
                arr1[i,j] += arr2[i,j];
            }
        }
        return arr1;
    }
}",https://github.com/kksoo0131/Study/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12950.%E2%80%85%ED%96%89%EB%A0%AC%EC%9D%98%E2%80%85%EB%8D%A7%EC%85%88,2023. 8. 24,27,1
2023. 8. 24 오후 5:08:13,김민상,Unity,19 - 제일 작은 수 제거하기,"using System;
using System.Linq;
using System.Collections.Generic;

public class Solution {
    public int[] solution(int[] arr) {
        if (arr.Length == 1)
            return new int[] { -1 };
        
        int min = arr.Min();
        return arr.Where(num => num > min).ToArray();
    }
}",,2023. 8. 24,19,1
2023. 8. 24 오후 5:09:33,한병권,Unity,27 - 행렬의 덧셈,"public class Solution {
    public int[,] solution(int[,] arr1, int[,] arr2) {
        int[,] answer = arr1;
        int[] temp = new int[2];
        for(int i = 0; i < arr1.Rank; i++)
        {
            temp[i] = arr1.GetLength(i);
        }
        
        for(int i = 0; i < temp[0]; i++)
        {
            for(int j = 0; j < temp[1]; j++)
            {
                answer[i,j] = answer[i,j] + arr2[i,j];
            }
        }
        
        return answer;
    }
}",https://github.com/hbg9212/AlgorithmCodekata,2023. 8. 24,27,1
2023. 8. 24 오후 5:12:05,한병권,Unity,28 - 직사각형 별찍기,"using System;

public class Example
{
    public static void Main()
    {
        String[] s;

        Console.Clear();
        s = Console.ReadLine().Split(' ');

        int a = Int32.Parse(s[0]);
        int b = Int32.Parse(s[1]);
        
        for(int i = 0 ; i < b; i++)
        {
            for(int j = 0; j < a; j++)
            {
                 Console.Write(""*"");
            }
            Console.Write(""\n"");
        }
       
    }
}",https://github.com/hbg9212/AlgorithmCodekata,2023. 8. 24,28,1
2023. 8. 24 오후 5:12:08,김광수,Unity,28 - 직사각형 별찍기,"using System;
using System.Text;

public class Example
{
    public static void Main()
    {
        StringBuilder sb = new StringBuilder();

        Console.Clear();
        string[] s = Console.ReadLine().Split(' ');

        int a = Int32.Parse(s[0]);
        int b = Int32.Parse(s[1]);
        
        for(int i =0; i< b; i++){
            for(int j =0; j< a; j++){
                sb.Append(""*"");
            }
            sb.Append(""\n"");
        }
        
        Console.WriteLine(sb.ToString());
    }
}",https://github.com/kksoo0131/Study/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12969.%E2%80%85%EC%A7%81%EC%82%AC%EA%B0%81%ED%98%95%E2%80%85%EB%B3%84%EC%B0%8D%EA%B8%B0,2023. 8. 24,28,1
2023. 8. 24 오후 5:15:20,최지연,AI,5 - 나머지가 1이 되는 수 찾기,"def solution(n):
    answer = 0
    resultVal = []
    for x in range(1, n):
        if n%x == 1:
            resultVal.append(x)        
    answer = resultVal[0]
    return answer",https://github.com/jiyeonCoder/algorithmPractice/blob/main/5%EB%82%98%EB%A8%B8%EC%A7%80%EA%B0%801%EC%9D%B4%EB%90%98%EB%8A%94%EC%88%98%EC%B0%BE%EA%B8%B0.py,2023. 8. 24,5,1
2023. 8. 24 오후 5:16:41,배인호,Unity,4 - 약수의 합,"public class Solution
{
    public int solution(int n)
    {
        int answer = 0;

        for (int i = 1; i <= n; i++)
        {
            if (n % i == 0)
            {
                answer += i;
                answer += (n / i);
            }
        }

        return answer / 2;
    }
}",https://github.com/cutlake2000/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12928.%E2%80%85%EC%95%BD%EC%88%98%EC%9D%98%E2%80%85%ED%95%A9,2023. 8. 24,4,1
2023. 8. 24 오후 5:21:20,김광수,Unity,29 - 최대공약수와 최소공배수,"using System;
public class Solution {
    public int[] solution(int n, int m) {
        int max = Math.Max(n,m);
        int gcd = GCD(max, (max == n ? m : n));
        return new int[] {gcd , n*m / gcd};
    }
    
    public int GCD(int a,int b){
        return (a % b == 0) ? b : GCD(b, a%b);
    }
}",https://github.com/kksoo0131/Study/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12940.%E2%80%85%EC%B5%9C%EB%8C%80%EA%B3%B5%EC%95%BD%EC%88%98%EC%99%80%E2%80%85%EC%B5%9C%EC%86%8C%EA%B3%B5%EB%B0%B0%EC%88%98,2023. 8. 24,29,1
2023. 8. 24 오후 5:23:10,김민상,Unity,20 - 가운데 글자 가져오기,"public class Solution {
    public string solution(string s) => s.Length % 2 == 1 ? s[s.Length / 2].ToString() : s.Substring(s.Length / 2 - 1, 2);
}",,2023. 8. 24,20,1
2023. 8. 24 오후 5:25:25,배인호,Unity,5 - 나머지가 1이 되는 수 찾기,"using System;

public class Solution
{
    public int solution(int n)
    {
        int answer = 0;

        for (int i = 1; i < n; i++)
        {
            if (n % i == 1)
            {
                answer = i;
                break;
            }
        }
        return answer;
    }
}",https://github.com/cutlake2000/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12928.%E2%80%85%EC%95%BD%EC%88%98%EC%9D%98%E2%80%85%ED%95%A9,2023. 8. 24,5,1
2023. 8. 24 오후 5:44:13,한병권,Unity,29 - 최대공약수와 최소공배수,"public class Solution {
    public int[] solution(int n, int m) {
        int[] answer = new int[2];
        if(n > m)
        {
            int temp = m;
            m = n;
            n = temp;
        }
        
        for(int i = 1; i <= m/2; i++)
        {            
            if(n % i == 0 && m % i == 0)
            {
                answer[0] = i;
            }
        }

        answer[1] = (n * m) / answer[0] ;
        
        return answer;
    }
}",https://github.com/hbg9212/AlgorithmCodekata,2023. 8. 24,29,1
2023. 8. 24 오후 5:46:08,배인호,Unity,6 - x만큼 간격이 있는 n개의 숫자,"public class Solution
{
    public long[] solution(long x, int n)
    {
        long[] answer = new long[n];
        long increaseNum = x;

        answer[0] = x;

        for (int i = 1; i < n; i++)
        {
            x += increaseNum;
            answer[i] = x;
        }
        return answer;
    }
}",https://github.com/cutlake2000/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12954.%E2%80%85x%EB%A7%8C%ED%81%BC%E2%80%85%EA%B0%84%EA%B2%A9%EC%9D%B4%E2%80%85%EC%9E%88%EB%8A%94%E2%80%85n%EA%B0%9C%EC%9D%98%E2%80%85%EC%88%AB%EC%9E%90,2023. 8. 24,6,1
2023. 8. 24 오후 5:49:14,최성원,Unity,1 - 짝수와 홀수,"public class Solution {
    public string solution(int num) {
        return (num % 2 == 0) ? ""Even"" : ""Odd"";
    }
}",,2023. 8. 24,1,1
2023. 8. 24 오후 5:56:35,김민석,Unity,2 - 평균 구하기,"public class Solution {
public double solution(int[] arr)
{
int sum = 0;

for(int i = 0; i < arr.Length; i++)
{
sum += arr[i];
}

return (double)sum / arr.Length;
}
}",https://github.com/ms0753/codekata/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12944.%E2%80%85%ED%8F%89%EA%B7%A0%E2%80%85%EA%B5%AC%ED%95%98%EA%B8%B0,2023. 8. 24,2,1
2023. 8. 24 오후 6:06:58,김광수,Unity,23 - 약수의 개수와 덧셈,"using System;

public class Solution {
    public int solution(int left, int right) {
        int answer = 0;
        
        while(left <= right){
            answer += func(left++);
        }
        
        return answer;
    }
    
    public int func(int num){
        int count =0;
        
        for (int i = 1; i<= num; i++){
            count += num % i == 0 ? 1 : 0;
        }

        return count % 2 == 0 ? num : num * -1 ;
    }
}",https://github.com/kksoo0131/Study/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/77884.%E2%80%85%EC%95%BD%EC%88%98%EC%9D%98%E2%80%85%EA%B0%9C%EC%88%98%EC%99%80%E2%80%85%EB%8D%A7%EC%85%88,2023. 8. 24,23,1
2023. 8. 24 오후 6:09:32,김해찬,Unity,46 - 과일 장수,"using System;
using System.Collections;
using System.Collections.Generic;

public class Solution {
    public int solution(int k, int m, int[] score) {
        int answer = 0;
        List<int> lst = new List<int>();
        
        for(int i = 0; i < score.Length; i++)
        {
            lst.Add(score[i]);
        }
        
        lst.Sort();
        
        int min = int.MaxValue;
        int cnt = 1;
        
        for(int i = lst.Count-1; i > -1; i--)
        {
            if(min > lst[i])
            {
                min = lst[i];
            }
            
            if(cnt % m == 0)
            {
                answer += min * m;
                min = int.MaxValue;
                cnt = 1;
            }
            else
            {
                cnt++;
            }
        }
        
        return answer;
    }
}",,2023. 8. 24,46,2
2023. 8. 24 오후 6:23:29,송유섭,Unity,1 - 짝수와 홀수,"public class Solution
{
    public string solution(int num)
    {
        string answer = """";

        if (num % 2 == 0)
        {
            answer = ""Even"";
        }
        else
        {
            answer = ""Odd"";
        }
        return answer;
    }
}",https://github.com/SongJinx3512/codeKata,2023. 8. 24,1,1
2023. 8. 24 오후 6:25:39,김광수,Unity,30 - 3진법 뒤집기,"using System;
public class Solution
    {
        public int solution(int n)
        {

            string str = """";
            int answer = 0;

            while (n >= 3)
            {
                str += n % 3;
                n /= 3;
            }

            str += n;
            
            for (int i=0; i < str.Length; i++)
            {
                answer += int.Parse(str[i].ToString()) * (int)Math.Pow(3, str.Length-1 - i);
            }

           
            return answer;
        }
    }",https://github.com/kksoo0131/Study/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/68935.%E2%80%853%EC%A7%84%EB%B2%95%E2%80%85%EB%92%A4%EC%A7%91%EA%B8%B0,2023. 8. 24,30,1
2023. 8. 24 오후 6:27:14,김해찬,Unity,47 - 모의고사완전탐색,"using System;
using System.Collections;
using System.Collections.Generic;


public class Solution {
    public int[] solution(int[] answers) {
        int[] one = new int[5] {1,2,3,4,5};
        int[] two = new int[8]{2,1,2,3,2,4,2,5};
        int[] three = new int[10]{3,3,1,1,2,2,4,4,5,5};
    
        Queue<int> oneQue = new Queue<int>();
        Queue<int> twoQue = new Queue<int>();
        Queue<int> threeQue = new Queue<int>();
        
        foreach(int num in one)
        {
            oneQue.Enqueue(num);
        }
        foreach(int num in two)
        {
            twoQue.Enqueue(num);
        }
        foreach(int num in three)
        {
            threeQue.Enqueue(num);
        }
        
        int oneCorrect = 0;
        int twoCorrect = 0;
        int threeCorrect = 0;
        
        for(int i = 0; i < answers.Length; i++)
        {
            int a = oneQue.Dequeue();
            int b = twoQue.Dequeue();
            int c = threeQue.Dequeue();
            
            oneQue.Enqueue(a);
            twoQue.Enqueue(b);
            threeQue.Enqueue(c);
            
            if(a == answers[i])
            {
                oneCorrect++;
            }
            if(b == answers[i])
            {
                twoCorrect++;
            }
            if(c == answers[i])
            {
                threeCorrect++;
            }
        }
        
        int maxCorrect = 0;
        
        if(maxCorrect < oneCorrect)
        {
            maxCorrect = oneCorrect;
        }
        if(maxCorrect < twoCorrect)
        {
            maxCorrect = twoCorrect;
        }
        if(maxCorrect < threeCorrect)
        {
            maxCorrect = threeCorrect;
        }
        
        int n = 0;
        bool ha = false;
        bool haha = false;
        bool hahaha = false;
        
        if(maxCorrect == oneCorrect)
        {
            ha = true;
            n++;
        }
        if(maxCorrect == twoCorrect)
        {
            haha = true;
            n++;
        }
        if(maxCorrect == threeCorrect)
        {
            hahaha = true;
            n++;
        }
        
        int[] answer = new int[n];
        
        int cnt = 0;
        
        if(ha == true)
        { 
            answer[cnt] = 1;
            cnt++;
        }
        if(haha == true)
        {
            answer[cnt] = 2;
            cnt++;
        }
        if(hahaha == true)
        {
            answer[cnt] = 3;
        }
        
        
        return answer;
    }
}",,2023. 8. 24,47,2
2023. 8. 24 오후 6:28:14,김형수,Unity,1 - 짝수와 홀수,"public class Solution {
    public string solution(int num) {
        
        if(num % 2 == 0) 
        {
            return ""Even"";
        }
        else
        {
            return ""Odd"";
        }
        
        //string answer = """";
        //return answer;
    }
}",https://github.com/Kim-H-S/Programmers/blob/main/%EC%A7%9D%EC%88%98%EC%99%80%20%ED%99%80%EC%88%98.txt,2023. 8. 24,1,1
2023. 8. 24 오후 6:32:59,김광수,Unity,31 - 이상한 문자 만들기,"public class Solution {
    public string solution(string s) {
        string[] strArray = s.Split("" "");
        string answer = """";
        
        foreach(string str in strArray)
        {
            for(int i =0; i< str.Length; i++){
                answer += i % 2 == 0 ? str[i].ToString().ToUpper() : str[i].ToString().ToLower();
            }
            answer += "" "";
        }
        
        // 마지막 공백을 지워줘야됨
        return answer.Substring(0, answer.Length-1);
    }
}",https://github.com/kksoo0131/Study/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12930.%E2%80%85%EC%9D%B4%EC%83%81%ED%95%9C%E2%80%85%EB%AC%B8%EC%9E%90%E2%80%85%EB%A7%8C%EB%93%A4%EA%B8%B0,2023. 8. 24,31,2
2023. 8. 24 오후 6:40:23,한병권,Unity,30 - 3진법 뒤집기,"using System;

public class Solution {
    public int solution(int n) {
        int answer = 0;
        string temp = """";
        string reverse = """";
        
        while ( n > 0)
        {
            temp = n % 3 + temp;
            n = n / 3;
        }
        
        int multiple = 1;
        
        for (int i = 0; i < temp.Length; i++)
        {
            int a = int.Parse(temp.Substring(i,1));
            if(i != 0)
            {
                for(int j = 1; j < multiple; j++)
                {
                    a = a*3;
                }
            }

            answer += a;
            multiple++;
        }
        
        return answer;
    }
}",https://github.com/hbg9212/AlgorithmCodekata,2023. 8. 24,30,1
2023. 8. 24 오후 6:45:26,장성민,Unity,1 - 짝수와 홀수,"public class Solution {
    public string solution(int num) {
        string answer = """";
        if (num % 2 == 0){
            answer = ""Even"";
        }
        else answer = ""Odd"";
        return answer;
    }
}",,2023. 8. 24,1,1
2023. 8. 24 오후 6:46:07,김광수,Unity,32 - 삼총사,"using System;

public class Solution {
    public int solution(int[] number) {
        // 배열에서 3개를 골라서 합이 0이되는 경우의수를 구해라
        int answer = 0;
        
        for(int i =0; i< number.Length; i++){
            for(int j =i+1; j< number.Length; j++){
                for(int k = j+1 ; k < number.Length; k++){
                    answer += number[i] + number[j] + number[k] == 0 ? 1 : 0;
                }
                
            }
        }
        
        return answer;
    }
}",https://github.com/kksoo0131/Study/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/131705.%E2%80%85%EC%82%BC%EC%B4%9D%EC%82%AC,2023. 8. 24,32,2
2023. 8. 24 오후 7:28:46,김광수,Unity,33 - 크기가 작은 부분,"using System;

public class Solution {
    public int solution(string t, string p) {
        // 숫자 문자열 t에서
        // p와 길이가 같고 p보다 작거나 같은것의 횟수를 구해라.
        // 시작점 ~ 길이
        
        // ?? p의 최대길이가 18
        // 그러면 10의 18승?? -> 문자열로 비교해야됨
        
        
        int answer = 0;
        int length = p.Length;
        
        for(int i = 0; i<= t.Length - length; i++)
        {
            
            answer += CompareNumString(p, t.Substring(i, length)) ? 1 : 0;
            
        }
        
        return answer;
    }
    
    public bool CompareNumString(string a, string b)
    {
        for(int i =0; i< a.Length; i++)
        {   
            if(a[i] < b[i])
            {
              return false;  
            } 
            else if(a[i] > b[i])
            {
              return true;                  
            } 
        }  
        return true;
    }
}",https://github.com/kksoo0131/Study/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/unrated/147355.%E2%80%85%ED%81%AC%EA%B8%B0%EA%B0%80%E2%80%85%EC%9E%91%EC%9D%80%E2%80%85%EB%B6%80%EB%B6%84%EB%AC%B8%EC%9E%90%EC%97%B4,2023. 8. 24,33,2
2023. 8. 24 오후 7:48:31,김광수,Unity,34 - 최소직사각형,"using System;
using System.Collections.Generic;

public class Solution {
    public int solution(int[,] sizes) {
        // 모든 명함을 수납하기 위한 지갑의 크기를 구하여라
        // 단 , 명함의 가로와 세로는 교환이 가능하여 둘중 하나만 만족해도된다.
        
        
        // DP인거 같은데?
        // dp[0] = 60 , 50 , 3000
        // dp[1] = 30, 70으로 넣으려면 60, 70 , 4200 || 70, 30으로 넣으려면 70, 50 , 3500
        // dp[2] = 60, 30으로 그냥 넣을수있음 3500
        // dp[3] = 80,40 으로 넣으려면 80 70 5600 || 80 50 4000
        
        List<int[]> dp = new List<int[]>();
        dp.Add(new int[]{sizes[0,0], sizes[0,1]});
        
        for(int i = 1; i < sizes.GetLength(0); i++)
        {
            int[] temp1 = new int[] {Math.Max(dp[i-1][0], sizes[i,0]), Math.Max(dp[i-1][1], sizes[i,1]) } ;
            int[] temp2 = new int[] {Math.Max(dp[i-1][0], sizes[i,1]), Math.Max(dp[i-1][1], sizes[i,0]) } ;
            
            dp.Add(temp1[0] * temp1[1] > temp2[0] * temp2[1] ? temp2 : temp1);
            
        }
        
        return dp[dp.Count-1][0] * dp[dp.Count-1][1];
    }
}",https://github.com/kksoo0131/Study/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/86491.%E2%80%85%EC%B5%9C%EC%86%8C%EC%A7%81%EC%82%AC%EA%B0%81%ED%98%95,2023. 8. 24,34,2
2023. 8. 24 오후 7:55:35,장성민,Unity,2 - 평균 구하기,"public class Solution {
    public double solution(int[] arr) {
        double answer = 0;
        for (int i = 0; i < arr.Length; i++){
            answer += arr[i];
        }
        return answer / arr.Length;
    }
}",,2023. 8. 24,2,1
2023. 8. 24 오후 7:57:03,김해찬,Unity,48 - 소수 만들기,"using System;

class Solution
{
    public int solution(int[] nums)
    {
        int answer = 0;
        
        for(int i = 0; i < nums.Length; i++)
        {
            for(int j = i+1; j < nums.Length; j++)
            {
                for(int k = j+1; k < nums.Length; k++)
                {
                    int sum = nums[i] + nums[j] + nums[k];
                    bool trigger = false;
                    
                    for(int x = 2; x < sum-1; x++)
                    {
                        if(sum % x == 0)
                        {
                            trigger = true;
                        }
                    }
                    
                    if(trigger == false)
                    {
                        answer++;
                    }
                }
            }
        }

        return answer;
    }
}",,2023. 8. 24,48,2
2023. 8. 24 오후 8:00:24,맹주한,Unity,1 - 짝수와 홀수,"#include <stdio.h>
#include <stdbool.h>
#include <stdlib.h>

char* solution(int num) {
    char* answer = (char*)malloc(5 * sizeof(char));
     if (num % 2 == 0) 
    {
        strcpy(answer, ""Even"");
    } 
    else 
    {
        strcpy(answer, ""Odd"");
    }
    return answer;
}",,2023. 8. 24,1,1
2023. 8. 24 오후 8:01:08,김종훈,Unity,1 - 짝수와 홀수,"public class Solution {
    public string solution(int num) {
        if (num % 2 == 0){
            string answer = ""Even"";
            return answer;
        }
        else {
            string answer = ""Odd"";
            return answer;
        }
        
    }
}",,2023. 8. 24,1,1
2023. 8. 24 오후 8:05:09,김광수,Unity,35 - 시저 암호,"public string solution(string s, int n) 
    {
        
        // 입력받은 문자열을 n만큼씩 다 밀어버린다 
        // 아스키코드를 사용하고 범위를 벗어나면 처음으로 돌아가게 한다.
        // 대문자는 65~90, 소문자는 97 ~122
        
        string answer= """";
        
        foreach(char c in s)
        {
            if(c == ' '){
                answer+= c;
                continue;
            }
            
            char temp = (char)(c + n);
            temp =  (c <= 90 && temp > 90) || (temp > 122) ? (char)(temp - 26) : temp;
            answer += temp.ToString();
        }
        return answer;
    }
}",https://github.com/kksoo0131/Study/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12926.%E2%80%85%EC%8B%9C%EC%A0%80%E2%80%85%EC%95%94%ED%98%B8,2023. 8. 24,35,2
2023. 8. 24 오후 8:14:18,강성호,Unity,8 - 문자열을 정수로 바꾸기,"using System;
public class Solution {
    public int solution(string s) {
        int answer = int.Parse(s);
			return answer;
    }
}",,2023. 8. 24,8,1
2023. 8. 24 오후 8:14:41,강성호,Unity,9 - 정수 제곱근 판별,"using System;
public class Solution {
    public long solution(long n) {
        int i = 0;
			long answer = 0;
			long tmp = 0;
			while (tmp < n)
			{
				tmp = (long)Math.Pow(i, 2);
				if(tmp == n)
				{
					answer = (long)Math.Pow(i + 1, 2);
					return answer;
				}
				i++;
			}
			return -1;
    }
}",,2023. 8. 24,9,1
2023. 8. 24 오후 8:15:09,강성호,Unity,10 - 정수 내림차순으로 배치하기,"using System;
public class Solution {
    public long solution(long n) {
        string str = n.ToString();
			int[] arr = new int[str.Length];
			long answer = 0;
			
			for(int i = 0; i < arr.Length; i++)
			{
				arr[i] = (int)(n % 10);
				n = n / 10;
			}
			Array.Sort(arr);

			for(int i = 0; i < arr.Length; i++)
			{
				answer += arr[i] * (long)Math.Pow(10, i);
			}

			return answer;
    }
}",,2023. 8. 24,10,1
2023. 8. 24 오후 8:15:17,김해찬,Unity,49 - 덧칠하기,"using System;

public class Solution {
    public int solution(int n, int m, int[] section) {
        int answer = 0;
        int paintedIndex = 0;
        
        for(int i = 0; i < section.Length; i++)
        {
            if(paintedIndex < section[i])
            {
                paintedIndex = (section[i] + m) - 1;
                answer++;
            }
        }
        
        return answer;
    }
}",,2023. 8. 24,49,2
2023. 8. 24 오후 8:15:33,강성호,Unity,11 - 하샤드 수,"using System;
public class Solution {
    public bool solution(int x) {
        String str = x.ToString();
			bool answer = true;
			int sum = 0;
			int n = x;
			for(int i = 0; i < str.Length; i++)
			{
				sum += n % 10;
				n = n / 10;
			}
			if(x % sum == 0)
			{
				answer = true;
			}
			else
			{
				answer = false;
			}
			return answer;
    }
}",,2023. 8. 24,11,1
2023. 8. 24 오후 8:15:58,강성호,Unity,12 - 두 정수 사이의 합,"public class Solution {
    public long solution(int a, int b) {
        	long answer = 0;
			if (a < b)
				for (int i = a; i <= b; i++)
				{
					answer += i;
				}
			else
				for (int i = b; i <= a; i++)
				{
					answer += i;
				}
			return answer;
    }
}",,2023. 8. 24,12,1
2023. 8. 24 오후 8:16:24,강성호,Unity,13 - 콜라츠 추측,"public class Solution {
    public int solution(int num) {
            long num1 = num;
			int answer = 0;
			while (num1 != 1)
			{
				if(num1 % 2 == 0)
				{
					num1 /= 2;
				}
				else
				{
					num1 = (num1 * 3) + 1;
				}
				answer++;
				if(answer == 500)
				{
					return -1;
				}
			}
			return answer;
    }
}",,2023. 8. 24,13,1
2023. 8. 24 오후 8:16:47,강성호,Unity,14 - 서울에서 김서방 찾기,"public class Solution {
    public string solution(string[] seoul) {
     string answer = """";

			for (int i = 0; i < seoul.Length; i++)
			{
				if (seoul[i] == ""Kim"")
				{
					return $""김서방은 {i}에 있다"";
				}
			}
			return answer;
    }
}",,2023. 8. 24,14,1
2023. 8. 24 오후 8:17:04,정재호,Unity,12 - 두 정수 사이의 합,"using System;
using System.Collections;

public class Solution
{
    public long solution(int a, int b)
    {
        long answer = 0;

        if (a > b)
        {
            for (int i = b; i <= a; i++)
                answer += i;

            return answer;
        }
        else if (a < b)
        {
            for (int i = a; i <= b; i++)
                answer += i;

            return answer;
        }
        else
        {
            return a;
        }
        
    }
}
",,2023. 8. 24,12,1
2023. 8. 24 오후 8:17:09,강성호,Unity,15 - 나누어 떨어지는 숫자,"using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
public class Solution {
    public int[] solution(int[] arr, int divisor) {
        List<int> result = new List<int>();
			for(int i = 0; i < arr.Length; i++)
			{
				if (arr[i] % divisor == 0)
				{
					result.Add(arr[i]);
				}				
			}
			if (result.Count == 0)
			{
				result.Add(-1);
			}

			int[] answer = new int[result.Count];
			for(int i = 0; i < answer.Length; i++)
			{
				answer[i] = result[i];
			}
            Array.Sort(answer);
			return answer;
    }
}",,2023. 8. 24,15,1
2023. 8. 24 오후 8:17:31,강성호,Unity,16 - 음양 더하기,"using System;

public class Solution {
    public int solution(int[] absolutes, bool[] signs) {
        int answer = 0;
			for(int i = 0; i < absolutes.Length; i++)
			{
				if (signs[i])
				{
					answer += absolutes[i];
				}
				else
				{
					answer += -absolutes[i];
				}
			}
			return answer;
    }
}",,2023. 8. 24,16,1
2023. 8. 24 오후 8:17:59,강성호,Unity,17 - 핸드폰 번호 가리기,"using System;
public class Solution {
    public string solution(string phone_number) {
        string answer = """";

			int a = phone_number.Length;
			string str = new string('*', phone_number.Length - 4);
			
			string str2 = phone_number.Substring(phone_number.Length - 4);
			answer = str + str2;
			

			return answer;
    }
}",,2023. 8. 24,17,1
2023. 8. 24 오후 8:18:27,강성호,Unity,18 - 없는 숫자 더하기,"using System;

public class Solution {
    public int solution(int[] numbers) {
        bool[]chk = new bool[10];
			int answer = 0;
			for (int i = 0; i < numbers.Length; i++)
			{
				chk[numbers[i]] = true;
			}
			for (int i = 1; i < 10; i++)
			{
				if (!chk[i]) answer += i;
			}
			return answer;
    }
}",,2023. 8. 24,18,1
2023. 8. 24 오후 8:18:52,강성호,Unity,19 - 제일 작은 수 제거하기,"using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

public class Solution {
    public int[] solution(int[] arr) {
      int min = arr.Min();
			int[] answer;
			if (arr.Length > 1)
			{
				answer = arr.Where(x => x != min).ToArray();
			}
            else
            {
				answer = new int[1];
				answer[0] = -1;
            }

            return answer;			
    }
}",,2023. 8. 24,19,1
2023. 8. 24 오후 8:19:11,우민규,Unity,6 - x만큼 간격이 있는 n개의 숫자,"public class Solution {
    public long[] solution(int x, int n) {
        long[] answer = new long[n];
        answer[0] = x;
        
        for(int i = 1; i < n; i++)
        {
            answer[i] = answer[i-1] + x;
        }
        
        return answer;
    }
}",https://github.com/Woomingyu/Programmers.git,2023. 8. 24,6,1
2023. 8. 24 오후 8:19:18,강성호,Unity,20 - 가운데 글자 가져오기,"public class Solution {
    public string solution(string s) {
      string answer;
			string m1 = """";
			string m2 = """";
			int len = s.Length;
			if(len % 2 == 0)
			{
				m1 = s[len / 2 - 1].ToString();
				m2 = s[len / 2].ToString();
			}
			else
			{
				m1 = s[len / 2].ToString();
			}
			answer = m1 + m2;
			
			return answer;
    }
}",,2023. 8. 24,20,1
2023. 8. 24 오후 8:19:39,강성호,Unity,21 - 수박수박수박수박수박수?,"using System;
public class Solution {
    public string solution(int n) {
        string answer = """";
			for (int i = 0; i < n; i++)
			{
				if (i % 2 == 0)
				{
					answer += ""수"";
				}
				else
				{
					answer += ""박"";
				}	
			}
			return answer;
    }
}",,2023. 8. 24,21,1
2023. 8. 24 오후 8:19:58,강성호,Unity,22 - 내적,"using System;

public class Solution {
    public int solution(int[] a, int[] b) {
        int answer = 0;
			for(int i = 0; i < a.Length; i++)
			{
				answer += a[i] * b[i];
			}
			return answer;
    }
}",,2023. 8. 24,22,1
2023. 8. 24 오후 8:20:20,강성호,Unity,23 - 약수의 개수와 덧셈,"using System;

public class Solution {
    public int solution(int left, int right) {
       int answer = 0;
			int cnt = 0;
	

			for(int i = left; i <= right; i++)
			{
				for(int j = 1; j <= i; j++)
				{
					if(i % j == 0)
					{
						cnt++;
					}
				}
				if (cnt % 2 == 0) answer += i;
				else answer -= i;
				cnt = 0;
			}	
			return answer;
    }
}",,2023. 8. 24,23,1
2023. 8. 24 오후 8:20:45,강성호,Unity,24 - 문자열 내림차순으로 배치하기,"using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
public class Solution {
    public string solution(string s) {
      string answer = """";
			char[]arr = s.ToCharArray();
			Array.Sort(arr);
			Array.Reverse(arr);
			foreach (char c in arr)
			{			
				answer += c;
			}
			return answer;
    }
}",,2023. 8. 24,24,1
2023. 8. 24 오후 8:27:46,강성호,Unity,25 - 부족한 금액 계산하기,"using System;

class Solution
{
    public long solution(int price, int money, int count)
    {
        long sum = 0;
			for(int i = 1; i <= count; i++)
			{
				sum += price * i;
			}

			if (sum > money)
			{
				return sum - money;
			}
			else
			{
				return 0;
			}
    }
}",,2023. 8. 24,25,1
2023. 8. 24 오후 8:44:08,안소정,Unity,5 - 나머지가 1이 되는 수 찾기,"using System;

public class Solution {
    public int solution(int n) {
        int answer = 0;
        for(int i = 1; i < n; ++i)
        {
            if(n%i == 1)              
            {answer = i;
            break;
            }
        }
        return answer;
    }
}",,2023. 8. 24,5,1
2023. 8. 24 오후 8:46:47,우성훈,Unity,1 - 짝수와 홀수,"using System;

namespace 짝수와홀수
{
    class Program
    {
        static void Main(string[] args)
        {
            int x;
            Console.Write(""숫자를 입력하세요:"");
            x = int.Parse(Console.ReadLine());
            Console.WriteLine((x % 2 == 0) ? ""Even"" : ""Odd"");
        }
    }
}",,2023. 8. 24,1,1
2023. 8. 24 오후 9:02:51,정재호,Unity,13 - 콜라츠 추측,"public class Solution
{
    public int solution(int num)
    {
        int answer = 0;
        bool isOne = false;

        for (int i = 0; i < 500; i++)
        {
            if (num < 0)
            {
                break;
            }
            else if (num == 1)
            {
                isOne = true;
                break;
            }
            else if (num % 2 == 0)
            {
                num = num / 2;
                answer++;
            }
            else
            {
                num = num * 3 + 1;
                answer++;
            }

            if (num == 1)
            {
                isOne = true;
                break;
            }
        }

        if (isOne)
        {
            return answer;
        }
        else
        {
            return -1;
        }
        
    }
}",,2023. 8. 24,13,1
2023. 8. 24 오후 9:33:44,이혜리,AI,76 - H-Index,"def solution(citations):
    answer = 0
    for i in citations:
      num = 0
      for j in citations:
          if j >= i:
            num += 1
            if num == i and answer < i:
                answer = num
                continue
      if answer < num and answer < i:
        answer = num
    return answer",https://github.com/hyeleenotharry/Programmers/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv2/42747.%E2%80%85H%EF%BC%8DIndex,2023. 8. 24,76,3
2023. 8. 24 오후 9:45:32,김해찬,Unity,50 - 기사단원의 무기,"using System;

public class Solution {
    public int solution(int number, int limit, int power) {
        int answer = 0;
        int[] check = new int[number + 1];
        
        for(int i = 1; i < number+1; i++)
        {
            for(int j = i; j < number + 1;)
            {
                check[j]++;
                j+=i;
            }
        }
        
        for(int i = 1; i < number+1; i++)
        {
            if(check[i] > limit)
            {
                answer += power;
            }
            else
            {
                answer += check[i];
            }
        }
        
        return answer;
    }
}",,2023. 8. 24,50,2
2023. 8. 24 오후 9:48:18,박희원,Unity,6 - x만큼 간격이 있는 n개의 숫자,"public class Solution {
    public long[] solution(int x, int n) {
        long[] answer = new long[n];

                answer[0] = x;
                for(int i = 1; i<n; i++)
                {
                    answer[i] =answer[i-1] + x; 
                }

                return answer;
 
    }
}",,2023. 8. 24,6,1
2023. 8. 24 오후 10:51:10,최종민,AI,3 - 자릿수 더하기,"def solution(n):
    answer = 0
    for i in str(n):
        answer += int(i)
    return answer",https://github.com/tesla7211/baekjoon/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12931.%E2%80%85%EC%9E%90%EB%A6%BF%EC%88%98%E2%80%85%EB%8D%94%ED%95%98%EA%B8%B0,2023. 8. 24,3,1
2023. 8. 25 오전 12:03:52,김대열,Unity,132 - 빛의 경로 사이클,"#include <string>
#include <vector>
#include <algorithm> 
using namespace std;
    const int top = 0;
    const int left = 1;
    const int bottom = 2;
    const int right = 3;
vector<int> solution(vector<string> grid) {
    vector<int> answer;
    int visited[500][500][4] = {0,};
    

    
    for(int i = 0;i < grid.size();i++){
        for (int j = 0; j< grid[i].length(); j++){
            for(int k = 0;k<4;k++){
                // i행 j열의 원소에 대해서 k방향으로 접근하지 않은 경우 
                // 접근한 경우는 이미 사이클을 확인한 경우임.
                if(visited[i][j][k]) continue;
                int row = i, col = j, dir = k;
                int lenOfCycle = 0;
                
                while(!visited[row][col][dir]){
                    visited[row][col][dir] = true;
                    //회전을 하고 이동을 함
                    if(grid[row][col] == 'S'){
                        //방향은 그대로 
                        //이동 
                        switch(dir){
                            case left : 
                                col += 1;
                                col = col >= grid[row].length() ? 0 : col;
                                break;
                            case right : 
                                col -= 1;
                                col = col < 0 ? grid[row].length()-1 : col;
                                break;
                            case top : 
                                row += 1;
                                row = row >= grid.size() ? 0 : row;
                                break;
                            case bottom : 
                                row -= 1;
                                row = row < 0 ? grid.size()-1 : row;
                                break;
                        }
                    }else if(grid[row][col] == 'L'){
                        dir -= 1;
                        dir = (dir + 4) % 4;
                        
                        //이동 
                        switch(dir){
                            case left : 
                                col += 1;
                                col = col >= grid[row].length() ? 0 : col;
                                break;
                            case right : 
                                col -= 1;
                                col = col < 0 ? grid[row].length()-1 : col;
                                break;
                            case top : 
                                row += 1;
                                row = row >= grid.size() ? 0 : row;
                                break;
                            case bottom : 
                                row -= 1;
                                row = row < 0 ? grid.size()-1 : row;
                                break;
                        }
                    }else if(grid[row][col] == 'R'){
                        dir +=1;
                        dir = dir % 4;
                        
                        switch(dir){
                            case left : 
                                col += 1;
                                col = col >= grid[row].length() ? 0 : col;
                                break;
                            case right : 
                                col -= 1;
                                col = col < 0 ? grid[row].length()-1 : col;
                                break;
                            case top : 
                                row += 1;
                                row = row >= grid.size() ? 0 : row;
                                break;
                            case bottom : 
                                row -= 1;
                                row = row < 0 ? grid.size()-1 : row;
                                break;
                        }
                    }
                    lenOfCycle ++;
                }
                answer.push_back(lenOfCycle);
            }
        }
    }
    sort(answer.begin(), answer.end());
    return answer;
}",,2023. 8. 25,132,5
2023. 8. 25 오전 2:05:23,임현진,Unity,1 - 짝수와 홀수,"public class Solution {
    public string solution(int num) {
        string answer = """";
        
        if(num % 2 == 0) answer = ""Even"";
        else answer = ""Odd"";
        
        return answer;
    }
}",https://github.com/pporrorro/CodeKata_programmers,2023. 8. 24,1,1
2023. 8. 25 오전 2:06:20,임현진,Unity,2 - 평균 구하기,"public class Solution {
    public double solution(int[] arr) {
        double answer = 0;
        int total = 0;
        
        foreach(int i in arr){
            total += i;            
        }
        
        answer = (double)total/arr.Length;
        return answer;
    }
}",https://github.com/pporrorro/CodeKata_programmers,2023. 8. 24,2,1
2023. 8. 25 오전 2:07:19,임현진,Unity,3 - 자릿수 더하기,"using System;
using System.Collections.Generic;

public class Solution {
    public int solution(int num) {
        int answer = 0;
        List<int> numlist = new List<int>();
        string snum = num.ToString();

    for (int i = 0; i < snum.Length; i++)
    {
        numlist.Add(Convert.ToInt32(snum.Substring(i, 1)));
    }

    foreach (int n in numlist)
    {
        answer += n;
    }
    return answer;
        
    }
}",https://github.com/pporrorro/CodeKata_programmers,2023. 8. 24,3,1
2023. 8. 25 오전 2:09:18,임현진,Unity,3 - 자릿수 더하기,"using System;

public class Solution {
    public int solution(int num) {
        int answer = 0;
        int index = 0;
        string snum = num.ToString();

        while(index < string_num.Length){
            answer += Convert.ToInt32(snum.Substring(index,1));
            index++;
        }

        return answer;
    }
}",https://github.com/pporrorro/CodeKata_programmers,2023. 8. 24,3,1
2023. 8. 25 오전 4:18:36,조성훈,Unity,1 - 짝수와 홀수,"public class Solution {
    public string solution(int num) {
        string answer1 = ""Even"";
        string answer2 = ""Odd"";
        if(num % 2 == 0)
        return answer1;
        else
        return answer2;
    }
}",,2023. 8. 24,1,1
2023. 8. 25 오전 7:43:59,정재호,Unity,14 - 서울에서 김서방 찾기,"using System;

public class Solution
{
    public string solution(string[] seoul)
    {
        string answer = """";

        return answer = ""김서방은 "" + (Array.IndexOf(seoul, ""Kim"")).ToString()  + ""에 있다"";
    }
}",,2023. 8. 25,14,1
2023. 8. 25 오전 7:52:13,정재호,Unity,15 - 나누어 떨어지는 숫자,"using System;
using System.Collections;
using System.Collections.Generic;

public class Solution
{
    public int[] solution(int[] arr, int divisor)
    {
        List<int> list = new List<int>();

        for (int i = 0; i < arr.Length; i++)
        {
            if (arr[i] % divisor == 0)
            {
                list.Add(arr[i]);
            }
        }

        if (list.Count != 0)
        {
            list.Sort();
            return list.ToArray();
        }
        else
        {
            list.Add(-1);
            return list.ToArray();
        }
        
    }
}",,2023. 8. 25,15,1
2023. 8. 25 오전 8:20:54,정재호,Unity,16 - 음양 더하기,"using System;

public class Solution
{
    public int solution(int[] absolutes, bool[] signs)
    {
        int answer = 0;

        for (int i = 0; i < absolutes.Length; i++)
        {
            if (signs[i])
            {
                answer += absolutes[i];
            }
            else if (!signs[i])
            {
                answer += absolutes[i] *- 1;
            }
        }

        return answer;
    }
}",,2023. 8. 25,16,1
2023. 8. 25 오전 8:23:21,정재호,Unity,17 - 핸드폰 번호 가리기,"public class Solution
{
    public string solution(string phone_number)
    {
        string answer = """";

        char[] numChar = phone_number.ToCharArray();

        for (int i = 0; i < numChar.Length-4; i++)
        {
            numChar[i] = '*';
        }

        for (int i = 0; i < numChar.Length; i++)
        {
            answer += numChar[i].ToString();
        }

        return answer;
    }
}",,2023. 8. 25,17,1
2023. 8. 25 오전 8:32:09,정재호,Unity,18 - 없는 숫자 더하기,"using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;

public class Solution
{
    public int solution(int[] numbers)
    {
        int answer = 0;
        List<int> result = new List<int>() { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 };


        for (int j = 0; j < numbers.Length; j++)
        {
            if (result.Contains(numbers[j]))
            {
                result.Remove(numbers[j]);
            }
        }

        for (int j = 0; j < result.Count; j++)
        {
            answer += result[j];
        }

        return answer;
    }
}",,2023. 8. 25,18,1
2023. 8. 25 오전 8:54:13,김현우,AI,29 - 최대공약수와 최소공배수,"function solution(n, m) {
    const getGcd = (a, b) => a % b ? getGcd(b, a % b) : b;
    const getLcm = (a, b) => a * b / getGcd(a, b);
    
    return [getGcd(n, m), getLcm(n, m)];
}",,2023. 8. 25,29,1
2023. 8. 25 오전 8:55:04,김현우,AI,30 - 3진법 뒤집기,"function solution(n) {
    return parseInt(n.toString(3).split("""").reverse().join(""""), 3)
}",,2023. 8. 25,30,1
2023. 8. 25 오전 8:56:07,김현우,AI,31 - 이상한 문자 만들기,"function solution(s) {
    let newS = s.split("" "");
    
    const makeUpperCase = (x) => {
        let newX = x.split("""");
        let result = '';
        
        for(let i=0; i<newX.length; i++) {
            if(i % 2) {
                result += newX[i].toLowerCase();
            } else {
                result += newX[i].toUpperCase();
            }
        }
        return result;
    }
    
    let words = newS.map(x => makeUpperCase(x));
    
    return words.join("" "");
}",,2023. 8. 25,31,2
2023. 8. 25 오전 9:17:10,차요한,Unity,6 - x만큼 간격이 있는 n개의 숫자,"public class Solution {
    public long[] solution(int x, int n) {
        long[] answer = new long[n];
        for(int i = 0 ; i<n; i++)
        {
            answer[i]=(long)x*(i+1);
        }
        return answer;
    }
}",https://github.com/HOHOJO/Algorithm_test,2023. 8. 25,6,1
2023. 8. 25 오전 9:33:32,차요한,Unity,7 - 자연수 뒤집어 배열로 만들기,"public class Solution {
    public int[] solution(long n) {
        string s = """"+n.ToString();
        int[] answer = new int[s.Length];
        for(int i =0 ; n>0 ; i++)
        {
            answer[i]=(int)(n%10);
            n/=10;
        }
        return answer;
    }
}",https://github.com/HOHOJO/Algorithm_test,2023. 8. 25,7,1
2023. 8. 25 오전 9:49:44,조범준,Unity,9 - 정수 제곱근 판별,"using System;
public class Solution {
    public long solution(long n) {
        double answer = 0;
        answer = Math.Sqrt(n);
        if((long)answer * (long)answer == n)
        {
            return (long)Math.Pow(answer+1,2);
        }
        return -1;
    }
}",https://github.com/KimMaYa1/BaekJoonEx/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12934.%E2%80%85%EC%A0%95%EC%88%98%E2%80%85%EC%A0%9C%EA%B3%B1%EA%B7%BC%E2%80%85%ED%8C%90%EB%B3%84,2023. 8. 25,9,1
2023. 8. 25 오전 9:57:17,차요한,Unity,8 - 문자열을 정수로 바꾸기,"public class Solution {
    public int solution(string s) {
        int answer = int.Parse(s);
        return answer;
    }
}",https://github.com/HOHOJO/Algorithm_test,2023. 8. 25,8,1
2023. 8. 25 오전 9:57:59,임전혁,Unity,12 - 두 정수 사이의 합,"public class Solution {
    public long solution(int a, int b) {
        long answer = 0;
        int maxNum = 0;
        int minNum = 0;
        
        if (a == b)
            return a;
        
        if (a > b)
        {
            maxNum = a;
            minNum = b;
        }
        else
        {
            maxNum = b;
            minNum = a;
        }
            
        for (int i = minNum; i <= maxNum; i++)
            answer += i;
        
        
        return answer;
    }
}",https://github.com/yarogono/Algorithm_CSharp/blob/master/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12912.%E2%80%85%EB%91%90%E2%80%85%EC%A0%95%EC%88%98%E2%80%85%EC%82%AC%EC%9D%B4%EC%9D%98%E2%80%85%ED%95%A9/%EB%91%90%E2%80%85%EC%A0%95%EC%88%98%E2%80%85%EC%82%AC%EC%9D%B4%EC%9D%98%E2%80%85%ED%95%A9.cs,2023. 8. 25,12,1
2023. 8. 25 오전 9:58:02,김주형,Unity,4 - 약수의 합,"public class Solution
{
    public int solution(int n) 
    {
        int answer = 0;
        for (int i = 1; i <= n; i++)
        {
            if (n % i == 0)
            {
                answer += i;
            }
        }
        return answer;
    }
}",https://github.com/kjuhyung/Algorithm.git,2023. 8. 25,4,1
2023. 8. 25 오전 10:04:15,이경현,Unity,6 - x만큼 간격이 있는 n개의 숫자,"    public class A_1_6_termx
    {
        public long[] solution(int x, int n)
        {
            long[] answer = new long[n];
            for (int i = 0; i < n; i++)
            {
                answer[i] = (long)x * (i + 1);
            }
            return answer;
        }
    }",https://github.com/516lkh/Algorithm,2023. 8. 25,6,1
2023. 8. 25 오전 10:04:33,강상찬,AI,1 - 짝수와 홀수,"def solution(num):
    return ('Odd' if num%2 == 1 else 'Even')",,2023. 8. 25,1,1
2023. 8. 25 오전 10:05:41,안소정,Unity,6 - x만큼 간격이 있는 n개의 숫자,"public class Solution {
    public long[] solution(int x, int n) {
        long[] answer = new long[n];
        for (int i=0; i<n; i++)
           answer [i] = x * ((long)i+1); //0부터라서
                
        return answer;
    }
}",,2023. 8. 25,6,1
2023. 8. 25 오전 10:07:23,안영진,Unity,3 - 자릿수 더하기,"using System;

public class Solution {
    public int solution(int n) {
        int answer = 0;
        int a,b;
        a = n / 10;
        b = n % 10;
        answer = answer + b;
        
        while(a != 0 || b != 0){
            b = a % 10;
            answer = answer + b;
            a = a / 10;
        }
        
        return answer;
    }
}",,2023. 8. 25,3,1
2023. 8. 25 오전 10:07:57,안영진,Unity,4 - 약수의 합,"using System.Collections;

public class Solution {
    public int solution(int n) {
        int answer = 0;
        ArrayList arr = new ArrayList();
        
        for(int i = n; i > 0; i--){
            if(n % i == 0)
                arr.Add(i);
        }
        
        foreach(int k in arr){
            answer += k;
        }
        
        return answer;
    }
}",,2023. 8. 25,4,1
2023. 8. 25 오전 10:08:50,권선영,Unity,3 - 자릿수 더하기,"using System;

public class Solution 
{
    public int solution(int n) 
    {

    string s = $""{n}"";
    int l = s.Length;
    int r = 0;
    while (l > 0) 
    {
        r = r + int.Parse(s.Substring(l - 1, 1));
        l = l - 1;
    }
        return r;
    }
}",https://github.com/Tealss,2023. 8. 25,3,1
2023. 8. 25 오전 10:08:56,신우석,Unity,13 - 콜라츠 추측,"public class Solution {
    public int solution(int num) {
        if (num == 1) return 0;
        
        int answer = 0;
        long longNum = (long)num;
        while (answer < 500) {
            if (longNum % 2 == 0)
                longNum /= 2;
            else
                longNum = longNum * 3 + 1;
            ++answer;
            if (longNum == 1) break;
        }
        
        if (longNum != 1) return -1;
        
        return answer;
    }
}",https://github.com/seoksii/AlgorithmCodeKata/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12943.%E2%80%85%EC%BD%9C%EB%9D%BC%EC%B8%A0%E2%80%85%EC%B6%94%EC%B8%A1,2023. 8. 25,13,1
2023. 8. 25 오전 10:09:09,안영진,Unity,5 - 나머지가 1이 되는 수 찾기,"using System;

public class Solution {
    public int solution(int n) {
        int answer = 0;
        
        for(int i = 2; ; i++){
            if(n % i == 1){
                answer = i;
                break;
            }
        }
        
        return answer;
    }
}",,2023. 8. 25,5,1
2023. 8. 25 오전 10:10:10,이주연,Unity,15 - 나누어 떨어지는 숫자,"#include <string>
#include <vector>
#include <algorithm>

using namespace std;

vector<int> solution(vector<int> arr, int divisor) {
    vector<int> answer;
    for(int i = 0;i < arr.size(); i++)
    {
        if(arr[i] % divisor == 0) 
            answer.emplace_back(arr[i]);
    }
    if(answer.size() == 0) 
        answer.emplace_back(-1); 
    
    else 
        sort(answer.begin(),answer.end());
    return answer;
}",,2023. 8. 25,15,1
2023. 8. 25 오전 10:10:10,김민상,Unity,21 - 수박수박수박수박수박수?,"public class Solution {
    public string solution(int n) {
        string answer = """";
        for (int i = 0; i < n; i++)
        {
            answer += ""수박"";
        }
        return answer.Substring(0, n);
    }
}",,2023. 8. 25,21,1
2023. 8. 25 오전 10:10:52,안영진,Unity,6 - x만큼 간격이 있는 n개의 숫자,"public class Solution {
    public long[] solution(long x, int n) {
        long[] answer = new long[n];
        
        for(int i = 0; i < n; i++){
            answer[i] = (long)(x + (x * i));
        }
            
        return answer;
    }
}",,2023. 8. 25,6,1
2023. 8. 25 오전 10:10:55,박민호,Unity,7 - 자연수 뒤집어 배열로 만들기,"public class Solution {
    public int[] solution(long n) {
        
        int i =0;
        long m=n;
        while(m>0){
            m /= 10;
            i++;
        }
        int[] answer = new int[i];
        i=0;        
        while(n>0){            
            answer[i] = (int)(n%10);
            n /=10;
            i++;
        }
        return answer;
    }
}",,2023. 8. 25,7,1
2023. 8. 25 오전 10:11:21,김광수,Unity,36 - 숫자 문자열과 영단어,"using System;
    public class Solution
    {
        public int solution(string s)
        {
            // 문자열을 받으면

            // 문자열에 포함된 문자들을 숫자로 바꾸어 return한다.
            s = s.Replace(""zero"", ""0"");
            s = s.Replace(""one"", ""1"");
            s = s.Replace(""two"", ""2"");
            s = s.Replace(""three"", ""3"");
            s = s.Replace(""four"", ""4"");
            s = s.Replace(""five"", ""5"");
            s = s.Replace(""six"", ""6"");
            s = s.Replace(""seven"", ""7"");
            s = s.Replace(""eight"", ""8"");
            s = s.Replace(""nine"", ""9"");

            return int.Parse(s);
        }
    }",https://github.com/kksoo0131/Study/commit/d5e90ad3c3f1530cd0253b3638df63078a516f7d,2023. 8. 25,36,2
2023. 8. 25 오전 10:11:22,지민규,Unity,9 - 정수 제곱근 판별,"public class Solution {
    public long solution(long n) {
        long answer = -1;
        for (long x = 1; x < (n / x) + 1; x++)
        {
            if (x * x == n)
            {
                answer = (long)((x+1) * (x+1));
            }
        }
        return answer;
    }
}",,2023. 8. 25,9,1
2023. 8. 25 오전 10:12:07,김명식,Unity,5 - 나머지가 1이 되는 수 찾기,"using System;

public class Solution {
    public int solution(int n) {
        int answer = 0;
        for(int i=1; i<n;i++){
         
        if(n%i==1){
            answer = i;
            break;
        }   
        }
        return answer;
    }
}",https://github.com/D0ryeon/Algorithm-Code-Kata,2023. 8. 25,5,1
2023. 8. 25 오전 10:12:14,신우석,Unity,14 - 서울에서 김서방 찾기,"public class Solution {
    public string solution(string[] seoul) {
        int x = 0;
        for (int i = 0; i < seoul.Length; ++i)
            if (seoul[i] == ""Kim"") {
                x = i;
                break;
            }

        return $""김서방은 {x}에 있다"";
    }
}",https://github.com/seoksii/AlgorithmCodeKata/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12919.%E2%80%85%EC%84%9C%EC%9A%B8%EC%97%90%EC%84%9C%E2%80%85%EA%B9%80%EC%84%9C%EB%B0%A9%E2%80%85%EC%B0%BE%EA%B8%B0,2023. 8. 25,14,1
2023. 8. 25 오전 10:12:24,박민호,Unity,8 - 문자열을 정수로 바꾸기,"public class Solution {
    public int solution(string s) {
        int answer = 0;
        answer = int.Parse(s);
        return answer;
    }
}",,2023. 8. 25,8,1
2023. 8. 25 오전 10:13:25,이주연,Unity,16 - 음양 더하기,"#include <string>
#include <vector>

using namespace std;

int solution(vector<int> absolutes, vector<bool> signs) {
    int answer = 0;
    
    for(int i = 0; i < signs.size(); i++)
    {
        int sign = signs[i] ? 1 : -1;
        answer += (absolutes[i] * sign);
    }
    
    return answer;
}",,2023. 8. 24,16,1
2023. 8. 25 오전 10:13:43,이주연,Unity,16 - 음양 더하기,"#include <string>
#include <vector>

using namespace std;

int solution(vector<int> absolutes, vector<bool> signs) {
    int answer = 0;
    
    for(int i = 0; i < signs.size(); i++)
    {
        int sign = signs[i] ? 1 : -1;
        answer += (absolutes[i] * sign);
    }
    
    return answer;
}",,2023. 8. 25,16,1
2023. 8. 25 오전 10:13:44,김강현,Unity,4 - 약수의 합,"public class Solution {
    public int solution(int n) 
    {
        int sum = 0;
        for(int i = 1 ; i < 3000; i++)
        {
            if(n%i ==0)
            sum += n/i;
        }
        int answer = sum;
        return answer;
    }
}",,2023. 8. 25,4,1
2023. 8. 25 오전 10:13:53,이소이,Unity,8 - 문자열을 정수로 바꾸기,"public class Solution {
    public int solution(string s) {
        int size = s.Length;
        int sign = 0;
        if (s[0] == '+' || s[0] == '-')
        {
            if (s[0] == '-')
                sign = -1;
            else if (s[0] == '+')
                sign = 1;
        }
        int answer = 0;
        int ten = 1;
        int i = 0;
        if ((sign == 1) || (sign == -1))
        {
            i = 1;
        }
        for (int index = i; index < size; index++)
        {
            answer *= 10;
            answer += ((int)(s[index]) - 48);
        }
        if (sign != 0)
            answer *= sign;
        return answer;
    }
}",https://github.com/leesy015599/AlgorithmCodeKata/tree/master/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12925.%E2%80%85%EB%AC%B8%EC%9E%90%EC%97%B4%EC%9D%84%E2%80%85%EC%A0%95%EC%88%98%EB%A1%9C%E2%80%85%EB%B0%94%EA%BE%B8%EA%B8%B0,2023. 8. 25,8,1
2023. 8. 25 오전 10:14:21,이정환,Unity,5 - 나머지가 1이 되는 수 찾기,"using System;

  public class Solution
        {
            public int solution(int n)
            {
                int minValue = n;
              
                
                for (int num= n; num > 0; num--)
                {
                    if(n % num == 1)
                    {
                        if (num <= minValue)
                        {
                            minValue = num;
                        }
                    }
                   
                }
                return minValue;
            }
        }",,2023. 8. 25,5,1
2023. 8. 25 오전 10:14:36,박민혁,Unity,9 - 정수 제곱근 판별,"using System;
public class Solution {
    public long solution(long n) {
        long answer = (long)Math.Sqrt(n);
        if(answer*answer==n)
        {
            answer=(answer+1)*(answer+1);
        }
        else 
            answer=-1;
        return answer;
    }
}",,2023. 8. 25,9,1
2023. 8. 25 오전 10:14:50,김민상,Unity,22 - 내적,"public class Solution {
    public int solution(int[] a, int[] b) {
        int answer = 0;
        
        for (int i = 0; i < a.Length; i++)
        {
            answer += a[i] * b[i];
        }
        
        return answer;
    }
}",,2023. 8. 25,22,1
2023. 8. 25 오전 10:14:59,최장범,Unity,5 - 나머지가 1이 되는 수 찾기,"using System;

public class Solution {
    public int solution(int n) {
        int answer = 0;
        
        for (int i=1; i <= n; i++)
        {
            if(n%i == 1)
            {
                answer = i;
                break;
            }
        }
        ",,2023. 8. 25,5,1
2023. 8. 25 오전 10:15:15,김도현B,Unity,12 - 두 정수 사이의 합,"public class Solution {
    public long solution(int a, int b) {
        long answer = 0;
        if(a<b){
            for(; a <= b; a++){
            answer +=a;
            }
        }
        else{
            for(; b <= a; b++){
            answer +=b;
            }
        }
        return answer;
    }
}",https://github.com/subscriptioncat/Algorithm,2023. 8. 25,12,1
2023. 8. 25 오전 10:15:21,장성림,Unity,6 - x만큼 간격이 있는 n개의 숫자,"public class Solution {
    public long[] solution(int x, int n) {
        long[] answer = new long[n];
        for (int i = 0; i < n; i++){
            answer[i] = ((long)x * (long)(i + 1));
        }
        return answer;
    }
}",https://github.com/hoobhoob,2023. 8. 24,6,1
2023. 8. 25 오전 10:15:26,차요한,Unity,9 - 정수 제곱근 판별,"using System;
public class Solution {
    public long solution(long n) {
        long answer = 0;
        double x=Math.Sqrt(n);
        if(x%1==0){
            answer=((long)x+1)*((long)x+1);
        }else{
            answer=-1;
        }
        return answer;
    }
}",https://github.com/HOHOJO/Algorithm_test,2023. 8. 25,9,1
2023. 8. 25 오전 10:15:31,이형빈,Unity,4 - 약수의 합,"public class Solution 
{
    public int solution(int n) 
    {
        int answer = 0;
        for(int i = 1; i<=n; i++)
        {
            if(n%i==0)
            {
                answer += i;
            }
            
        }
        return answer;
    }
}",,2023. 8. 25,4,1
2023. 8. 25 오전 10:15:38,이세진,Unity,6 - x만큼 간격이 있는 n개의 숫자,"public class Solution {
    public long[] solution(int x, int n) {
        long[] answer = new long[n];
        long num = x;
        
        for(int i = 0; i < n ;i++)
        {
            answer[i] = x * ((long)i+1);
        }
        
        return answer;
    }
}",,2023. 8. 25,6,1
2023. 8. 25 오전 10:15:47,장성림,Unity,7 - 자연수 뒤집어 배열로 만들기,"public class Solution {
    public int[] solution(long n) {
        string nString = n.ToString();        
        int[] answer = new int[nString.Length];
        for (int i = 0; i < nString.Length; i++){
            answer[nString.Length - i - 1] = int.Parse(nString.Substring(i,1));
        }
        return answer;
    }
}",https://github.com/hoobhoob,2023. 8. 25,7,1
2023. 8. 25 오전 10:15:55,이홍준,Unity,7 - 자연수 뒤집어 배열로 만들기,"using System.Linq;

public class Solution {
    public int[] solution(long n) {
        int[] answer = new int[] {};
        
        answer = n.ToString().Select(x => int.Parse(x.ToString())).Reverse().ToArray();
        
        return answer;
    }
}",https://github.com/dlghdwns97/Study/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12932.%E2%80%85%EC%9E%90%EC%97%B0%EC%88%98%E2%80%85%EB%92%A4%EC%A7%91%EC%96%B4%E2%80%85%EB%B0%B0%EC%97%B4%EB%A1%9C%E2%80%85%EB%A7%8C%EB%93%A4%EA%B8%B0,2023. 8. 25,7,1
2023. 8. 25 오전 10:15:57,조성훈,Unity,2 - 평균 구하기,"public class Solution 
{
    public double solution(int[] arr) 
    {
        double answer = 0;
        double sum = 0;
        for(int i = 0; i < arr.Length; i++)
        {
            sum += arr[i]; 
        }
        answer = sum/arr.Length;
        return answer;
    }
}",,2023. 8. 25,2,1
2023. 8. 25 오전 10:16:35,신우석,Unity,15 - 나누어 떨어지는 숫자,"using System.Collections.Generic;

public class Solution {
    public int[] solution(int[] arr, int divisor) {
        List<int> answer = new List<int>();
        
        foreach(int n in arr)
            if (n % divisor == 0)
                answer.Add(n);
        
        if (answer.Count == 0) answer.Add(-1);
        answer.Sort();
        return answer.ToArray();
    }
}",https://github.com/seoksii/AlgorithmCodeKata/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12910.%E2%80%85%EB%82%98%EB%88%84%EC%96%B4%E2%80%85%EB%96%A8%EC%96%B4%EC%A7%80%EB%8A%94%E2%80%85%EC%88%AB%EC%9E%90%E2%80%85%EB%B0%B0%EC%97%B4,2023. 8. 25,15,1
2023. 8. 25 오전 10:16:42,노재우,Unity,4 - 약수의 합,"public class Solution 
{
    public int solution(int n) 
    {
        int answer = 0;
        if(n==0)
            return 0;
        for(int i = 1; i <= n; i++)
        {
            if(n%i==0)
            {
                answer += i;
            }
        }
        return answer;
    }
}",https://github.com/Chu-Nyan/CodeKata,2023. 8. 25,4,1
2023. 8. 25 오전 10:16:42,조범준,Unity,10 - 정수 내림차순으로 배치하기,"using System;
public class Solution {
    public long solution(long n) {
        string str = n.ToString();
        long[] answer = new long[str.Length];
        
        for(int i = 0; i < str.Length; i ++)
        {
            answer[i] = n % 10;
            n /= 10;
        }
        
        for(int i = 0; i < answer.Length; i++)
        {
            for(int j = i; j < answer.Length; j++)
            {
                if(answer[i] < answer[j])
                {
                    long temp = answer[i];
                    answer[i] = answer[j];
                    answer[j] = temp;
                }
            }
            n += answer[i];
            n *= 10;
        }
        return n / 10;
    }
}",https://github.com/KimMaYa1/BaekJoonEx/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12933.%E2%80%85%EC%A0%95%EC%88%98%E2%80%85%EB%82%B4%EB%A6%BC%EC%B0%A8%EC%88%9C%EC%9C%BC%EB%A1%9C%E2%80%85%EB%B0%B0%EC%B9%98%ED%95%98%EA%B8%B0,2023. 8. 25,10,1
2023. 8. 25 오전 10:16:55,이경현,Unity,7 - 자연수 뒤집어 배열로 만들기,"        public int[] solution(long n)
        {
            string number = n.ToString();
            int[] answer = new int[number.Length];

            for (int i = 0; i < number.Length; i++)
            {
                answer[i] = (int)(n % 10);
                n /= 10;
            }

            return answer;
        }",https://github.com/516lkh/Algorithm,2023. 8. 25,7,1
2023. 8. 25 오전 10:17:00,이현지,Unity,7 - 자연수 뒤집어 배열로 만들기,"public class Solution {
    public int[] solution(long n) 
    {
        long len = n.ToString().Length;
        int[] answer = new int[len];
        for (int i = 0; i < len; i++)
        {
            answer[i] = (int)(n % 10);
            n /= 10;
        }
        return answer;
    }
}
",https://github.com/szlovelee/Programmers-Algorithm.git,2023. 8. 25,7,1
2023. 8. 25 오전 10:17:27,최수용,Unity,5 - 나머지가 1이 되는 수 찾기,"using System;

public class Solution {
    public int solution(int n) {
        int answer = 0;
        answer = 2;
        while(n%answer != 1){
            answer++;
        }
        return answer;
    }
}",,2023. 8. 25,5,1
2023. 8. 25 오전 10:17:33,조영오,Unity,10 - 정수 내림차순으로 배치하기,"using System;

public class Solution {
    public long solution(long n) {
        long answer = 0;
        
        string num = n.ToString();
        
        int[] ans = new int[num.Length];
        
        for(int i = 0 ; i < ans.Length; i++){
            ans[i] = (int)Char.GetNumericValue(num[i]);
        }
        
        Array.Sort(ans);
        Array.Reverse(ans);
        
        for(int i = 0 ; i < ans.Length; i++){
            answer += (ans[ans.Length-(i+1)] * (long)(Math.Pow(10,i))) ;
        }
        
        return answer;
    }
}",,2023. 8. 25,10,1
2023. 8. 25 오전 10:17:38,장성림,Unity,8 - 문자열을 정수로 바꾸기,"public class Solution {
    public int solution(string s) {
        int answer = int.Parse(s);
        return answer;
    }
}",https://github.com/hoobhoob,2023. 8. 25,8,1
2023. 8. 25 오전 10:17:48,한병권,Unity,31 - 이상한 문자 만들기,"public class Solution {
    public string solution(string s) {
        string[] tempArr = s.Split("" "");
        string answer = """";
        
        for(int i = 0; i < tempArr.Length; i++ )
        {
            string temp = """";
            for(int j = 0; j < tempArr[i].Length; j++ )
            {
                if ( j == 0)
                {
                    temp = tempArr[i].Substring(0,1).ToUpper();
                }
                else if ( j % 2 == 0)
                {
                    temp = temp + tempArr[i].Substring(j,1).ToUpper();
                }
                else if ( j % 2 == 1)
                {
                     temp = temp + tempArr[i].Substring(j,1).ToLower();
                }
            }
            tempArr[i] = temp;
        }
        
        for (int i = 0; i < tempArr.Length; i++)
        {
            if ( i == 0)
            {
                answer = tempArr[i];
            }
            else
            {
                answer = answer + "" "" + tempArr[i];
            }
        }
            
        return answer;
    }
}",https://github.com/hbg9212/AlgorithmCodekata,2023. 8. 25,31,2
2023. 8. 25 오전 10:18:10,이주연,Unity,17 - 핸드폰 번호 가리기,"#include <string>
#include <vector>

using namespace std;

string solution(string phone_number) {
    string answer = """";
    for(int i = phone_number.size() - 5; i >= 0; i--)
    {
        phone_number[i] = '*';
    }
    answer = phone_number;
    return answer;
}",,2023. 8. 25,17,1
2023. 8. 25 오전 10:18:28,김강현,Unity,5 - 나머지가 1이 되는 수 찾기,"using System;

public class Solution {
    public int solution(int n) 
    {
        int min = 1000000;
        for(int i = 1 ; i < 1000000 ; i++)
        {
            if(n % i == 1 && min > i)
            {
                min = i;
            }
        }
        int answer = min;
        return answer;
    }
}",,2023. 8. 25,5,1
2023. 8. 25 오전 10:18:52,김명식,Unity,6 - x만큼 간격이 있는 n개의 숫자,"public class Solution {
    public long[] solution(int x, int n) {
        long[] answer = new long[n];
        long sum = 0;
        for(int i=0; i<n; i++){
            sum += x;
            answer[i] = sum;
        }
        
        return answer;
    }
}",https://github.com/D0ryeon/Algorithm-Code-Kata,2023. 8. 25,6,1
2023. 8. 25 오전 10:19:13,신우석,Unity,16 - 음양 더하기,"using System;

public class Solution {
    public int solution(int[] absolutes, bool[] signs) {
        int answer = 0;
        
        for (int i = 0; i < absolutes.Length; ++i)
            answer += (signs[i] ? 1 : -1) * absolutes[i];
        return answer;
    }
}",https://github.com/seoksii/AlgorithmCodeKata/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/76501.%E2%80%85%EC%9D%8C%EC%96%91%E2%80%85%EB%8D%94%ED%95%98%EA%B8%B0,2023. 8. 25,16,1
2023. 8. 25 오전 10:19:40,이주연,Unity,18 - 없는 숫자 더하기,"#include <string>
#include <vector>

using namespace std;

int solution(vector<int> numbers) {
    int answer = 0;
    int sum = 0;
    
    for(int i = 0; i < numbers.size(); i++)
    {
        sum += numbers[i];
    }
    
    answer = 45 - sum;
    
    return answer;
}",,2023. 8. 25,18,1
2023. 8. 25 오전 10:19:47,이홍준,Unity,8 - 문자열을 정수로 바꾸기,"public class Solution {
    public int solution(string s) {
        int answer = 0;
        
        answer = int.Parse(s);
        
        return answer;
    }
}",https://github.com/dlghdwns97/Study/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12925.%E2%80%85%EB%AC%B8%EC%9E%90%EC%97%B4%EC%9D%84%E2%80%85%EC%A0%95%EC%88%98%EB%A1%9C%E2%80%85%EB%B0%94%EA%BE%B8%EA%B8%B0,2023. 8. 25,8,1
2023. 8. 25 오전 10:19:59,김진성,Unity,4 - 약수의 합,"using System;

namespace algorithm_001
{
    internal class AliquotTower
    {
        public class Solution
        {
            public int solution(int n)
            {
                int answer = 0;
                for (int i = 1; i <= n; i++)
                {
                    if (n % i == 0)
                    {
                        answer += i;
                    }
                }

                return answer;
            }
        }
    }
}",https://github.com/GYALLERHORN/ALGORITHM.git,2023. 8. 25,4,1
2023. 8. 25 오전 10:20:03,신우석,Unity,17 - 핸드폰 번호 가리기,"using System;
using System.Linq;

public class Solution {
    public string solution(string phone_number) {
        return String.Concat(Enumerable.Repeat(""*"", phone_number.Length - 4)) + phone_number.Substring(phone_number.Length - 4);
    }
}",https://github.com/seoksii/AlgorithmCodeKata/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12948.%E2%80%85%ED%95%B8%EB%93%9C%ED%8F%B0%E2%80%85%EB%B2%88%ED%98%B8%E2%80%85%EA%B0%80%EB%A6%AC%EA%B8%B0,2023. 8. 25,17,1
2023. 8. 25 오전 10:20:11,임전혁,Unity,13 - 콜라츠 추측,"public class Solution {
    public int solution(int num) {
        int answer = 0;
        
        long longNum = num;
        
        if (longNum == 1)
            return 0;
        
        for (int i = 0; i < 500; i++)
        {       
            if (longNum == 1)
                break;
            
            if (longNum % 2 == 0)
                longNum /= 2;
            else
                longNum = (longNum * 3) + 1;
                
            answer++;
        }
            
        if (answer == 500)
            return -1;
        
        return answer;
    }
}",https://github.com/yarogono/Algorithm_CSharp/blob/master/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12943.%E2%80%85%EC%BD%9C%EB%9D%BC%EC%B8%A0%E2%80%85%EC%B6%94%EC%B8%A1/%EC%BD%9C%EB%9D%BC%EC%B8%A0%E2%80%85%EC%B6%94%EC%B8%A1.cs,2023. 8. 25,13,1
2023. 8. 25 오전 10:20:22,김민석,Unity,3 - 자릿수 더하기,"using System;

public class Solution {
    public int solution(int n) {
        int answer = 0;
        while(n>0){
            answer += n%10;
            n = n / 10;
        }
        return answer;
    }
}",https://github.com/ms0753/codekata/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12931.%E2%80%85%EC%9E%90%EB%A6%BF%EC%88%98%E2%80%85%EB%8D%94%ED%95%98%EA%B8%B0,2023. 8. 25,3,1
2023. 8. 25 오전 10:20:33,김진규,Unity,7 - 자연수 뒤집어 배열로 만들기,"public class Solution {
    public int[] solution(long n) {
        string str = n.ToString();
        int[] answer = new int[str.Length];
        
        for (int i = 0; i < str.Length; i++)
        {
            answer[i] = str[str.Length - 1 - i] - '0';
        }
            
        return answer;
    }
}",,2023. 8. 25,7,1
2023. 8. 25 오전 10:20:45,신우석,Unity,18 - 없는 숫자 더하기,"using System;

public class Solution {
    public int solution(int[] numbers) {
        int answer = 45;
        foreach (int i in numbers)
            answer -= i;
        return answer;
    }
}",https://github.com/seoksii/AlgorithmCodeKata/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/86051.%E2%80%85%EC%97%86%EB%8A%94%E2%80%85%EC%88%AB%EC%9E%90%E2%80%85%EB%8D%94%ED%95%98%EA%B8%B0,2023. 8. 25,18,1
2023. 8. 25 오전 10:21:14,김민태,Unity,11 - 하샤드 수,"using System;

public class Solution {
    public bool solution(int x) {
        bool answer = true;
        int plus = 0;
        string temp = x.ToString();
        for(int i = 0; i<temp.Length; i++){
            plus += (int)Char.GetNumericValue(temp[i]); //문자열의 각글자를 int형으로 변환하여 더해주는 코드
        }
        if(x%plus == 0){
            answer = true;
        }
        else{
            answer = false;
        }
        return answer;
    }
}",https://github.com/rlaalsxo/CodingTest,2023. 8. 25,11,1
2023. 8. 25 오전 10:21:53,김민태,Unity,12 - 두 정수 사이의 합,"public class Solution {
    public long solution(int a, int b) {
        long answer = 0;
        if(a > b){
            for(int i = b; i<= a; i++){
                answer+=i;
            }
        }
        else if(a < b){
            for(int i = a; i<= b; i++){
                answer+=i;
            }
        }
        else{
            answer = a;
        }
        return answer;
    }
}",https://github.com/rlaalsxo/CodingTest,2023. 8. 25,12,1
2023. 8. 25 오전 10:22:06,이현지,Unity,8 - 문자열을 정수로 바꾸기,"public class Solution {
    public int solution(string s) {
        int answer = int.Parse(s);
        return answer;
    }
}",https://github.com/szlovelee/Programmers-Algorithm,2023. 8. 25,8,1
2023. 8. 25 오전 10:22:18,김민태,Unity,13 - 콜라츠 추측,"public class Solution {
    public int solution(int num) {
        long temp = num;
        int answer = 0;
        
        while (temp != 1)
        {
            temp = temp % 2 == 0 ? temp / 2 : temp * 3 + 1;
            answer++;
            if (answer > 500)
            {
                return -1;
            }
        }
        return answer;
    }
}",https://github.com/rlaalsxo/CodingTest,2023. 8. 25,13,1
2023. 8. 25 오전 10:22:40,김형중,Unity,6 - x만큼 간격이 있는 n개의 숫자,"public class Solution {
    public long[] solution(int x, int n) {
        long[] answer = new long[n];
        
        
        for(int i = 0; i < n; i++)
        {
            answer[i] = x * (i + 1);
        }
        return answer;
    }
}",,2023. 8. 25,6,1
2023. 8. 25 오전 10:22:47,노재우,Unity,5 - 나머지가 1이 되는 수 찾기,"public class Solution5
{
    public int solution(int n)
    {
        int answer = 0;
        if (n == 0)
            return 0;
        for (int x = 1; x < n; x++)
        {
            if (n % x == 1)
            {
                answer = x;
                break;
            }
        }
        return answer;
    }
}",https://github.com/Chu-Nyan/CodeKata,2023. 8. 25,5,1
2023. 8. 25 오전 10:23:09,이선재,Unity,10 - 정수 내림차순으로 배치하기,"#include <string>
#include <vector>
#include <queue>

using namespace std;

long long solution(long long n) {
    long long answer = 0;
    string nn = """";
    
    priority_queue<int> pq;
    
    while(n != 0){
        pq.push(n % 10);
        n /= 10;
    }
    
    while(!pq.empty()){
        nn.append(to_string(pq.top()));
        pq.pop();
    }
    
    answer = stoll(nn);
    
    return answer;
}",https://github.com/shehdrbs123/spartaB10/blob/main/%EC%9D%B4%EC%84%A0%EC%9E%AC/Programmers/%EC%A0%95%EC%88%98%20%EB%82%B4%EB%A6%BC%EC%B0%A8%EC%88%9C%EC%9C%BC%EB%A1%9C%20%EB%B0%B0%EC%B9%98%ED%95%98%EA%B8%B0,2023. 8. 25,10,1
2023. 8. 25 오전 10:23:39,진우성,Unity,3 - 자릿수 더하기,"using System;

public class Solution {
    public int solution(int n) {
        int answer = 0;
         while (n > 0) 
        {
            answer += n % 10;
            n = n / 10;
        }
        return answer;
    }
}",,2023. 8. 25,3,1
2023. 8. 25 오전 10:23:56,박민혁,Unity,11 - 하샤드 수,"using System;
public class Solution {
    public bool solution(int x) {
        bool answer = true;
        int save=x;
        int sum=0;
        for(int i=0;i<Math.Log10(x)+1;++i)
        {
            sum+=save%10;
            save/=10;
        }
        if(x%sum!=0)
        {
            answer=false;
        }
        return answer;
    }
}",,2023. 8. 25,11,1
2023. 8. 25 오전 10:23:58,임전혁,Unity,14 - 서울에서 김서방 찾기,"public class Solution {
    public string solution(string[] seoul) {
        string answer = """";
        int num = 0;
        
        for (int i = 0; i < seoul.Length; i++)
        {
            if (seoul[i].Equals(""Kim""))
                num = i;
        }
        
        return $""김서방은 {num}에 있다"";
    }
}",https://github.com/yarogono/Algorithm_CSharp/blob/master/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12919.%E2%80%85%EC%84%9C%EC%9A%B8%EC%97%90%EC%84%9C%E2%80%85%EA%B9%80%EC%84%9C%EB%B0%A9%E2%80%85%EC%B0%BE%EA%B8%B0/%EC%84%9C%EC%9A%B8%EC%97%90%EC%84%9C%E2%80%85%EA%B9%80%EC%84%9C%EB%B0%A9%E2%80%85%EC%B0%BE%EA%B8%B0.cs,2023. 8. 25,14,1
2023. 8. 25 오전 10:24:15,한병권,Unity,32 - 삼총사,"using System;

public class Solution {
    public int solution(int[] number) {
        int answer = 0;
        
        for( int n = 0; n < number.Length; n++)
        {
            for ( int m = n + 1; m < number.Length; m++)
            {
                for ( int l = m + 1; l < number.Length; l++)
                {
                    if (number[n] + number[m] + number[l] == 0)
                        answer++;
                }
            }
        }
        
        return answer;
    }
}",https://github.com/hbg9212/AlgorithmCodekata,2023. 8. 25,32,2
2023. 8. 25 오전 10:24:36,조병우,Unity,4 - 약수의 합,"#include <stdio.h>
#include <stdbool.h>
#include <stdlib.h>

int solution(int n) {
    int answer = 0;
    for(int i=1; i<=n; i++){
        if(n%i==0)	answer += i;
    }
    return answer;
}",,2023. 8. 25,4,1
2023. 8. 25 오전 10:24:43,이경현,Unity,8 - 문자열을 정수로 바꾸기,"        public int solution(string s)
        {
            return int.Parse(s); ;
        }",https://github.com/516lkh/Algorithm,2023. 8. 25,8,1
2023. 8. 25 오전 10:24:50,김민상,Unity,23 - 약수의 개수와 덧셈,"using System;
public class Solution
{
    public int solution(int left, int right)
    {
        int answer = 0;

        for (int i = left; i <= right; i++)
        {            
            answer += (Math.Sqrt(i) % 1 > 0)? i : -i;
        }

        return answer;
    }
}",,2023. 8. 25,23,1
2023. 8. 25 오전 10:24:57,이소이,Unity,9 - 정수 제곱근 판별,"using System;
public class Solution {
    public long solution(long n) {
        long answer = 0;
        for (long i = 1; i < n / 2 + 2; i++)
        {
            if (n / i == i && n % i == 0)
            {
                answer = i;
                break ;
            }
        }
        if (answer == 0)
            return -1;
        answer = (answer + 1) * (answer + 1);
        return answer;
    }
}",https://github.com/leesy015599/AlgorithmCodeKata/blob/master/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12934.%E2%80%85%EC%A0%95%EC%88%98%E2%80%85%EC%A0%9C%EA%B3%B1%EA%B7%BC%E2%80%85%ED%8C%90%EB%B3%84/%EC%A0%95%EC%88%98%E2%80%85%EC%A0%9C%EA%B3%B1%EA%B7%BC%E2%80%85%ED%8C%90%EB%B3%84.cs,2023. 8. 25,9,1
2023. 8. 25 오전 10:25:12,김주형,Unity,5 - 나머지가 1이 되는 수 찾기,"using System;

public class Solution
{
    public int solution(int n) 
    {    
        int answer = 0;
        int x;
        for(x = 2; x<=n; x++)
        {
            if (n % x == 1)
            {
                return x;
            }
        }
        x = answer;
        return answer;
    }
}",https://github.com/kjuhyung/Algorithm.git,2023. 8. 25,5,1
2023. 8. 25 오전 10:25:17,이도현,Unity,3 - 자릿수 더하기,"using System;

public class Solution {
    public int solution(int n) {
        int answer =0;
        foreach(var i in n.ToString())
        {
            answer+=Convert.ToInt32(i)-'0';
        }
        return answer;
    }
}",,2023. 8. 25,3,1
2023. 8. 25 오전 10:25:23,김하늘,Unity,6 - x만큼 간격이 있는 n개의 숫자,"public class Solution 
{
    public long[] solution(int x, int n) 
    {
        long[] answer = new long[n];
        for (int i = 0; i < n; i++)
        {
            answer[i] = (long)x * (i + 1);
        }
        return answer;
    }
}",,2023. 8. 25,6,1
2023. 8. 25 오전 10:25:26,박민호,Unity,9 - 정수 제곱근 판별,"public class Solution {
    public long solution(long n) {
        long x = 1;
        long answer = 0;
        while(x<=n){
            if((x*x)>n){
                answer = -1;
                break;
            }
            else if (n==x*x){
                answer = ((x+1)*(x+1));
                break;
            }
            else {
                x++;
            }
        }
        return answer;
    }
}",,2023. 8. 25,9,1
2023. 8. 25 오전 10:25:37,신우석,Unity,19 - 제일 작은 수 제거하기,"using System.Collections.Generic;

public class Solution {
    public int[] solution(int[] arr) {
        if (arr.Length == 1) return new int[1] {-1};
        
        int minIdx = 0;
        
        for (int i = 0; i < arr.Length; ++i)
            if (arr[i] < arr[minIdx])
                minIdx = i;
        
        List<int> answer = new List<int>();
        for (int i = 0; i < arr.Length; ++i)
            if (i != minIdx)
                answer.Add(arr[i]);
                
        return answer.ToArray();
    }
}",https://github.com/seoksii/AlgorithmCodeKata/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12935.%E2%80%85%EC%A0%9C%EC%9D%BC%E2%80%85%EC%9E%91%EC%9D%80%E2%80%85%EC%88%98%E2%80%85%EC%A0%9C%EA%B1%B0%ED%95%98%EA%B8%B0,2023. 8. 25,19,1
2023. 8. 25 오전 10:25:39,김민태,Unity,14 - 서울에서 김서방 찾기,"public class Solution {
    public string solution(string[] seoul) {
        string answer = """";
        for(int i = 0; i<seoul.Length; i++){
            if(seoul[i] == ""Kim""){
                answer = $""김서방은 {i}에 있다"";
            }
        }
        return answer;
    }
}",https://github.com/rlaalsxo/CodingTest,2023. 8. 25,14,1
2023. 8. 25 오전 10:25:48,이주연,Unity,19 - 제일 작은 수 제거하기,"#include <string>
#include <vector>
#include <algorithm>

using namespace std;

vector<int> solution(vector<int> arr) {
    vector<int> answer;
    int min = 99999;
    int idx = 0;
    
    if(arr.size() == 1)
    {
        answer.emplace_back(-1);
        return answer;
    }
        
    arr.erase(min_element(arr.begin(), arr.end()));
    answer = arr;
    
    return answer;
}",,2023. 8. 25,19,1
2023. 8. 25 오전 10:27:12,최장범,Unity,6 - x만큼 간격이 있는 n개의 숫자,"public class Solution {
    public long[] solution(int x, int n) {
        long[] answer = new long[n];
        for (int i = 0; i < n; i++)
        {
            answer[i] = (long)x * (i + 1);
        }
        return answer;
    }
}",,2023. 8. 25,6,1
2023. 8. 25 오전 10:28:37,이홍준,Unity,9 - 정수 제곱근 판별,"using System;

public class Solution {
    public long solution(long n) {
        long answer = 0;
        double a = Math.Sqrt(n);
        
        if (a % 1 == 0)
        {
            answer = (long)(a + 1) * (long)(a + 1);
        }
        else
        {
            answer = -1;
        }
         
        return answer;
    }
}",https://github.com/dlghdwns97/Study/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12934.%E2%80%85%EC%A0%95%EC%88%98%E2%80%85%EC%A0%9C%EA%B3%B1%EA%B7%BC%E2%80%85%ED%8C%90%EB%B3%84,2023. 8. 25,9,1
2023. 8. 25 오전 10:28:39,신우석,Unity,20 - 가운데 글자 가져오기,"public class Solution {
    public string solution(string s) {
        return s.Substring((s.Length - 1) >> 1, 2 - (s.Length % 2));
    }
}",https://github.com/seoksii/AlgorithmCodeKata/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12903.%E2%80%85%EA%B0%80%EC%9A%B4%EB%8D%B0%E2%80%85%EA%B8%80%EC%9E%90%E2%80%85%EA%B0%80%EC%A0%B8%EC%98%A4%EA%B8%B0,2023. 8. 25,20,1
2023. 8. 25 오전 10:28:46,김도현B,Unity,13 - 콜라츠 추측,"public class Solution {
    public int solution(int num) {
        long n = num;
        int answer = 0;
        while(n != 1 && answer != 500){
            answer++;
            n = n%2==0? n/2 : n*3 +1;
        }
        return answer == 500 ? -1 : answer;
    }
}",https://github.com/subscriptioncat/Algorithm,2023. 8. 25,13,1
2023. 8. 25 오전 10:28:52,이정환,Unity,6 - x만큼 간격이 있는 n개의 숫자," public class Solution
        {
            public long[] solution(int x, int n)
            {
                long[] answer = new long[n];
                long value =x;
                for (int i = 0; i < n; i++)
                {
                   answer[i]=value;
                value += x;
                }
                return answer;
            }
        }",,2023. 8. 25,6,1
2023. 8. 25 오전 10:28:59,조병우,Unity,5 - 나머지가 1이 되는 수 찾기,"#include <stdio.h>
#include <stdbool.h>
#include <stdlib.h>

int solution(int n) {
    int answer = 0;
    for(int x=n-1; x >0; x--){
        if(n % x == 1) answer = x;
    }
    return answer;
}",,2023. 8. 25,5,1
2023. 8. 25 오전 10:29:04,김나운,Unity,6 - x만큼 간격이 있는 n개의 숫자,"public class Solution {
    public long[] solution(int x, int n) {
        long[] answer = new long[n];
        
        for(long i = 0; i < n; i++){
            answer[i] = x + x*i;    
        }
        return answer;
    }
}",,2023. 8. 25,6,1
2023. 8. 25 오전 10:29:13,박준규,Unity,7 - 자연수 뒤집어 배열로 만들기,"public class Solution 
{
    public int[] solution(long n) 
    {
        string l = n.ToString();
        int[] answer = new int[l.Length];
        while (n > 0)
        {
            for (int i = 0; i < answer.Length; i++)
            {
                answer[i] = (int)(n % 10);
                n = n / 10;
            }
        }
        return answer;
    }
}",,2023. 8. 25,7,1
2023. 8. 25 오전 10:29:22,차요한,Unity,10 - 정수 내림차순으로 배치하기,"using System;
using System.Linq;

public class Solution {
    public long solution(long n) {
        char[] arr = n.ToString().ToCharArray();
        Array.Sort(arr);
        Array.Reverse(arr);        
        long answer = Convert.ToInt64(new string(arr));
        
        return answer;
    }
}",https://github.com/HOHOJO/Algorithm_test,2023. 8. 25,10,1
2023. 8. 25 오전 10:29:24,손병의,AI,6 - x만큼 간격이 있는 n개의 숫자,"public class Solution
{
    public long[] solution(int x, int n)
    {
        long[] answer = new long[n]; 
                
            for(int i = 0; i < n; i++)
            {
                if(i == 0)
                    answer[i] = x;
                else
                    answer[i] = x + answer[i-1];
            }
                       
        
        return answer;
    }
} ",https://github.com/Son-BE/CodeKata1,2023. 8. 25,6,1
2023. 8. 25 오전 10:29:37,박종수,Unity,2 - 평균 구하기,"using System.Linq;
public class Solution {
    public double solution(int[] arr) {
        return arr.Average();
    }
}
",https://github.com/pjayas/AlgorithmCodeKata,2023. 8. 25,2,1
2023. 8. 25 오전 10:29:59,김광수,Unity,37 - 문자열 내 마음대로 정렬하기,"using System.Collections.Generic;
using System;
using System.Linq;
public class Solution
    {
        public string[] solution(string[] strings, int n)
        {
            // 문자열 배열을
            // 각 문자열의 인덱스 n글자를 기준으로 정렬한다.

            List<string> list = strings.ToList();
            list.Sort((x, y) =>MyCompare(x,y,n));
            
            return list.ToArray();
        }
    
        public int MyCompare(string a, string b, int n)
        {
            int minLength = Math.Min(a.Length, b.Length);
            int index = 0;
            
            if (a[n] == b[n])
            {
                while(a[index] == b[index] && index < minLength-1)
                {
                index++;
                // 만약 입력받은 a[n]과 b[n]이 같을경우
                // a와 b중 사전순으로 뭐가 우선인지 확인해야된다.
                
                }
            return a[index].CompareTo(b[index]);    
            }
            else{
                return a[n].CompareTo(b[n]);
            }
            
            
        }
    }",https://github.com/kksoo0131/Study/commit/0e809c2363400684b9b76e9742b9f4158f82e3ab,2023. 8. 25,37,2
2023. 8. 25 오전 10:30:32,김진환,Unity,8 - 문자열을 정수로 바꾸기,"public static int solution(string s)
        {
            int answer = 0;
            answer = int.Parse(s);
            return answer;
        }",https://github.com/NewRound/AlgorithmKata.git,2023. 8. 25,8,1
2023. 8. 25 오전 10:31:03,신해준,Unity,4 - 약수의 합,"using System.Collections.Generic;



public class Solution

{
    public int solution(int n) 
    {
        int answer = 0;
        List<int> divisors = new List<int>();

        for (int i =1; i <= n; i++)
        {
            if (n%i==0)
            {
                divisors.Add(i);
            }

        }
        foreach (int divisor in divisors)
            {
                answer += divisor;
            }
        return answer;
    }
}",,2023. 8. 25,4,1
2023. 8. 25 오전 10:31:14,이선재,Unity,11 - 하샤드 수,"#include <string>
#include <vector>

using namespace std;

bool solution(int x) {
    int xOri = x;
    int sum = 0;
    
    while(x != 0){
        sum += (x%10);
        
        x /= 10;
    }
    
    return xOri % sum == 0 ? true : false;
}",https://github.com/shehdrbs123/spartaB10/blob/main/%EC%9D%B4%EC%84%A0%EC%9E%AC/Programmers/%ED%95%98%EC%83%A4%EB%93%9C%20%EC%88%98,2023. 8. 25,11,1
2023. 8. 25 오전 10:31:17,박민호,Unity,10 - 정수 내림차순으로 배치하기,"using System;
public class Solution {
    public long solution(long n) {
        Char[] temp = n.ToString().ToCharArray();
        Array.Sort(temp);
        Array.Reverse(temp);
        long answer = Convert.ToInt64(new string(temp));
        
        return answer;
    }
}",,2023. 8. 25,10,1
2023. 8. 25 오전 10:31:20,김진환,Unity,9 - 정수 제곱근 판별,"public static long solution(long n)
        {
            int root = (int)Math.Sqrt(n);

            if (n == Math.Pow(root, 2))
                return (long)Math.Pow(root + 1, 2);

            return -1;
        }",https://github.com/NewRound/AlgorithmKata.git,2023. 8. 25,9,1
2023. 8. 25 오전 10:32:25,이형빈,Unity,5 - 나머지가 1이 되는 수 찾기,"using System;

public class Solution {
    public int solution(int n) {
        int answer = 0;

        for(int i = 1;i<=n; i++)
        {
            if(n%i==1)
            {
                answer = i;
                break;
            }
            
        }
            
        return answer;
    }
}",,2023. 8. 25,5,1
2023. 8. 25 오전 10:32:38,이소이,Unity,10 - 정수 내림차순으로 배치하기,"using System.Collections.Generic;

public class Solution {
    public long solution(long n) {
        List<int> list = new List<int>();
        while (n != 0)
        {
            list.Add((int)(n % 10));
            n /= 10;
        }
        long answer = 0;
        
        for (int i = 9; i >= 0; i--)
        {
            foreach (int elem in list)
            {
                if (elem == i)
                {
                    answer *= 10;
                    answer += elem;
                }
            }
        }
        
        return answer;
    }
}",https://github.com/leesy015599/AlgorithmCodeKata/blob/master/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12933.%E2%80%85%EC%A0%95%EC%88%98%E2%80%85%EB%82%B4%EB%A6%BC%EC%B0%A8%EC%88%9C%EC%9C%BC%EB%A1%9C%E2%80%85%EB%B0%B0%EC%B9%98%ED%95%98%EA%B8%B0/%EC%A0%95%EC%88%98%E2%80%85%EB%82%B4%EB%A6%BC%EC%B0%A8%EC%88%9C%EC%9C%BC%EB%A1%9C%E2%80%85%EB%B0%B0%EC%B9%98%ED%95%98%EA%B8%B0.cs,2023. 8. 25,10,1
2023. 8. 25 오전 10:32:43,이주연,Unity,20 - 가운데 글자 가져오기,"#include <string>
#include <vector>

using namespace std;

string solution(string s) {
    string answer = """";
    int midIdx = s.size() / 2;
    
    if(s.size() % 2 == 0)
    {
        answer += s[(midIdx-1)];
    }
        answer += s[midIdx];
    return answer;
}",,2023. 8. 25,20,1
2023. 8. 25 오전 10:32:49,신현주,Unity,7 - 자연수 뒤집어 배열로 만들기,"public class Solution {
    public int[] solution(long n) {
        
        long ten = 1;
        long num = 0;
        int count = 0;
        for(int i =0; i < 12 ; i++){
            if( n / ten == 0){
                break;
            }else{
                ten = ten * 10;
                count++;
            }
        }
        ten = ten / 10;
        int[] answer = new int[count];
        for( int i= count-1; i >= 0; i--){
            if( n > 0){
                num = n / ten;
                answer[i] = (int)num;
                n = n % ten;
                ten = ten / 10;
            }else if( ten >= 1 && n == 0){
                answer[i] = 0;
            }else{
                break;
            }
        }
        
        return answer;
    }
}",https://github.com/Shyunju/codTaka.git,2023. 8. 25,7,1
2023. 8. 25 오전 10:33:35,최수용,Unity,6 - x만큼 간격이 있는 n개의 숫자,"
public class Solution {
    public long[] solution(int x, int n) {
        long[] answer = new long[n];
        for(int i=0 ; i < n ; i++){
            answer[i] = (long)(i+1)*x;
        }
        return answer;
    }
}",,2023. 8. 25,6,1
2023. 8. 25 오전 10:33:45,박민혁,Unity,12 - 두 정수 사이의 합,"public class Solution {
    public long solution(int a, int b) {
        long answer = 0;
        int i,j;
        i= a < b ? i=a :i =b;
        j= a < b ? j=b :j= a;
        for(int k=i; k<=j; ++k)
        {
            answer+=k;
        }
        return answer;
    }
}",,2023. 8. 25,12,1
2023. 8. 25 오전 10:33:56,이승연,Unity,3 - 자릿수 더하기,"using System;

public class Solution {
    public int solution(int n) {
        int answer = 0;
        
        while(n>0)
        {
            int Value=n%10;
            answer+=Value;
            n /=10;
        }
        
        return answer;
    }
}",,2023. 8. 25,3,1
2023. 8. 25 오전 10:34:02,김예준,Unity,6 - x만큼 간격이 있는 n개의 숫자,"public class Solution {
    public long[] solution(int x, int n) {
        long[] answer = new long[n];
        long num = x;
        
        for (int i = 0; i < n; i++)
        {
            answer[i] = num;
            num += x;
        }
        
        return answer;
    }
}",,2023. 8. 25,6,1
2023. 8. 25 오전 10:34:27,김예준,Unity,7 - 자연수 뒤집어 배열로 만들기,"using System.Collections.Generic;

public class Solution {
    public int[] solution(long n) {
        int[] answer = new int[] {};
        List<int> nums = new List<int>();
        
        while (n != 0)
        {
            nums.Add((int)(n % 10));
            n /= 10;
        }
        
        answer = nums.ToArray();
        
        return answer;
    }
}",,2023. 8. 25,7,1
2023. 8. 25 오전 10:34:36,이주연,Unity,21 - 수박수박수박수박수박수?,"#include <string>
#include <vector>

using namespace std;

string solution(int n) {
    string answer = """";
    for(int i = 1; i <= n; i++){
        if(i % 2 == 1) 
            answer += (""수"");
        else 
            answer += (""박"");
    }
    return answer;
}",,2023. 8. 25,21,1
2023. 8. 25 오전 10:34:43,임전혁,Unity,15 - 나누어 떨어지는 숫자,"using System;
using System.Collections.Generic;

public class Solution {
    public int[] solution(int[] arr, int divisor) {
        int[] answer;
        List<int> list = new List<int>();
        
        for (int i = 0; i < arr.Length; i++)
        {
            if (arr[i] % divisor == 0)
                list.Add(arr[i]);
        }
        
        if (list.Count == 0)
            return answer = new int[] { -1 };
        
        list.Sort();
        
        answer = new int[list.Count];
        
        for (int i = 0; i < list.Count; i++)
            answer[i] = list[i];
        
        return answer;
    }
}",https://github.com/yarogono/Algorithm_CSharp/tree/master/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12910.%E2%80%85%EB%82%98%EB%88%84%EC%96%B4%E2%80%85%EB%96%A8%EC%96%B4%EC%A7%80%EB%8A%94%E2%80%85%EC%88%AB%EC%9E%90%E2%80%85%EB%B0%B0%EC%97%B4,2023. 8. 25,15,1
2023. 8. 25 오전 10:34:51,이세진,Unity,7 - 자연수 뒤집어 배열로 만들기,"public class Solution {
    public long[] solution(long n) {  
        string str = n.ToString();
        
        long[] answer = new long[str.Length];   
        
        for(int i = 0 ; i < str.Length; i++)
        {         
            long n_ = n;
            n /= 10;
            n *= 10;
            answer[i] = n_ - n;
            n /= 10;
        }

        
        return answer;
    }
}",,2023. 8. 25,7,1
2023. 8. 25 오전 10:34:57,이현지,Unity,9 - 정수 제곱근 판별,"using static System.Math;

public class Solution {
    public long solution(long n) {
        long answer = 0;
        double sqrt = Sqrt(n);
        if (sqrt == (long)sqrt)  answer = ((long)sqrt + 1) * ((long)sqrt + 1);
        else answer = -1;
        return answer;
    }
}",https://github.com/szlovelee/Programmers-Algorithm,2023. 8. 25,9,1
2023. 8. 25 오전 10:35:13,이선재,Unity,12 - 두 정수 사이의 합,"#include <string>
#include <vector>

using namespace std;

long long solution(int a, int b) {
    long long answer = 0;
    
    for(int i = ((a<=b)?a:b); i <= ((a<=b)?b:a); i++)
    {
        answer += i;
    }
    
    return answer;
}",https://github.com/shehdrbs123/spartaB10/blob/main/%EC%9D%B4%EC%84%A0%EC%9E%AC/Programmers/%EB%91%90%20%EC%A0%95%EC%88%98%20%EC%82%AC%EC%9D%B4%EC%9D%98%20%ED%95%A9,2023. 8. 25,12,1
2023. 8. 25 오전 10:35:29,이소이,Unity,11 - 하샤드 수,"public class Solution {
    public bool solution(int x) {
        int sum = 0;
        int tempX = x;
        
        while (tempX != 0)
        {
            sum += tempX % 10;
            tempX /= 10;
        }
        
        bool answer = true;
        if (x % sum != 0)
            answer = false;
        
        return answer;
    }
}",https://github.com/leesy015599/AlgorithmCodeKata/blob/master/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12947.%E2%80%85%ED%95%98%EC%83%A4%EB%93%9C%E2%80%85%EC%88%98/%ED%95%98%EC%83%A4%EB%93%9C%E2%80%85%EC%88%98.cs,2023. 8. 25,11,1
2023. 8. 25 오전 10:35:38,조성훈,Unity,3 - 자릿수 더하기,"using System;

public class Solution 
{
    public int solution(int n) 
    {
        int answer = 0;
        while(n != 0)
        {
            answer += n % 10;
            n = n / 10;
        }
        return answer;
    }
}",,2023. 8. 25,3,1
2023. 8. 25 오전 10:35:40,김진성,Unity,5 - 나머지가 1이 되는 수 찾기,"using System;

namespace Algorithm_002
{
    internal class FindRemainder
    {
        public int solution(int n)
        {
            int answer = 0;
            for (int i = n - 1; i > 1; i--)
            {
                if (n % i == 1)
                {
                    answer = i;
                }
            }
            return answer;
        }
    }
}
",https://github.com/GYALLERHORN/ALGORITHM,2023. 8. 25,5,1
2023. 8. 25 오전 10:35:40,안소정,Unity,8 - 문자열을 정수로 바꾸기,"public class Solution {
    public int solution(string s) {
        int answer = int.Parse (s);
        return answer;
    }
}",,2023. 8. 25,8,1
2023. 8. 25 오전 10:35:43,신우석,Unity,21 - 수박수박수박수박수박수?,"using System.Text;

public class Solution {
    public string solution(int n) {
        
        return new StringBuilder(n)
            .Insert(0, ""수박"", n / 2)
            .Insert(n-1, (n % 2 == 0 ? """" : ""수""))
            .ToString();
    }
}",https://github.com/seoksii/AlgorithmCodeKata/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12922.%E2%80%85%EC%88%98%EB%B0%95%EC%88%98%EB%B0%95%EC%88%98%EB%B0%95%EC%88%98%EB%B0%95%EC%88%98%EB%B0%95%EC%88%98%EF%BC%9F,2023. 8. 25,21,1
2023. 8. 25 오전 10:35:49,이주연,Unity,22 - 내적,"#include <string>
#include <vector>

using namespace std;

int solution(vector<int> a, vector<int> b) {
    int answer = 0;
    
    for(int i = 0; i < a.size(); i++)
    {
        answer += (a[i] * b[i]);
    }
    
    return answer;
}",,2023. 8. 25,22,1
2023. 8. 25 오전 10:35:50,임전혁,Unity,16 - 음양 더하기,"using System;

public class Solution {
    public int solution(int[] absolutes, bool[] signs) {
      int answer = 123456789;

        int sumNum = 0;
        for(int i = 0; i < absolutes.Length; i++) {
            if(!(signs[i])) {
                sumNum -= absolutes[i];
            } else {
                sumNum += absolutes[i];
            }
        }
        answer = sumNum;
        return answer;
    }
}",https://github.com/yarogono/Algorithm_CSharp/tree/master/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/76501.%E2%80%85%EC%9D%8C%EC%96%91%E2%80%85%EB%8D%94%ED%95%98%EA%B8%B0,2023. 8. 25,16,1
2023. 8. 25 오전 10:36:11,신현주,Unity,8 - 문자열을 정수로 바꾸기,"public class Solution {
    public int solution(string s) {
        int answer = 0;
        answer = int.Parse(s);
        return answer;
    }
}",https://github.com/Shyunju/codTaka.git,2023. 8. 25,8,1
2023. 8. 25 오전 10:36:50,김호연,Unity,7 - 자연수 뒤집어 배열로 만들기,"using System;

public class Solution {
    public int[] solution(long n)
    {
        string str = n.ToString();
        int[] answer = new int[str.Length];
        //n을 집어넣었을 때 배열이 정리되는 메서드
        //n을 12345 이런 식으로 써도 한 글자 씩만 저장됨. = Parse 사용
        
        for(int i = 0; i < str.Length; i++)
        {
             answer[i] = int.Parse(str[i].ToString());
        }
        Array.Reverse(answer); // 배열 뒤집는 코드. System 필요
        
        return answer;
    }
}",,2023. 8. 25,7,1
2023. 8. 25 오전 10:37:40,함영주,Unity,5 - 나머지가 1이 되는 수 찾기,"using System;

public class Solution {
    public int solution(int n) {
        int answer = 0;
        
        for(int x = 2; x < n; x++)
        {
            if (n % x == 1)
            {
             answer = x;
                break;
  
            }
         
        }
        
        return answer;
    }
}",,2023. 8. 25,5,1
2023. 8. 25 오전 10:37:47,신우석,Unity,22 - 내적,"using System;

public class Solution {
    public int solution(int[] a, int[] b) {
        int answer = 0;
        for (int i = 0; i < a.Length; ++i)
            answer += a[i] * b[i];
        return answer;
    }
}",https://github.com/seoksii/AlgorithmCodeKata/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/70128.%E2%80%85%EB%82%B4%EC%A0%81,2023. 8. 25,22,1
2023. 8. 25 오전 10:38:02,김주형,Unity,6 - x만큼 간격이 있는 n개의 숫자,"public class Solution 
{
    public long[] solution(int x, int n) 
    {
        long[] answer = new long[n];
        for (int i =1; i <=n; i++)
        {
            answer[i-1] = (long)x * i;
        }
        return answer;
    }
}",https://github.com/kjuhyung/Algorithm.git,2023. 8. 25,6,1
2023. 8. 25 오전 10:38:10,박민호,Unity,11 - 하샤드 수,"public class Solution {
    public bool solution(int x) {
        int divide=0;
        int temp = x;
        while(temp>0){
            divide += temp%10;
            temp /=10;
        }
        bool answer = false;
        if (x%divide==0){
            answer = true;
        }
        else{
            answer = false;
        }
        
        return answer;
    }
}",,2023. 8. 25,11,1
2023. 8. 25 오전 10:38:12,한병권,Unity,33 - 크기가 작은 부분,"using System;

public class Solution {
    public int solution(string t, string p) {
        int answer = 0;
        long intP = long.Parse(p);
        int size = p.Length;
        
        if (t.Length == size)
        {
            if(long.Parse(t) <= intP)
                answer++;
        }
        else
        {
            for ( int i = 0; i <= (t.Length - size); i++)
            {
                if(long.Parse(t.Substring(i,size)) <= intP)
                    answer++;
            }

        }
        return answer;
    }
}",https://github.com/hbg9212/AlgorithmCodekata,2023. 8. 25,33,2
2023. 8. 25 오전 10:38:13,함영주,Unity,4 - 약수의 합,"public class Solution {
    public int solution(int n) {
        int answer = 0;
        
        for(int i = 1 ; i <= n ; i++)
        {
           if (n % i == 0)
           
               answer += i; 
        }
        
        
        return answer;
    }
}",,2023. 8. 25,4,1
2023. 8. 25 오전 10:38:36,김민태,Unity,15 - 나누어 떨어지는 숫자,"using System;
using System.Collections.Generic;

public class Solution {
    public int[] solution(int[] arr, int divisor) {
        List<int> answer = new List<int>();
        for(int i = 0; i<arr.Length; i++){
            if(arr[i] % divisor == 0){
                answer.Add(arr[i]);
            }
        }
        answer.Sort();
        if(answer.Count == 0){
            answer.Add(-1);
        }
        return answer.ToArray();
    }
}",https://github.com/rlaalsxo/CodingTest,2023. 8. 25,15,1
2023. 8. 25 오전 10:38:40,김민석,Unity,4 - 약수의 합,"public class Solution {
    public int solution(int n) {
        int answer = 0;
        
        for(int i = 1; i <= n/2; i++){
            if(n % i == 0){
                answer += i;
            }
        }
        return answer + n;
    }
}",https://github.com/ms0753/codekata/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12928.%E2%80%85%EC%95%BD%EC%88%98%EC%9D%98%E2%80%85%ED%95%A9,2023. 8. 25,4,1
2023. 8. 25 오전 10:39:19,이소이,Unity,12 - 두 정수 사이의 합,"public class Solution {
    public long solution(int a, int b) {
        if (a == b)
            return a;
        if (a > b)
        {
            int temp = a;
            a = b;
            b = temp;
        }
        long sum = 0;
        for (int i = a; i < b + 1; i++)
        {
            sum += (long)i;
        }
        
        long answer = sum;
        return answer;
    }
}",https://github.com/leesy015599/AlgorithmCodeKata/blob/master/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12912.%E2%80%85%EB%91%90%E2%80%85%EC%A0%95%EC%88%98%E2%80%85%EC%82%AC%EC%9D%B4%EC%9D%98%E2%80%85%ED%95%A9/%EB%91%90%E2%80%85%EC%A0%95%EC%88%98%E2%80%85%EC%82%AC%EC%9D%B4%EC%9D%98%E2%80%85%ED%95%A9.cs,2023. 8. 25,12,1
2023. 8. 25 오전 10:39:56,차요한,Unity,11 - 하샤드 수,"public class Solution {
    public bool solution(int x) {
        bool answer = true;
        int n =0;
        int A=x;
        while(A>0)
        {
            n+=A%10;
            A/=10;
        }
        
        if((x%n)!=0){
            answer=false;
        }
        
        return answer;
    }
}",https://github.com/HOHOJO/Algorithm_test,2023. 8. 25,11,1
2023. 8. 25 오전 10:40:04,김호연,Unity,8 - 문자열을 정수로 바꾸기,"public class Solution {
    public int solution(string s) {
        int answer = 0;
        // 캐스팅
        answer = int.Parse(s);
        return answer;
    }
}",,2023. 8. 25,8,1
2023. 8. 25 오전 10:40:29,최장범,Unity,7 - 자연수 뒤집어 배열로 만들기,"using System;
using System.Linq;

public class Solution {
    public int[] solution(long n) {
        string str = n.ToString();
        int[] answer = new int[str.Length];
        
        for(int i = 0; i < str.Length; i++)
        {
            answer[i] = int.Parse(str[i].ToString());
        }
        Array.Reverse(answer);
        return answer;
    }
}",,2023. 8. 25,7,1
2023. 8. 25 오전 10:40:46,박지원,Unity,7 - 자연수 뒤집어 배열로 만들기,"using System;

public class Solution {
    public int[] solution(long n) {
        int num;
        long n1 = n;
        for(num = 0; n1 >= 1; num++)    n1 /= 10;
        int[] answer = new int[num];
        for(int i = 0; n >= 1; i++)
        {
            answer[i] = (int) (n % 10);
            n /= 10;
        }
        return answer;
    }
}",https://github.com/jwonp9127/AlgorithmStudy/tree/d4e1c0b423477ef44a80e008bb4dd1d6a90b7b5a/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12932.%E2%80%85%EC%9E%90%EC%97%B0%EC%88%98%E2%80%85%EB%92%A4%EC%A7%91%EC%96%B4%E2%80%85%EB%B0%B0%EC%97%B4%EB%A1%9C%E2%80%85%EB%A7%8C%EB%93%A4%EA%B8%B0,2023. 8. 25,7,1
2023. 8. 25 오전 10:41:14,이홍준,Unity,10 - 정수 내림차순으로 배치하기,"using System;

public class Solution {
    public long solution(long n) {
        long answer = 0;
        string temp = n.ToString();
        int[] x = new int[temp.Length];
        string temp2 = """";
        
        for (int i = 0; i < temp.Length; i++)
        {
            x[i] = int.Parse(temp[i].ToString());
        }
        
        Array.Sort(x);
        Array.Reverse(x);
        
        for (int i = 0; i < temp.Length; i++)
        {
            temp2 += x[i].ToString();
        }
        
        answer = long.Parse(temp2.ToString());
        
        return answer;
    }
}",https://github.com/dlghdwns97/Study/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12933.%E2%80%85%EC%A0%95%EC%88%98%E2%80%85%EB%82%B4%EB%A6%BC%EC%B0%A8%EC%88%9C%EC%9C%BC%EB%A1%9C%E2%80%85%EB%B0%B0%EC%B9%98%ED%95%98%EA%B8%B0,2023. 8. 25,10,1
2023. 8. 25 오전 10:41:21,김진규,Unity,8 - 문자열을 정수로 바꾸기,"public class Solution {
    public int solution(string s) {
        int answer = 0;
        if(s[0] == '-') {
             for(int i =1; i<s.Length;i++)
             {
                 answer = answer* 10 + s[i] -'0';
             }answer = -answer;
        }
        else
        {
            answer = int.Parse(s);
        }
        return answer;
    }
}",,2023. 8. 25,8,1
2023. 8. 25 오전 10:41:30,박민혁,Unity,13 - 콜라츠 추측,"public class Solution {
    public int solution(int num) {
        int answer = 0;
        long num1=num;
        if(num1==1){
            answer=0;
        }
        else
        {

         while(num1!=1)
         {
             if(num1%2==0)
             {
                 num1/=2;
             }
             else
             {
                 num1=num1*3+1;
             }
             answer++;     
             if(answer>=500)
             {
                 answer=-1;
                 break;
             }
         }
        }
        return answer;
    }
}",,2023. 8. 25,13,1
2023. 8. 25 오전 10:41:38,장성림,Unity,9 - 정수 제곱근 판별,"using System;
public class Solution {
    public long solution(long n) {
        long answer = -1;
        for(long i = 2; i < n; i++){
            if (n == (i * i)){
                answer = (i + 1) * (i + 1);
                break;
            }
        }
        if (n == 1){
            answer = 4;
        }
        return answer;
    }
}",https://github.com/hoobhoob,2023. 8. 25,9,1
2023. 8. 25 오전 10:41:51,이경현,Unity,9 - 정수 제곱근 판별,"            for (long answer = 1; answer * answer <= n; answer++)
            {
                if (answer * answer == n) return (long)((answer + 1) * (answer + 1));
            }
            return (long)-1;",https://github.com/516lkh/Algorithm,2023. 8. 25,9,1
2023. 8. 25 오전 10:42:09,김민태,Unity,16 - 음양 더하기,"using System;

public class Solution {
    public int solution(int[] absolutes, bool[] signs) {
        int answer = 0;
        for(int i = 0; i<absolutes.Length; i++){
            if(!signs[i]){
                absolutes[i] *= -1; 
            }
            answer += absolutes[i];
        }
        return answer;
    }
}",https://github.com/rlaalsxo/CodingTest,2023. 8. 25,16,1
2023. 8. 25 오전 10:42:57,김어진,Unity,5 - 나머지가 1이 되는 수 찾기,"using System;

public class Solution {
    public int solution(int n) {
        int answer = 0;
        for(int i=1; i<n; i++){
           if(n%i==1){
               answer = i;
               break;
           }
        }
        return answer;
    }
}",,2023. 8. 25,5,1
2023. 8. 25 오전 10:42:59,문준권,Unity,2 - 평균 구하기,"public class Solution {
    public double solution(int[] arr) {
        int sum = 0;
        foreach (int num in arr) {
            sum += num;
        }
        
        double average = (double)sum / arr.Length;
        return average;
    }
}",,2023. 8. 25,2,1
2023. 8. 25 오전 10:43:05,차요한,Unity,12 - 두 정수 사이의 합,"public class Solution {
    public long solution(int a, int b) {
        long answer = 0;
        int n=0;
        int c=0;
        if(a<b)
        {
            n=a;
            c=b;
        }
        else
        {
            n=b;
            c=a;
        }
        for(int i=n ; i<=c ; i++)
        {
            answer+=i;
        }
        return answer;
    }
}",https://github.com/HOHOJO/Algorithm_test,2023. 8. 25,12,1
2023. 8. 25 오전 10:43:41,김강현,Unity,6 - x만큼 간격이 있는 n개의 숫자,"        public class Solution
        {
            public long[] solution(long x, long n)
            {
                long num2 = x;
                long[] num = new long[n];
                for(long i = 0; i < n && n <= 1000; i++)
                {
                    num[i] = x;
                    x += num2;
                    
                }
                long[] answer = new long[] { };
                answer = num;
                return answer;

            }
        }",,2023. 8. 25,6,1
2023. 8. 25 오전 10:43:43,이선재,Unity,13 - 콜라츠 추측,"#include <string>
#include <vector>

using namespace std;

int solution(int num) {
    int answer = 0;
    long long n = num;
    
    while(n != 1){
        if(answer == 500){
            answer = -1;
            break;
        }
        
        if(n % 2 == 0){
            n /= 2;
        }
        else{
            n = (n * 3) + 1;
        }
        
        answer += 1;
    }
    
    return answer;
}",https://github.com/shehdrbs123/spartaB10/blob/main/%EC%9D%B4%EC%84%A0%EC%9E%AC/Programmers/%EC%BD%9C%EB%9D%BC%EC%B8%A0%20%EC%B6%94%EC%B8%A1,2023. 8. 25,13,1
2023. 8. 25 오전 10:43:49,노재우,Unity,6 - x만큼 간격이 있는 n개의 숫자,"public class Solution
{
    public long[] solution(int x, int n)
    {
        long[] answer = new long[n];
        for (int i = 1; i <= n; i++)
        {
            answer[i - 1] = (long)x * i; 
        }
        return answer;
    }
}",https://github.com/Chu-Nyan/CodeKata,2023. 8. 25,6,1
2023. 8. 25 오전 10:43:55,임전혁,Unity,17 - 핸드폰 번호 가리기,"using System;
using System.Text;

public class Solution {
    public string solution(string phone_number) {
        string answer = """";

        string backStr = phone_number.Substring(phone_number.Length - 4);
        string frondStr = phone_number.Substring(0, phone_number.Length - 4);

        StringBuilder sb = new StringBuilder();

        for(int i = 0; i < frondStr.Length; i++) {
            sb.Append(""*"");
        }

        answer = sb + backStr;
        return answer;
    }
}",https://github.com/yarogono/Algorithm_CSharp/blob/master/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12948.%E2%80%85%ED%95%B8%EB%93%9C%ED%8F%B0%E2%80%85%EB%B2%88%ED%98%B8%E2%80%85%EA%B0%80%EB%A6%AC%EA%B8%B0/%ED%95%B8%EB%93%9C%ED%8F%B0%E2%80%85%EB%B2%88%ED%98%B8%E2%80%85%EA%B0%80%EB%A6%AC%EA%B8%B0.cs,2023. 8. 25,17,1
2023. 8. 25 오전 10:44:46,김민태,Unity,17 - 핸드폰 번호 가리기,"public class Solution {
    public string solution(string phone_number) {
        string answer = """";
        for(int i = 0; i < phone_number.Length - 4; i++){
            answer += ""*"";
        }
        for(int i = phone_number.Length - 4; i < phone_number.Length; i++){
            answer += phone_number[i];
        }
        return answer;
    }
}",https://github.com/rlaalsxo/CodingTest,2023. 8. 25,17,1
2023. 8. 25 오전 10:45:09,권선영,Unity,4 - 약수의 합,"public class Solution {
    public int solution(int n) {
        int r = 0;
          
        for (int i = 1; i<= n/2; i++)
        {
            if ( n % i == 0 )
            {
                r += i;
            }
        }
        
        return r + n;
    }
}",https://github.com/Tealss,2023. 8. 25,4,1
2023. 8. 25 오전 10:45:43,강성호,Unity,26 - 문자열 다루기 기본,"public class Solution {
    public bool solution(string s) {
       bool answer = true;
			bool chk = false;
			foreach(char i in s)
			{
				if (!char.IsDigit(i))
				{
					chk = true;
				}
			}
			if ((s.Length == 4 || s.Length == 6) && !chk) answer = true; 
			else answer = false;
			
			return answer;
    }
}",,2023. 8. 25,26,1
2023. 8. 25 오전 10:45:50,박민혁,Unity,14 - 서울에서 김서방 찾기,"public class Solution {
    public string solution(string[] seoul) {
        string answer = """";
        for(int i=0; i<seoul.Length;++i)
        {
            if(seoul[i]==""Kim"")
            {
                answer=""김서방은 ""+ i + ""에 있다"";
                break;
            }
        }
        return answer;
    }
}",,2023. 8. 25,14,1
2023. 8. 25 오전 10:46:07,임전혁,Unity,18 - 없는 숫자 더하기,"public class Solution {
    public int solution(int[] numbers) {
        int answer = -1;
        
        int sumNum = 0;
        for (int i = 0; i < numbers.Length; i++)
        {
            sumNum += numbers[i];
        }
        
        answer = 45 - sumNum;
        return answer;
    }
}",https://github.com/yarogono/Algorithm_CSharp/tree/master/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/86051.%E2%80%85%EC%97%86%EB%8A%94%E2%80%85%EC%88%AB%EC%9E%90%E2%80%85%EB%8D%94%ED%95%98%EA%B8%B0,2023. 8. 25,18,1
2023. 8. 25 오전 10:46:09,강성호,Unity,27 - 행렬의 덧셈,"public class Solution {
    public int[,] solution(int[,] arr1, int[,] arr2) {
        int[,] answer = new int[arr1.GetLength(0), arr1.GetLength(1)];

			for(int i = 0; i < arr1.GetLength(0); i++)
			{
				for(int j = 0; j < arr1.GetLength(1); j++)
				{
					answer[i, j] += arr1[i, j] + arr2[i, j];
				}
			}
	
            return answer;
    }
}",,2023. 8. 25,27,1
2023. 8. 25 오전 10:46:12,김도현B,Unity,14 - 서울에서 김서방 찾기,"using System;
public class Solution {
    public string solution(string[] seoul) {

        return string.Format(""김서방은 {0}에 있다"", Array.IndexOf(seoul, ""Kim""));
    }
}",https://github.com/subscriptioncat/Algorithm,2023. 8. 25,14,1
2023. 8. 25 오전 10:46:13,최장범,Unity,8 - 문자열을 정수로 바꾸기,"public class Solution {
    public int solution(string s) 
    {
        
        int answer = int.Parse(s);
        return answer;
    }
}",,2023. 8. 25,8,1
2023. 8. 25 오전 10:46:25,김민상,Unity,24 - 문자열 내림차순으로 배치하기,"using System;
public class Solution {
    public string solution(string s)
    {
        char[] ss = s.ToCharArray();

        Array.Sort(ss);
        Array.Reverse(ss);

        return new string(ss);
    }
}",,2023. 8. 25,24,1
2023. 8. 25 오전 10:46:31,강성호,Unity,28 - 직사각형 별찍기,"using System;

public class Example
{
    public static void Main()
    {
        String[] s;

			Console.Clear();
			s = Console.ReadLine().Split(' ');

			int a = Int32.Parse(s[0]);
			int b = Int32.Parse(s[1]);

			for(int i = 0; i < b; i++)
			{
				
				for (int j = 0; j < a; j++)
				{
					Console.Write(""{0}"", '*');
				}
                Console.WriteLine();
            }
    }
}",,2023. 8. 25,28,1
2023. 8. 25 오전 10:46:40,이소이,Unity,13 - 콜라츠 추측,"using System;

public class Solution {
    public int solution(int num) {
        long lnum = (long)num;
        if (lnum == 1)
            return 0;
        int count = 0;
        while (true)
        {
            if (lnum % 2 == 0)
                lnum /= 2;
            else // num % 2 == 1
                lnum = (lnum * 3) + 1;
            count++;
            if (lnum == 1)
                break;
            if (count == 500)
                return -1;
        }
        return count;
    }
}",https://github.com/leesy015599/AlgorithmCodeKata/blob/master/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12943.%E2%80%85%EC%BD%9C%EB%9D%BC%EC%B8%A0%E2%80%85%EC%B6%94%EC%B8%A1/%EC%BD%9C%EB%9D%BC%EC%B8%A0%E2%80%85%EC%B6%94%EC%B8%A1.cs,2023. 8. 25,13,1
2023. 8. 25 오전 10:46:52,강성호,Unity,29 - 최대공약수와 최소공배수,"public class Solution {
    public int[] solution(int n, int m) {
       int on = n;
			int om = m;
			int r = 0;
			int l = 0;
			while (true)
			{
				r = n % m;
				n = m;
				m = r;				
				if (r == 0) break;
			}
			l = (on * om) / n;
			int[] answer = new int[] {n, l};
			return answer;
    }
}",,2023. 8. 25,29,1
2023. 8. 25 오전 10:47:08,김하늘,Unity,7 - 자연수 뒤집어 배열로 만들기,"public class Solution 
{
    public int[] solution(long n) 
    {
        string nString = n.ToString();
        int[] answer = new int[nString.Length];
        for (int i = 0; i < answer.Length; i++)
        {
            answer[i] = (int)(n % 10);
            n /= 10;
        }
        return answer;
    }
}",,2023. 8. 25,7,1
2023. 8. 25 오전 10:47:14,강성호,Unity,30 - 3진법 뒤집기,"using System;

public class Solution {
    public int solution(int n) {
       int answer = 0;
			int cnt = 0;
			int res = 0;

			string str = """";
			while (n != 0)
			{
				res = n % 3;
				n = n / 3;
				cnt++;
				str += res.ToString();
			}
            
			for(int i = 0; i < cnt; i++)
			{
				answer += (int)Math.Pow(3, i) * (int)char.GetNumericValue(str[cnt - i - 1]);
			}
            return answer;
    }
}",,2023. 8. 25,30,1
2023. 8. 25 오전 10:47:14,박준규,Unity,8 - 문자열을 정수로 바꾸기,"public class Solution 
{
    public int solution(string s) 
    {
        int answer = 0;
        if (s.Contains(""-""))
        {
            answer += int.Parse(s);
        }
        else
        {
            answer += int.Parse(s);
        }
        return answer;
    }
}",,2023. 8. 25,8,1
2023. 8. 25 오전 10:47:44,이주연,Unity,23 - 약수의 개수와 덧셈,"#include <string>
#include <vector>

using namespace std;

int solution(int left, int right) {
    int answer = 0;
    for(int i = left; i <= right; ++i){
        int count = 0;
        for(int j = 1; j <= i; ++j)
            if (i % j == 0)
                ++count;
        if (count % 2 == 1)
            answer -= i;
        else 
            answer += i;
    }
    return answer;
}",,2023. 8. 25,23,1
2023. 8. 25 오전 10:48:19,조성훈,Unity,4 - 약수의 합,"public class Solution 
{
    public int solution(int n) 
    {
        int answer = 0;
        
        for(int i = 1; i < n+1; i++)
        {
            if(n % i ==  0)
            {
                answer += i;
            }
                
        }

        return answer;
    }
}",,2023. 8. 25,4,1
2023. 8. 25 오전 10:48:26,박민호,Unity,12 - 두 정수 사이의 합,"public class Solution {
    public long solution(int a, int b) {
        int i =0;
        long answer = 0;
        
        if (a==b){
            answer=a;
        }
        else if(a>b){
            for (i=b+1;i<a;i++){
                answer += i;
            }         
            answer = answer+a+b;
        }
        else {
            for (i=a+1;i<b;i++){
                answer += i;
            }
            answer = answer+a+b;
        };    
        return answer;
    }
}",,2023. 8. 25,12,1
2023. 8. 25 오전 10:48:33,김민태,Unity,18 - 없는 숫자 더하기,"using System;

public class Solution {
    public int solution(int[] numbers) {
        int answer = -1;
        int temp = 0;
        for(int i = 0; i< numbers.Length; i++){
            temp += numbers[i];
        }
        answer = 45-temp;
        return answer;
    }
}",https://github.com/rlaalsxo/CodingTest,2023. 8. 25,18,1
2023. 8. 25 오전 10:48:36,이승연,Unity,4 - 약수의 합,"public class Solution {
    public int solution(int n) {
        int answer = 0;
        
        for(int i=1;i<=n;i++)
        {
            if(n%i==0)
            {
                answer+=i;
            }
            else
            {
                continue;
            }
                
        }
        
        return answer;
    }
}",,2023. 8. 25,4,1
2023. 8. 25 오전 10:49:11,장현교,Unity,6 - x만큼 간격이 있는 n개의 숫자,"public class Solution
{
    public List<int> solution(int x, int n)
    {
        List<int> answer = new List<int> { };
        int a = x;
        for (int i = 0; i < n; i++)
        {
            answer.Add(x);
            x += a;
        }
        return answer;
    }
}",,2023. 8. 25,6,1
2023. 8. 25 오전 10:49:21,이주연,Unity,24 - 문자열 내림차순으로 배치하기,"#include <string>
#include <vector>
#include <algorithm>

using namespace std;


string solution(string s) {
    string answer = """";
    
    sort(s.begin(), s.end(), greater<>());
    answer = s;
    
    return answer;
}",,2023. 8. 25,24,1
2023. 8. 25 오전 10:49:22,신해준,Unity,5 - 나머지가 1이 되는 수 찾기,"using System;

public class Solution 
{
    public int solution(int n) 
    {
        int answer = 1;

        for (int x=1; x < n ; x++ )
        {
            if ( n % x == 1 )
            {
                answer = x;
                break;
            }
        }
        return answer;
    }
}",,2023. 8. 25,5,1
2023. 8. 25 오전 10:49:45,송유섭,Unity,2 - 평균 구하기,"public class Solution {
    public double solution(int[] arr) {
        double answer = 0;
        for(int i=0;i<arr.Length;i++)
        {
            answer += arr[i];
        }
        answer /= arr.Length;
        return answer;
    }
}",https://github.com/SongJinx3512/codeKata/blob/main/codeKata%20lv%201%20%232%20%ED%8F%89%EA%B7%A0%20%EA%B5%AC%ED%95%98%EA%B8%B0.cs,2023. 8. 25,2,1
2023. 8. 25 오전 10:49:58,김민석,Unity,5 - 나머지가 1이 되는 수 찾기,"using System;

public class Solution {
    public int solution(int n) {
        int answer = 0;
        
        for(int x =1; x < n; x++){
            if(n % x == 1){
                return x;
            }
        }
        
        return answer;
    }
}",https://github.com/ms0753/codekata/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/87389.%E2%80%85%EB%82%98%EB%A8%B8%EC%A7%80%EA%B0%80%E2%80%851%EC%9D%B4%E2%80%85%EB%90%98%EB%8A%94%E2%80%85%EC%88%98%E2%80%85%EC%B0%BE%EA%B8%B0,2023. 8. 25,5,1
2023. 8. 25 오전 10:50:53,이소이,Unity,14 - 서울에서 김서방 찾기,"public class Solution {
    public string solution(string[] seoul) {
        int i = 0;
        for (int index = i; index < seoul.Length + 1; index++)
        {
            if (seoul[index] == ""Kim"")
            {
                i = index;
                break;
            }
        }
        
        string answer = ""김서방은 "" + i + ""에 있다"";
        return answer;
    }
}",https://github.com/leesy015599/AlgorithmCodeKata/blob/master/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12919.%E2%80%85%EC%84%9C%EC%9A%B8%EC%97%90%EC%84%9C%E2%80%85%EA%B9%80%EC%84%9C%EB%B0%A9%E2%80%85%EC%B0%BE%EA%B8%B0/%EC%84%9C%EC%9A%B8%EC%97%90%EC%84%9C%E2%80%85%EA%B9%80%EC%84%9C%EB%B0%A9%E2%80%85%EC%B0%BE%EA%B8%B0.cs,2023. 8. 25,14,1
2023. 8. 25 오전 10:50:53,신현주,Unity,9 - 정수 제곱근 판별,"using System;
public class Solution {
    public long solution(long n) {
        long answer = 0;
        double x=Math.Sqrt(n);
        if(x%1==0){
            answer=((long)x+1)*((long)x+1);
        }else
            answer=-1;
        
        return answer;
    }
}
",https://github.com/Shyunju/codTaka.git,2023. 8. 25,9,1
2023. 8. 25 오전 10:51:11,김광수,Unity,38 - K번째수정렬,"using System;

public class Solution
{
    public int[] solution(int[] array, int[,] commands)
    {
        int[] answer = new int[commands.GetLength(0)];

        for (int i = 0; i < commands.GetLength(0); i++)
        {
            int start = commands[i, 0] - 1;
            int end = commands[i, 1] - 1;
            int length = end - start + 1;

            int[] temp = new int[length];

            Array.ConstrainedCopy(array, start, temp, 0, length);

            Array.Sort(temp);
            answer[i] = temp[commands[i, 2] - 1];
        }

        return answer;
    }
}",https://github.com/kksoo0131/Study/commit/56700b6f9e0e19d794f29284773927993a6f84f8,2023. 8. 25,38,2
2023. 8. 25 오전 10:51:14,이홍준,Unity,11 - 하샤드 수,"public class Solution {
    public bool solution(int x) {
        bool answer = true;
        int a = 0;
        int temp = 0;
        int y = x;
        
        while (y > 0)
        {
            temp = y % 10;
            y = y / 10;
            a += temp;
        }
        
        if (x % a != 0)
        {
            answer = false;
        }
        else {}
        
        return answer;
    }
}",https://github.com/dlghdwns97/Study/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12947.%E2%80%85%ED%95%98%EC%83%A4%EB%93%9C%E2%80%85%EC%88%98,2023. 8. 25,11,1
2023. 8. 25 오전 10:51:39,우민규,Unity,7 - 자연수 뒤집어 배열로 만들기,"
public class Solution {
    public int[] solution(long n) {

        string a=n.ToString(); //입력값 sting 형변환
        int[] answer = new int[a.Length]; // 답안에 a.Lengh만큼의 배열을 생성
        for(int i=0;i<a.Length;i++) // a.Length만큼 반복
        {
            answer[i]=(int)(n%10); //각 배열에 순차적으로 int형변환 n%10 (1의 자리)를 넣어준다.
            n=n/10; //입력값을 10으로 나눠 1의 자리를 날린다.
        }
        return answer;
        
        //자릿수 더하기 응용
        //int[] reverse = Enumerable.Reverse(answer).ToArray();
        //return reverse;
    }
}",https://github.com/Woomingyu/Programmers.git,2023. 8. 25,7,1
2023. 8. 25 오전 10:51:41,이세진,Unity,8 - 문자열을 정수로 바꾸기,"public class Solution {
    public int solution(string s) {
        int answer = 0;
        
        if(s[1] == '+')
        {
            string newStr = s.Replace(""+"", ""0"");
            answer = int.Parse(s);
            
        }
        else if(s[1] == '-')
        {
            string newStr = s.Replace(""-"", ""0"");
            answer = int.Parse(s);
            answer = (answer * -1);
        }
        else
        {
            answer = int.Parse(s);
        }
        
        return answer;
    }
}",,2023. 8. 25,8,1
2023. 8. 25 오전 10:51:50,이선재,Unity,14 - 서울에서 김서방 찾기,"#include <string>
#include <vector>

using namespace std;

string solution(vector<string> seoul) {
    string answer = """";
    
    for(int i = 0; i < seoul.size(); i++){
        if(seoul[i].compare(""Kim"") == 0)
            answer = ""김서방은 "" + to_string(i) + ""에 있다"";
    }
    
    return answer;
}",https://github.com/shehdrbs123/spartaB10/blob/main/%EC%9D%B4%EC%84%A0%EC%9E%AC/Programmers/%EC%84%9C%EC%9A%B8%EC%97%90%EC%84%9C%20%EA%B9%80%EC%84%9C%EB%B0%A9%20%EC%B0%BE%EA%B8%B0,2023. 8. 25,14,1
2023. 8. 25 오전 10:53:00,김도현A,Unity,5 - 나머지가 1이 되는 수 찾기,"using System;

public class Solution {
    public int solution(int n) {
        int answer = 0;
        
        for ( int i = 1; i <=n; i++)
        if(n%i==1)
        {
            return i;
        }
        
        
        
        
        return answer;
    }
}",,2023. 8. 25,5,1
2023. 8. 25 오전 10:53:24,조영오,Unity,11 - 하샤드 수,"using System;

public class Solution {
    public bool solution(int x) {
        bool answer = false;
        int max_index = x.ToString().Length;
        int temp = x;
        int[] num = new int[max_index];
        
        for(int i = 0 ;i < num.Length ; i++){
            num[i] = x % 10; x /= 10;       
        }
        
        int div = 0;
        
        foreach(int n in num){div += n;}
        
        if(div > 0 && temp % div == 0){answer = true;}
        
        
        return answer;
    }
}",,2023. 8. 25,11,1
2023. 8. 25 오전 10:53:27,이주연,Unity,25 - 부족한 금액 계산하기,"#include <cmath>
using namespace std;


long long solution(int price, int money, int count)
{
    long long answer = 0;
    long long sum = 0;
    
    for(int i = 1; i <= count; i++)
    {
        sum += (price) * i;
    }
    answer = abs(money - sum);

    return answer;
}",,2023. 8. 25,25,1
2023. 8. 25 오전 10:53:32,정재훈,Unity,3 - 자릿수 더하기,"using System;

 public class Solution
    {
        public int solution(int n)
        {
            int sum = 0;
            int number = n;
            int count = 0;
            while (!(n / 10 == 0))
                {
                n /= 10;
                count++;
                }

            for (int i = count ; i >= 0; i--)
            {
                sum += number / (int)(Math.Pow(10, count));
                number %= (int)(Math.Pow(10, count));
                count--;
            }



            return sum;
        }
    }",https://github.com/toadsam/Algorithm,2023. 8. 25,3,1
2023. 8. 25 오전 10:53:34,박지원,Unity,8 - 문자열을 정수로 바꾸기,"public class Solution {
    public int solution(string s) {
        return int.Parse(s);
    }
}",https://github.com/jwonp9127/AlgorithmStudy/tree/293576b4be460741fd98de8654df1dfafdadf24f/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12925.%E2%80%85%EB%AC%B8%EC%9E%90%EC%97%B4%EC%9D%84%E2%80%85%EC%A0%95%EC%88%98%EB%A1%9C%E2%80%85%EB%B0%94%EA%BE%B8%EA%B8%B0,2023. 8. 25,8,1
2023. 8. 25 오전 10:54:31,신우석,Unity,23 - 약수의 개수와 덧셈,"using System;

public class Solution {
    int[] squares = new int[1000];
    int isSquare(int n)
    {
        if (squares[n-1] != 0) return squares[n-1];
        int i = 0;
        while (i * i < n) ++i;
        if (i * i == n) {
            squares[n-1] = 1;
            return 1;
        }
        squares[n-1] = -1;
        return -1;
    }
    
    public int solution(int left, int right) {
        Array.Clear(squares, 0, squares.Length);
        
        int answer = 0;
        
        for (int i = left; i <= right; ++i)
            if (isSquare(i) == 1)
                answer -= i;
            else
                answer += i;
        
        return answer;
    }
}",https://github.com/seoksii/AlgorithmCodeKata/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/77884.%E2%80%85%EC%95%BD%EC%88%98%EC%9D%98%E2%80%85%EA%B0%9C%EC%88%98%EC%99%80%E2%80%85%EB%8D%A7%EC%85%88,2023. 8. 25,23,1
2023. 8. 25 오전 10:54:43,박종수,Unity,3 - 자릿수 더하기,"
using System;

public class Solution {
    public int solution(int n) {
        int answer = 0;

        while(n>0)
        {
            answer += n%10;
            n/=10;
        }
        return answer;
    }
}",https://github.com/pjayas/AlgorithmCodeKata,2023. 8. 25,3,1
2023. 8. 25 오전 10:55:24,김진규,Unity,9 - 정수 제곱근 판별,"using System;

public class Solution {
    public long solution(long n) {
        long answer = 0;
        long sqrt = (long)Math.Sqrt(n); 
        if (sqrt * sqrt == n)
        {
            return (sqrt + 1) * (sqrt + 1);
        }
        else
        {
            return -1;
        }
       
            return answer;
    }
}",,2023. 8. 25,9,1
2023. 8. 25 오전 10:55:29,김어진,Unity,6 - x만큼 간격이 있는 n개의 숫자,"public class Solution {
    public long[] solution(int x, int n) {
        long[] answer = new long[n];
        for(int i=0; i<n; i++){
            answer[i] = x;
            if(i>0){
                answer[i] = answer[i-1] + x;
            }
        }
        return answer;
    }
}",,2023. 8. 25,6,1
2023. 8. 25 오전 10:55:44,이정환,Unity,7 - 자연수 뒤집어 배열로 만들기,"public class Solution
{
    public int[] solution(long n)
    {
        int count = 0;
        long num = n;

        while (num > 0)
        {
            num /= 10;
            count++;
        }

        int[] answer = new int[count];
        int index = 0;  
        while (n > 0)
        {
            answer[index] = (int)(n % 10);
            n /= 10;
            index++;  
        }

        return answer;
    }
}",,2023. 8. 25,7,1
2023. 8. 25 오전 10:55:56,김경원,Unity,2 - 평균 구하기,"public class Solution {
    public double solution(int[] arr) {
        int sum = 0;
        foreach (int num in arr) {
            sum += num;
        }
        
        double average = (double)sum / arr.Length;
        return average;
    }
}
",https://github.com/y5ask82,2023. 8. 25,2,1
2023. 8. 25 오전 10:55:57,김명식,Unity,7 - 자연수 뒤집어 배열로 만들기,"using System;
public class Solution {
    public int[] solution(long n) {
        char[] c = n.ToString().ToCharArray();
        int num = c.Length;
        int[] answer = new int[num];
        for(int i=0; i<c.Length;i++)
        {
            answer[num-1] = Int32.Parse(c[i].ToString());
            num--;
        }
        
        
        return answer;
    }
}",https://github.com/D0ryeon/Algorithm-Code-Kata,2023. 8. 25,7,1
2023. 8. 25 오전 10:55:58,이주연,Unity,25 - 부족한 금액 계산하기,"#include <cmath>
using namespace std;


long long solution(int price, int money, int count)
{
    long long answer = 0;
    long long sum = 0;
    
    for(int i = 1; i <= count; i++)
    {
        sum += (price) * i;
    }
    
    if(money >= sum)
        answer = 0;
    else
        answer = abs(money - sum);

    return answer;
}",,2023. 8. 25,25,1
2023. 8. 25 오전 10:56:46,지민규,Unity,10 - 정수 내림차순으로 배치하기,"using System;

public class Solution {
    public long solution(long n) {
        long answer = 0;
        char[] givenString = n.ToString().ToCharArray();
        System.Array.Sort(givenString);
        System.Array.Reverse(givenString);
        answer = System.Convert.ToInt64(new String(givenString));
        return answer;
    }
}",,2023. 8. 25,10,1
2023. 8. 25 오전 10:57:04,정주찬,Unity,8 - 문자열을 정수로 바꾸기,return int.Parse(s);,https://github.com/JeongJuChan/Algorithm/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12925.%E2%80%85%EB%AC%B8%EC%9E%90%EC%97%B4%EC%9D%84%E2%80%85%EC%A0%95%EC%88%98%EB%A1%9C%E2%80%85%EB%B0%94%EA%BE%B8%EA%B8%B0/%EB%AC%B8%EC%9E%90%EC%97%B4%EC%9D%84%E2%80%85%EC%A0%95%EC%88%98%EB%A1%9C%E2%80%85%EB%B0%94%EA%BE%B8%EA%B8%B0.cs,2023. 8. 25,8,1
2023. 8. 25 오전 10:57:09,이장원,Unity,2 - 평균 구하기,"namespace Morning
{
    public class Solution
    {
        public float solution(int[] arr)
        {
            float answer = 0;
            for (int i = 0; i < arr.Length; i++)
            {
                answer += arr[i];
            }
            answer /= arr.Length;
            return answer;
        }
    }
}",,2023. 8. 25,2,1
2023. 8. 25 오전 10:57:33,이세진,Unity,9 - 정수 제곱근 판별,"public class Solution {
    public long solution(long n) {
        long answer = 0;
        
        for(long i = 1; i * i <= n ;i++)
        {
            if(i * i == n)
            {
                answer = (i+1)*(i+1);
                break;
            }
            else
            {
                answer = -1;
            }
        }
        
        ",,2023. 8. 25,9,1
2023. 8. 25 오전 10:57:37,최하나,Unity,2 - 평균 구하기,"public class Solution {
    public double solution(int[] arr) {
        double answer = 0;
        double total = 0;
        
        for (int i = 0; i < arr.Length; i++) {
            total += arr[i];
        }
        
        answer = total / arr.Length;
        return answer;
    }",https://github.com/coco0715/AlgorithmsKata,2023. 8. 25,2,1
2023. 8. 25 오전 10:57:38,심우진,Unity,3 - 자릿수 더하기,"// 자릿수 더하기
public class Solution
{
    public int solution(int n)
    {
        int sum = 0;
        while (n > 0)
        {
            sum += n % 10; // 마지막 자릿수 추출
            n /= 10; // 마지막 자릿수 제거
        }


        return sum;
    }
}",https://github.com/agasa0624/at,2023. 8. 25,3,1
2023. 8. 25 오전 10:57:39,정주찬,Unity,9 - 정수 제곱근 판별,"using System;
public class Solution {
    public long solution(long n) {
        long answer = 0;
        double newN = Math.Sqrt(n);

        answer = newN % 1 == 0 ? answer = (long)Math.Pow(newN + 1, 2) : -1;
        return answer;
    }
}",https://github.com/JeongJuChan/Algorithm/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12934.%E2%80%85%EC%A0%95%EC%88%98%E2%80%85%EC%A0%9C%EA%B3%B1%EA%B7%BC%E2%80%85%ED%8C%90%EB%B3%84/%EC%A0%95%EC%88%98%E2%80%85%EC%A0%9C%EA%B3%B1%EA%B7%BC%E2%80%85%ED%8C%90%EB%B3%84.cs,2023. 8. 25,9,1
2023. 8. 25 오전 10:57:54,박희원,Unity,7 - 자연수 뒤집어 배열로 만들기," public class Solution
        {

            public int[] solution(long n)
            {
                long num = n;
                int cnt = 0;
                while (num != 0)
                {
                    num /= 10;
                    cnt++;
                }


                int[] answer = new int[cnt];

                num = n;
                for (int i = 0; num != 0; i++)
                {
                    answer[i] = (int)(num % 10);
                    num /= 10;
                }

                return answer;
            }

        }",,2023. 8. 25,7,1
2023. 8. 25 오전 10:58:00,김종훈,Unity,2 - 평균 구하기,"public class Solution {
    public double solution(int[] arr) {
        int sum = 0;
        for (int i = 0; i < arr.Length; i++)
        {
        sum += arr[i];
        }
        double answer = (double)sum / arr.Length;;
        return answer;
    }
}",,2023. 8. 25,2,1
2023. 8. 25 오전 10:58:03,정주찬,Unity,10 - 정수 내림차순으로 배치하기,"using System;
public class Solution {
    public long solution(long n) {
        long answer = 0;
        char[] cArr = n.ToString().ToCharArray();
        Array.Sort(cArr, (x, y) => -x.CompareTo(y));
        answer = long.Parse(new string(cArr));
        return answer;
    }
}",https://github.com/JeongJuChan/Algorithm/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12933.%E2%80%85%EC%A0%95%EC%88%98%E2%80%85%EB%82%B4%EB%A6%BC%EC%B0%A8%EC%88%9C%EC%9C%BC%EB%A1%9C%E2%80%85%EB%B0%B0%EC%B9%98%ED%95%98%EA%B8%B0/%EC%A0%95%EC%88%98%E2%80%85%EB%82%B4%EB%A6%BC%EC%B0%A8%EC%88%9C%EC%9C%BC%EB%A1%9C%E2%80%85%EB%B0%B0%EC%B9%98%ED%95%98%EA%B8%B0.cs,2023. 8. 25,10,1
2023. 8. 25 오전 10:58:04,심우진,Unity,4 - 약수의 합,"//약수의 합
public class Solution
{
    public int solution(int n)
    {
        int sum = 0;

        for (int i = 1; i <= n; i++)
        {
            if (n % i == 0)
            {
                sum += i;
            }
       }


        return sum;
    }
}",https://github.com/agasa0624/at,2023. 8. 25,4,1
2023. 8. 25 오전 10:58:11,"김하늘public class Solution  {     public int solution(string s)      {         int answer = 0;         bool success = int.TryParse(s, out answer);         if (success) return answer;         else         {             char plusminus = s[0];             s = s.Remove(0, 1);             return solution(s);         }     } }",Unity,8 - 문자열을 정수로 바꾸기,"public class Solution 
{
    public int solution(string s) 
    {
        int answer = 0;
        bool success = int.TryParse(s, out answer);
        if (success) return answer;
        else
        {
            char plusminus = s[0];
            s = s.Remove(0, 1);
            return solution(s);
        }
    }
}",,2023. 8. 25,8,1
2023. 8. 25 오전 10:58:14,손병의,Unity,7 - 자연수 뒤집어 배열로 만들기,"public class Solution 
{
    public int[] solution(long n) 
    {
        string str = n.ToString();
        
        int[] answer = new int[str.Length];
        for(int i = 0; i < str.Length; i++)
        {
            answer[str.Length - i - 1] = int.Parse(str[i].ToString());
        }
        
        return answer;
    }
}
",https://github.com/Son-BE/CodeKata1/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12932.%E2%80%85%EC%9E%90%EC%97%B0%EC%88%98%E2%80%85%EB%92%A4%EC%A7%91%EC%96%B4%E2%80%85%EB%B0%B0%EC%97%B4%EB%A1%9C%E2%80%85%EB%A7%8C%EB%93%A4%EA%B8%B0,2023. 8. 25,7,1
2023. 8. 25 오전 10:58:24,정주찬,Unity,11 - 하샤드 수,"public class Solution {
    public bool solution(int x) {
       bool answer = false;
        int sum = 0;
        int temp = x;

        while (temp != 0)
        {
            sum += temp % 10;
            temp /= 10;
        }

        answer = x % sum == 0;
        return answer;
    }
}",https://github.com/JeongJuChan/Algorithm/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12947.%E2%80%85%ED%95%98%EC%83%A4%EB%93%9C%E2%80%85%EC%88%98/%ED%95%98%EC%83%A4%EB%93%9C%E2%80%85%EC%88%98.cs,2023. 8. 25,11,1
2023. 8. 25 오전 10:58:26,박희원,Unity,8 - 문자열을 정수로 바꾸기,"public class Solution {
     public int solution(string s)
            {
                int answer = int.Parse(s);
                return answer;
            }
}",,2023. 8. 25,8,1
2023. 8. 25 오전 10:58:34,장성림,Unity,10 - 정수 내림차순으로 배치하기,"using System;
public class Solution {
    public long solution(long n) {
        long answer = 0;
        string nString = n.ToString();
        string nReverseString = """";
        int[] nArray = new int[nString.Length];
        for (int i = 0; i < nString.Length; i++){
            nArray[i] = int.Parse(nString.Substring(i,1));
        }
        Array.Sort(nArray);
        Array.Reverse(nArray);
        for (int i = 0; i < nArray.Length; i++){
            nReverseString += nArray[i];
        }
        answer = long.Parse(nReverseString);
        return answer;
    }
}",https://github.com/hoobhoob,2023. 8. 25,10,1
2023. 8. 25 오전 10:58:35,김민상,Unity,25 - 부족한 금액 계산하기,"class Solution
{
    public long solution(int price, int money, int count)
    {
        long answer = 0;
        for (int i = 1; i <= count; i++)
            answer += price * i;
        
        if (money < answer)
            return answer - money;
        else
            return 0;
    }
}",,2023. 8. 25,25,1
2023. 8. 25 오전 10:58:43,박지원,Unity,9 - 정수 제곱근 판별,"public class Solution {
    public long solution(long n) {
        long answer = 0;
        for(long i = 1; i*i <= n; i++){
            if(i*i == n) return (i+1)*(i+1);
        }
        return -1;
    }
}",https://github.com/jwonp9127/AlgorithmStudy/tree/c71440e41e3b1a3b6d843e439911ceafc68f6d42/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12934.%E2%80%85%EC%A0%95%EC%88%98%E2%80%85%EC%A0%9C%EA%B3%B1%EA%B7%BC%E2%80%85%ED%8C%90%EB%B3%84,2023. 8. 25,9,1
2023. 8. 25 오전 10:58:44,박민호,Unity,13 - 콜라츠 추측,"public class Solution {
    public int solution(long num) {
        int count=0;
        int answer = 0;
        while (num!=1){
            if (count>=500){
                count = -1;
                break;
            }           
            else if (num==1){
                answer = count;
            }
            else if(num%2==0){
                num /=2;
                count++;
            }
            else {
                num = (num*3) +1;
                count++;
            }
        }
        answer = count;
        return answer;
    }
}",,2023. 8. 25,13,1
2023. 8. 25 오전 10:58:45,이홍준,Unity,12 - 두 정수 사이의 합,"public class Solution {
    public long solution(int a, int b) {
        long answer = 0;
        long middle = 0;
        int temp = 0;
        
        if (a > b)
        {
            temp = a;
            a = b;
            b = temp;
        }
        
        if (a == b)
        {
            answer = a;
        }
        else if (b - a == 1)
        {
            answer = a + b;
        }
        else
        {
            for (int i = a + 1; i < b; i++)
            {
                middle += i;
            }
            answer = a + middle + b;
        }
        
        return answer;
    }
}",https://github.com/dlghdwns97/Study/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12912.%E2%80%85%EB%91%90%E2%80%85%EC%A0%95%EC%88%98%E2%80%85%EC%82%AC%EC%9D%B4%EC%9D%98%E2%80%85%ED%95%A9,2023. 8. 25,12,1
2023. 8. 25 오전 10:58:56,박희원,Unity,9 - 정수 제곱근 판별,"using System;
public class Solution {
      public long solution(long n)
            {
                long answer = 0;
                if ( n % Math.Sqrt(n) == 0)
                {
                    answer = (long)Math.Sqrt(n)+1;
                    return answer * answer;
                }
                else
                    return -1; 
            }
}",,2023. 8. 25,9,1
2023. 8. 25 오전 10:59:00,김호연,Unity,9 - 정수 제곱근 판별,"using System;

public class Solution 
{
    public long solution(long n) 
    {
        long answer = 0;
        // n이 어떤 양의 정수 x의 제곱인지 아닌지 판단 = if문 사용
        // 그 판단 후 x의 제곱이라면 x+1의 제곱 리턴, 아니라면 -1을 리턴
        long x = (long)Math.Sqrt(n); // 제곱근을 구하는 함수
        if(n == x*x)
        {
            answer = (x + 1)*(x + 1);
        }
        else
        {
            answer = -1;
        }
        
        return answer;
    }
}",,2023. 8. 25,9,1
2023. 8. 25 오전 10:59:01,이선재,Unity,15 - 나누어 떨어지는 숫자,"#include <string>
#include <vector>
#include <algorithm>

using namespace std;

vector<int> solution(vector<int> arr, int divisor) {
    vector<int> answer;
    
    for(int i = 0; i < arr.size(); i++){
        if(arr[i] % divisor == 0){
            answer.push_back(arr[i]);
        }
    }
    
    sort(answer.begin(), answer.end(), less<int>());
    
    if(answer.size() == 0)
        answer.push_back(-1);
    
    return answer;
}",https://github.com/shehdrbs123/spartaB10/blob/main/%EC%9D%B4%EC%84%A0%EC%9E%AC/Programmers/%EB%82%98%EB%88%84%EC%96%B4%20%EB%96%A8%EC%96%B4%EC%A7%80%EB%8A%94%20%EC%88%AB%EC%9E%90%20%EB%B0%B0%EC%97%B4,2023. 8. 25,15,1
2023. 8. 25 오전 10:59:16,김광수,Unity,39 - 두 개 뽑아서 더하기,"using System;
using System.Linq;
using System.Collections.Generic;

public class Solution {
    public int[] solution(int[] numbers) {

        List<int> answer = new List<int>();

        for(int i =0 ; i< numbers.Length; i++){
            for(int j =i+1; j < numbers.Length; j++){
                answer.Add(numbers[i]+ numbers[j]);
            }
        }       
        answer.Sort();
        return answer.Distinct().ToArray();
    }
}",https://github.com/kksoo0131/Study/commit/4334e46daa4f639e2d3a59a0741752dbba90b27d,2023. 8. 25,39,2
2023. 8. 25 오전 10:59:25,김주형,Unity,8 - 문자열을 정수로 바꾸기,"public class Solution 
{
    public int solution(string s) 
    {
        int answer;
        answer = int.Parse(s);

        return answer;
    }
}",https://github.com/kjuhyung/Algorithm.git,2023. 8. 25,8,1
2023. 8. 25 오전 10:59:28,박희원,Unity,10 - 정수 내림차순으로 배치하기,"public class Solution {
     public long solution(long n)
            {
                long answer = 0;

                string str = n.ToString();
                char[] chars = str.ToCharArray();
                System.Array.Sort(chars); 
                System.Array.Reverse(chars);

                str = null; 
                for(int i = 0; i< chars.Length; i++)
                {
                    str += chars[i]; 
                }

                answer = long.Parse(str);
                 
                return answer;
     }
}",,2023. 8. 25,10,1
2023. 8. 25 오전 10:59:47,박준규,Unity,9 - 정수 제곱근 판별,"public class Solution 
{
    public long solution(long n) 
    {
        long answer = 0;
        for(long i=1;i<=n;i++){
            if(i*i == n){
                answer = (i+1)*(i+1);
                break;
            }else{
                answer = -1;
            }
        }
        return answer;
    }
}",,2023. 8. 25,9,1
2023. 8. 25 오전 10:59:57,이주연,Unity,26 - 문자열 다루기 기본,"#include <string>
#include <vector>

using namespace std;

bool solution(string s) {
    bool answer = true;
    
    if(s.size() == 4 || s.size() == 6)
    {
        for(int i = 0; i < s.size(); i++)
        {
            if((0 >= s[i] - '0') || (9 <= s[i] - '0'))
            {
                answer = false;
                break;
            }
        }
    }
    
    else
        answer = false;
    
    return answer;
}",,2023. 8. 25,26,1
2023. 8. 25 오전 11:00:01,정주찬,Unity,12 - 두 정수 사이의 합,"public class Solution {
    public long solution(int a, int b) {
        long answer = 0;
        int small = a;
        int big = b;

        if (small > big)
        {
            int temp = small;
            small = big;
            big = temp;
        }

        while (small <= big)
        {
            answer += small++;
        }         
        return answer;
    }
}",https://github.com/JeongJuChan/Algorithm/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12912.%E2%80%85%EB%91%90%E2%80%85%EC%A0%95%EC%88%98%E2%80%85%EC%82%AC%EC%9D%B4%EC%9D%98%E2%80%85%ED%95%A9/%EB%91%90%E2%80%85%EC%A0%95%EC%88%98%E2%80%85%EC%82%AC%EC%9D%B4%EC%9D%98%E2%80%85%ED%95%A9.cs,2023. 8. 25,12,1
2023. 8. 25 오전 11:00:03,최석준,Unity,3 - 자릿수 더하기,"int solution(int n) {
    int answer = 0;
    
    while( n>0)
    {

       answer +=  n%10;
       n= n/10;

    
    }
    return answer;
}",,2023. 8. 25,3,1
2023. 8. 25 오전 11:00:15,조영오,Unity,12 - 두 정수 사이의 합,"public class Solution {
    public long solution(int a, int b) {
        long answer = 0;
        int max = b;
        int nextNum = 0;
        
        if(a > b){max = a; nextNum = b;}
        else{max = b; nextNum = a;}

        
        while(nextNum <= max){
            answer += nextNum;
            nextNum++;
        }
        
        return answer;
    }
}",,2023. 8. 25,12,1
2023. 8. 25 오전 11:00:39,정주찬,Unity,13 - 콜라츠 추측,"public class Solution {
    public int solution(long num) {
        int answer = 0;

        while (num != 1 && answer != 500)
        {
            num = num % 2 == 0 ? num / 2 : num * 3 + 1;
            answer++;
        }

        answer = answer == 500 ? -1 : answer;
        return answer;
    }
}",https://github.com/JeongJuChan/Algorithm/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12943.%E2%80%85%EC%BD%9C%EB%9D%BC%EC%B8%A0%E2%80%85%EC%B6%94%EC%B8%A1/%EC%BD%9C%EB%9D%BC%EC%B8%A0%E2%80%85%EC%B6%94%EC%B8%A1.cs,2023. 8. 25,13,1
2023. 8. 25 오전 11:01:25,신우석,Unity,24 - 문자열 내림차순으로 배치하기,"using System;

public class Solution {
    public string solution(string s) {
        Char[] answer = s.ToCharArray();
        Array.Sort(answer);
        Array.Reverse(answer);
        return new string(answer);
    }
}",https://github.com/seoksii/AlgorithmCodeKata/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12917.%E2%80%85%EB%AC%B8%EC%9E%90%EC%97%B4%E2%80%85%EB%82%B4%EB%A6%BC%EC%B0%A8%EC%88%9C%EC%9C%BC%EB%A1%9C%E2%80%85%EB%B0%B0%EC%B9%98%ED%95%98%EA%B8%B0,2023. 8. 25,24,1
2023. 8. 25 오전 11:01:26,정주찬,Unity,14 - 서울에서 김서방 찾기,"public class Solution {
    public string solution(string[] seoul) {
        string answer = """";
        for (int i = 0; i < seoul.Length; i++)
        {
            if (seoul[i] == ""Kim"")
            {
                answer =$""김서방은 {i}에 있다"";
            }
        }
        return answer;
    }
}",https://github.com/JeongJuChan/Algorithm/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12919.%E2%80%85%EC%84%9C%EC%9A%B8%EC%97%90%EC%84%9C%E2%80%85%EA%B9%80%EC%84%9C%EB%B0%A9%E2%80%85%EC%B0%BE%EA%B8%B0/%EC%84%9C%EC%9A%B8%EC%97%90%EC%84%9C%E2%80%85%EA%B9%80%EC%84%9C%EB%B0%A9%E2%80%85%EC%B0%BE%EA%B8%B0.cs,2023. 8. 25,14,1
2023. 8. 25 오전 11:01:54,김명식,Unity,8 - 문자열을 정수로 바꾸기,"using System;
public class Solution {
    public int solution(string s) {
        int answer = Int32.Parse(s);
        return answer;
    }
}",https://github.com/D0ryeon/Algorithm-Code-Kata,2023. 8. 25,8,1
2023. 8. 25 오전 11:01:55,정주찬,Unity,15 - 나누어 떨어지는 숫자,"using System;
using System.Collections.Generic;
public class Solution {
    public int[] solution(int[] arr, int divisor) {
        List<int> answer = new List<int>();

            for (int i = 0; i < arr.Length; i++)
            {
                if (arr[i] % divisor == 0)
                {
                    answer.Add(arr[i]);
                }
            }

            if (answer.Count == 0)
            {
                return new int[] {-1};
            }

            answer.Sort();
            return answer.ToArray();
    }
}",https://github.com/JeongJuChan/Algorithm/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12910.%E2%80%85%EB%82%98%EB%88%84%EC%96%B4%E2%80%85%EB%96%A8%EC%96%B4%EC%A7%80%EB%8A%94%E2%80%85%EC%88%AB%EC%9E%90%E2%80%85%EB%B0%B0%EC%97%B4/%EB%82%98%EB%88%84%EC%96%B4%E2%80%85%EB%96%A8%EC%96%B4%EC%A7%80%EB%8A%94%E2%80%85%EC%88%AB%EC%9E%90%E2%80%85%EB%B0%B0%EC%97%B4.cs,2023. 8. 25,15,1
2023. 8. 25 오전 11:02:12,이경현,Unity,10 - 정수 내림차순으로 배치하기,"            int[] ints = new int[n.ToString().Length];
            for (int i = 0; i < ints.Length; i++) { ints[i] = (int)(n % 10); n /= 10; }

            Array.Sort(ints);
            Array.Reverse(ints);

            string s = """";
            for (int i = 0; i < ints.Length; i++) { s += ints[i].ToString(); Console.Write(ints[i]); }

            return long.Parse(s);",https://github.com/516lkh/Algorithm,2023. 8. 25,10,1
2023. 8. 25 오전 11:02:14,이선재,Unity,16 - 음양 더하기,"#include <string>
#include <vector>

using namespace std;

int solution(vector<int> absolutes, vector<bool> signs) {
    int answer = 0;
    
    for(int i = 0; i < absolutes.size(); i++){
        if(signs[i] == true)
            answer += absolutes[i];
        else
            answer -= absolutes[i];
    }
    
    return answer;
}",https://github.com/shehdrbs123/spartaB10/blob/main/%EC%9D%B4%EC%84%A0%EC%9E%AC/Programmers/%EC%9D%8C%EC%96%91%20%EB%8D%94%ED%95%98%EA%B8%B0,2023. 8. 25,16,1
2023. 8. 25 오전 11:02:18,김진환,Unity,10 - 정수 내림차순으로 배치하기,"public static long solution(long n)
        {
            // 실패
            /*
            long answer = 0;
            string num = n.ToString();
            List<int> numList = new List<int>();
            
            foreach(char c in num)
            {
                numList.Add((c - '0'));
            }
            numList.Reverse();
            for(int i = 0; i < numList.Count; i++)
            {
                Console.WriteLine(numList[i]);
            }

            for(int i = 0;i<numList.Count;i++)
            {
                Console.WriteLine((numList[i] * (long)Math.Pow(10, numList.Count - 1 - i)));
                answer += (numList[i] * (long)Math.Pow(10, numList.Count - i));
                
            }
            return answer;
            */

            long answer = 0;
            string num = n.ToString();
            int number = 0;
            List<int> list = new List<int>();
            foreach (char c in num)
            {
                number = c - '0';
                list.Add(number);
            }
            list.Sort();
            list.Reverse();

            for (int i = 0; i < list.Count; i++)
            {
                answer += (list[i] * (long)Math.Pow(10, list.Count - i));
            }
            answer /= 10;

            return answer;
        }",https://github.com/NewRound/AlgorithmKata.git,2023. 8. 25,10,1
2023. 8. 25 오전 11:02:28,김형중,Unity,7 - 자연수 뒤집어 배열로 만들기,"public class Solution
    {
        public long[] solution(long n)
        {
            long temp = n;
            string input = n.ToString();
            long[] arr = new long[input.Length];
            
            for (int i = 0; i < arr.Length; i++)
            {
                arr[i] = temp % 10;
                temp /= 10;
            }

            return arr;
        }
    }",,2023. 8. 25,7,1
2023. 8. 25 오전 11:02:30,김민태,Unity,19 - 제일 작은 수 제거하기,"using System.Linq;

public class Solution {
    int[] answer;
    public int[] solution(int[] arr) {
        int min = arr.Min();
        if(arr.Length > 1){
            answer = arr.Where(num => num != min).ToArray();
        }
        else{
            answer = new int[]{-1};
        }
        return answer;
    }
}",https://github.com/rlaalsxo/CodingTest,2023. 8. 25,19,1
2023. 8. 25 오전 11:02:35,정주찬,Unity,16 - 음양 더하기,"using System;

public class Solution {
    public int solution(int[] absolutes, bool[] signs) {
        int answer = 0;
        for (int i = 0; i < absolutes.Length; i++)
        {
            absolutes[i] *= signs[i] ? 1 : -1;
            answer += absolutes[i];
        }
        return answer;
    }
}",https://github.com/JeongJuChan/Algorithm/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/76501.%E2%80%85%EC%9D%8C%EC%96%91%E2%80%85%EB%8D%94%ED%95%98%EA%B8%B0/%EC%9D%8C%EC%96%91%E2%80%85%EB%8D%94%ED%95%98%EA%B8%B0.cs,2023. 8. 25,16,1
2023. 8. 25 오전 11:02:36,최장범,Unity,9 - 정수 제곱근 판별,"using System;
public class Solution {
    public long solution(long n) 
    {
        long answer = 0;
        double x = Math.Sqrt(n);
        if(x%1 == 0)
        {
            answer = ((long)x+1) * ((long)x+1); // x를 임시로 long으로 변환해줌
        }
        else
            answer = -1;
        
        return answer;
    }
}",,2023. 8. 25,9,1
2023. 8. 25 오전 11:02:46,우민규,Unity,8 - 문자열을 정수로 바꾸기,"public class Solution {
    public int solution(string s) {
        int answer = int.Parse(s);
        return answer;
    }
}",https://github.com/Woomingyu/Programmers.git,2023. 8. 25,8,1
2023. 8. 25 오전 11:03:00,정주찬,Unity,17 - 핸드폰 번호 가리기,"using System.Text;
public class Solution {
    public string solution(string phone_number) {
        string answer = """";
        StringBuilder stringBuilder = new StringBuilder();
        for (int i = 0; i < phone_number.Length; i++)
        {
            if (i < phone_number.Length - 4)
            {
                stringBuilder.Append(""*"");
            }
            else
            {
                stringBuilder.Append(phone_number[i]);
            }
        }

        answer = stringBuilder.ToString();
        return answer;
    }
}",https://github.com/JeongJuChan/Algorithm/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12948.%E2%80%85%ED%95%B8%EB%93%9C%ED%8F%B0%E2%80%85%EB%B2%88%ED%98%B8%E2%80%85%EA%B0%80%EB%A6%AC%EA%B8%B0/%ED%95%B8%EB%93%9C%ED%8F%B0%E2%80%85%EB%B2%88%ED%98%B8%E2%80%85%EA%B0%80%EB%A6%AC%EA%B8%B0.cs,2023. 8. 25,17,1
2023. 8. 25 오전 11:03:11,강상찬,AI,2 - 평균 구하기,"def solution(arr):
    return (sum(arr)/len(arr))",,2023. 8. 25,2,1
2023. 8. 25 오전 11:03:19,한병권,Unity,34 - 최소직사각형,"using System;

public class Solution {
    public int solution(int[,] sizes) {
        int[] tempArr = {0,0};
        for ( int i = 0; i < sizes.GetLength(0); i++)
        {
            int a = sizes[i,0];
            int b = sizes[i,1];
            
            if (a < b)
            {
                int temp = b;
                b = a;
                a = temp;
            }
            
            if(tempArr[0] < a) tempArr[0] = a;
            if(tempArr[1] < b) tempArr[1] = b;

        }
                
        int answer = tempArr[0] * tempArr[1];
        return answer;
    }
}",https://github.com/hbg9212/AlgorithmCodekata,2023. 8. 25,34,2
2023. 8. 25 오전 11:03:24,정주찬,Unity,18 - 없는 숫자 더하기,"using System;

public class Solution
{
    public int solution(int[] numbers)
    {
        int result = 45;
        for (int i = 0; i < numbers.Length; i++)
        {
            result -= numbers[i];
        }
        
        return result;
    }
}",https://github.com/JeongJuChan/Algorithm/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/86051.%E2%80%85%EC%97%86%EB%8A%94%E2%80%85%EC%88%AB%EC%9E%90%E2%80%85%EB%8D%94%ED%95%98%EA%B8%B0/%EC%97%86%EB%8A%94%E2%80%85%EC%88%AB%EC%9E%90%E2%80%85%EB%8D%94%ED%95%98%EA%B8%B0.cs,2023. 8. 25,18,1
2023. 8. 25 오전 11:03:47,차요한,Unity,13 - 콜라츠 추측,"public class Solution {
    public int solution(int num) {
        int answer = 0;
        long n = num;
        for(int i = 0; i <= 500; i++)
        {
            if(n == 1)
            {
                return i;
            }
            if((n % 2) == 0)
            {
                n=n / 2;
            }
            else
            {
                n=n * 3 + 1;
            }
        }
        answer = -1;
        return answer;
    }
}",https://github.com/HOHOJO/Algorithm_test,2023. 8. 25,13,1
2023. 8. 25 오전 11:04:07,김민상,Unity,26 - 문자열 다루기 기본,"public class Solution {
    public bool solution(string s) => (s.Length == 4 || s.Length == 6) && int.TryParse(s, out int num);
}",,2023. 8. 25,26,1
2023. 8. 25 오전 11:04:19,이현지,Unity,10 - 정수 내림차순으로 배치하기,"using System;
using System.Text;

public class Solution 
{
    public long solution(long n) 
    {
        long answer;
        
        string num = n.ToString();
        char[] nums = num.ToCharArray();
        
        Array.Sort(nums);
        Array.Reverse(nums);
        
        StringBuilder newNums = new StringBuilder();
        newNums.Append(nums);
        
        return answer = long.Parse(newNums.ToString());
    }
}",https://github.com/szlovelee/Programmers-Algorithm,2023. 8. 25,10,1
2023. 8. 25 오전 11:04:23,신우석,Unity,25 - 부족한 금액 계산하기,"using System;

class Solution
{
    public long solution(int price, int money, int count)
    {
        long answer = (long)count * ((long)count + 1) / 2 * price - money;
        if (answer <= 0) return 0;
        return answer;
    }
}",https://github.com/seoksii/AlgorithmCodeKata/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/82612.%E2%80%85%EB%B6%80%EC%A1%B1%ED%95%9C%E2%80%85%EA%B8%88%EC%95%A1%E2%80%85%EA%B3%84%EC%82%B0%ED%95%98%EA%B8%B0,2023. 8. 25,25,1
2023. 8. 25 오전 11:04:33,임전혁,Unity,19 - 제일 작은 수 제거하기,"using System;
using System.Collections;

public class Solution {
    public int[] solution(int[] arr) {
        int[] answer = new int[] {};
        
        if (arr.Length <= 1)
            return answer = new int[] { -1 };
        
        
        int minNum = int.MaxValue;
        for (int i = 0; i < arr.Length; i++)
        {
            if (minNum > arr[i])
                minNum = arr[i];
        }
    
        answer = new int[arr.Length - 1];
        IEnumerator myEnumerator = arr.GetEnumerator();
        for (int i = 0; i < answer.Length; i++)
        {
            myEnumerator.MoveNext();
            int tempNum = (int)myEnumerator.Current;
            if (tempNum == minNum)
            {
                myEnumerator.MoveNext();
                answer[i] = (int)myEnumerator.Current;
            }
            else
            {
                answer[i] = tempNum;
            }
        }
        
        
        return answer;
    }
}",https://github.com/yarogono/Algorithm_CSharp/blob/master/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12935.%E2%80%85%EC%A0%9C%EC%9D%BC%E2%80%85%EC%9E%91%EC%9D%80%E2%80%85%EC%88%98%E2%80%85%EC%A0%9C%EA%B1%B0%ED%95%98%EA%B8%B0/%EC%A0%9C%EC%9D%BC%E2%80%85%EC%9E%91%EC%9D%80%E2%80%85%EC%88%98%E2%80%85%EC%A0%9C%EA%B1%B0%ED%95%98%EA%B8%B0.cs,2023. 8. 25,19,1
2023. 8. 25 오전 11:04:39,노재우,Unity,7 - 자연수 뒤집어 배열로 만들기,"public class Solution
{
    public int[] solution(long n)
    {
        string temp = n.ToString();
        int[] answer = new int[temp.Length];
        for (int i = 0; i < temp.Length; i++)
        {
            answer[i] = int.Parse(temp[temp.Length - 1 - i].ToString());
        }
        return answer;
    }
}",https://github.com/Chu-Nyan/CodeKata,2023. 8. 25,7,1
2023. 8. 25 오전 11:04:41,서재민,Unity,2 - 평균 구하기,"double solution(int arr[], size_t arr_len)
{
    double answer = 0;
    for(int i=0;i<arr_len;i++)
        answer += arr[i];
    return answer/arr_len;
}
",https://github.com/SeoJaeMin619/algorithm,2023. 8. 25,2,1
2023. 8. 25 오전 11:05:00,신우석,Unity,26 - 문자열 다루기 기본,"public class Solution {
    public bool solution(string s)
    {
        if (s.Length != 4 && s.Length != 6) return false;

        foreach (char c in s)
            if (!(c >= '0' && c <= '9')) return false;

        return true;
    }
}",https://github.com/seoksii/AlgorithmCodeKata/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12918.%E2%80%85%EB%AC%B8%EC%9E%90%EC%97%B4%E2%80%85%EB%8B%A4%EB%A3%A8%EA%B8%B0%E2%80%85%EA%B8%B0%EB%B3%B8,2023. 8. 25,26,1
2023. 8. 25 오전 11:05:07,김나운,Unity,8 - 문자열을 정수로 바꾸기,"public class Solution {
    public int solution(string s) {
        int answer = 0;
        
        answer = int.Parse(s);
        return answer;
    }
}",,2023. 8. 25,8,1
2023. 8. 25 오전 11:05:16,장성림,Unity,11 - 하샤드 수,"using System;
public class Solution {
    public bool solution(int x) {
        bool answer = true;
        Char[] xCharArray = x.ToString().ToCharArray();
        int sum = 0;
        for (int i = 0; i < xCharArray.Length; i++){
            sum += int.Parse(xCharArray[i].ToString());
        }
        if (x % sum == 0)
            answer = true;
        else
            answer = false;
        return answer;
    }
}",https://github.com/hoobhoob,2023. 8. 25,11,1
2023. 8. 25 오전 11:05:20,김윤경,Unity,2 - 평균 구하기,"public class Solution
{
    public double solution1(int[] arr)
    {
        double totalSum = 0;
        foreach (int num in arr)
        {
            totalSum += num;
        }
        double answer = totalSum / arr.Length;
        return answer;
    }

    static void Main(string[] args)
    {
        int[] arr1 = { 1, 2, 3, 4 };
        int[] arr2 = { 5, 5 };

        Solution s = new Solution();
        Console.WriteLine(s.solution1(arr1));
        Console.WriteLine(s.solution1(arr2));
    }
}",,2023. 8. 25,2,1
2023. 8. 25 오전 11:06:07,이소이,Unity,15 - 나누어 떨어지는 숫자,"using System.Collections.Generic;

public class Solution {
    public int[] solution(int[] arr, int divisor) {
        int[] answer;
        
        List<int> list = new List<int> ();
        for (int i = 0; i < arr.Length; i++)
        {
            if (arr[i] % divisor == 0)
                list.Add(arr[i]);
        }
        answer = new int[list.Count];
        if (list.Count == 0)
        {
            answer = new int[1];
            answer[0] = -1;
            return answer;
        }
        
        list.Sort();
        for (int i = 0; i < list.Count; i++)
        {
            answer[i] = list[i];
        }
        
        
        return answer;
    }
}",https://github.com/leesy015599/AlgorithmCodeKata/blob/master/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12910.%E2%80%85%EB%82%98%EB%88%84%EC%96%B4%E2%80%85%EB%96%A8%EC%96%B4%EC%A7%80%EB%8A%94%E2%80%85%EC%88%AB%EC%9E%90%E2%80%85%EB%B0%B0%EC%97%B4/%EB%82%98%EB%88%84%EC%96%B4%E2%80%85%EB%96%A8%EC%96%B4%EC%A7%80%EB%8A%94%E2%80%85%EC%88%AB%EC%9E%90%E2%80%85%EB%B0%B0%EC%97%B4.cs,2023. 8. 25,15,1
2023. 8. 25 오전 11:06:18,양수홍,AI,10 - 정수 내림차순으로 배치하기,"def solution(n):
    answer = 0
    s=str(n)
    li=list(s)
    li.sort()
    li.reverse()
    answer=int(''.join(li))
    return answer",,2023. 8. 25,10,1
2023. 8. 25 오전 11:06:25,김광수,Unity,40 - 가장 가까운 같은 글자,"using System;
using System.Collections.Generic;
public class Solution
    {
        public int[] solution(string s)
        {
            // 자신이 중복된 글자인지 확인해서
            // 중복이라면 앞에 있는 칸을 return
            Dictionary<char, int> dic = new Dictionary<char, int>();
            List<int> answer = new List<int>();

            for (int i =0; i< s.Length; i++)
            {
                if (dic.ContainsKey(s[i]))
                {
                    answer.Add(i - dic[s[i]]);
                }
                else
                {
                    answer.Add(-1);
                    
                }

                dic[s[i]] = i;
            }
            
    

            return answer.ToArray();
        }
    }",https://github.com/kksoo0131/Study/commit/80a0a7a3dcc87f376af6a6d35e18f210c016cf2f,2023. 8. 25,40,2
2023. 8. 25 오전 11:06:41,장현교,Unity,7 - 자연수 뒤집어 배열로 만들기,"public List<int> solution(int n)
{
    List<int> answer = new List<int>();
    for (int i = n; i > 0;)
    {
        answer.Add(i % 10);
        i /= 10;
    }

    return answer;
}",,2023. 8. 25,7,1
2023. 8. 25 오전 11:07:19,이선재,Unity,17 - 핸드폰 번호 가리기,"#include <string>
#include <vector>

using namespace std;

string solution(string phone_number) {
    for(int i = 0; i < phone_number.length() - 4; i++){
        phone_number[i] = '*';
    }
    
    return phone_number;
}",https://github.com/shehdrbs123/spartaB10/blob/main/%EC%9D%B4%EC%84%A0%EC%9E%AC/Programmers/%ED%95%B8%EB%93%9C%ED%8F%B0%20%EB%B2%88%ED%98%B8%20%EA%B0%80%EB%A6%AC%EA%B8%B0,2023. 8. 25,17,1
2023. 8. 25 오전 11:07:22,김민태,Unity,20 - 가운데 글자 가져오기,"public class Solution {
    public string solution(string s) {
        string answer = """";
        if(s.Length % 2 == 0){
            answer = s[s.Length/2 - 1].ToString() + s[s.Length/2].ToString();
        }
        else{
            answer = s[s.Length/2].ToString();
        }
        return answer;
    }
}",https://github.com/rlaalsxo/CodingTest,2023. 8. 25,20,1
2023. 8. 25 오전 11:07:58,임규한,AI,3 - 자릿수 더하기,"def solution(n):
    answer = 0
    for a in str(n):
        answer += int(a)
    return answer",,2023. 8. 25,3,1
2023. 8. 25 오전 11:08:06,김민석,Unity,6 - x만큼 간격이 있는 n개의 숫자,"using System;
using System.Collections.Generic;

public class Solution {
    public long[] solution(int x, int n)
    {
        List<long> answer = new List<long> ();
        
        for(long i = 1; i <= n; i++)
        {
            answer.Add(x * i);
        }
        return answer.ToArray();
    }
}",https://github.com/ms0753/codekata/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12954.%E2%80%85x%EB%A7%8C%ED%81%BC%E2%80%85%EA%B0%84%EA%B2%A9%EC%9D%B4%E2%80%85%EC%9E%88%EB%8A%94%E2%80%85n%EA%B0%9C%EC%9D%98%E2%80%85%EC%88%AB%EC%9E%90,2023. 8. 25,6,1
2023. 8. 25 오전 11:08:11,김준범,Unity,3 - 자릿수 더하기,"using System;

public class Solution {
    public int solution(int n) 
    {
        int answer = 0;
        
        string temp = n.ToString();
        for (int i = 0; i < temp.Length; i++)
        {
            answer += (int)Char.GetNumericValue(temp[i]);
        }
        
        return answer;
    }
}",,2023. 8. 25,3,1
2023. 8. 25 오전 11:08:21,김진환,Unity,11 - 하샤드 수,"public static bool solution(int x)
        {
            bool answer = false;
            string num = x.ToString();
            int number = 0;
            foreach (int i in num)
            {
                number += i - '0';
            }
            if(x %number == 0)
            {
                answer = true;
            }

            return answer;
        }",https://github.com/NewRound/AlgorithmKata.git,2023. 8. 25,11,1
2023. 8. 25 오전 11:08:42,함영주,Unity,8 - 문자열을 정수로 바꾸기,"public class Solution {
    public int solution(int n) {
        int answer = 0;
        
        for(int i = 1 ; i <= n ; i++)
        {
           if (n % i == 0)
           
               answer += i; 
        }
        
        
        return answer;
    }
}",,2023. 8. 25,8,1
2023. 8. 25 오전 11:08:46,이승연,Unity,5 - 나머지가 1이 되는 수 찾기,"using System;

public class Solution {
    public int solution(int n) {
        int answer = 0;
        
        for(int x=1;x<n;x++)
        {
            if(n%x==1)
            {
                answer=x;
                break;
            }
        }
        
        return answer;
        
    }
}",,2023. 8. 25,5,1
2023. 8. 25 오전 11:08:49,박희원,Unity,11 - 하샤드 수,"public class Solution {
   public bool solution(int x)
            {
                bool answer = true;

                int a = x; 
                int num = 0; 

                while(a != 0)
                {
                    num += a % 10;

                    a /= 10;
                }

                if (x % num == 0)
                    answer = true;
                else
                    answer = false;

                return answer;
            }
}",,2023. 8. 25,11,1
2023. 8. 25 오전 11:09:03,김해찬,Unity,51 - 로또의 최고 순위와 최저 순위,"using System;

public class Solution {
    public int[] solution(int[] lottos, int[] win_nums) {        
        int max = 0;
        int min = 0;
        
        for(int i = 0; i < lottos.Length; i++)
        {
            for(int j = 0; j < win_nums.Length; j++)
            {
                if(lottos[i] == win_nums[j])
                {
                    max++;
                    min++;
                    break;
                }
                if(lottos[i] == 0)
                {
                    max++;
                    break;
                }
            }
        }
        
        int[] answer = new int[2] {max, min};
        
        for(int i = 0; i < answer.Length; i++)
        {
            if(answer[i] == 6)
            {
                answer[i] = 1;
            }
            else if(answer[i] == 5)
            {
                 answer[i] = 2;
            }
            else if(answer[i] == 4)
            {
                answer[i] = 3;
            }
            else if(answer[i] == 3)
            {
                answer[i] = 4;
            }
            else if(answer[i] == 2)
            {
                answer[i] = 5;
            }
            else
            {
                answer[i] = 6;
            }
        }    
        
        return answer;
    }
}",,2023. 8. 25,51,2
2023. 8. 25 오전 11:09:13,임규한,AI,4 - 약수의 합,"def solution(n):
    answer = 0
    for i in range(1, n+1):
        if n%i == 0:
            answer += i
    return answer",,2023. 8. 25,4,1
2023. 8. 25 오전 11:09:17,장성림,Unity,12 - 두 정수 사이의 합,"public class Solution {
    public long solution(int a, int b) {
        long answer = 0;
        int tmp = a;
        if (a > b){
            a = b;
            b = tmp;
        }            
        for (int i = a; i <= b; i++)
            answer += i;
        return answer;
    }
}",https://github.com/hoobhoob,2023. 8. 25,12,1
2023. 8. 25 오전 11:09:41,김해찬,Unity,52 - 옹알이 (2),"using System;

public class Solution {
    public int solution(string[] babbling) {
        int answer = 0;
        string[] speak = new string[4]{""aya"", ""ye"",""woo"", ""ma""};
        
        for(int i = 0; i < babbling.Length; i++)
        {
            for(int j = 0; j < speak.Length; j++)
            {
                babbling[i] = babbling[i].Replace(speak[j] + speak[j], ""1"");
                babbling[i] = babbling[i].Replace(speak[j], "" "");
            }
            if(babbling[i].Trim().Length == 0)
            {
                answer++;
            }
        }
        
        return answer;
    }
}",,2023. 8. 25,52,2
2023. 8. 25 오전 11:10:03,이하택,Unity,3 - 자릿수 더하기,"using System;

public class Solution 
{
    public int solution(int n) 
    {
        int answer = 0;
        
        while(true)
        {
            if(n < 10)
            {
                answer += n % 10;
                return answer;
            }
            else
            {
                answer += n % 10;
                n /= 10;
            }
        }
    }
}",https://github.com/LeeHataeg/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12931.%E2%80%85%EC%9E%90%EB%A6%BF%EC%88%98%E2%80%85%EB%8D%94%ED%95%98%EA%B8%B0,2023. 8. 25,3,1
2023. 8. 25 오전 11:10:10,박민호,Unity,14 - 서울에서 김서방 찾기,"using System;
public class Solution {
    public string solution(string[] seoul) {
        int index = Array.IndexOf(seoul, ""Kim""); 
        string answer = $""김서방은 {index}에 있다"";   
        return answer;
    }
}",,2023. 8. 25,14,1
2023. 8. 25 오전 11:11:06,정재훈,Unity,4 - 약수의 합,"public class Solution
        {
            public int solution(int n)
            {

                int sum = 0;

                for (int i = 1; i <= n; i++)
                {
                    for (int j = 1; j <= n; j++)
                    {
                        if (i * j == n)
                        {
                            sum += j;
                            break;
                        }
                        else if (i * j > n)
                        {
                            break;
                        }

                    }
                }
                return sum;
            }
        }",https://github.com/toadsam/Algorithm.git,2023. 8. 25,4,1
2023. 8. 25 오전 11:11:13,조용준,Unity,4 - 약수의 합,"public class Solution 
{
    public int solution(int n) 
    {
        int answer = 0;
        for (int i = 1; i <= n; i++)
        {
            if (n % i == 0)
            {
                answer += i;
            }
        }
        return answer;
    }
}",,2023. 8. 25,4,1
2023. 8. 25 오전 11:11:24,이하택,Unity,4 - 약수의 합,"public class Solution 
{
    public int solution(int n) 
    {
        int answer = 0;
        
        for(int i = 1; i < n + 1; i++)
        {
            if((n % i) == 0)
            {
                answer += i;
            }
        }
        
        return answer;
    }
}",https://github.com/LeeHataeg/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12928.%E2%80%85%EC%95%BD%EC%88%98%EC%9D%98%E2%80%85%ED%95%A9,2023. 8. 25,4,1
2023. 8. 25 오전 11:11:25,노동균,Unity,9 - 정수 제곱근 판별,"using System;
public class Solution {
    public long solution(long n) {
        long answer = 0;
        
        
        //제곱근 판별 방법
        long data = (long)Math.Sqrt(n);
        
        if(data*data == n)
        {
            data+=1;
            answer = data*data;
        }else
            answer = -1;
            
        
        return answer;
    }
}",https://github.com/shehdrbs123/Sparta/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12934.%E2%80%85%EC%A0%95%EC%88%98%E2%80%85%EC%A0%9C%EA%B3%B1%EA%B7%BC%E2%80%85%ED%8C%90%EB%B3%84,2023. 8. 25,9,1
2023. 8. 25 오전 11:11:37,조용준,Unity,5 - 나머지가 1이 되는 수 찾기,"using System;

public class Solution 
{
    public int solution(int n) 
    {
        int answer = 0;
        for (int i = 1; i <=n; i++)
        {
            if (n%i == 1)
            {
                answer = i;
                break;
            }
        }
        return answer;
    }
}",,2023. 8. 25,5,1
2023. 8. 25 오전 11:11:38,양수홍,AI,11 - 하샤드 수,"def solution(x):
    answer = False
    divided=x
    divider=0
    while x>=1:
        divider+=x%10
        x=x//10
    if divided%divider==0:
        answer=True
    return answer",,2023. 8. 25,11,1
2023. 8. 25 오전 11:11:49,노동균,Unity,10 - 정수 내림차순으로 배치하기,"using System;
public class Solution {
    public long solution(long n) {
        long answer = 0;
        char[] tmp;

        tmp = n.ToString().ToCharArray();
        
        Array.Sort(tmp,(x,y) => y.CompareTo(x));
        
        
        answer = long.Parse(tmp);
        
        return answer;
    }
}",https://github.com/shehdrbs123/Sparta/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12933.%E2%80%85%EC%A0%95%EC%88%98%E2%80%85%EB%82%B4%EB%A6%BC%EC%B0%A8%EC%88%9C%EC%9C%BC%EB%A1%9C%E2%80%85%EB%B0%B0%EC%B9%98%ED%95%98%EA%B8%B0,2023. 8. 25,10,1
2023. 8. 25 오전 11:11:52,신우석,Unity,27 - 행렬의 덧셈,"public class Solution {
    public int[,] solution(int[,] arr1, int[,] arr2) {
        int[,] answer = new int[arr1.GetLength(0), arr2.GetLength(1)];
        
        for (int i = 0; i < arr1.GetLength(0); ++i)
            for (int j = 0; j < arr2.GetLength(1); ++j)
                answer[i, j] = arr1[i, j] + arr2[i, j];
        
        return answer;
    }
}",https://github.com/seoksii/AlgorithmCodeKata/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12950.%E2%80%85%ED%96%89%EB%A0%AC%EC%9D%98%E2%80%85%EB%8D%A7%EC%85%88,2023. 8. 25,27,1
2023. 8. 25 오전 11:11:54,양덕영,AI,8 - 문자열을 정수로 바꾸기,"def solution(s):
    
    return int(s)",https://github.com/DK980130/desktop-tutorial/tree/ab476206534095cf3eaa622b47407067f6034f32,2023. 8. 25,8,1
2023. 8. 25 오전 11:12:01,조용준,Unity,6 - x만큼 간격이 있는 n개의 숫자,"public class Solution 
{
    public long[] solution(int x, int n) 
    {
        long[] answer = new long[n];
        for (int i = 0; i < n; i++)
        {
            answer[i] = (long)x*(long)(i+1);
        }
        return answer;
    }
}",,2023. 8. 25,6,1
2023. 8. 25 오전 11:12:07,강희건,Unity,1 - 짝수와 홀수,"using System;

public class Program
{
    public static string solution(int num)
    {
        return (num % 2 == 0) ? ""Even"" : ""Odd"";
    }

    public static void Main(string[] args)
    {
        int inputNum = 3; // 원하는 숫자를 입력하세요.
        string result = solution(inputNum);
        Console.WriteLine($""The number is {result}"");
    }
}",https://github.com/bo9us,2023. 8. 25,1,1
2023. 8. 25 오전 11:12:13,노동균,Unity,11 - 하샤드 수,"public class Solution {
    public bool solution(int x) {
        bool answer = true;
        int backupX = x;
        int hasad = 0;
        
        while(x>=1)
        {
            int rest;
            
            rest = x%10;
            x = x/10;
            hasad += rest;
        }
        
        if(hasad == 0 ||backupX % hasad != 0)
            answer = false;
        
        
        return answer;
    }
}",https://github.com/shehdrbs123/Sparta/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12947.%E2%80%85%ED%95%98%EC%83%A4%EB%93%9C%E2%80%85%EC%88%98,2023. 8. 25,11,1
2023. 8. 25 오전 11:12:14,이하택,Unity,5 - 나머지가 1이 되는 수 찾기,"using System;

public class Solution 
{
    public int solution(int n) 
    {
        int answer = 0;
        
        for(int i = 1; i < n; i++)
        {
            if(n % i == 1)
            {
                answer = i;
                break;
            }
        }
        return answer;
    }
}",https://github.com/LeeHataeg/Algorithm/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/87389.%E2%80%85%EB%82%98%EB%A8%B8%EC%A7%80%EA%B0%80%E2%80%851%EC%9D%B4%E2%80%85%EB%90%98%EB%8A%94%E2%80%85%EC%88%98%E2%80%85%EC%B0%BE%EA%B8%B0/%EB%82%98%EB%A8%B8%EC%A7%80%EA%B0%80%E2%80%851%EC%9D%B4%E2%80%85%EB%90%98%EB%8A%94%E2%80%85%EC%88%98%E2%80%85%EC%B0%BE%EA%B8%B0.cs,2023. 8. 25,5,1
2023. 8. 25 오전 11:12:27,안소정,Unity,9 - 정수 제곱근 판별,"using System;

public class Solution {
    public long solution(long n) {
        long answer = 0;
        long x = (long)Math.Sqrt(n);    
        if (n==x*x)
            {return answer= (long)(x+1) * (x+1);}
        else return answer = -1;  
    }
}",,2023. 8. 25,9,1
2023. 8. 25 오전 11:12:29,조용준,Unity,7 - 자연수 뒤집어 배열로 만들기,"public class Solution
{
    public int[] solution(long n)
    {
        string num = n.ToString();
        int[] answer = new int[num.Length];
        for (int i = 0; i < num.Length; i++)
        {
            char a = num[i];
            answer[num.Length - i - 1] = int.Parse(a.ToString());
        }
        return answer;
    }
}",,2023. 8. 25,7,1
2023. 8. 25 오전 11:12:56,노동균,Unity,12 - 두 정수 사이의 합,"public class Solution {
    public long solution(int a, int b) {
        long answer = 0;
        
        if (a>b)
        {
            int tmp = a;
            a = b;
            b = tmp;
        }
        
        for(int i=a; i<=b;i++)
        {
            answer += i;
        }
        
        return answer;
    }
}",https://github.com/shehdrbs123/Sparta/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12912.%E2%80%85%EB%91%90%E2%80%85%EC%A0%95%EC%88%98%E2%80%85%EC%82%AC%EC%9D%B4%EC%9D%98%E2%80%85%ED%95%A9,2023. 8. 25,12,1
2023. 8. 25 오전 11:13:00,이하택,Unity,6 - x만큼 간격이 있는 n개의 숫자,"public class Solution 
{
    public long[] solution(int x, int n) 
    {
        long[] answer = new long[n];
        
        long value_X = x;
        long value_N = n;
        
        for(long i = 0; i < value_N ; i++)
        {
            answer[i] = value_X * (i + 1);
        }
        
        return answer;
    }
}",https://github.com/LeeHataeg/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12954.%E2%80%85x%EB%A7%8C%ED%81%BC%E2%80%85%EA%B0%84%EA%B2%A9%EC%9D%B4%E2%80%85%EC%9E%88%EB%8A%94%E2%80%85n%EA%B0%9C%EC%9D%98%E2%80%85%EC%88%AB%EC%9E%90,2023. 8. 25,6,1
2023. 8. 25 오전 11:13:13,김호찬,AI,5 - 나머지가 1이 되는 수 찾기,"def solution(n):
    x = n + 1  
    
    while True:
        if x % n == 1:  
            return x    
        x += 1 ",https://github.com/hckim1/Coding-Practice.git,2023. 8. 25,5,1
2023. 8. 25 오전 11:13:29,노동균,Unity,13 - 콜라츠 추측,"public class Solution {
    public int solution(int num) {
        int answer = 0;
        long tempNum = num;
        int count=0;
        
        if(tempNum == 1)
            return 0;
        
        while(tempNum != 1 && count < 500)
        {
            if(tempNum%2 == 0) tempNum /= 2;
            else tempNum = tempNum*3+1;
            
            ++count;
        }
        
        if(count >= 500) 
            answer = -1;
        else 
            answer = count;
        
        
        return answer;
    }
}",https://github.com/shehdrbs123/Sparta/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12943.%E2%80%85%EC%BD%9C%EB%9D%BC%EC%B8%A0%E2%80%85%EC%B6%94%EC%B8%A1,2023. 8. 25,13,1
2023. 8. 25 오전 11:13:41,명세인,AI,8 - 문자열을 정수로 바꾸기,"def solution(s):
    answer = 0
    num = []
    for a in s:
        num.append(a)
    num_str = ''.join(num)
    answer = int(num_str)
    return answer",https://github.com/playersein/Coding_Test/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12925.%E2%80%85%EB%AC%B8%EC%9E%90%EC%97%B4%EC%9D%84%E2%80%85%EC%A0%95%EC%88%98%EB%A1%9C%E2%80%85%EB%B0%94%EA%BE%B8%EA%B8%B0,2023. 8. 25,8,1
2023. 8. 25 오전 11:13:55,노동균,Unity,14 - 서울에서 김서방 찾기,"using System;
public class Solution {
    public string solution(string[] seoul) {
        string answer = ""김서방은 {0}에 있다"";
        
        int index = Array.FindIndex(seoul,x => x == ""Kim"");
        answer = string.Format(answer,index);
        return answer;
    }
}",https://github.com/shehdrbs123/Sparta/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12919.%E2%80%85%EC%84%9C%EC%9A%B8%EC%97%90%EC%84%9C%E2%80%85%EA%B9%80%EC%84%9C%EB%B0%A9%E2%80%85%EC%B0%BE%EA%B8%B0,2023. 8. 25,14,1
2023. 8. 25 오전 11:14:00,이하택,Unity,7 - 자연수 뒤집어 배열로 만들기,"public class Solution 
{
    public int[] solution(long n) 
    {
        long num = n;
        long temp;
        
        int count = HowManyDigit(num);
        
        int[] answer = new int[count];
        
        for(int i = 0; i < count; i++)
        {
            temp = num % 10;
            answer[i] = (int)temp;
            num /= 10;
        }
        
        return answer;
    }
    
    public int HowManyDigit(long num)
    {
        int count = 0;
        while(true)
        {
            if(num < 10)
            {
                count++;
                return count;
            }
            else
            {
              	num /= 10;
            	count++;  
            }
        }
    }
}",https://github.com/LeeHataeg/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12932.%E2%80%85%EC%9E%90%EC%97%B0%EC%88%98%E2%80%85%EB%92%A4%EC%A7%91%EC%96%B4%E2%80%85%EB%B0%B0%EC%97%B4%EB%A1%9C%E2%80%85%EB%A7%8C%EB%93%A4%EA%B8%B0,2023. 8. 25,7,1
2023. 8. 25 오전 11:14:14,채이환,Unity,12 - 두 정수 사이의 합,"using System;

public class Solution {
    public long solution(int a, int b) {
        long answer = 0;
        int min = a > b ? b : a;
        int max = a > b ? a : b;
        for (int i=min; i<max+1; ++i)
            answer += i;
        return answer;
    }
}",,2023. 8. 25,12,1
2023. 8. 25 오전 11:14:22,양수홍,AI,12 - 두 정수 사이의 합,"def solution(a, b):
    answer = 0
    if a==b:
        answer=b
    elif a<b:
        answer+=sum(n for n in range(a,b+1))
    else:
        answer+=sum(n for n in range(b,a+1))
    return answer",,2023. 8. 25,12,1
2023. 8. 25 오전 11:14:24,강상찬,AI,3 - 자릿수 더하기,"def solution(n):
    return sum(map(int, str(n)))",,2023. 8. 25,3,1
2023. 8. 25 오전 11:14:31,김진규,Unity,10 - 정수 내림차순으로 배치하기,"using System;
using System.Linq;

public class Solution {
    public long solution(long n) {
        long answer = 0;
        char[] digits = n.ToString().ToCharArray();
        Array.Sort(digits);
        string reversed = new string(digits.Reverse().ToArray());
        answer = long.Parse(reversed);
        return answer;
    }
}",,2023. 8. 25,10,1
2023. 8. 25 오전 11:14:33,채이환,Unity,13 - 콜라츠 추측,"using System;
public class Solution {
    public int solution(int num) {
        int i=0;
        long longNum = num;
        if (longNum == 1) return 0;
        while (longNum != 1)
        {
            if (longNum % 2 == 0)
                longNum /= 2;
            else
                longNum = longNum * 3 + 1;
            ++i;
            if (i >= 500)
                break;
        }
        if (longNum == 1) return i;
        else return -1;
    }
}",,2023. 8. 25,13,1
2023. 8. 25 오전 11:14:45,심명희,AI,5 - 나머지가 1이 되는 수 찾기,"def solution(n):
    answer = 0
    
    for x in range(1, n):
        if n % x == 1:
            return x",,2023. 8. 25,5,1
2023. 8. 25 오전 11:14:47,윤지석,Unity,1 - 짝수와 홀수,"public class Solution {
    public string solution(int num) {
        bool isEven = false;
        if (num % 2 == 0)
            isEven = true;
        else
            isEven = false;
        
        string answer = """";
        if (isEven)
        {
            answer = ""Even"";
        }
        else
        {
            answer = ""Odd"";
        }
        return answer;
    }
}",https://github.com/noyyo/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12937.%E2%80%85%EC%A7%9D%EC%88%98%EC%99%80%E2%80%85%ED%99%80%EC%88%98,2023. 8. 25,1,1
2023. 8. 25 오전 11:14:57,채이환,Unity,14 - 서울에서 김서방 찾기,"using System;
using System.Linq;
public class Solution {
    public string solution(string[] seoul) {
        int i = Array.FindIndex(seoul, x => x == ""Kim"");
        string answer = $""김서방은 {i}에 있다"";
        return answer;
    }
}",,2023. 8. 25,14,1
2023. 8. 25 오전 11:15:28,조장원,AI,2 - 평균 구하기,"def solution(arr):
    result = sum(arr) / len(arr)
    return result",https://github.com/jangwonne/code_test/commit/2805bf2765e26c6a6b064c4bbf1115d213f056b7,2023. 8. 25,2,1
2023. 8. 25 오전 11:15:32,이하택,Unity,8 - 문자열을 정수로 바꾸기,"public class Solution 
{
    public int solution(string s) 
    {
        int answer = 0;
        bool plus = s.Contains(""+"");
        bool minus = s.Contains(""-"");
        
        if(plus == true)
        {
            s = s.Replace(""+"", """");
            answer = int.Parse(s);
        }
        else if(minus == true)
        {
            s = s.Replace( ""-"", """");
            answer = int.Parse(s)*(-1);
        }
        else
        {
            answer = int.Parse(s);
        }
        
        return answer;
    }
}",https://github.com/LeeHataeg/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12925.%E2%80%85%EB%AC%B8%EC%9E%90%EC%97%B4%EC%9D%84%E2%80%85%EC%A0%95%EC%88%98%EB%A1%9C%E2%80%85%EB%B0%94%EA%BE%B8%EA%B8%B0,2023. 8. 25,8,1
2023. 8. 25 오전 11:15:45,지민규,Unity,11 - 하샤드 수,"using System;

public class Solution {
    public long solution(long n) {
        long answer = 0;
        char[] givenString = n.ToString().ToCharArray();
        System.Array.Sort(givenString);
        System.Array.Reverse(givenString);
        answer = System.Convert.ToInt64(new String(givenString));
        return answer;
    }
}",,2023. 8. 25,11,1
2023. 8. 25 오전 11:15:45,윤지석,Unity,2 - 평균 구하기,"public class Solution {
    public double solution(int[] arr) {
        int sum = 0;
        foreach (int i in arr)
            sum += i;
        
        return (double)sum / arr.Length;
    }
}",https://github.com/noyyo/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12944.%E2%80%85%ED%8F%89%EA%B7%A0%E2%80%85%EA%B5%AC%ED%95%98%EA%B8%B0,2023. 8. 25,2,1
2023. 8. 25 오전 11:15:51,양덕영,AI,9 - 정수 제곱근 판별,"def solution(n):
    
    n = n ** (0.5)
    
    if n % 1 == 0:
        return (n+1)**2
    
    return -1",https://github.com/DK980130/desktop-tutorial/tree/33166c1136f41e215fd77106fd7d6eb19f0a35ac,2023. 8. 25,9,1
2023. 8. 25 오전 11:16:03,이진범,AI,5 - 나머지가 1이 되는 수 찾기,"def solution(n):
    x = 2
    while True:
        if n % x == 1:
            return x
        x += 1
print(solution(120))
print(solution(350))",,2023. 8. 25,5,1
2023. 8. 25 오전 11:16:21,윤지석,Unity,3 - 자릿수 더하기,"using System;

public class Solution {
    public int solution(int n) {
        int digit = 0;
        int answer = 0;
        
        while (n != 0)
        {
            digit  = n % 10;
            answer += digit;
            n /= 10;
        }
        return answer;
    }
}",https://github.com/noyyo/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12931.%E2%80%85%EC%9E%90%EB%A6%BF%EC%88%98%E2%80%85%EB%8D%94%ED%95%98%EA%B8%B0,2023. 8. 25,3,1
2023. 8. 25 오전 11:16:23,임규한,AI,5 - 나머지가 1이 되는 수 찾기,"def solution(n):
    for x in range(1,n+1):
        if n%x != 1:
            x += 1
        else:
            break
    return(x)",,2023. 8. 25,5,1
2023. 8. 25 오전 11:16:46,윤지석,Unity,4 - 약수의 합,"public class Solution {
    public int solution(int n) {
        int answer = 0;
        for (int i = 1; i <= n; i ++)
        {
            if (n % i == 0)
            {
                answer += i;
            }
        }
        return answer;
    }
}",https://github.com/noyyo/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12928.%E2%80%85%EC%95%BD%EC%88%98%EC%9D%98%E2%80%85%ED%95%A9,2023. 8. 25,4,1
2023. 8. 25 오전 11:16:50,김명식,Unity,9 - 정수 제곱근 판별,"public class Solution {
    public long solution(long n) {
        long answer = 0;
        long tem=0;
        for(int i=1; i<n/2;i++){
            if(i*i==n){
                tem= i;
                break;
            }
        }
        if(tem==0){
            answer= -1;
        }
        else
        {
            answer = (tem+1)*(tem+1);   
        }
        
        return answer;
    }
}",https://github.com/D0ryeon/Algorithm-Code-Kata,2023. 8. 25,9,1
2023. 8. 25 오전 11:17:14,윤지석,Unity,5 - 나머지가 1이 되는 수 찾기,"using System;

public class Solution {
    public int solution(int n) {
        int x = 2;
        while (n % x != 1)
        {
            x++;
        }
        return x;
    }
}",https://github.com/noyyo/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/87389.%E2%80%85%EB%82%98%EB%A8%B8%EC%A7%80%EA%B0%80%E2%80%851%EC%9D%B4%E2%80%85%EB%90%98%EB%8A%94%E2%80%85%EC%88%98%E2%80%85%EC%B0%BE%EA%B8%B0,2023. 8. 25,5,1
2023. 8. 25 오전 11:17:16,이성권,Unity,2 - 평균 구하기,"using System.Linq;

public class Solution 
{
    public double solution(int[] arr) 
    {
        double answer = 0;
        answer = arr.Average();
        return answer;
    }
}",https://github.com/,2023. 8. 25,2,1
2023. 8. 25 오전 11:17:36,윤지석,Unity,6 - x만큼 간격이 있는 n개의 숫자,"public class Solution {
    public long[] solution(int x, int n) {
        long[] answer = new long[n];
        answer[0] = x;
        for (int i = 1; i < answer.Length; i++)
        {
            answer[i] = answer[i - 1] + x;
        }
        return answer;
    }
}",https://github.com/noyyo/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12954.%E2%80%85x%EB%A7%8C%ED%81%BC%E2%80%85%EA%B0%84%EA%B2%A9%EC%9D%B4%E2%80%85%EC%9E%88%EB%8A%94%E2%80%85n%EA%B0%9C%EC%9D%98%E2%80%85%EC%88%AB%EC%9E%90,2023. 8. 25,6,1
2023. 8. 25 오전 11:17:46,이현지,Unity,11 - 하샤드 수,"public class Solution {
    public bool solution(int x) {
        
        int len = x.ToString().Length;
        int[] nums = new int[len];
        
        int original = x;
        int sum = 0;
        for (int i = 1; i < len +1; i++ )
        {
            sum += x % 10;
            x /= 10;   
        }
        bool answer = (original / sum) == ((float)original / sum) ? true : false;
        return answer;
    }
}",https://github.com/szlovelee/Programmers-Algorithm.git,2023. 8. 25,11,1
2023. 8. 25 오전 11:17:54,지민규,Unity,1 - 짝수와 홀수,"
public class Solution {
    public string solution(int num) {
        if (num >= 0)
        {
            string answer = (num % 2 == 1)?""Odd"":""Even"";
            return answer;
        }
        else
        {
            string answer = ((num*(-1)) % 2 == 1)?""Odd"":""Even"";
            return answer;
        }

    }
}",,2023. 8. 25,1,1
2023. 8. 25 오전 11:18:01,양수홍,AI,13 - 콜라츠 추측,"def solution(num):
    answer = 0
    while num!=1:
        if answer>500 :
            return -1
        answer+=1
        if num%2==0:
            num/=2
        else:
            num=num*3+1
    return answer",,2023. 8. 25,13,1
2023. 8. 25 오전 11:18:01,윤지석,Unity,7 - 자연수 뒤집어 배열로 만들기,"public class Solution {
    public int[] solution(long n) {
        int[] answer;
        int digit = 0;
        int count = 0;
        long temp = n; 
        while (n != 0)
        {
            n /= 10;
            count++;
        }
        n = temp;
        answer = new int[count];
        for (int i = 0; i < answer.Length; i++)
        {
            answer[i] = (int)(n % 10);
            n /= 10;
        }
        
        return answer;
    }
}",https://github.com/noyyo/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12932.%E2%80%85%EC%9E%90%EC%97%B0%EC%88%98%E2%80%85%EB%92%A4%EC%A7%91%EC%96%B4%E2%80%85%EB%B0%B0%EC%97%B4%EB%A1%9C%E2%80%85%EB%A7%8C%EB%93%A4%EA%B8%B0,2023. 8. 25,7,1
2023. 8. 25 오전 11:18:26,윤지석,Unity,8 - 문자열을 정수로 바꾸기,"public class Solution {
    public int solution(string s) {
        int answer;
        int.TryParse(s, out answer);
        return answer;
    }
}",https://github.com/noyyo/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12925.%E2%80%85%EB%AC%B8%EC%9E%90%EC%97%B4%EC%9D%84%E2%80%85%EC%A0%95%EC%88%98%EB%A1%9C%E2%80%85%EB%B0%94%EA%BE%B8%EA%B8%B0,2023. 8. 25,8,1
2023. 8. 25 오전 11:18:50,윤지석,Unity,9 - 정수 제곱근 판별,"using System;
public class Solution {
    public long solution(long n) {
        int x = (int)Math.Sqrt(n);
        return Math.Pow(x, 2) == n ? (long)Math.Pow(x + 1, 2) : -1;
    }
}",https://github.com/noyyo/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12934.%E2%80%85%EC%A0%95%EC%88%98%E2%80%85%EC%A0%9C%EA%B3%B1%EA%B7%BC%E2%80%85%ED%8C%90%EB%B3%84,2023. 8. 25,9,1
2023. 8. 25 오전 11:19:59,양덕영,AI,10 - 정수 내림차순으로 배치하기,"def solution(n):
    n = sorted([x for x in str(n)], key = lambda x:int(x), reverse = True)
    n = int("""".join(n))
    return n",https://github.com/DK980130/desktop-tutorial/tree/38a006b3497c81f095132c68820b91c8c4b3c245,2023. 8. 25,10,1
2023. 8. 25 오전 11:20:26,김해찬,Unity,53 - 숫자 짝꿍,"using System;
using System.Text;

public class Solution {
    public string solution(string X, string Y){
        StringBuilder sb = new StringBuilder();
        string answer = """";
        int[] xCheck = new int[10];
        int[] yCheck = new int[10];
        
        for(int i = 0; i < X.Length; i++)
        {
            xCheck[X[i] - '0']++;
        }
        
        for(int j = 0; j < Y.Length; j++)
        {
            yCheck[Y[j] - '0']++;
        }
        
        for(int i = 9; i > -1; i--)
        {
            while(true)
            {
                if(xCheck[i] > 0 && yCheck[i] > 0)
                {
                    sb.Append(i);
                    xCheck[i]--;
                    yCheck[i]--;
                }
                else
                {
                    break;
                }
            }
        }
        
        answer = sb.ToString();

        if(answer == """")
        {
            answer = ""-1"";
        }
        else if(answer[0] == '0')
        {
            answer = ""0"";
        }
        
        return answer;
    }
}",,2023. 8. 25,53,2
2023. 8. 25 오전 11:21:27,김호연,Unity,10 - 정수 내림차순으로 배치하기,"using System;

public class Solution {
    public long solution(long n) {
        // n을 받았을 때, 812382 이러면 883221 이런 식으로 정렬
        // 내림차순 정렬 - Reverse?
        // Reverse로 쓰려면 배열로 만들어야됨. 배열에 값을 한 문자씩 넣어야된다 = ToCharArray 사용 
        long answer = 0;
                
        char[] arr = n.ToString().ToCharArray();
        
        Array.Sort(arr); // 먼저 오름차순으로 정렬한 후
        Array.Reverse(arr);  // 뒤집어서 내림차순으로 변경 완료. 이걸 정수형으로 바꾸는 법? 먼저 문자열로 바꾸고 해야될듯

        string arr2 = new string(arr); // 배열 자체를 바꿔야돼서 string 생성자 사용

        answer = long.Parse(arr2);

        return answer;
    }
}",,2023. 8. 25,10,1
2023. 8. 25 오전 11:21:57,어하림,Unity,1 - 짝수와 홀수,"public class Solution {
    public string solution(int num) {
        string answer = """";
         if (num % 2 == 0) 
        return answer += ""Even"";
    else 
        return answer += ""Odd"";
        return answer;
    }
}
 ",,2023. 8. 24,1,1
2023. 8. 25 오전 11:22:09,임전혁,Unity,20 - 가운데 글자 가져오기,"public class Solution {
    public string solution(string s) {
        string answer = """";
        if(s.Length % 2 == 0) {
            answer = s.Substring(s.Length / 2 - 1, 2);
        } else {
            answer = s[s.Length / 2].ToString();
        }
    
        return answer;
    }
}",https://github.com/yarogono/Algorithm_CSharp/blob/master/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12903.%E2%80%85%EA%B0%80%EC%9A%B4%EB%8D%B0%E2%80%85%EA%B8%80%EC%9E%90%E2%80%85%EA%B0%80%EC%A0%B8%EC%98%A4%EA%B8%B0/%EA%B0%80%EC%9A%B4%EB%8D%B0%E2%80%85%EA%B8%80%EC%9E%90%E2%80%85%EA%B0%80%EC%A0%B8%EC%98%A4%EA%B8%B0.cs,2023. 8. 25,20,1
2023. 8. 25 오전 11:22:22,양수홍,AI,14 - 서울에서 김서방 찾기,"def solution(seoul):
    for i,name in enumerate(seoul):
        if name==""Kim"":
            return f""김서방은 {i}에 있다""",,2023. 8. 25,14,1
2023. 8. 25 오전 11:22:25,강상찬,AI,4 - 약수의 합,"def solution(n):
    answer = 0
    cnt = 0
    while(cnt != n):
        cnt += 1
        if (n%cnt == 0):
            answer = answer + cnt
    return answer",,2023. 8. 25,4,1
2023. 8. 25 오전 11:22:32,장현웅,AI,2 - 평균 구하기,"def solution(arr):
    answer = 0

    for i in arr:
        answer += i

    answer /= len(arr)
    return answer",https://github.com/HyeonwoongJang/Algorithm.git,2023. 8. 25,2,1
2023. 8. 25 오전 11:22:38,곽정원,AI,2 - 평균 구하기,"arr = [1,2,3,4]

result = 0

def solution(arr):
    result =0

    for val in arr :
        result += val;

    answer = {result/len(arr)}

    return answer
    
solution(arr)",https://github.com/Team-Kawa/nbc/blob/master/code_KATA/2.py,2023. 8. 25,2,1
2023. 8. 25 오전 11:23:02,조호진,AI,10 - 정수 내림차순으로 배치하기,"def solution(n):
    a = list(str(n))
    a.sort(reverse=True)
    return int("""".join(a))

",https://github.com/bm4706/Algorithm_practice,2023. 8. 25,10,1
2023. 8. 25 오전 11:23:18,임규한,AI,6 - x만큼 간격이 있는 n개의 숫자,"def solution(x, n):
    if x < 0:
        answer = range(x,x*n-1,x);
    if x > 0:
        answer = range(x,x*n+1,x);
    return list(answer)",,2023. 8. 25,6,1
2023. 8. 25 오전 11:23:49,어하림,Unity,2 - 평균 구하기,"public class Solution {
    public double solution(int[] arr) {
        
        double avg = 0;
        for(int i = 0; i < arr.Length; i++)
        {
            avg += arr[i];
        }
        double answer = avg / arr.Length;
        return answer;
    }
}",,2023. 8. 25,2,1
2023. 8. 25 오전 11:23:56,김도현B,Unity,15 - 나누어 떨어지는 숫자,"using System;
using System.Collections.Generic;
public class Solution {
    public int[] solution(int[] arr, int divisor) {
        List<int> list = new List<int>(); 
        for(int i =  0; i < arr.Length; i++)
        {
            if (arr[i] % divisor == 0)
                list.Add(arr[i]);
        }
        list.Sort();
        return list.Count == 0 ?  new int[] {-1} : list.ToArray();
    }
}",https://github.com/subscriptioncat/Algorithm,2023. 8. 25,15,1
2023. 8. 25 오전 11:24:37,임전혁,Unity,21 - 수박수박수박수박수박수?,"using System.Text;

public class Solution {
    public string solution(int n) {
        string answer = """";
        
        string su = ""수"";
        string bak = ""박"";

        StringBuilder sb = new StringBuilder();
        for (int i = 0; i < n; i++) {
            if( (i + 1) % 2 == 1)
                sb.Append(su);
            else
               sb.Append(bak);
        }

        answer = sb.ToString();
        
        return answer;
    }
}",https://github.com/yarogono/Algorithm_CSharp/blob/master/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12922.%E2%80%85%EC%88%98%EB%B0%95%EC%88%98%EB%B0%95%EC%88%98%EB%B0%95%EC%88%98%EB%B0%95%EC%88%98%EB%B0%95%EC%88%98%EF%BC%9F/%EC%88%98%EB%B0%95%EC%88%98%EB%B0%95%EC%88%98%EB%B0%95%EC%88%98%EB%B0%95%EC%88%98%EB%B0%95%EC%88%98%EF%BC%9F.cs,2023. 8. 25,21,1
2023. 8. 25 오전 11:26:19,임전혁,Unity,22 - 내적,"public class Solution {
    public int solution(int[] a, int[] b) {
        int answer = 1234567890;
        
        int sum = 0;
        for(int i = 0; i < a.Length; i++) {
            sum += a[i] * b[i];
        }
        answer = sum;
        return answer;
    }
}",https://github.com/yarogono/Algorithm_CSharp/blob/master/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/70128.%E2%80%85%EB%82%B4%EC%A0%81/%EB%82%B4%EC%A0%81.cs,2023. 8. 25,22,1
2023. 8. 25 오전 11:26:23,임규한,AI,7 - 자연수 뒤집어 배열로 만들기,"def solution(n):
    answer = []
    for i in str(n):
        answer.append(int(i))
    answer.reverse()
    return answer
",,2023. 8. 25,7,1
2023. 8. 25 오전 11:26:58,강상찬,AI,5 - 나머지가 1이 되는 수 찾기,"def solution(n):
    for i in range(2,n):
        if ((n-1)%i == 0):
            return i",,2023. 8. 25,5,1
2023. 8. 25 오전 11:27:06,양수홍,AI,15 - 나누어 떨어지는 숫자,"def solution(arr, divisor):
    answer = []
    for num in arr:
        if num%divisor==0:
            answer.append(num)
    if len(answer):
        answer=sorted(answer)
    else:
        answer.append(-1)
    return answer",,2023. 8. 25,15,1
2023. 8. 25 오전 11:27:14,임규한,AI,8 - 문자열을 정수로 바꾸기,"def solution(s):
    answer = int(s)
    return answer",,2023. 8. 25,8,1
2023. 8. 25 오전 11:27:25,임전혁,Unity,23 - 약수의 개수와 덧셈,"using System;

public class Solution {
    public int solution(int left, int right) {
        
        int answer = 0;
        for(int i = left; i <= right; i++) {
            int tempNum = 1;
            for(int j = 1; j <= i / 2; j++) {
                if(i % j == 0) {
                    tempNum++;
 
                }
            }
            
            if(tempNum % 2 == 0) {
                answer += i;
            } else {
                answer -= i;
            }
        }
        return answer;
    }
}",https://github.com/yarogono/Algorithm_CSharp/blob/master/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/77884.%E2%80%85%EC%95%BD%EC%88%98%EC%9D%98%E2%80%85%EA%B0%9C%EC%88%98%EC%99%80%E2%80%85%EB%8D%A7%EC%85%88/%EC%95%BD%EC%88%98%EC%9D%98%E2%80%85%EA%B0%9C%EC%88%98%EC%99%80%E2%80%85%EB%8D%A7%EC%85%88.cs,2023. 8. 25,23,1
2023. 8. 25 오전 11:27:37,김지수,AI,6 - x만큼 간격이 있는 n개의 숫자,"def solution(x, n):
    answer = []
    for i in range(1,n+1):
        answer.append(x*i)
    return answer",https://github.com/whalesharkpiyong/Codekata.git,2023. 8. 25,6,1
2023. 8. 25 오전 11:27:53,임규한,AI,10 - 정수 내림차순으로 배치하기,"def solution(n):
    answer = []
    for i in str(n):
        answer.append(i)
        answer.sort(reverse = True)
        a = """".join(answer)
    return int(a)",,2023. 8. 25,10,1
2023. 8. 25 오전 11:28:21,임현진,Unity,4 - 약수의 합,"public int solution4(int num)
{
    int answer = 0;
    int inum = 1;   // 0으로는 나눌 수 없기 때문에 가장 작은 단위인 1 로 할당.

    while (inum <= num)
    {
        if (num % inum == 0) answer += inum;
        inum++;
    }

    return answer;
}",https://github.com/pporrorro/CodeKata_programmers,2023. 8. 25,4,1
2023. 8. 25 오전 11:29:05,김정민,Unity,13 - 콜라츠 추측,"public class Solution
        {
            public static int solution(int num)
            {
                int answer = 0;
                long result = num;
                if (num == 1) return 0;
                while (result != 1)
                {
                    if (result % 2 == 0) result /= 2;
                    else result = result * 3 + 1;
                    answer++;
                    if (answer == 500 && result != 1)
                    {
                        answer = -1;
                        break;
                    }
                }
                return answer;
            }
        }",https://github.com/j-miiin/Algorithm_Study/blob/main/SPARTA_ALGORITHM_2023/Level1/13_CollatzGuess.cs,2023. 8. 25,13,1
2023. 8. 25 오전 11:29:10,임현진,Unity,5 - 나머지가 1이 되는 수 찾기,"public int solution5(int num)
{
    int answer = 0;
    int inum = 1;

    while (inum < num)
    {
    if (num % inum == 1)
    {
        answer = inum;
        break;
    }
        inum++;
    }
    return answer;
}",https://github.com/pporrorro/CodeKata_programmers,2023. 8. 25,5,1
2023. 8. 25 오전 11:29:27,김정민,Unity,14 - 서울에서 김서방 찾기,"public class Solution
        {
            public string solution(string[] seoul)
            {
                string answer = ""김서방은 "" + Array.IndexOf(seoul, ""Kim"") + ""에 있다"";
                return answer;
            }
        }",https://github.com/j-miiin/Algorithm_Study/blob/main/SPARTA_ALGORITHM_2023/Level1/14_FindKim.cs,2023. 8. 25,14,1
2023. 8. 25 오전 11:29:50,김정민,Unity,15 - 나누어 떨어지는 숫자,"public class Solution
        {
            public int[] solution(int[] arr, int divisor)
            {
                int[] answer = new int[] { };
                List<int> list = new List<int>();
                foreach (int i in arr)
                {
                    if (i % divisor == 0) list.Add(i);
                }
                if (list.Count == 0) list.Add(-1);
                list.Sort();
                answer = list.ToArray();
                return answer;
            }
        }",https://github.com/j-miiin/Algorithm_Study/blob/main/SPARTA_ALGORITHM_2023/Level1/15_ArrayOfDividedElements.cs,2023. 8. 25,15,1
2023. 8. 25 오전 11:29:59,양덕영,AI,11 - 하샤드 수,"def solution(x):
    x_sum = 0
    
    for i in str(x):
        x_sum += int(i)
        
    if x % x_sum == 0:
        return True
    
    return False",https://github.com/DK980130/desktop-tutorial/tree/845d367dd5dbe64aef6832ea33309642c44463f4,2023. 8. 25,11,1
2023. 8. 25 오전 11:30:15,김정민,Unity,16 - 음양 더하기,"public class Solution
        {
            public int solution(int[] absolutes, bool[] signs)
            {
                int answer = 0;
                for (int i = 0; i < absolutes.Length; i++)
                {
                    if (signs[i]) answer += absolutes[i];
                    else answer -= absolutes[i];
                }
                return answer;
            }
        }",https://github.com/j-miiin/Algorithm_Study/blob/main/SPARTA_ALGORITHM_2023/Level1/16_SumOfAbsolutesWithSign.cs,2023. 8. 25,16,1
2023. 8. 25 오전 11:30:36,우민규,Unity,9 - 정수 제곱근 판별,"using System;//Math.Sqrt를 사용하려면 불러와야함

public class Solution {
    public long solution(long n) {
        
        // Math.Sqrt 제곱근 반환 EX) Math.Sqrt(9) / 결과값 3 Math.Sqrt(16) / 결과값 4
        // n의 제곱근을 가지는 result (long인 이유는 n과 형을 맞춰야 해서)
        long result = (long)Math.Sqrt(n); 
        //result 의 제곱이 n이라면 result+1의 제곱을 리턴 / else -1을 리턴
        return (result*result == n) ? (result+1)*(result+1) : -1;
    }
}",https://github.com/Woomingyu/Programmers.git,2023. 8. 25,9,1
2023. 8. 25 오전 11:30:38,강상찬,AI,6 - x만큼 간격이 있는 n개의 숫자,"def solution(x, n):
    answer = []
    for i in range(1,n+1):
        answer.append(x*i)
    return answer",,2023. 8. 25,6,1
2023. 8. 25 오전 11:30:41,김정민,Unity,17 - 핸드폰 번호 가리기,"public class Solution
        {
            public static string solution(string phone_number)
            {
                int length = phone_number.Length;
                string str1 = Regex.Replace(phone_number.Substring(0, length - 4), @""[0-9]"", ""*"");
                string str2 = phone_number.Substring(length - 4, 4);
                string answer = str1 + str2;
                return answer;
            }
        }",https://github.com/j-miiin/Algorithm_Study/blob/main/SPARTA_ALGORITHM_2023/Level1/17_CoverPhoneNum.cs,2023. 8. 25,17,1
2023. 8. 25 오전 11:30:45,양수홍,AI,16 - 음양 더하기,"def solution(absolutes, signs):
    answer = 0
    for i,num in enumerate(absolutes):
        if signs[i]:
            answer+=num
        else :
            answer-=num
    return answer",,2023. 8. 25,16,1
2023. 8. 25 오전 11:31:06,김정민,Unity,18 - 없는 숫자 더하기,"public class Solution
        {
            public int solution(int[] numbers)
            {
                int answer = 0;
                bool[] check = new bool[10];
                foreach (int i in numbers) check[i] = true;
                for (int i = 0; i < check.Length; i++)
                {
                    if (!check[i]) answer += i;
                }
                return answer;
            }
        }",https://github.com/j-miiin/Algorithm_Study/blob/main/SPARTA_ALGORITHM_2023/Level1/18_SumOfNonExistNum.cs,2023. 8. 25,18,1
2023. 8. 25 오전 11:31:08,문현우,Unity,7 - 자연수 뒤집어 배열로 만들기,"public class Solution {
    public int[] solution(long n) {
        string strN = n.ToString();
        int strNLength = strN.Length;
        int[] answer = new int[strNLength];

        for (int i = 0; i < strNLength; i++){
            char charN = strN[strNLength - i - 1];
            int result = int.Parse(charN.ToString());
            answer[i] = result;
        }

        return answer;
    }
}",https://github.com/Munch310/Algorithm-Csharp/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12932.%E2%80%85%EC%9E%90%EC%97%B0%EC%88%98%E2%80%85%EB%92%A4%EC%A7%91%EC%96%B4%E2%80%85%EB%B0%B0%EC%97%B4%EB%A1%9C%E2%80%85%EB%A7%8C%EB%93%A4%EA%B8%B0,2023. 8. 25,7,1
2023. 8. 25 오전 11:31:08,김정규,AI,5 - 나머지가 1이 되는 수 찾기,"def solution(n):
    answer = 0
    for i in range(1, n):
        if n % i == 1:
            answer = i
            return answer",https://github.com/JungGyu00/algorithm,2023. 8. 25,5,1
2023. 8. 25 오전 11:31:21,송승훈,Unity,7 - 자연수 뒤집어 배열로 만들기,"public class Solution {
    public int[] solution(long n) {
       
        
        string strnum = n.ToString();
        char[] Charnum = strnum.ToCharArray();
        
         int[] answer = new int[Charnum.Length] ;
        
        for(int i = 0 ; i < Charnum.Length ; i++)
        {
           answer[i] = int.Parse(Charnum[Charnum.Length - 1 - i].ToString());
        }
    
        return  answer;
    }
}",https://github.com/DoDokang318/CodeKata.git,2023. 8. 25,7,1
2023. 8. 25 오전 11:31:37,김정민,Unity,19 - 제일 작은 수 제거하기,"public class Solution
        {
            public static int[] solution(int[] arr)
            {
                int[] answer = new int[] { };
                int min = arr.Min();
                List<int> list = new List<int>();
                foreach (int i in arr)
                {
                    if (i != min) list.Add(i);
                }
                if (list.Count == 0) list.Add(-1);
                answer = list.ToArray();
                return answer;
            }
        }",https://github.com/j-miiin/Algorithm_Study/blob/main/SPARTA_ALGORITHM_2023/Level1/19_DeleteMinNum.cs,2023. 8. 25,19,1
2023. 8. 25 오전 11:31:58,송승훈,Unity,8 - 문자열을 정수로 바꾸기,"public class Solution {
    public int solution(string s) {
        
        int answer = int.Parse(s.ToString());
        return answer;
    }
}",https://github.com/DoDokang318/CodeKata.git,2023. 8. 25,8,1
2023. 8. 25 오전 11:32:00,김정민,Unity,20 - 가운데 글자 가져오기,"public class Solution
        {
            public string solution(string s)
            {
                if (s.Length == 1) return s;
                string answer = """";
                int idx = s.Length / 2;
                if (s.Length % 2 == 0) answer = s.Substring(idx - 1, 2);
                else answer = s.Substring(idx, 1);
                return answer;
            }
        }",https://github.com/j-miiin/Algorithm_Study/blob/main/SPARTA_ALGORITHM_2023/Level1/20_GetMidChar.cs,2023. 8. 25,20,1
2023. 8. 25 오전 11:32:25,김정민,Unity,21 - 수박수박수박수박수박수?,"public class Solution
        {
            public string solution(int n)
            {
                string answer = """";
                for (int i = 0; i < n; i++)
                {
                    if (i % 2 == 0) answer += ""수"";
                    else answer += ""박"";
                }
                return answer;
            }
        }",https://github.com/j-miiin/Algorithm_Study/blob/main/SPARTA_ALGORITHM_2023/Level1/21_WatermelonClap.cs,2023. 8. 25,21,1
2023. 8. 25 오전 11:32:36,송승훈,Unity,5 - 나머지가 1이 되는 수 찾기,"using System;

public class Solution {
    public int solution(int n) {
     for (int x = 1; x <= n; x++)
        {
            if (n % x == 1)
            {
               return x;
            }
        }

        return n;
    }
}",https://github.com/DoDokang318/CodeKata.git,2023. 8. 25,5,1
2023. 8. 25 오전 11:32:48,김정민,Unity,22 - 내적,"public class Solution
        {
            public int solution(int[] a, int[] b)
            {
                int answer = 0;
                for (int i = 0; i < a.Length; i++)
                {
                    answer += a[i] * b[i];
                }
                return answer;
            }
        }",https://github.com/j-miiin/Algorithm_Study/blob/main/SPARTA_ALGORITHM_2023/Level1/22_InnerProduct.cs,2023. 8. 25,22,1
2023. 8. 25 오전 11:32:51,신해준,Unity,6 - x만큼 간격이 있는 n개의 숫자,"public class Solution 
{
    public long[] solution(int x, int n) 
    {
        long[] answer = new long[n]; 
        
        for (int i = 0; i < n; i++)
        {
            answer[i] = (long)x * (i + 1);
        }
        
        return answer;
    }
}
",,2023. 8. 25,6,1
2023. 8. 25 오전 11:33:03,송승훈,Unity,9 - 정수 제곱근 판별,"using System;

public class Solution {
    public long solution(long n) {
       
      
       long x = (long)Math.Sqrt(n);
        
        if(n%x !=0)
        {
            return -1;
        }
        
        long answer = (x+1)*(x+1);
        
        return answer;
    }
}",https://github.com/DoDokang318/CodeKata.git,2023. 8. 25,9,1
2023. 8. 25 오전 11:33:17,김정민,Unity,23 - 약수의 개수와 덧셈,"public class Solution
        {
            public int solution(int left, int right)
            {
                int answer = 0;
                for (int i = left; i <= right; i++)
                {
                    if (IsDivisorEven(i)) answer += i;
                    else answer -= i;
                }
                return answer;
            }

            static bool IsDivisorEven(int num)
            {
                int count = 0;
                for (int i = 1; i <= num; i++)
                {
                    if (num % i == 0) count++;
                }
                return (count % 2 == 0);
            }
        }",https://github.com/j-miiin/Algorithm_Study/blob/main/SPARTA_ALGORITHM_2023/Level1/23_DivisorNumAndSum.cs,2023. 8. 25,23,1
2023. 8. 25 오전 11:33:20,김민상,Unity,27 - 행렬의 덧셈,"public class Solution {
    public int[,] solution(int[,] arr1, int[,] arr2)
    {
        for (int i = 0; i < arr1.GetLength(0); i++)
        {
            for (int j = 0; j < arr1.GetLength(1); j++)
            {
                arr1[i, j] += arr2[i, j];
            }
        }

        return arr1;
    }
}",,2023. 8. 25,27,1
2023. 8. 25 오전 11:33:34,조영오,Unity,13 - 콜라츠 추측,"using System;

public class Solution {
    public int solution(int num) {
        int answer = 0;
        int count = 0;
        double n = (double)num;
        
        while(count <= 500){
            if(n == 1){ 
                answer = count; 
                break;
            }
            
            if(n % 2 < 1){n = Math.Truncate(n); n /= 2;}
            else{n = Math.Truncate(n); n *= 3; n += 1;}
            count++;
        }  
        
        if(count >= 500){answer = -1;}
        
        return answer;
    }
}",,2023. 8. 25,13,1
2023. 8. 25 오전 11:33:39,정범수,AI,15 - 나누어 떨어지는 숫자,"def solution(arr, divisor):
    answer = sorted([e for e in arr if e%divisor == 0])
    return answer if answer else [-1]",https://github.com/sudog1/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12910.%E2%80%85%EB%82%98%EB%88%84%EC%96%B4%E2%80%85%EB%96%A8%EC%96%B4%EC%A7%80%EB%8A%94%E2%80%85%EC%88%AB%EC%9E%90%E2%80%85%EB%B0%B0%EC%97%B4,2023. 8. 25,15,1
2023. 8. 25 오전 11:33:40,김정민,Unity,24 - 문자열 내림차순으로 배치하기,"public class Solution
        {
            public static string solution(string s)
            {
                string answer = """";
                char[] charArr = s.ToCharArray();
                Array.Sort(charArr);
                Array.Reverse(charArr);
                foreach (char c in charArr) answer += c;
                return answer;
            }
        }",https://github.com/j-miiin/Algorithm_Study/blob/main/SPARTA_ALGORITHM_2023/Level1/24_DescendingOrderStr.cs,2023. 8. 25,24,1
2023. 8. 25 오전 11:34:09,김정민,Unity,25 - 부족한 금액 계산하기,"class Solution
        {
            public long solution(int price, int money, int count)
            {
                long totalPrice = 0;
                for (int i = 1; i <= count; i++)
                {
                    totalPrice += i * price;
                }
                return (money >= totalPrice) ? 0 : (totalPrice - money);
            }
        }",https://github.com/j-miiin/Algorithm_Study/blob/main/SPARTA_ALGORITHM_2023/Level1/25_ShortOfMoney.cs,2023. 8. 25,25,1
2023. 8. 25 오전 11:34:30,차명경,AI,3 - 자릿수 더하기,"def solution(n):
    return sum(int (i) for i in str(n))",https://github.com/myeongkyeongcha/Test/tree/main,2023. 8. 25,3,1
2023. 8. 25 오전 11:34:40,김정민,Unity,26 - 문자열 다루기 기본," public static class Solution
        {
            public static bool solution(string s)
            {
                bool answer = true;
                if (s.Length != 4 && s.Length != 6) answer = false;
                else
                {
                    int i = 0;
                    bool isNum = int.TryParse(s, out i);
                    answer = isNum;
                }
                return answer;
            }
        }",https://github.com/j-miiin/Algorithm_Study/blob/main/SPARTA_ALGORITHM_2023/Level1/26_DealWithStr.cs,2023. 8. 25,26,1
2023. 8. 25 오전 11:34:47,박지원,Unity,10 - 정수 내림차순으로 배치하기,"using System;

public class Solution {
    public long solution(long n) {
        long answer = 0;
        
        char[] n_char = n.ToString().ToCharArray();
        Array.Sort(n_char);
        Array.Reverse(n_char);
        answer = long.Parse(String.Join("""", n_char));
        return answer;
    }
}",https://github.com/jwonp9127/AlgorithmStudy/tree/d6822d5ee53a205943331c93a4b8baa39017606e/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12933.%E2%80%85%EC%A0%95%EC%88%98%E2%80%85%EB%82%B4%EB%A6%BC%EC%B0%A8%EC%88%9C%EC%9C%BC%EB%A1%9C%E2%80%85%EB%B0%B0%EC%B9%98%ED%95%98%EA%B8%B0,2023. 8. 25,10,1
2023. 8. 25 오전 11:35:16,김정민,Unity,27 - 행렬의 덧셈,"public class Solution
        {
            public static int[,] solution(int[,] arr1, int[,] arr2)
            {
                int[,] answer = new int[arr1.GetLength(0), arr1.GetLength(1)];
                for (int i = 0; i < arr1.GetLength(0); i++)
                {
                    for (int j = 0; j < arr1.GetLength(1); j++)
                    {
                        answer[i, j] = arr1[i, j] + arr2[i, j];
                    }
                }
                return answer;
            }
        }",https://github.com/j-miiin/Algorithm_Study/blob/main/SPARTA_ALGORITHM_2023/Level1/27_SumOfMatrix.cs,2023. 8. 25,27,1
2023. 8. 25 오전 11:35:16,양수홍,AI,17 - 핸드폰 번호 가리기,"def solution(phone_number):
    answer = ''
    for i in range(0,len(phone_number)):
        if i<len(phone_number)-4:
            answer+='*'
        else:
            answer+=phone_number[i]
    return answer",,2023. 8. 25,17,1
2023. 8. 25 오전 11:35:40,김정민,Unity,28 - 직사각형 별찍기,"public static void Main()
        {
            String[] s;

            Console.Clear();
            s = Console.ReadLine().Split(' ');

            int a = Int32.Parse(s[0]);
            int b = Int32.Parse(s[1]);

            for (int i = 0; i < b; i++)
            {
                for (int j = 0; j < a; j++)
                {
                    Console.Write(""*"");
                }
                Console.WriteLine();
            }
        }",https://github.com/j-miiin/Algorithm_Study/blob/main/SPARTA_ALGORITHM_2023/Level1/28_StartSquare.cs,2023. 8. 25,28,1
2023. 8. 25 오전 11:35:44,심명희,AI,6 - x만큼 간격이 있는 n개의 숫자,"def solution(x, n):
    answer = []
    for i in range(1,n+1):
        answer.append(i*x)
            
    return answer",,2023. 8. 25,6,1
2023. 8. 25 오전 11:35:53,김민상,Unity,28 - 직사각형 별찍기,"using System;

public class Example
{
    public static void Main()
    {
        String[] s;

        Console.Clear();
        s = Console.ReadLine().Split(' ');

        int a = Int32.Parse(s[0]);
        int b = Int32.Parse(s[1]);

        for (int i = 0; i < b; i++)
        {
            for (int j = 0; j < a; j++)
            {
                Console.Write('*');
            }
            Console.WriteLine();
        }
    }
}",,2023. 8. 25,28,1
2023. 8. 25 오전 11:36:06,김정민,Unity,29 - 최대공약수와 최소공배수,"public class Solution
        {
            public int[] solution(int n, int m)
            {
                int[] answer = new int[2];
                int gcd = getGCD(n, m);
                answer[0] = gcd;
                answer[1] = gcd * (n / gcd) * (m / gcd);
                return answer;
            }

            static int getGCD(int n1, int n2)
            {
                while (n2 > 0)
                {
                    int r = n1 % n2;
                    n1 = n2;
                    n2 = r;
                }
                return n1;
            }
        }",https://github.com/j-miiin/Algorithm_Study/blob/main/SPARTA_ALGORITHM_2023/Level1/29_GCD_LCM.cs,2023. 8. 25,29,1
2023. 8. 25 오전 11:36:26,강성호,Unity,31 - 이상한 문자 만들기,"public class Solution {
    public string solution(string s) {
            string answer = """";
			string word = """";
			int cnt = 0;
			for (int i = 0; i < s.Length; i++)
			{
				if (s[i] == ' ')
				{
					cnt = 0;
					answer += s[i];
					continue;
				}
				else if (cnt % 2 == 0)
				{
					answer += s[i].ToString().ToUpper();
					cnt++;
				}
				else
				{
					answer += s[i].ToString().ToLower();
					cnt++;
				}
				
			}
			return answer;
    }
}",,2023. 8. 25,31,2
2023. 8. 25 오전 11:36:35,김정민,Unity,30 - 3진법 뒤집기,"public class Solution
        {
            public static int solution(int n)
            {
                int answer = 0;
                while (n > 0)
                {
                    answer *= 3;
                    answer += n % 3;
                    n /= 3;
                }
                return answer;
            }
        }",https://github.com/j-miiin/Algorithm_Study/blob/main/SPARTA_ALGORITHM_2023/Level1/30_ReverseTernary.cs,2023. 8. 25,30,1
2023. 8. 25 오전 11:37:32,김정규,AI,6 - x만큼 간격이 있는 n개의 숫자,"def solution(x, n):
    answer = []
    for i in range(n):
        answer.append(x)
        x += answer[0]

    return answer",https://github.com/JungGyu00/algorithm,2023. 8. 25,6,1
2023. 8. 25 오전 11:37:50,정범수,AI,16 - 음양 더하기,"def solution(absolutes, signs):
    answer = 0
    for i in range(len(absolutes)):
        if signs[i]:
            answer += absolutes[i]
        else:
            answer -= absolutes[i]
    return answer",https://github.com/sudog1/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/76501.%E2%80%85%EC%9D%8C%EC%96%91%E2%80%85%EB%8D%94%ED%95%98%EA%B8%B0,2023. 8. 25,16,1
2023. 8. 25 오전 11:37:52,양수홍,AI,18 - 없는 숫자 더하기,"def solution(numbers):
    answer = sum(num for num in range(1,10))
    for num in numbers:
        answer=answer-num
    return answer",,2023. 8. 25,18,1
2023. 8. 25 오전 11:38:59,우은진,AI,5 - 나머지가 1이 되는 수 찾기,"def solution(n):
    answer = 0
    for i in range(1,n):
        if n%i == 1:
            answer = i
            break
    return answer",https://github.com/EunjinWoo/SpartaCodingCamp_indiv/blob/main/Algorithm/Programmers/Lev1/5.py,2023. 8. 25,5,1
2023. 8. 25 오전 11:39:11,김주형,Unity,7 - 자연수 뒤집어 배열로 만들기,"using System;

public class Solution 
{
    public int[] solution(long n)
    {
        string arr = n.ToString();
        int[] answer = new int[arr.Length];
        for (int i = 0; i < arr.Length; i++)
        {
           answer[i] = arr[i] - '0';
        }                       
        Array.Reverse(answer);

        return answer;
    }
}",https://github.com/kjuhyung/Algorithm.git,2023. 8. 25,7,1
2023. 8. 25 오전 11:39:11,최지연,AI,6 - x만큼 간격이 있는 n개의 숫자,"def solution(x, n):
    preAnswer = [x] * n
    answer =[]
    addNum = 0
    for a in preAnswer:
        a += addNum
        addNum += x
        answer.append(a)
    
    return answer",https://github.com/jiyeonCoder/algorithmPractice/blob/main/6.%20x%EB%A7%8C%ED%81%BC%20%EA%B0%80%EA%B2%A9%EC%9D%B4%20%EC%9E%88%EB%8A%94%20n%EA%B0%9C%EC%9D%98%20%EC%88%AB%EC%9E%90.py,2023. 8. 25,6,1
2023. 8. 25 오전 11:39:39,최수용,Unity,7 - 자연수 뒤집어 배열로 만들기,"using System.Linq;
using System;

public class Solution {
    public int[] solution(long n) {
        int[] answer = new int[n.ToString().Length];
        string nString = new String(n.ToString().ToCharArray().Reverse().ToArray());
        for(int i=0; i < nString.Length ; i++){
            answer[i] = int.Parse(nString[i].ToString());
        }
        return answer;
    }
}",,2023. 8. 25,7,1
2023. 8. 25 오전 11:39:41,김민상,Unity,29 - 최대공약수와 최소공배수,"using System;
public class Solution {
    public int GCD(int a, int b)
    {
        if (a % b == 0)
            return b;
        else
            return GCD(b, a % b);
    }
    
    public int[] solution(int n, int m) {
        int a = Math.Max(n, m);
        int b = Math.Min(n, m);
        return new int[] { GCD(a, b), a * b / GCD(a, b) };
    }
}",,2023. 8. 25,29,1
2023. 8. 25 오전 11:40:25,양덕영,AI,12 - 두 정수 사이의 합,"def solution(a, b):
    start = min(a, b)
    end = max(a, b)
    
    total_sum = sum(range(start, end + 1))
    
    return total_sum",https://github.com/DK980130/desktop-tutorial/tree/845d367dd5dbe64aef6832ea33309642c44463f4,2023. 8. 25,12,1
2023. 8. 25 오전 11:40:37,이재윤,AI,3 - 자릿수 더하기,"def solution(n):
    str_n = str(n)
    l = len(str_n)
    answer = 0
    for i in range(0, l):
        answer = answer + int(str_n[i])

    return answer


print(solution(123))",https://github.com/JaeYoonAI/coding_test.git,2023. 8. 25,3,1
2023. 8. 25 오전 11:40:55,송승훈,Unity,10 - 정수 내림차순으로 배치하기,"using System;



public class Solution {
    public long solution(long n) {
        long answer = 0;
        
        string strnum = n.ToString();
        char[] Charnum = strnum.ToCharArray();
        Array.Sort(Charnum);
        Array.Reverse(Charnum);
        
         string sortedStrnum = new string(Charnum);
         answer = long.Parse(sortedStrnum);
        return answer;
    }
}",https://github.com/DoDokang318/CodeKata.git,2023. 8. 25,10,1
2023. 8. 25 오전 11:43:09,조호진,AI,11 - 하샤드 수,"def solution(x):
    a = 0
    for i in str(x):
        a += int(i)
    if x % a == 0:
        return True
    elif x % a != 0:
        return False
",https://github.com/bm4706/Algorithm_practice,2023. 8. 25,11,1
2023. 8. 25 오전 11:43:48,명세인,AI,10 - 정수 내림차순으로 배치하기,"def solution(n):
    answer = 0    
    n = str(n)
    answer =int(''.join(sorted(n, reverse=True)))
    return answer",https://github.com/playersein/Coding_Test/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12933.%E2%80%85%EC%A0%95%EC%88%98%E2%80%85%EB%82%B4%EB%A6%BC%EC%B0%A8%EC%88%9C%EC%9C%BC%EB%A1%9C%E2%80%85%EB%B0%B0%EC%B9%98%ED%95%98%EA%B8%B0,2023. 8. 25,10,1
2023. 8. 25 오전 11:44:07,정범수,AI,17 - 핸드폰 번호 가리기,"def solution(phone_number):
    return ''.join(['*' for _ in range(len(phone_number)-4)] + list(phone_number[-4:]))",https://github.com/sudog1/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12948.%E2%80%85%ED%95%B8%EB%93%9C%ED%8F%B0%E2%80%85%EB%B2%88%ED%98%B8%E2%80%85%EA%B0%80%EB%A6%AC%EA%B8%B0,2023. 8. 25,17,1
2023. 8. 25 오전 11:45:54,공혜진,AI,5 - 나머지가 1이 되는 수 찾기,"def solution(n):
    answer = 0
    x = []  
    for i in range(1, n+1):
        if n % i == 1:
            x.append(i)
            answer = min(x) 
    return answer

print(solution(12))",,2023. 8. 25,5,1
2023. 8. 25 오전 11:46:37,강상찬,AI,7 - 자연수 뒤집어 배열로 만들기,"def solution(n):
    answer = list(map(int, str(n)))
    answer.reverse()
    return answer",,2023. 8. 25,7,1
2023. 8. 25 오전 11:47:09,정범수,AI,18 - 없는 숫자 더하기,"def solution(numbers):
    return sum(i for i in range(10)) - sum(numbers)",https://github.com/sudog1/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/86051.%E2%80%85%EC%97%86%EB%8A%94%E2%80%85%EC%88%AB%EC%9E%90%E2%80%85%EB%8D%94%ED%95%98%EA%B8%B0,2023. 8. 25,18,1
2023. 8. 25 오전 11:48:16,김민상,Unity,30 - 3진법 뒤집기,"public class Solution {
    public int solution(int n) {
        int answer = 0;
        while (n > 0)
        {
            answer *= 3;
            answer += n % 3;
            n /= 3;
        }
        return answer;
    }
}",,2023. 8. 25,30,1
2023. 8. 25 오전 11:48:24,강상찬,AI,8 - 문자열을 정수로 바꾸기,"def solution(n_str):
    return int(n_str)",,2023. 8. 25,8,1
2023. 8. 25 오전 11:49:09,김호찬,AI,6 - x만큼 간격이 있는 n개의 숫자,"def solution(x, n):
    result = [x*i for i in range(1,n+1)]
    return result",https://github.com/hckim1/Coding-Practice.git,2023. 8. 25,6,1
2023. 8. 25 오전 11:49:25,정범수,AI,19 - 제일 작은 수 제거하기,"def solution(arr):
    min_num = min(arr)
    answer = [i for i in arr if i != min_num]
    return answer if answer else [-1]",https://github.com/sudog1/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12935.%E2%80%85%EC%A0%9C%EC%9D%BC%E2%80%85%EC%9E%91%EC%9D%80%E2%80%85%EC%88%98%E2%80%85%EC%A0%9C%EA%B1%B0%ED%95%98%EA%B8%B0,2023. 8. 25,19,1
2023. 8. 25 오전 11:51:50,김진성,Unity,6 - x만큼 간격이 있는 n개의 숫자,"using System;

namespace Algorithm_002
{
    internal class ArrayOfGapX
    {
        public long[] solution(long x, int n)
        {
            long[] answer;
            answer = new long[n];
            int i = 0;
            long y = x;
                while (i < n)
                {
                    answer[i++] = x;
                    x = x + y;
                }
            return answer;
        }
    }
}",https://github.com/GYALLERHORN/ALGORITHM,2023. 8. 25,6,1
2023. 8. 25 오전 11:52:03,조호진,AI,12 - 두 정수 사이의 합,"def solution(a, b):
    sum_a = 0
    if b < a:
        for i in range(b, a+1):
            sum_a += i
    elif a < b:
        for i in range(a, b+1):
            sum_a += i
    else:
        sum_a = a
    return sum_a
",https://github.com/bm4706/Algorithm_practice/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1,2023. 8. 25,12,1
2023. 8. 25 오전 11:54:35,정범수,AI,20 - 가운데 글자 가져오기,"def solution(s):
    if len(s) % 2:
        l = len(s)//2
        r = l+1
    else:
        l = len(s)//2 - 1
        r = l+2
    return s[l:r]",https://github.com/sudog1/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12903.%E2%80%85%EA%B0%80%EC%9A%B4%EB%8D%B0%E2%80%85%EA%B8%80%EC%9E%90%E2%80%85%EA%B0%80%EC%A0%B8%EC%98%A4%EA%B8%B0,2023. 8. 25,20,1
2023. 8. 25 오전 11:55:11,김진환,Unity,12 - 두 정수 사이의 합,"public static long solution(int a, int b)
        {
            if (a == b)
                return a;
            if (a > b)
            {
                int temp = b;
                b = a;
                a = temp;
            }
            long answer = 0;
            for (int i = 0; i < b - a + 1; i++)
            {
                answer += (long)(a + i);
            }
            return answer;
        }",https://github.com/NewRound/AlgorithmKata.git,2023. 8. 25,12,1
2023. 8. 25 오전 11:55:11,김지수,AI,8 - 문자열을 정수로 바꾸기,"def solution(s):
    answer = int(s)
    return answer",,2023. 8. 25,8,1
2023. 8. 25 오전 11:56:47,이혜리,AI,80 - 의상,"def solution(clothes):
    answer = 1
    cl = {}

    for i,j in clothes:
        cl[j] = []
    for i,j in clothes:
        cl[j].append(i)

    for i in cl.values():
        answer *= (len(i) + 1)
    answer -= 1
    return answer",https://github.com/hyeleenotharry/Programmers/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv2/42578.%E2%80%85%EC%9D%98%EC%83%81,2023. 8. 25,80,3
2023. 8. 25 오전 11:56:49,정범수,AI,21 - 수박수박수박수박수박수?,"def solution(n):
    s = ['수', '박']
    return ''.join([s[i%2] for i in range(n)])",https://github.com/sudog1/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12922.%E2%80%85%EC%88%98%EB%B0%95%EC%88%98%EB%B0%95%EC%88%98%EB%B0%95%EC%88%98%EB%B0%95%EC%88%98%EB%B0%95%EC%88%98%EF%BC%9F,2023. 8. 25,21,1
2023. 8. 25 오전 11:57:04,강상찬,AI,9 - 정수 제곱근 판별,"def solution(n):
    if (n**0.5 != int(n**0.5)):
        return -1
    else:
        return (n+n**0.5+n**0.5+1)",,2023. 8. 25,9,1
2023. 8. 25 오전 11:58:17,김어진,Unity,7 - 자연수 뒤집어 배열로 만들기,"public class Solution {
    public int[] solution(long n) {
        string m = n.ToString();
        int[] answer = new int[m.Length];
        for (int i=0; i<m.Length; i++){
            answer[i] = (int)(n % 10);
            n = n/10;
        }
        return answer;
    }
}",https://github.com/KimEoJin24/ProgrammersCodingTests/commit/52d7acb638837b9b99bad39379779d69a5027aa9,2023. 8. 25,7,1
2023. 8. 25 오전 11:58:24,정범수,AI,22 - 내적,"def solution(a, b):
    answer = 0
    for i in range(len(a)):
        answer += a[i]*b[i]
    return answer",https://github.com/sudog1/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/70128.%E2%80%85%EB%82%B4%EC%A0%81,2023. 8. 25,22,1
2023. 8. 25 오전 11:58:56,우민규,Unity,10 - 정수 내림차순으로 배치하기,"using System;

public class Solution {
    public long solution(long n) {
        long answer = 0;
        //문자열이 문자의 나열이므로 n.ToString().ToCharArray(); 형식이 가능함
        char[] input = n.ToString().ToCharArray();
        
        //배열(input)을 오름차순으로 정렬(기본정렬) .Sort
        Array.Sort(input);
        
        //기존 배열 순서를 역순으로 재배치 .Reverse
        Array.Reverse(input);
                
        //순서 : new string으로 input char 배열을 다시 String 형식으로 바꿔줌 ->
        //String 형식을 다시 Convert.ToInt64로 long 형으로 바꿔줌, 그 후 answer에 넣어 반환
        //ToInt32 : int || ToInt64 :long
        return answer = Convert.ToInt64(new string(input));
    }
}",https://github.com/Woomingyu/Programmers.git,2023. 8. 25,10,1
2023. 8. 25 오전 11:58:59,이진범,AI,6 - x만큼 간격이 있는 n개의 숫자,"def solution(x, n):
    answer = []
    a = x
    for b in range(n):
        answer.append(a)
        a += x
    return answer


print(solution(2, 5))
print(solution(4, 3))
print(solution(-3, 4))",,2023. 8. 25,6,1
2023. 8. 25 오전 11:59:36,임규한,AI,11 - 하샤드 수,"def solution(x):
    a = 0
    for i in str(x):
        a += int(i)
    if x%a == 0:
        answer = True
    else:
        answer = False
    return answer
            ",,2023. 8. 25,11,1
2023. 8. 25 오후 12:01:01,정범수,AI,23 - 약수의 개수와 덧셈,"from math import sqrt

def solution(left, right):
    answer = 0
    for n in range(left, right+1):
        if sqrt(n).is_integer():
            answer -= n
        else:
            answer += n
    return answer",https://github.com/sudog1/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/77884.%E2%80%85%EC%95%BD%EC%88%98%EC%9D%98%E2%80%85%EA%B0%9C%EC%88%98%EC%99%80%E2%80%85%EB%8D%A7%EC%85%88,2023. 8. 25,23,1
2023. 8. 25 오후 12:01:15,양수홍,AI,20 - 가운데 글자 가져오기,"def solution(s):
    answer = ''
    if len(s)%2==0:
        answer+=f""{s[len(s)//2-1]}{s[len(s)//2]}""
    else:
        answer+=f""{s[len(s)//2]}""
    return answer",,2023. 8. 25,20,1
2023. 8. 25 오후 12:01:38,김진환,Unity,13 - 콜라츠 추측,"public static int solution(int num)
        {
            int answer = 0;
            long number = num;

            for (int i = 0; i < 500; i++)
            {
                if (number == 1)
                    break;

                if(number % 2 == 0)
                {
                    number /= 2;
                    answer++;
                }
                else
                {
                    number *= 3;
                    number++;
                    answer++;
                }
            }

            if(answer == 500)
                answer = -1;

            return answer;
        }",https://github.com/NewRound/AlgorithmKata.git,2023. 8. 25,13,1
2023. 8. 25 오후 12:03:02,강상찬,AI,10 - 정수 내림차순으로 배치하기,"def solution(n):
    return int(''.join(sorted(list(str(n)),reverse=True)))",,2023. 8. 25,10,1
2023. 8. 25 오후 12:03:09,정범수,AI,24 - 문자열 내림차순으로 배치하기,"def solution(s):
    return ''.join(sorted(s, reverse=True))",https://github.com/sudog1/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12917.%E2%80%85%EB%AC%B8%EC%9E%90%EC%97%B4%E2%80%85%EB%82%B4%EB%A6%BC%EC%B0%A8%EC%88%9C%EC%9C%BC%EB%A1%9C%E2%80%85%EB%B0%B0%EC%B9%98%ED%95%98%EA%B8%B0,2023. 8. 25,24,1
2023. 8. 25 오후 12:03:24,김우진,AI,1 - 짝수와 홀수,"def solution(num):
    if num % 2 == 0
        answer = 'Even'
        return answer
    else 
        answer = 'Odd'
        return answer

print solution(2)",,2023. 8. 25,1,1
2023. 8. 25 오후 12:04:13,유채연,Unity,7 - 자연수 뒤집어 배열로 만들기,"            long a = n;
            int i = 0;
            while (a > 0)
            {
                a /= 10;
                i++;
            }
            a = n;
            int[] answer = new int[i];
            for (int j = 0; j < i; j++)
            {
                long ans = a % 10;
                answer[j] = (int)ans;
                a /= 10;
            }
            return answer;",https://github.com/ychy0006/AlgorithmCodeKata/tree/main/AlgorithmCodeKata,2023. 8. 25,7,1
2023. 8. 25 오후 12:04:36,공혜진,AI,6 - x만큼 간격이 있는 n개의 숫자,"def solution(x, n):
    answer = []
    for i in range(1, n+1):   
        answer.append(x*i)
    return answer",,2023. 8. 25,6,1
2023. 8. 25 오후 12:04:58,공혜진,AI,6 - x만큼 간격이 있는 n개의 숫자,"def solution(x, n):
    answer = []
    for i in range(1, n+1):   
        answer.append(x*i)
    return answer",,2023. 8. 25,6,1
2023. 8. 25 오후 12:04:59,유채연,Unity,8 - 문자열을 정수로 바꾸기,"            int num;
            if (s[0] == '-' || s[0] == '+')
            {
                num = int.Parse(s.Substring(1, s.Length - 1));
                if (s[0] == '-') num *= (-1);
            }
            else
            {
                num = int.Parse(s);
            }
            return num;",https://github.com/ychy0006/AlgorithmCodeKata/tree/main/AlgorithmCodeKata,2023. 8. 25,8,1
2023. 8. 25 오후 12:05:12,정범수,AI,25 - 부족한 금액 계산하기,"def solution(price, money, count):
    return max(sum(i for i in range(1, count+1))*price - money, 0)",https://github.com/sudog1/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/82612.%E2%80%85%EB%B6%80%EC%A1%B1%ED%95%9C%E2%80%85%EA%B8%88%EC%95%A1%E2%80%85%EA%B3%84%EC%82%B0%ED%95%98%EA%B8%B0,2023. 8. 25,25,1
2023. 8. 25 오후 12:05:38,양수홍,AI,21 - 수박수박수박수박수박수?,"def solution(n):
    answer = ''
    for i in range(1,n+1):
        if i%2!=0:
            answer+='수'
        else:
            answer+='박'
    return answer",,2023. 8. 25,21,1
2023. 8. 25 오후 12:05:56,김민재,AI,4 - 약수의 합,"def solution(n):
    answer = 0

    if not 0 <= n <= 3000:
        return False
    else:
        for i in range(1, n+1):
            if n % i == 0:
                answer += i

    return answer",https://github.com/Kim-Minjae9872/Code_Kata,2023. 8. 25,4,1
2023. 8. 25 오후 12:06:46,김진환,Unity,14 - 서울에서 김서방 찾기,"public string solution(string[] seoul)
        {
            string answer = """";

            for(int i = 0; i < seoul.Length; i++)
            {
                if (seoul[i] == ""Kim"")
                {
                    answer += $""김서방은 {i}에 있다"";
                }
            }

            return answer;
        }",https://github.com/NewRound/AlgorithmKata.git,2023. 8. 25,14,1
2023. 8. 25 오후 12:07:20,김정규,AI,7 - 자연수 뒤집어 배열로 만들기,"def solution(n):
    answer = []
    str_n = str(n)
    for i in reversed(str_n):
        answer.append(int(i))
    return answer",https://github.com/JungGyu00/algorithm,2023. 8. 25,7,1
2023. 8. 25 오후 12:07:43,이진형,AI,13 - 콜라츠 추측,"def solution(num):
    if num==1:
        return 0
    count=0
    while True:
        if num%2==0:
            num=num/2
        else:
            num=3*num+1
        
        if count>500:
            return -1
        if num==1:
            count+=1
            break
        count+=1
    return count",,2023. 8. 25,13,1
2023. 8. 25 오후 12:07:53,김규승,Unity,132 - 빛의 경로 사이클,"#include <iostream>
#include <string>
#include <vector>
#include <set>

using namespace std;

struct NODE
{
    int x;
    int y;
    char c;
    int cycleInnerArray[4];  
};

struct HISTORY
{
    int x;
    int y;
    int dx;
    int dy;
};

int cycleIndex = 1;

int DXDYToArrayIndex(int dx, int dy);
void Cycle(vector<NODE>& map, multiset<int>& lengthSet, int width, int height, int x, int y, int dx, int dy);

vector<int> solution(vector<string> grid) {
    
    vector<int> answer;
    
    auto            width{grid[0].size()};
    auto            height{ grid.size() };
    vector<NODE>    map{};
    multiset<int>   lengthSet{};
    for(int y = 0; y < grid.size(); ++y)
    {
        for(int x = 0; x < grid[y].size(); ++x)
        {
            
            NODE node{};
            node.x = x;
            node.y = y;
            node.c = grid[y][x];
            node.cycleInnerArray[0] = 0;
            node.cycleInnerArray[1] = 0;
            node.cycleInnerArray[2] = 0;
            node.cycleInnerArray[3] = 0;
            
            map.emplace_back(node);
            
        }
        
    }
    
    for(int y = 0; y < height; ++y)
    {
        for(int x = 0; x < width; ++x)
        {
            
            Cycle(map, lengthSet, width, height, x, y,  0,  1);
            Cycle(map, lengthSet, width, height, x, y,  0, -1);
            Cycle(map, lengthSet, width, height, x, y, -1,  0);
            Cycle(map, lengthSet, width, height, x, y,  1,  0);
            
        }
    }
    
    for(auto e : lengthSet)
    {
        answer.push_back(e);
    }
    
    /*
    for(int i = 0; i < answer.size(); ++i)
    {
        cout << answer[i] << "", "";
    }
    cout << endl;
    for(int i = 0; i < 4; ++i)
    {
        for(int y = 0; y < height; ++y)
        {
            for(int x = 0; x < width; ++x)
            {
                cout << map[y * width + x].cycleInnerArray[i] << "", "";
            }
            cout << endl;
        }
        cout << endl;
    }
    */
    
    return answer;
    
}

void Cycle(vector<NODE>& map, multiset<int>& lengthSet, int width, int height, int x, int y, int dx, int dy)
{

    vector<HISTORY> historyVector{};
    
    while(true)
    {
        
        auto node{map[y * width + x]};
        
        switch(node.c)
        {
        case 'S':
            break;
        case 'L':
            swap(dx, dy);   //x축 = (cos ,-sin) y축 = (sin, cos)
                            //회전 d(dx, dy) = dx * x축 + dy * y축 = (dy, -dx)
            dy *= -1;
            break;
        case 'R':
            swap(dx, dy); //x축 = (cos, sin) y축 = (-sin, cos)
                          //회전 d(dx, dy) = dx * x축 + dy * y축 = (-dy, dx)
            dx *= -1;
            break;
        }
        HISTORY history{};
        history.x = x;
        history.y = y;
        history.dx = dx;
        history.dy = dy;
        historyVector.emplace_back(history);
        
        //이미 기록이 있는 이동인지 검사합니다.
        //기록이 있다는 것은 싸이클에 포함되었다는 뜻입니다.
        if(node.cycleInnerArray[DXDYToArrayIndex(dx, dy)] != 0)
        {
            return;
        }
        
        //싸이클인지 검사합니다.
        //처음 노드와 마지막 노드를 비교합니다.
        if(historyVector.size() != 1 &&
           historyVector.front().x == historyVector.back().x &&
           historyVector.front().y == historyVector.back().y &&
           historyVector.front().dx == historyVector.back().dx &&
           historyVector.front().dy == historyVector.back().dy)
        {
                
            for(int i = 0; i < historyVector.size(); ++i)
            {
                auto& v = historyVector[i];
                map[v.y * width + v.x].cycleInnerArray[DXDYToArrayIndex(v.dx, v.dy)] = cycleIndex;
            }
            ++cycleIndex;
            
            lengthSet.insert(historyVector.size() - 1);
            
            return;
            
        }
        
        //방향대로 움직입니다.
        x = (width + x + dx) % width;
        y = (height + y + dy) % height;
        
        //cout << ""dx: "" << dx << "", dy: "" << dy << "", x: "" << x << "", y: "" << y << endl; 
        
    }
    
}

int DXDYToArrayIndex(int dx, int dy)
{
    //왼쪽, 오른쪽, 위, 아래 순서
    return dx != 0 ? (dx + 1) / 2 : (dy + 1) / 2 + 2;
}",,2023. 8. 25,132,5
2023. 8. 25 오후 12:09:00,김광수,Unity,41 - 푸드 파이트 대회,"using System;
using System.Collections.Generic;

public class Solution {
    public string solution(int[] food) {
        //데칼코마니? 같은 형태로 음식을 배치해야됨
        // food[0]는 항상 1이고 가운데 배치
        string answer = """";
        Stack<int> stack = new Stack<int>();
        
        
        for(int i =1; i < food.Length; i++)
        {
            while(food[i] > 1)
            {
                food[i] -=2;   
                answer += i;
                stack.Push(i);
            }    
        }
        answer += 0;
        
        while(stack.Count > 0){
            answer += stack.Pop();
        }
        
        return answer;
    }
}",https://github.com/kksoo0131/Study/commit/d88da6ea965d1f2fe09aba46227f41f39c982571,2023. 8. 25,41,2
2023. 8. 25 오후 12:09:15,정범수,AI,26 - 문자열 다루기 기본,"def solution(s):
    return (len(s) == 4 or len(s) == 6) and s.isdigit()",https://github.com/sudog1/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12918.%E2%80%85%EB%AC%B8%EC%9E%90%EC%97%B4%E2%80%85%EB%8B%A4%EB%A3%A8%EA%B8%B0%E2%80%85%EA%B8%B0%EB%B3%B8,2023. 8. 25,26,1
2023. 8. 25 오후 12:09:54,김민상,Unity,31 - 이상한 문자 만들기,"public class Solution {
    public string solution(string s) {
        string answer = """";
        int j = 0;
        
        for (int i = 0; i < s.Length; i++)
        {
            string now = s[i].ToString();
            
            if (now.StartsWith(' '))
                j = -1;
            else
                if (j % 2 == 0)
                    now = now.ToUpper();
                else
                    now = now.ToLower();
            
            answer += now;
            j += 1;
        }
        
        return answer;
    }
}",,2023. 8. 25,31,2
2023. 8. 25 오후 12:10:43,양수홍,AI,22 - 내적,"def solution(a, b):
    answer = 0
    for x,y in zip(a,b):
        answer+=x*y
    return answer",,2023. 8. 25,22,1
2023. 8. 25 오후 12:13:07,김광수,Unity,42 - 콜라 문제,"using System;

public class Solution {
    public int solution(int a, int b, int n) {
        // 빈병 a개 -> 콜라 b개
        // 빈병 n개 -> 콜라 ?개
        
        int answer = 0;
        while(n >= a)
        {
            n-=a;
            n+=b;
            answer += b;
        }
        
        return answer;
    }
}",https://github.com/kksoo0131/Study/commit/3944c70a071801217ba74f8038e4a50bedb44391,2023. 8. 25,42,2
2023. 8. 25 오후 12:13:36,김진환,Unity,15 - 나누어 떨어지는 숫자,"public static int[] solution(int[] arr, int divisor)
        {
            List<int> result = new List<int>();
            for(int i = 0; i < arr.Length; i++)
            {
                if (arr[i] % divisor == 0)
                    result.Add(arr[i]);
            }

            if(result.Count == 0)
                return new int[1] { -1};

            result.Sort();

            int[] answer = new int[result.Count];

            for(int i = 0; i < result.Count; i++)
            {
                answer[i] = result[i];
            }

            return answer;
        }",,2023. 8. 25,15,1
2023. 8. 25 오후 12:14:23,김진환,Unity,15 - 나누어 떨어지는 숫자,"public static int[] solution(int[] arr, int divisor)
        {
            List<int> result = new List<int>();
            for(int i = 0; i < arr.Length; i++)
            {
                if (arr[i] % divisor == 0)
                    result.Add(arr[i]);
            }

            if(result.Count == 0)
                return new int[1] { -1};

            result.Sort();

            int[] answer = new int[result.Count];

            for(int i = 0; i < result.Count; i++)
            {
                answer[i] = result[i];
            }

            return answer;
        }",https://github.com/NewRound/AlgorithmKata.git,2023. 8. 25,15,1
2023. 8. 25 오후 12:17:09,양수홍,AI,19 - 제일 작은 수 제거하기,"def solution(arr):
    if len(arr)==1:
        return [-1]
    else:
        min_num=min(arr)
        del arr[arr.index(min_num)]
        return arr",,2023. 8. 25,19,1
2023. 8. 25 오후 12:17:43,명세인,AI,9 - 정수 제곱근 판별,"def solution(n):
    answer = 0
    if n**(1/2) % 1 == 0:
        answer = (n ** (1/2)+1)**2
    else:
        answer = -1
    return answer",https://github.com/playersein/Coding_Test/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12934.%E2%80%85%EC%A0%95%EC%88%98%E2%80%85%EC%A0%9C%EA%B3%B1%EA%B7%BC%E2%80%85%ED%8C%90%EB%B3%84,2023. 8. 25,9,1
2023. 8. 25 오후 12:18:26,김진환,Unity,16 - 음양 더하기,"public int solution(int[] absolutes, bool[] signs)
        {
            int answer = 0;

            for (int i = 0; i < absolutes.Length; i++)
            {
                if (signs[i])
                    answer += absolutes[i];
                else
                    answer -= absolutes[i];
            }

            return answer;
        }",https://github.com/NewRound/AlgorithmKata.git,2023. 8. 25,16,1
2023. 8. 25 오후 12:19:28,송명근,Unity,3 - 자릿수 더하기,"using System;

public class Solution {
    public int solution(int n) {
        int answer = 0;
        while (n > 0)
        {
            answer += n % 10;
            n /= 10;
        }
        return answer;
    }
}",https://github.com/audrms6494/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12931.%E2%80%85%EC%9E%90%EB%A6%BF%EC%88%98%E2%80%85%EB%8D%94%ED%95%98%EA%B8%B0,2023. 8. 25,3,1
2023. 8. 25 오후 12:20:00,송명근,Unity,4 - 약수의 합,"public class Solution {
    public int solution(int n) {
        int k = 1;
        int answer = 0;
        for (k = 1; k * k <= n; k ++ )
        {
            if (k * k == n)
            {
                answer += k;
            }
            else if (n % k == 0)
            {
                answer += k + (n/k);
            }
        }

        return answer;
    }
}",https://github.com/audrms6494/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12928.%E2%80%85%EC%95%BD%EC%88%98%EC%9D%98%E2%80%85%ED%95%A9,2023. 8. 25,4,1
2023. 8. 25 오후 12:20:35,송명근,Unity,5 - 나머지가 1이 되는 수 찾기,"using System;

public class Solution {
    public int solution(int n) {
        int answer = 0;
        for (int i = 2; i * i <= n-1; i++)
        {
            if ((n-1) % i == 0)
            {
                answer = i;
                break;
            }
        }
        if (answer == 0)
        {
            answer = n-1;
        }
        return answer;
    }
}",https://github.com/audrms6494/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/87389.%E2%80%85%EB%82%98%EB%A8%B8%EC%A7%80%EA%B0%80%E2%80%851%EC%9D%B4%E2%80%85%EB%90%98%EB%8A%94%E2%80%85%EC%88%98%E2%80%85%EC%B0%BE%EA%B8%B0,2023. 8. 25,5,1
2023. 8. 25 오후 12:20:36,조범준,Unity,11 - 하샤드 수,"public class Solution {
    public bool solution(int x) {
        string str = x.ToString();
        int arr = 0;
        bool answer = true;
        int num = x;
        for(int i = 0; i < str.Length; i++)
        {
            arr += x % 10;
            x /= 10;
        }
        
        if(num % arr == 0)
        {
            answer = true;
        }
        else
        {
            answer = false;
        }
        
        return answer;
    }
}",https://github.com/KimMaYa1/BaekJoonEx/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12947.%E2%80%85%ED%95%98%EC%83%A4%EB%93%9C%E2%80%85%EC%88%98,2023. 8. 25,11,1
2023. 8. 25 오후 12:20:50,김해찬,Unity,54 - 체육복,"using System;
using System.Collections;
using System.Collections.Generic;

public class Solution {
    public int solution(int n, int[] lost, int[] reserve) {
        int answer = 0;
        
        List<int> lst = new List<int>(lost);
        
        lst.Sort();
        
        for(int i = 0; i < lst.Count; i++)
        {
            lost[i] = lst[i];
        }
        
        bool[] reserveCheck = new bool[n+2];
        
        for(int i = 0; i < reserve.Length; i++)
        {
            reserveCheck[reserve[i]] = true;
        }
        
        answer = n;
        
        for(int i = 0; i < reserveCheck.Length; i++)
        {
            for(int j = 0; j < lost.Length; j++)
            {
                if(lost[j] == i && reserveCheck[i] == true)
                {
                    lost[j] = -1;
                    reserveCheck[i] = false;
                    break;
                }
            }
        }
        

        
        for(int i = 0; i < lost.Length; i++)
        {
            int lostIndex = lost[i];
            
            if(lostIndex == -1)
            {
                continue;
            }
            
            if(reserveCheck[lostIndex] == true)
            {
                reserveCheck[lostIndex] = false;
            }
            else if(reserveCheck[lostIndex-1] == true)
            {
                reserveCheck[lostIndex-1] = false;
            }
            else if(reserveCheck[lostIndex+1] == true)
            {
                reserveCheck[lostIndex+1] = false;
            }
            else
            {
                answer--;
            }
        }
        
        return answer;
    }
}",,2023. 8. 25,54,2
2023. 8. 25 오후 12:22:38,김형수,Unity,2 - 평균 구하기,"public class Solution {
    public double solution(int[] arr) {

        double sum = 0;

        for (int i = 0; i < arr.Length; i++)
        {
            sum += arr[i];
        }

        return sum / arr.Length;
        
        //double answer = 0;
        //return answer;
    }
}",https://github.com/Kim-H-S/Programmers/blob/main/%ED%8F%89%EA%B7%A0%20%EA%B5%AC%ED%95%98%EA%B8%B0.cs,2023. 8. 5,2,1
2023. 8. 25 오후 12:23:50,김진환,Unity,17 - 핸드폰 번호 가리기,"public string solution(string phone_number)
        {
            string answer = """";
            if (phone_number.Length == 4)
                return phone_number;
            for(int i = 0; i < phone_number.Length; i++)
            {
                if(i < phone_number.Length - 4)
                    answer += '*';
                else
                    answer += phone_number[i];
            }
            return answer;
        }",https://github.com/NewRound/AlgorithmKata.git,2023. 8. 25,17,1
2023. 8. 25 오후 12:26:20,송명근,Unity,6 - x만큼 간격이 있는 n개의 숫자,"public class Solution {
    public long[] solution(int x, int n) {
        long[] answer = new long[n];
        for (int i = 1; i <= n; i++)
        {
            answer[i-1] = (long) x * i;
        }
        return answer;
    }
}",https://github.com/audrms6494/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12954.%E2%80%85x%EB%A7%8C%ED%81%BC%E2%80%85%EA%B0%84%EA%B2%A9%EC%9D%B4%E2%80%85%EC%9E%88%EB%8A%94%E2%80%85n%EA%B0%9C%EC%9D%98%E2%80%85%EC%88%AB%EC%9E%90,2023. 8. 25,6,1
2023. 8. 25 오후 12:27:14,송명,Unity,7 - 자연수 뒤집어 배열로 만들기,"using System;
public class Solution {
    public int[] solution(long n) {
        string nString = n.ToString();
        int[] answer = new int[nString.Length];
        for (int i = 0; i < nString.Length; i++)
        {
            answer[i] = (int)Char.GetNumericValue(nString[nString.Length - 1 - i]);
        }
        return answer;
    }
}",https://github.com/audrms6494/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12932.%E2%80%85%EC%9E%90%EC%97%B0%EC%88%98%E2%80%85%EB%92%A4%EC%A7%91%EC%96%B4%E2%80%85%EB%B0%B0%EC%97%B4%EB%A1%9C%E2%80%85%EB%A7%8C%EB%93%A4%EA%B8%B0,2023. 8. 25,7,1
2023. 8. 25 오후 12:28:03,임규한,AI,12 - 두 정수 사이의 합,"def solution(a, b):
    s = 0
    if b > a:
        for i in range(a, b+1):
            s += i
    elif a == b:
        s = a
    elif a > b:
        for i in range(b, a+1):
            s += i
    return s",,2023. 8. 25,12,1
2023. 8. 25 오후 12:28:54,이재윤,AI,4 - 약수의 합,"def solution(n):
    answer = 0
    a = int(n)
    if a <= 3000:
        for i in range(1, a+1):
            if a % i == 0:
                answer = answer + a/i
    return int(answer)


print(solution(16.4))",https://github.com/JaeYoonAI/coding_test/blob/b4bfa25de14d88b34cd4bc343f32474726a2770b/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12928.%E2%80%85%EC%95%BD%EC%88%98%EC%9D%98%E2%80%85%ED%95%A9/%EC%95%BD%EC%88%98%EC%9D%98%E2%80%85%ED%95%A9.py,2023. 8. 25,4,1
2023. 8. 25 오후 12:30:08,송명근,Unity,7 - 자연수 뒤집어 배열로 만들기,"using System;
public class Solution {
    public int[] solution(long n) {
        string nString = n.ToString();
        int[] answer = new int[nString.Length];
        for (int i = 0; i < nString.Length; i++)
        {
            answer[i] = (int)Char.GetNumericValue(nString[nString.Length - 1 - i]);
        }
        return answer;
    }
}",https://github.com/audrms6494/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12932.%E2%80%85%EC%9E%90%EC%97%B0%EC%88%98%E2%80%85%EB%92%A4%EC%A7%91%EC%96%B4%E2%80%85%EB%B0%B0%EC%97%B4%EB%A1%9C%E2%80%85%EB%A7%8C%EB%93%A4%EA%B8%B0,2023. 8. 25,7,1
2023. 8. 25 오후 12:35:07,김진환,Unity,18 - 없는 숫자 더하기,"public static int solution(int[] numbers)
        {
            int answer = 0;
            bool find = false;

            for(int i = 0; i < 10; i++)
            {
                find = false;
                for (int j = 0; j < numbers.Length; j++)
                {
                    if (i == numbers[j])
                    {
                        find = true;
                        break;
                    }
                }
                if (!find)
                    answer += i;
            }
            return answer;
        }",https://github.com/NewRound/AlgorithmKata.git,2023. 8. 25,18,1
2023. 8. 25 오후 12:35:37,김윤경,Unity,3 - 자릿수 더하기,"
using System;

public class Solution {
    public int solution(int n) {
        int answer = 0;

        while(n>0){
            answer+=n%10;
            n=n/10;
        }
        return answer;
    }
}",,2023. 8. 25,3,1
2023. 8. 25 오후 12:37:42,김우진,AI,2 - 평균 구하기,"def solution(arr):

    answer = sum(arr) / len(arr)
    return answer

d = solution([3,4,5])
print(d)",,2023. 8. 25,2,1
2023. 8. 25 오후 12:49:41,강상찬,AI,12 - 두 정수 사이의 합,"def solution(a, b):
    answer = 0
    if (a == b):
        return a
    elif (a < b):
        for i in range(a,b+1):
            answer = answer + i
        return answer
    else:
        for i in range(b,a+1):
            answer = answer + i
        return answer",,2023. 8. 25,12,1
2023. 8. 25 오후 12:50:25,김진환,Unity,19 - 제일 작은 수 제거하기,"public static int[] solution(int[] arr)
        {
            if (arr.Length == 1)
                return new int[1] { -1 };

            int[] answer = new int[arr.Length - 1];
            int minNum = arr[0];
            for (int i = 0; i < arr.Length; i++)
            {
                if(minNum > arr[i])
                    minNum = arr[i];
            }
            int j = 0;
            for (int i = 0; i < arr.Length; i++)
            {
                if(arr[i] == minNum)
                {
                    continue;
                }
                answer[j] = arr[i];
                j++;
            }
            return answer;
        }",https://github.com/NewRound/AlgorithmKata.git,2023. 8. 25,19,1
2023. 8. 25 오후 12:52:33,김지우,AI,5 - 나머지가 1이 되는 수 찾기,"def solution(n):
    for x in range(2,n):
        if n % x == 1:
            return x",,2023. 8. 25,5,1
2023. 8. 25 오후 12:53:46,강성호,Unity,32 - 삼총사,"using System;

public class Solution
	{
		int answer = 0;
		public int solution(int[] number)
		{
			for(int i = 0; i < number.Length; i++)
			{
				dfs(number, 1, number[i], i + 1);
			}
			return answer;

		}

		void dfs(int[] num, int cnt, int sum, int start)
		{
			if (cnt == 3 && sum == 0)
			{
				answer++;
				return;
			}

			for(int i = start; i < num.Length; i++)
			{
				dfs(num, cnt + 1, sum + num[i], i + 1);
			}

		}
	}",,2023. 8. 25,32,2
2023. 8. 25 오후 12:58:45,김진환,Unity,20 - 가운데 글자 가져오기,"public string solution(string s)
        {
            string answer = """";
            int count = s.Length/2;
            if(s.Length % 2 == 0)
            {
                answer += s[count - 1];
                answer += s[count];
            }
            else
            {
                answer += s[count];
            }
            return answer;
        }",https://github.com/NewRound/AlgorithmKata.git,2023. 8. 25,20,1
2023. 8. 25 오후 12:59:17,김해찬,Unity,55 - 문자열 나누기,"using System;

public class Solution {
    public int solution(string s) {
        int answer = 0;
        
        char x = '0';
        int same = 0;
        int diff = 0;
        
        for(int i = 0; i < s.Length; i++)
        {            
            if(x == '0')
            {
                x = s[i];
                same++;
                continue;
            }
            
            if(same == diff)
            {
                answer++;
                same = 1;
                diff = 0;
                x = s[i];
            }
            else if(x == s[i])
            {
                same++;
            }
            else if(x != s[i])
            {
                diff++;
            }
        }
        
        if(same == diff || x != '0')
        {
            answer++;
        }
        
        return answer;
    }
}",,2023. 8. 25,55,3
2023. 8. 25 오후 1:03:17,김진환,Unity,21 - 수박수박수박수박수박수?,"public string solution(int n)
        {
            string answer = """";
            for(int i = 0; i < n;i++)
            {
                if(i%2==0)
                {
                    answer += ""수"";
                }
                else
                {
                    answer += ""박"";
                }
            }
            return answer;
        }",https://github.com/NewRound/AlgorithmKata.git,2023. 8. 25,21,1
2023. 8. 25 오후 1:04:36,김지우,AI,6 - x만큼 간격이 있는 n개의 숫자,"def solution(x, n):
    
    answer =  [x*i for i in range(1, n+1)]
            
    return answer",,2023. 8. 25,6,1
2023. 8. 25 오후 1:07:24,최종민,AI,4 - 약수의 합,"def solution(n):
    answer = 0
    for i in range(1,n+1):
        if n % i == 0:
            answer+= i
    return answer",https://github.com/tesla7211/baekjoon/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12928.%E2%80%85%EC%95%BD%EC%88%98%EC%9D%98%E2%80%85%ED%95%A9,2023. 8. 25,4,1
2023. 8. 25 오후 1:13:12,김재유,AI,2 - 평균 구하기,"arr = [1,2,3,4]
def solution(numbers):
    return sum(numbers) / len(numbers)",https://github.com/jjjU230408/co.te.git,2023. 8. 25,2,1
2023. 8. 25 오후 1:21:26,김지수,AI,12 - 두 정수 사이의 합,"def solution(a, b):
    answer = 0 
    for i in range(min(a, b), max (a,b)+1):
        answer += i
    return answer",,2023. 8. 25,12,1
2023. 8. 25 오후 1:26:35,최지연,AI,7 - 자연수 뒤집어 배열로 만들기,"def solution(n):
    list_n = list(str(n))
    list_n.reverse()
    answer = [eval(i) for i in list_n]
    return answer",https://github.com/jiyeonCoder/algorithmPractice/blob/main/7.%20%EC%9E%90%EC%97%B0%EC%88%98%20%EB%92%A4%EC%A7%91%EC%96%B4%20%EB%B0%B0%EC%97%B4%EB%A1%9C%20%EB%A7%8C%EB%93%A4%EA%B8%B0.py,2023. 8. 25,7,1
2023. 8. 25 오후 1:28:31,조범준,Unity,12 - 두 정수 사이의 합,"public class Solution {
    public long solution(int a, int b) {
        long answer = 0;
        if(a > b){
            int temp = b;
            b = a;
            a = temp;
        }
        for(int i = a; i <= b; i++){
            answer += i;
        }
        return answer;
    }
}",https://github.com/KimMaYa1/BaekJoonEx/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12912.%E2%80%85%EB%91%90%E2%80%85%EC%A0%95%EC%88%98%E2%80%85%EC%82%AC%EC%9D%B4%EC%9D%98%E2%80%85%ED%95%A9,2023. 8. 25,12,1
2023. 8. 25 오후 1:43:49,조범준,Unity,13 - 콜라츠 추측,"public class Solution {
    public int solution(int num) {
        int i = 0;
        if(num != 1)
            while(num != 1 && i++ < 500)
            {
                if(num % 2 == 0)
                    num /= 2;
                else if(num % 2 == 1)
                    num = num * 3 + 1;
            }
        
        if(i >= 500)
            i = -1;
        
        return i;
    }
}",https://github.com/KimMaYa1/BaekJoonEx/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12943.%E2%80%85%EC%BD%9C%EB%9D%BC%EC%B8%A0%E2%80%85%EC%B6%94%EC%B8%A1,2023. 8. 25,13,1
2023. 8. 25 오후 2:01:16,최종민,AI,5 - 나머지가 1이 되는 수 찾기,"def solution(n):
    answer = 0
    for i in range(n, 0, -1):
        if n % i == 1 and answer < n:
            answer = i
    return answer",https://github.com/tesla7211/baekjoon/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/87389.%E2%80%85%EB%82%98%EB%A8%B8%EC%A7%80%EA%B0%80%E2%80%851%EC%9D%B4%E2%80%85%EB%90%98%EB%8A%94%E2%80%85%EC%88%98%E2%80%85%EC%B0%BE%EA%B8%B0,2023. 8. 25,5,1
2023. 8. 25 오후 2:02:16,조범준,Unity,14 - 서울에서 김서방 찾기,"public class Solution {
    public string solution(string[] seoul) {
        string answer = """";
        int i = 0;
        foreach(string str in seoul)
        {
            if(str != ""Kim"")
            {
                i++;
            }else{
                break;
            }
        }
        
        return $""김서방은 {i}에 있다"";
    }
}",https://github.com/KimMaYa1/BaekJoonEx/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12919.%E2%80%85%EC%84%9C%EC%9A%B8%EC%97%90%EC%84%9C%E2%80%85%EA%B9%80%EC%84%9C%EB%B0%A9%E2%80%85%EC%B0%BE%EA%B8%B0,2023. 8. 25,14,1
2023. 8. 25 오후 2:05:04,정재호,Unity,19 - 제일 작은 수 제거하기,"using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;

public class Solution
{
    public int[] solution(int[] arr)
    {
        List<int> answer = new List<int>();

        int min = arr[0];

        for (int i = 0; i < arr.Length; i++)
        {
            if (min > arr[i])
            {
                min = arr[i];
            }
        }

        if (min == arr[0])
        {
            answer.Add(-1);
            return answer.ToArray();
        }
        else
        {
            answer = arr.ToList();
            answer.Remove(min);
            return answer.ToArray();
        }
    }
}",,2023. 8. 25,19,1
2023. 8. 25 오후 2:05:44,기현빈,Unity,8 - 문자열을 정수로 바꾸기,"public class Solution {
    public int solution(string s) {
        int answer = 0;
        
        answer = int.Parse(s);
        
        return answer;
    }
}",https://github.com/homebd/Algorithm,2023. 8. 25,8,1
2023. 8. 25 오후 2:07:58,정재호,Unity,20 - 가운데 글자 가져오기,"using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;

public class Solution
{
    public string solution(string s)
    {
        string answer = """";

        char[] chars = s.ToCharArray();

        if (chars.Length % 2 != 0)
        {
            return answer = chars[chars.Length / 2 ].ToString();
        }
        else
        {
            return answer = chars[chars.Length / 2].ToString() + chars[chars.Length / 2 + 1].ToString();
        }
    }
}",,2023. 8. 25,20,1
2023. 8. 25 오후 2:10:23,김진환,Unity,22 - 내적,"public int solution(int[] a, int[] b)
        {
            int answer = 0;

            for (int i = 0; i < a.Length; i++)
            {
                answer += a[i] * b[i];
            }

            return answer;
        }",https://github.com/NewRound/AlgorithmKata.git,2023. 8. 25,22,1
2023. 8. 25 오후 2:12:15,조범준,Unity,15 - 나누어 떨어지는 숫자,"using System;
public class Solution {
    public int[] solution(int[] arr, int divisor) {
        int[] answer = new int[0];
        int a = 0;
        for(int i = 0; i < arr.Length; i++)
        {
            if(arr[i] % divisor == 0)
            {
                Array.Resize(ref answer, answer.Length + 1);
                answer[a++] = arr[i];
            }
        }
        Array.Sort(answer);
        if(a == 0)
        {
            Array.Resize(ref answer, answer.Length + 1);
            answer[a++] = -1;
        }
            
        return answer;
    }
}",https://github.com/KimMaYa1/BaekJoonEx/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12910.%E2%80%85%EB%82%98%EB%88%84%EC%96%B4%E2%80%85%EB%96%A8%EC%96%B4%EC%A7%80%EB%8A%94%E2%80%85%EC%88%AB%EC%9E%90%E2%80%85%EB%B0%B0%EC%97%B4,2023. 8. 25,15,1
2023. 8. 25 오후 2:16:00,김해찬,Unity,56 - 대충 만든 자판,"using System;

public class Solution {
    public int[] solution(string[] keymap, string[] targets) {
        int[] answer   = new int[targets.Length];
        int[][] counts = new int[keymap.Length][];
        
        for(int i = 0; i < counts.Length; i++)
        {
            counts[i] = new int[26];
            
            for(int j = 0; j < 26; j++)
            {
                counts[i][j] = int.MaxValue;
            }
        }
        
        for(int i = 0; i < keymap.Length; i++)
        {
            for(int j = keymap[i].Length - 1; j > -1; j--)
            {
                counts[i][keymap[i][j] - 'A'] = j+1;
            }
        }
        
        for(int i = 0; i < targets.Length; i++)
        {
            int ans = 0;
            bool trigger = false;
            
            for(int j = 0; j < targets[i].Length; j++)
            {
                int min = int.MaxValue;
                
                for(int k = 0; k < counts.Length; k++)
                {
                    if(counts[k][targets[i][j] - 'A'] < min)
                    {
                        min = counts[k][targets[i][j] - 'A'];
                    }
                }
                
                if(min != int.MaxValue)
                {
                    ans += min;
                }
                else
                {
                    trigger = true;
                }
            }
            
            if(trigger == true)
            {
                answer[i] = -1;
            }
            else if (ans != -1)
            {
                answer[i] = ans;
            }
        }
        
        return answer;
    }
}",,2023. 8. 25,56,3
2023. 8. 25 오후 2:16:41,조범준,Unity,16 - 음양 더하기,"public class Solution {
    public int solution(int[] absolutes, bool[] signs) {
        int answer = 0;
        
        for(int i = 0; i < signs.Length; i++)
        {
            if(signs[i])
                answer += absolutes[i];
            else
                answer -= absolutes[i];
        }
        
        return answer;
    }
}",https://github.com/KimMaYa1/BaekJoonEx/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/76501.%E2%80%85%EC%9D%8C%EC%96%91%E2%80%85%EB%8D%94%ED%95%98%EA%B8%B0,2023. 8. 25,16,1
2023. 8. 25 오후 2:20:34,최종민,AI,6 - x만큼 간격이 있는 n개의 숫자,"def solution(x, n):
    answer = []
    for i in range(1, n+1):
        answer.append(x*i)
    return answer",https://github.com/tesla7211/baekjoon/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12954.%E2%80%85x%EB%A7%8C%ED%81%BC%E2%80%85%EA%B0%84%EA%B2%A9%EC%9D%B4%E2%80%85%EC%9E%88%EB%8A%94%E2%80%85n%EA%B0%9C%EC%9D%98%E2%80%85%EC%88%AB%EC%9E%90,2023. 8. 25,6,1
2023. 8. 25 오후 2:22:21,조범준,Unity,17 - 핸드폰 번호 가리기,"public class Solution {
    public string solution(string phone_number) {
        string answer = """";
        for(int i = 0; i < phone_number.Length; i++)
        {
            if(i < phone_number.Length - 4)
                answer += ""*"";
            else
                answer += phone_number[i];
        }
        return answer;
    }
}",https://github.com/KimMaYa1/BaekJoonEx/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12948.%E2%80%85%ED%95%B8%EB%93%9C%ED%8F%B0%E2%80%85%EB%B2%88%ED%98%B8%E2%80%85%EA%B0%80%EB%A6%AC%EA%B8%B0,2023. 8. 25,17,1
2023. 8. 25 오후 2:28:39,김해찬,Unity,57 - 둘만의 암호,"using System;

public class Solution {
    public string solution(string s, string skip, int index) {
        string answer = """";
        
        bool[] skipCheck = new bool[26];
        
        for(int i = 0; i < skip.Length; i++)
        {
            skipCheck[skip[i] - 'a'] = true;
        }
        
        for(int i = 0; i < s.Length; i++)
        {
            char temp = s[i];
            
            int j = 0;
            while(j < index)
            {
                temp += (char)1;
                
                if(temp > 'z')
                {
                    temp -= (char)26;
                }
                
                if(skipCheck[temp - 'a'] == true)
                {
                    continue;
                }
                else
                {
                    j++;
                }
            }
            
            answer += temp;
        }
        
        return answer;
    }
}",,2023. 8. 25,57,3
2023. 8. 25 오후 2:29:59,심명희,AI,7 - 자연수 뒤집어 배열로 만들기,"def solution(n):
    answer = []
    new = reversed(str(n))
    for i in new:
        answer.append(int(i))
        
    return answer",,2023. 8. 25,7,1
2023. 8. 25 오후 2:32:03,최종민,AI,7 - 자연수 뒤집어 배열로 만들기,"def solution(n):
    answer = []
    for i in str(n):
        answer.append(int(i))
    answer.reverse()
    print(answer)
    return answer",https://github.com/tesla7211/baekjoon/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12932.%E2%80%85%EC%9E%90%EC%97%B0%EC%88%98%E2%80%85%EB%92%A4%EC%A7%91%EC%96%B4%E2%80%85%EB%B0%B0%EC%97%B4%EB%A1%9C%E2%80%85%EB%A7%8C%EB%93%A4%EA%B8%B0,2023. 8. 25,7,1
2023. 8. 25 오후 2:33:56,최종민,AI,8 - 문자열을 정수로 바꾸기,"def solution(s):
    answer = int(s)
    return answer",https://github.com/tesla7211/baekjoon/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12925.%E2%80%85%EB%AC%B8%EC%9E%90%EC%97%B4%EC%9D%84%E2%80%85%EC%A0%95%EC%88%98%EB%A1%9C%E2%80%85%EB%B0%94%EA%BE%B8%EA%B8%B0,2023. 8. 25,8,1
2023. 8. 25 오후 2:46:10,최종민,AI,9 - 정수 제곱근 판별,"def solution(n):
    x = int(n ** (1/2))
    if x * x == n :
        answer = (x+1) * (x+1)
    else:
        answer = -1
    return answer",https://github.com/tesla7211/baekjoon/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12934.%E2%80%85%EC%A0%95%EC%88%98%E2%80%85%EC%A0%9C%EA%B3%B1%EA%B7%BC%E2%80%85%ED%8C%90%EB%B3%84,2023. 8. 25,9,1
2023. 8. 25 오후 2:51:09,김진환,Unity,23 - 약수의 개수와 덧셈,"public int solution(int left, int right)
        {
            int answer = 0;
            int cnt = 0;
            for (int i = left; i <= right; i++)
            {
                for (int j = 1; j <= i; j++)
                {
                    if (i % j == 0)
                    {
                        cnt++;
                    }
                }
                if (cnt % 2 == 0)
                {
                    answer += i;
                }
                else
                {
                    answer -= i;
                }
                cnt = 0;
            }
            return answer;
        }",https://github.com/NewRound/AlgorithmKata.git,2023. 8. 25,23,1
2023. 8. 25 오후 2:57:02,강성호,Unity,33 - 크기가 작은 부분,"

public class Solution {
    public int solution(string t, string p) {
       int answer = 0;
			long equ = 0;

			long b = long.Parse(p);

			for (int i = 0; i < t.Length - p.Length + 1; i++)
			{
				equ = long.Parse(t.Substring(i, p.Length));
				if (b >= equ)
				{
					answer++;
				}
			}
			return answer;
    }
}",,2023. 8. 25,33,2
2023. 8. 25 오후 2:57:03,심명희,AI,8 - 문자열을 정수로 바꾸기,"def solution(s):
    answer = int(s)

    return answer",,2023. 8. 25,8,1
2023. 8. 25 오후 2:57:27,정재호,Unity,21 - 수박수박수박수박수박수?,"using System;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Linq;

public class Solution
{
    public string solution(int n)
    {
        StringBuilder sb = new StringBuilder();

        string answer = """";

        string st = ""수"";
        string nd = ""박"";

        if (n % 2 == 0)
        {
            for (int i = 0; i < n/2; i++)
            {
                sb.Append(st);
                sb.Append(nd);
            }
            return answer = sb.ToString();
        }
        else
        {
            for (int i = 0; i < n / 2; i++)
            {
                sb.Append(st);
                sb.Append(nd);
            }
            sb.Append(st);
            return answer = sb.ToString();
        }

    }
}",,2023. 8. 25,21,1
2023. 8. 25 오후 2:58:30,기현빈,Unity,9 - 정수 제곱근 판별,"public class Solution {
    public long solution(long n) {
        long answer = 0;
        long x = Sqrt(n);
        
        if(x * x == n) answer = (x + 1) * (x + 1) ;
        else answer = -1;
        
        return answer;
    }
    
    int Sqrt(long n) {
        float xi = 1;
        
        while(true) {                
            float xf = (0.5f) * (xi + n / xi);
            if(((xf - xi > 0) ? xf - xi : xi - xf) < 0.0001f) return (int)(xf + 0.5f);
            xi = xf;
        }
        
        return 0;
    }
}",,2023. 8. 25,9,1
2023. 8. 25 오후 2:59:44,정재호,Unity,22 - 내적,"using System;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Linq;

using System;

public class Solution
{
    public int solution(int[] a, int[] b)
    {
        int answer = 0;

        for (int i = 0; i < a.Length; i++)
        {
            answer += a[i] * b[i];
        }

        return answer;
    }
}",,2023. 8. 25,22,1
2023. 8. 25 오후 3:01:06,김진환,Unity,24 - 문자열 내림차순으로 배치하기,"public string solution(string s)
        {
            string answer = """";
            List<int> list = new List<int>();
            for(int i = 0; i < s.Length;i++)
            {
                list.Add((int)s[i]);
            }

            list.Sort();
            list.Reverse();

            for(int i = 0; i < list.Count; i++)
            {
                answer += (char)list[i];
            }

            return answer;
        }",https://github.com/NewRound/AlgorithmKata.git,2023. 8. 25,24,1
2023. 8. 25 오후 3:02:32,최종민,AI,10 - 정수 내림차순으로 배치하기,"def solution(n):
    answer=[]
    for i in str(n):
        answer.append(i)
    answer.sort(reverse=1)
    answer = int("""".join(answer))

    return answer",https://github.com/tesla7211/baekjoon/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12932.%E2%80%85%EC%9E%90%EC%97%B0%EC%88%98%E2%80%85%EB%92%A4%EC%A7%91%EC%96%B4%E2%80%85%EB%B0%B0%EC%97%B4%EB%A1%9C%E2%80%85%EB%A7%8C%EB%93%A4%EA%B8%B0,2023. 8. 25,10,1
2023. 8. 25 오후 3:04:28,차요한,Unity,14 - 서울에서 김서방 찾기,"public class Solution {
    public string solution(string[] seoul) {
        string answer = """";
        for(int i = 0 ; i < seoul.Length ; i++)
        {
            if(string.Equals(seoul[i],""Kim""))
            {
                answer=""김서방은 ""+i+""에 있다"";
            }
        }
        return answer;
    }
}",https://github.com/HOHOJO/Algorithm_test,2023. 8. 25,14,1
2023. 8. 25 오후 3:08:07,정재호,Unity,23 - 약수의 개수와 덧셈,"using System;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Linq;

using System;

public class Solution
{
    public int solution(int left, int right)
    {
        int answer = 0;

        for (int i = left; i <= right; i++)
        {
            if (i % MathF.Sqrt(i) != 0)
            {
                answer += i;
            }
            else
            {
                answer -= i;
            }
        }

        return answer;
    }
}",,2023. 8. 25,23,1
2023. 8. 25 오후 3:08:31,기현빈,Unity,10 - 정수 내림차순으로 배치하기,"using System.Linq;
using System.Collections.Generic;

public class Solution {
    public long solution(long n) {
        long answer = 0;
        List<int> nList = new List<int>();
        
        while(n > 0) {
            nList.Add((int)(n % 10));
            n /= 10;
        }
        
        nList = nList.OrderBy(x => -x).ToList();
        
        while(nList.Count > 0) {
            answer *= 10;
            answer += nList[0];
            nList.RemoveAt(0);
        }
        
        return answer;
    }
}",,2023. 8. 25,10,1
2023. 8. 25 오후 3:11:16,우민규,Unity,11 - 하샤드 수,"public class Solution {
    public bool solution(int x) {
        
        //하샤드 수를 처음 들어봤다. => 자연수 중 각 자릿수의 합으로 나누어 떨어지는 수
        //하샤드 수 18 : 1+8 = 9 || 18 / 9 = 2 나누어 떨어짐 || 12도 동일
        
        bool answer = true;                       
        int num = 0;
        
        int originX = x; //입력값 보존
        
        //입력값의 모든 자릿수 더하기
        while(x>0)
        {
            num += x % 10;
            x = x / 10;
        }
        //15열의 x는 대입값이 num이므로 원본 x에 변화를 줄 수 없다.
        //입력값이 13이라고 했을 때, 첫 반복에서 x / 10 에 의해 값이 1.3이 되어 1을 반환하고
        //두번째 반복에서 0.1이 되어 0을 반환하므로 while 반복이 멈추게 된다.
        
        answer = (originX % num == 0) ? true : false;
        
        return answer;
    }
}",https://github.com/Woomingyu/Programmers.git,2023. 8. 25,11,1
2023. 8. 25 오후 3:11:54,김진환,Unity,25 - 부족한 금액 계산하기,"public long solution(int price, int money, int count)
        {
            // int값의 범위를 넘어서서 오류가 떴었음 (원래 pay가 int였음.)
            long pay = 0;
            for(int i = 1; i <= count; i++)
            {
                pay += i;
            }

            pay *= (long)price;

            if (pay > money)
                return (pay - (long)money);
            else
                return 0;
        }",https://github.com/NewRound/AlgorithmKata.git,2023. 8. 25,25,1
2023. 8. 25 오후 3:12:16,정재호,Unity,24 - 문자열 내림차순으로 배치하기,"using System;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Linq;

public class Solution
{
    public string solution(string s)
    {
        string answer = """";
        char[] chars = s.ToCharArray();
        Array.Sort(chars);
        Array.Reverse(chars);

        for (int i = 0; i < chars.Length; i++)
        {
            if (chars[i] >= 97)
            {
                answer += chars[i].ToString();
            }
        }

        for (int i = 0; i < chars.Length; i++)
        {
            if (chars[i] <= 90)
            {
                answer += chars[i].ToString();
            }
        }
        return answer;
    }
}",,2023. 8. 25,24,1
2023. 8. 25 오후 3:12:40,기현빈,Unity,11 - 하샤드 수,"public class Solution {
    public bool solution(int x) {
        return x % HSum(x) == 0;
    }
    
    int HSum(int x) {
        int sum = 0;
        
        while(x > 0) {
            sum += x % 10;
            x /= 10;
        }
        
        return sum;
    }
}",,2023. 8. 25,11,1
2023. 8. 25 오후 3:13:42,임규한,AI,13 - 콜라츠 추측,"def solution(num):
    cnt = 0
    while (num != 1):
        if num%2 == 0:
            num = num/2
            cnt += 1
        elif num%2 == 1:
            num = num*3+1
            cnt += 1
    if cnt > 500:
        return -1
    return cnt",,2023. 8. 25,13,1
2023. 8. 25 오후 3:14:20,이혜리,AI,104 - 배달,"def solution(N, road, K):
    answer = 0
    # 2차 배열 할당
    r = [[-1 for i in range(N+1)]for j in range(N+1)]
    for i in range(N+1):
        r[i][i] = 0
    # 1차 간선 표시 
    for i,j,k in road:
      r[i][j] = k if r[i][j] == -1 else k if r[i][j] > k else r[i][j]
      r[j][i] = k if r[j][i] == -1 else k if r[j][i] > k else r[j][i]
        
    for k in range(1, len(r)):
      for i in range(1, len(r)):
          for j in range(1, len(r)):
              new_val = 0
              if r[1][j] != -1 and r[j][i] != -1:
                  new_val = r[1][j] + r[j][i]
                  if r[1][i] == -1:
                      r[1][i] = new_val
                  elif r[1][i] > new_val:
                      r[1][i] = new_val
                      

    for k in r:
        print(k)

    for i in r[1]:
      if i <= K and i != -1:
        answer += 1
        
    return answer",https://github.com/hyeleenotharry/Programmers/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv2/12978.%E2%80%85%EB%B0%B0%EB%8B%AC,2023. 8. 25,104,4
2023. 8. 25 오후 3:22:34,문현우,Unity,6 - x만큼 간격이 있는 n개의 숫자,"public class Solution {
    public long[] solution(int x, int n) {
        long[] answer = new long[n];
        for(int i = 0; i < n; i++)
            answer[i] = (long)x * (i+1);
        return answer;
    }
}",https://github.com/Munch310/Algorithm-Csharp/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12954.%E2%80%85x%EB%A7%8C%ED%81%BC%E2%80%85%EA%B0%84%EA%B2%A9%EC%9D%B4%E2%80%85%EC%9E%88%EB%8A%94%E2%80%85n%EA%B0%9C%EC%9D%98%E2%80%85%EC%88%AB%EC%9E%90,2023. 8. 25,6,1
2023. 8. 25 오후 3:22:36,김진환,Unity,26 - 문자열 다루기 기본,"public bool solution(string s)
        {
            if(s.Length != 4 && s.Length != 6)
                return false;
            for(int i = 0; i < s.Length; i++)
            {
                if (s[i] > '9')
                    return false;
            }
            return true;
        }",https://github.com/NewRound/AlgorithmKata.git,2023. 8. 25,26,1
2023. 8. 25 오후 3:30:54,정재호,Unity,25 - 부족한 금액 계산하기,"using System;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Linq;

class Solution
{
    public static long solution(long price, long money, long count)
    {
        long realMoney = money;
        long sum = 0;

        long answer = 0;

        for (int i = 1; i <= count; i++)
        {
            long bla = price * i;
            sum += bla;
            money -= bla;

            if (i == count)
            {
                if (money < 0)
                {
                    answer = sum - realMoney;
                    break;
                }
                else
                {
                    answer = 0;
                    break;
                }
            }
        }

        return answer;
    }
}",,2023. 8. 25,25,1
2023. 8. 25 오후 3:37:43,기현빈,Unity,12 - 두 정수 사이의 합,"public class Solution {
    public long solution(int a, int b) {
        long answer = 0;
        long d = (a - b > 0) ? a - b : b - a;
        long s = a + b;
        
        answer = s * (d + 1) / 2;
        
        return answer;
    }
}",,2023. 8. 25,12,1
2023. 8. 25 오후 3:37:46,김진환,Unity,27 - 행렬의 덧셈,"public int[,] solution(int[,] arr1, int[,] arr2)
        {
            int[,] answer = new int[arr1.GetLength(0), arr1.GetLength(1)];

            for(int i = 0; i < arr1.GetLength(1); i++)
            {
                for(int j = 0; j < arr2.GetLength(0); j++)
                {
                    answer[i, j] = arr1[i, j] + arr2[i, j];
                }
            }

            return answer;
        }",https://github.com/NewRound/AlgorithmKata.git,2023. 8. 25,27,1
2023. 8. 25 오후 3:44:06,김진환,Unity,28 - 직사각형 별찍기,"public static void Main()
        {
            String[] s;

            Console.Clear();
            s = Console.ReadLine().Split(' ');

            int a = Int32.Parse(s[0]);
            int b = Int32.Parse(s[1]);
            for (int i = 0; i < b ; i++)
            {
                for (int j = 0; j < a ; j++)
                {
                    Console.Write('*');
                }
                Console.WriteLine();
            }
        }",https://github.com/NewRound/AlgorithmKata.git,2023. 8. 25,28,1
2023. 8. 25 오후 3:44:33,이솔,AI,7 - 자연수 뒤집어 배열로 만들기,"def solution(n):
    answer = []
    
    for i in range(1,len(str(n))+1):
        num = n % 10
        n = n // 10
        answer.append(num)
                   
    return answer",,2023. 8. 25,7,1
2023. 8. 25 오후 3:45:00,이솔,AI,8 - 문자열을 정수로 바꾸기,"def solution(s):
    return int(s)",,2023. 8. 25,8,1
2023. 8. 25 오후 3:45:29,이솔,AI,9 - 정수 제곱근 판별,"def solution(n):
    num = n ** 0.5
    return (num+1)**2 if not num % 1 else -1",,2023. 8. 25,9,1
2023. 8. 25 오후 3:47:06,정재호,Unity,26 - 문자열 다루기 기본,"using System;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Linq;

public class Solution
{
    public bool solution(string s)
    {
        bool answer = true;

        string sLower = s.ToLower();
        char[] chars = sLower.ToCharArray();

        string sUpper = s.ToUpper();
        char[] upperChars = sUpper.ToCharArray();

        if (4== chars.Length || chars.Length == 6)
        {
            for (int i = 0; i < chars.Length; i++)
            {
                if (chars[i] != upperChars[i])
                {
                    answer = false;
                    break;
                }
            }
        }
        else
        {
            answer = false;
        }
        
        return answer;
    }
}",,2023. 8. 25,26,1
2023. 8. 25 오후 3:57:08,배인호,Unity,7 - 자연수 뒤집어 배열로 만들기,"using System;

public class Solution
{
    public long solution(long n)
    {
        long answer = 0;
        long tmpNum = 0;
        int length = (int)(Math.Log10(n) + 1);
        long[] compareNum = new long[length];

        for (int i = 1; i <= length; i++)
        {
            tmpNum = (n % Pow(i));

            if (i != 1)
            {
                tmpNum = (tmpNum - (tmpNum % Pow(i - 1))) / Pow(i - 1);
            }

            compareNum[i - 1] = tmpNum;
        }

        for (int i = 0; i < length; i++)
        {
            for (int j = i + 1; j < length; j++)
            {
                if (compareNum[i] < compareNum[j])
                {
                    tmpNum = compareNum[i];
                    compareNum[i] = compareNum[j];
                    compareNum[j] = tmpNum;
                }
            }

            answer += (compareNum[i] * Pow(length - i - 1));
        }

        return answer;
    }

    public long Pow(int i)
    {
        return (long)Math.Pow(10, i);
    }
}
",https://github.com/cutlake2000/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12933.%E2%80%85%EC%A0%95%EC%88%98%E2%80%85%EB%82%B4%EB%A6%BC%EC%B0%A8%EC%88%9C%EC%9C%BC%EB%A1%9C%E2%80%85%EB%B0%B0%EC%B9%98%ED%95%98%EA%B8%B0,2023. 8. 25,7,1
2023. 8. 25 오후 3:58:59,강성호,Unity,34 - 최소직사각형,"
using System;

public class Solution {
    public int solution(int[,] sizes) {
        int answer = 0;
            int rmax = 0;
            int cmax = 0;
            for(int i = 0; i < sizes.GetLength(0); i++)
            {
                int row = sizes[i, 1];
                int col = sizes[i, 0];

                if(col < row)
                {
                    row = sizes[i, 0];
                    col = sizes[i, 1];
                }
                rmax = Math.Max(rmax, row);
                cmax = Math.Max(cmax, col);
            }
            answer = rmax * cmax;
            return answer;
    }
}",,2023. 8. 25,34,2
2023. 8. 25 오후 4:01:26,배인호,Unity,10 - 정수 내림차순으로 배치하기,"using System;

public class Solution
{
    public long solution(long n)
    {
        long answer = 0;
        long tmpNum = 0;
        int length = (int)(Math.Log10(n) + 1);
        long[] compareNum = new long[length];

        for (int i = 1; i <= length; i++)
        {
            tmpNum = (n % Pow(i));

            if (i != 1)
            {
                tmpNum = (tmpNum - (tmpNum % Pow(i - 1))) / Pow(i - 1);
            }

            compareNum[i - 1] = tmpNum;
        }

        for (int i = 0; i < length; i++)
        {
            for (int j = i + 1; j < length; j++)
            {
                if (compareNum[i] < compareNum[j])
                {
                    tmpNum = compareNum[i];
                    compareNum[i] = compareNum[j];
                    compareNum[j] = tmpNum;
                }
            }

            answer += (compareNum[i] * Pow(length - i - 1));
        }

        return answer;
    }

    public long Pow(int i)
    {
        return (long)Math.Pow(10, i);
    }
}
",https://github.com/cutlake2000/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12933.%E2%80%85%EC%A0%95%EC%88%98%E2%80%85%EB%82%B4%EB%A6%BC%EC%B0%A8%EC%88%9C%EC%9C%BC%EB%A1%9C%E2%80%85%EB%B0%B0%EC%B9%98%ED%95%98%EA%B8%B0,2023. 8. 25,10,1
2023. 8. 25 오후 4:07:40,임규한,AI,14 - 서울에서 김서방 찾기,"def solution(seoul):
    for i in range(len(seoul)):
        if seoul[i] == ""Kim"":
            answer = i
            
    return ('김서방은 ' + str(answer) + '에 있다')
    ",,2023. 8. 25,14,1
2023. 8. 25 오후 4:08:10,배인호,Unity,7 - 자연수 뒤집어 배열로 만들기,"using System;

public class Solution
{
    public int[] solution(long n)
    {
        int length = (int)(Math.Log10(n) + 1);
        int[] answer = new int[length];
        long num = 0;

        for (int i = 1; i <= length; i++)
        {
            num = (n % Pow(i));

            if (i != 1)
            {
                num = (num - (num % Pow(i - 1))) / Pow(i - 1);
            }

            answer[i - 1] = (int)num;
        }
        return answer;
    }

    public long Pow(int i)
    {
        return (long)Math.Pow(10, i);
    }
}
",https://github.com/cutlake2000/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12932.%E2%80%85%EC%9E%90%EC%97%B0%EC%88%98%E2%80%85%EB%92%A4%EC%A7%91%EC%96%B4%E2%80%85%EB%B0%B0%EC%97%B4%EB%A1%9C%E2%80%85%EB%A7%8C%EB%93%A4%EA%B8%B0,2023. 8. 25,7,1
2023. 8. 25 오후 4:12:36,김해찬,Unity,58 - 햄버거 만들기,"using System;
using System.Collections;
using System.Collections.Generic;

public class Solution {
    public int solution(int[] ingredient) {        
        int answer = 0;
        Stack<int> stk = new Stack<int>();
        int[] pattern = new int[4]{ 1, 2, 3, 1 };
        
        int stacked = 0;
        
        for(int i = 0; i < ingredient.Length; i++)
        {            
            stk.Push(ingredient[i]);
            
            switch(stk.Peek())
            {
                case 1:
                    if(stacked == 3)
                    {
                        stacked++;
                    }
                    else if(stacked == 0)
                    {
                        stacked++;
                    }
                    else
                    {
                        stacked = 1;
                    }
                    break;
                case 2:
                    if(stacked == 1)
                    {
                        stacked++;
                    }
                    else
                    {
                        stacked = 0;
                    }
                    break;
                case 3:
                    if(stacked == 2)
                    {
                        stacked++;
                    }
                    else
                    {
                        stacked = 0;
                    }
                    break;
                    
            }
            
            if(stacked == 4)
            {
                answer++;
                stacked = 0;
                
                for(int j = 0; j < 4; j++)
                {
                    if(stk.Count != 0)
                    {
                        stk.Pop();
                    }
                }
                
                if(stk.Count != 0)
                {
                    int temp = stk.Pop();
                    
                    if(temp == 2 && stk.Count != 0 && stk.Peek() == 1)
                    {
                        stacked = 2;
                    }
                    else if(temp == 1)
                    {
                        stacked = 1;
                    }
                    
                    stk.Push(temp);
                }
            }
        }
        
        return answer;
    }
}",,2023. 8. 25,58,3
2023. 8. 25 오후 4:27:40,심명희,AI,10 - 정수 내림차순으로 배치하기,"def solution(n):
    answer = str(n)
    answer = ''.join(sorted(answer, reverse=True))
    return int(answer)
",,2023. 8. 25,10,1
2023. 8. 25 오후 4:29:14,배인호,Unity,8 - 문자열을 정수로 바꾸기,"using System;

public class Solution
{
    public int solution(string s)
    {
        int answer = 0;
        int tmpNum = 0;
        int lenght = s.Length;
        char firstNum = s.ToCharArray()[0];

        if (!(49 <= firstNum && firstNum <= 57))
        {
            tmpNum++;
        }

        for (int i = tmpNum += answer; i < lenght; i++)
        {
            answer += (s.ToCharArray()[i] - 48) * (int)Math.Pow(10, lenght - i - 1);
        }

        if (firstNum == '-')
        {
            answer *= -1;
        }

        return answer;
    }
}
",https://github.com/cutlake2000/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12925.%E2%80%85%EB%AC%B8%EC%9E%90%EC%97%B4%EC%9D%84%E2%80%85%EC%A0%95%EC%88%98%EB%A1%9C%E2%80%85%EB%B0%94%EA%BE%B8%EA%B8%B0,2023. 8. 25,8,1
2023. 8. 25 오후 4:30:26,김광수,Unity,43 - 명예의 전당 (1),"using System;
using System.Collections.Generic;

public class Solution 
{
    public int[] solution(int k, int[] score) 
    {
        // 저번 명전 리스트 + 이번값 해서 3개만 저장
        List<int> list = new List<int>();
        int[] answer = new int[score.Length];
        
        // k가 score보다 긴 경우를 방지
        if (k > score.Length)
        { 
            k = score.Length;
        }
        
        // k일까지는 전부 명전에 오름
        for(int i=0; i< k; i++)
        {
            list.Add(score[i]);
            list.Sort();
            answer[i] = list[0];
        }
        
        // k일 이후에는
        for(int i = k; i< score.Length; i++)
        {
            // 오늘의 점수가 최소값보다 크다면 리스트를 갱신
            if (score[i] > list[0])
            {
                list.RemoveAt(0);
                list.Add(score[i]);
                list.Sort();
            }
            
            // 오늘의 점수 발표
            answer[i] = list[0];  
        }
     
        return answer;
    }
}",https://github.com/kksoo0131/Study/commit/36ce7f7ddc0adcc81d0fa57baabb19c6c96ef490#diff-3a71b89ffdea943628a44c3f8535435e2ab8cdcaaa3fd1108c04733af580df60,2023. 8. 25,43,2
2023. 8. 25 오후 4:45:02,배인호,Unity,9 - 정수 제곱근 판별,"using System;

public class Solution
{
    public long solution(double n)
    {
        long answer = 0;
        double tmpNum = Math.Sqrt(n);

        if (tmpNum % 1 == 0)
        {
            answer = (long)Math.Pow(tmpNum + 1, 2);
        }
        else
        {
            answer = -1;
        }
        return answer;
    }
}
",https://github.com/cutlake2000/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12934.%E2%80%85%EC%A0%95%EC%88%98%E2%80%85%EC%A0%9C%EA%B3%B1%EA%B7%BC%E2%80%85%ED%8C%90%EB%B3%84,2023. 8. 25,9,1
2023. 8. 25 오후 4:47:48,김광수,Unity,44 - 2016년,"public class Solution {
    public string solution(int a, int b) {
        //각 월의 1일이 무슨 요일인지 계산
        // 1월 금요일 (31 % 7 = 3)
        // 2월 월요일 (29 % 7 = 1)
        // 3월 화요일 
        // 4월 금요일 (30 % 7 = 2)
        // 5월 일요일 
        // 6월 수요일
        // 7월 금요일
        // 8월 월요일
        // 9월 목요일
        // 10월 토요일
        // 11월 화요일
        // 12월 목요일
        
        
        string[][] list = new string[13][];
        // 13인 이유는 인덱스를 맞추려고
        
        list[1] = new string[7] {""FRI"", ""SAT"", ""SUN"", ""MON"", ""TUE"", ""WED"", ""THU""};
        list[2] = new string[7] {""MON"", ""TUE"", ""WED"", ""THU"", ""FRI"", ""SAT"", ""SUN""};
        list[3] = new string[7] {""TUE"", ""WED"", ""THU"", ""FRI"", ""SAT"", ""SUN"", ""MON""};
        list[4] = new string[7] {""FRI"", ""SAT"", ""SUN"", ""MON"", ""TUE"", ""WED"", ""THU""};
        list[5] = new string[7] {""SUN"", ""MON"", ""TUE"", ""WED"", ""THU"", ""FRI"", ""SAT""};
        list[6] = new string[7] {""WED"", ""THU"", ""FRI"", ""SAT"", ""SUN"", ""MON"", ""TUE""};
        list[7] = new string[7] {""FRI"", ""SAT"", ""SUN"", ""MON"", ""TUE"", ""WED"", ""THU""};
        list[8] = new string[7] {""MON"", ""TUE"", ""WED"", ""THU"", ""FRI"", ""SAT"", ""SUN""};
        list[9] = new string[7] {""THU"", ""FRI"", ""SAT"", ""SUN"", ""MON"", ""TUE"", ""WED""};
        list[10] = new string[7] {""SAT"", ""SUN"", ""MON"", ""TUE"", ""WED"", ""THU"",""FRI""};
        list[11] = new string[7] {""TUE"", ""WED"", ""THU"", ""FRI"", ""SAT"", ""SUN"", ""MON""};
        list[12] = new string[7] {""THU"", ""FRI"", ""SAT"", ""SUN"", ""MON"", ""TUE"", ""WED""};
        
        return list[a][(b-1)% 7];
    }
}",https://github.com/kksoo0131/Study/commit/478f88f7d9e33029ffb155e3b43f77cb136d1db7,2023. 8. 25,44,2
2023. 8. 25 오후 4:49:17,강성호,Unity,35 - 시저 암호,"public class Solution {
    public string solution(string s, int n) {
      string answer = """";
			char Cval;
			int Ival = 0;
			int ori = 0;
			for(int i = 0; i < s.Length; i++)
			{
				if (s[i] != ' ')
				{
					ori = s[i];
					Ival = s[i] + n;
					if(Ival > 122)
					{
						Ival -= 26;
					}
					 if(ori > 64 && ori < 91 && 116 > Ival && Ival > 90)
					{
						Ival -= 26;
					}
					Cval = (char)Ival;
					answer += Cval.ToString();
					continue;
				}
				answer += s[i];
			}
			return answer;
    }
}",,2023. 8. 25,35,2
2023. 8. 25 오후 4:53:54,김광수,Unity,45 - 카드 뭉치,"using System;

public class Solution {
    public string solution(string[] cards1, string[] cards2, string[] goal) {
        // 목표단어를 만들수 있는가?
        // 각 cards뭉치 내의 카드의 순서를 지켜야된다.
        // cards에는 중복이없음
        int cards1Index = 0;
        int cards2Index = 0;
        
        foreach(string s in goal)
        {
            if(cards1Index < cards1.Length && cards1[cards1Index] == s)
            {
                cards1Index++;
            }
            else if(cards2Index < cards2.Length && cards2[cards2Index] ==s)
            {
                cards2Index++;    
            }
            else
            {
                return ""No"";
            }    
            
        }
        return ""Yes"";
    }
}",https://github.com/kksoo0131/Study/commit/02413044f0718cddcc9ba11d7f547fa45fc771bd#diff-4e303a4318f4e02094ca4f6580aef171ba3676a3a0fae313762ca2b657ec13c1,2023. 8. 25,45,2
2023. 8. 25 오후 4:57:09,김대민,Unity,31 - 이상한 문자 만들기,"#include <string>
#include <vector>

using namespace std;

string solution(string s) {
    string answer = """";
    int count = 0;
    for(int i = 0; i < s.size(); ++i)
    {
        if(s[i] == ' ')
        { 
            count = 0;
            continue;
        }
        
        if(count % 2 == 0)
            s[i] = std::toupper(s[i]);
        else
            s[i] = std::tolower(s[i]);
        ++count;
    }
    answer = s;
    return answer;
}",https://github.com/KimDaeMins/CodingTest/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12930.%E2%80%85%EC%9D%B4%EC%83%81%ED%95%9C%E2%80%85%EB%AC%B8%EC%9E%90%E2%80%85%EB%A7%8C%EB%93%A4%EA%B8%B0/%EC%9D%B4%EC%83%81%ED%95%9C%E2%80%85%EB%AC%B8%EC%9E%90%E2%80%85%EB%A7%8C%EB%93%A4%EA%B8%B0.cpp,2023. 8. 25,31,2
2023. 8. 25 오후 4:57:32,김대민,Unity,32 - 삼총사,"#include <string>
#include <vector>
#include <algorithm>
#include <bits/stdc++.h>

using namespace std;
int combi(int start, vector<int> num, vector<int> b, int n, int k)
{
    if (b.size() == k)
    {
        if (num[b[0]] + num[b[1]] + num[b[2]] == 0)
            return 1;
        return 0;
    }

    int number = 0;
    for (int i = start + 1; i < n; i++)
    {
        b.push_back(i);
        number += combi(i, num, b, n, k);
        b.pop_back();
    }
    return number;
}

int solution(vector<int> number) {
    int answer = 0;
    vector<int> b;
    answer = combi(-1, number, b, number.size(), 3);
    return answer;
}",https://github.com/KimDaeMins/CodingTest/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/131705.%E2%80%85%EC%82%BC%EC%B4%9D%EC%82%AC/%EC%82%BC%EC%B4%9D%EC%82%AC.cpp,2023. 8. 25,32,2
2023. 8. 25 오후 4:58:05,김대민,Unity,33 - 크기가 작은 부분,"#include <string>
#include <vector>

using namespace std;

int solution(string t, string p) {
    int answer = 0;
    for(int i =0 ; i < t.size() - p.size() + 1; ++i)
    {
        string snum = t.substr(i, p.size());
        unsigned long long num = stoull(snum);
        unsigned long long pnum = stoull(p);
        if(num <= pnum)
        {
            answer += 1;
        }
        
    }
    return answer;
}",https://github.com/KimDaeMins/CodingTest/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/unrated/147355.%E2%80%85%ED%81%AC%EA%B8%B0%EA%B0%80%E2%80%85%EC%9E%91%EC%9D%80%E2%80%85%EB%B6%80%EB%B6%84%EB%AC%B8%EC%9E%90%EC%97%B4/%ED%81%AC%EA%B8%B0%EA%B0%80%E2%80%85%EC%9E%91%EC%9D%80%E2%80%85%EB%B6%80%EB%B6%84%EB%AC%B8%EC%9E%90%EC%97%B4.cpp,2023. 8. 25,33,2
2023. 8. 25 오후 4:58:32,김대민,Unity,34 - 최소직사각형,"#include <string>
#include <vector>

using namespace std;

int solution(vector<vector<int>> sizes) {
    int answer = 0;
    
    //가로는 긴것중에 긴거
    //세로는 짧은것중에 긴거.
    
    int g = 0;
    int s = 0;
    
    for(auto& vec : sizes)
    {
        int Long = max(vec[0], vec[1]);
        int Short = min(vec[0], vec[1]);
        
        g = max(g, Long);
        s = max(s, Short);
    }
    answer = g * s;
    return answer;
}",https://github.com/KimDaeMins/CodingTest/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/86491.%E2%80%85%EC%B5%9C%EC%86%8C%EC%A7%81%EC%82%AC%EA%B0%81%ED%98%95/%EC%B5%9C%EC%86%8C%EC%A7%81%EC%82%AC%EA%B0%81%ED%98%95.cpp,2023. 8. 25,34,2
2023. 8. 25 오후 4:59:01,김대민,Unity,35 - 시저 암호,"#include <string>
#include <vector>

using namespace std;

string solution(string s, int n) {
    string answer = """";
    
    for(int i = 0 ; i < s.size() ; ++i)
    {
        if((isupper(s[i]) && !(isupper(s[i] += n)))
           || (islower(s[i]) && !(islower(s[i] += n))))
        {
            s[i] -= 26;
        }
    }
    answer = s;
    return answer;
}",https://github.com/KimDaeMins/CodingTest/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12926.%E2%80%85%EC%8B%9C%EC%A0%80%E2%80%85%EC%95%94%ED%98%B8/%EC%8B%9C%EC%A0%80%E2%80%85%EC%95%94%ED%98%B8.cpp,2023. 8. 25,35,2
2023. 8. 25 오후 4:59:23,김대민,Unity,36 - 숫자 문자열과 영단어,"#include <string>
#include <vector>

using namespace std;

int solution(string s) {
    int answer = 0;
    //1.앞에서부터 읽는다
    //2.영단어일때 뭔지 확인한다
    //3.지운다
    string temp = """";
    for(int i = 0; i < s.size(); )
    {
        if(isdigit(s[i]))
        {
            temp += s[i];
            ++i;
        }
        else if(s[i] == 'z')
        {
            temp += '0';
            i += 4;
        }
          else if(s[i] == 'o')
        {
            temp += '1';
              i += 3;
        }
          else if(s[i] == 't')
        {
            if(s[i + 1] == 'w')
            {
              temp += '2';
                i+=3;
            }
              else
              {
                  temp += '3';
                  i+=5;
              }
        }
          else if(s[i] == 'f')
        {
            if(s[i+1] == 'o')
            {
                temp += '4';
            }
              else 
              {
                  temp += '5';
              }
              i += 4;
        }
        else if(s[i] == 's')
        {
             if(s[i + 1] == 'i')
            {
              temp += '6';
                i+=3;
            }
              else
              {
                  temp += '7';
                  i+=5;
              }
        }
        else if(s[i] == 'e')
        {
            temp += '8';
            i+=5;
        }
        else if(s[i] == 'n')
        {
            temp += '9';
            i+=4;
        }
    }
    answer = stoi(temp);
    return answer;
}",https://github.com/KimDaeMins/CodingTest/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/81301.%E2%80%85%EC%88%AB%EC%9E%90%E2%80%85%EB%AC%B8%EC%9E%90%EC%97%B4%EA%B3%BC%E2%80%85%EC%98%81%EB%8B%A8%EC%96%B4/%EC%88%AB%EC%9E%90%E2%80%85%EB%AC%B8%EC%9E%90%EC%97%B4%EA%B3%BC%E2%80%85%EC%98%81%EB%8B%A8%EC%96%B4.cpp,2023. 8. 25,36,2
2023. 8. 25 오후 4:59:45,김대민,Unity,37 - 문자열 내 마음대로 정렬하기,"#include <string>
#include <vector>
#include <queue>
#include <map>
#include <algorithm>
using namespace std;

vector<string> solution(vector<string> strings, int n) {
    vector<string> answer;
    map<char, priority_queue<string, vector<string>, greater<string>>> temp;
    for(int i = 0; i < strings.size(); ++i)
    {
        temp[strings[i][n]].push(strings[i]);
    }
    for(auto& pq : temp)
    {
        while(!pq.second.empty())
        {
            answer.push_back(pq.second.top());
            pq.second.pop();
        }
    }
    return answer;
}",https://github.com/KimDaeMins/CodingTest/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12915.%E2%80%85%EB%AC%B8%EC%9E%90%EC%97%B4%E2%80%85%EB%82%B4%E2%80%85%EB%A7%88%EC%9D%8C%EB%8C%80%EB%A1%9C%E2%80%85%EC%A0%95%EB%A0%AC%ED%95%98%EA%B8%B0/%EB%AC%B8%EC%9E%90%EC%97%B4%E2%80%85%EB%82%B4%E2%80%85%EB%A7%88%EC%9D%8C%EB%8C%80%EB%A1%9C%E2%80%85%EC%A0%95%EB%A0%AC%ED%95%98%EA%B8%B0.cpp,2023. 8. 25,37,2
2023. 8. 25 오후 5:00:19,김대민,Unity,38 - K번째수정렬,"
#include <functional>
#include <string>
#include <vector>
#include <algorithm>
using namespace std;

typedef struct segment_node {
    int begin, end;
    segment_node* left;
    segment_node* right;
    vector<int> segmentation_array;
};

function<void(vector<int> &, vector<vector<int>> &, vector<int> &)> segment_tree = [](vector<int> &array, vector<vector<int>> &command, vector<int> &answer)
{
    function<bool(const int &, const int &)> cmp = [&](const int &a, const int &b) {
        return array[a] <= array[b];
    };
    vector<int> numbering(array.size(), 0);
    for (int i = 0; i < array.size(); i++) numbering[i] = i;

    int range_begin, range_end, obt, cnt, temp;
    function<void(segment_node*)> segment_search = [&](segment_node* node)
    {
        temp = (node->end - node->begin + 1) / 2;

        if (node->begin == node->end) {
            answer.push_back(array[node->segmentation_array[0]]);
            return;
        }
        else if (node->begin <= range_begin && range_end <= node->begin + temp - 1) {
            if (node->left == NULL) {
                segment_node *left_node;

                left_node = new segment_node;
                left_node->begin = node->begin;
                left_node->end = node->begin + temp - 1;
                left_node->left = NULL;
                left_node->right = NULL;
                left_node->segmentation_array.assign(numbering.begin() + left_node->begin, numbering.begin() + left_node->end + 1);
                sort(left_node->segmentation_array.begin(), left_node->segmentation_array.end(), cmp);
                node->left = left_node;
            }
            segment_search(node->left);
        }
        else if (node->begin + temp <= range_begin && range_end <= node->end) {
            if (node->right == NULL) {
                segment_node *right_node;

                right_node = new segment_node;
                right_node->begin = node->begin + temp;
                right_node->end = node->end;
                right_node->left = NULL;
                right_node->right = NULL;
                right_node->segmentation_array.assign(numbering.begin() + right_node->begin, numbering.begin() + right_node->end + 1);
                sort(right_node->segmentation_array.begin(), right_node->segmentation_array.end(), cmp);
                node->right = right_node;
            }

            segment_search(node->right);
        }
        else
        {
            cnt = 0;
            for (auto &x : node->segmentation_array) {
                if (range_begin <= x && x <= range_end) {
                    cnt++;

                    if (cnt == obt) {
                        answer.push_back(array[x]);
                        return;
                    }
                }
            }
        }
    };

    segment_node* root;
    root = new segment_node;
    root->begin = 0;
    root->end = numbering.size() - 1;
    root->left = NULL;
    root->right = NULL;
    root->segmentation_array = numbering;
    sort(root->segmentation_array.begin(), root->segmentation_array.end(), cmp);

    for (auto &x : command) {
        range_begin = x[0] - 1;
        range_end = x[1] - 1;
        obt = x[2];
        segment_search(root);
    }
};

vector<int> solution(vector<int> array, vector<vector<int>> commands) 
{
    vector<int> answer;//(commands.size(), 0);
    vector<pair<int,int>> arr(array.size(), pair<int,int>());

    for(int i = 0 ; i < array.size() ; i++){
        arr[i].first = array[i];
        arr[i].second = i + 1;
    }

    segment_tree(array, commands, answer);

    return answer;
}",https://github.com/KimDaeMins/CodingTest/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/42748.%E2%80%85K%EB%B2%88%EC%A7%B8%EC%88%98/K%EB%B2%88%EC%A7%B8%EC%88%98.cpp,2023. 8. 25,38,2
2023. 8. 25 오후 5:00:45,김대민,Unity,39 - 두 개 뽑아서 더하기,"#include <string>
#include <vector>

using namespace std;
//조합문제 0~199
bool tm[200] = {};
void combi(vector<int>num, int start, vector<int> a, int n)
{
    if(a.size() == 2)
    {
        tm[num[a[0]] + num[a[1]]] = true;
        return;
    }
    
    for(int i = start + 1; i < n; ++i)
    {
        a.push_back(i);
        combi(num, i, a, n);
        a.pop_back();
    }
    return;
}
vector<int> solution(vector<int> numbers) {
    vector<int> answer;
    vector<int> a;
    combi(numbers, -1,a, numbers.size());
    
    for(int i =0; i < 200; ++i)
    {
        if(tm[i])
            answer.push_back(i);
    }
    return answer;
}",https://github.com/KimDaeMins/CodingTest/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/68644.%E2%80%85%EB%91%90%E2%80%85%EA%B0%9C%E2%80%85%EB%BD%91%EC%95%84%EC%84%9C%E2%80%85%EB%8D%94%ED%95%98%EA%B8%B0/%EB%91%90%E2%80%85%EA%B0%9C%E2%80%85%EB%BD%91%EC%95%84%EC%84%9C%E2%80%85%EB%8D%94%ED%95%98%EA%B8%B0.cpp,2023. 8. 25,39,2
2023. 8. 25 오후 5:01:10,김대민,Unity,40 - 가장 가까운 같은 글자,"#include <string>
#include <vector>
#include <algorithm>
using namespace std;

vector<int> solution(string s) {
    vector<int> answer;
    int arr['z' - 'a' + 1];
    std::fill(arr, arr + ('z' - 'a' + 1), -1);
    
    for(int i = 0; i < s.size(); ++i)
    {
        if(arr[s[i] - 'a'] == -1)
            answer.push_back(-1);
        else
           answer.push_back( i - arr[s[i] - 'a']);
        
        arr[s[i] - 'a'] = i;
    }
    return answer;
}",https://github.com/KimDaeMins/CodingTest/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/unrated/142086.%E2%80%85%EA%B0%80%EC%9E%A5%E2%80%85%EA%B0%80%EA%B9%8C%EC%9A%B4%E2%80%85%EA%B0%99%EC%9D%80%E2%80%85%EA%B8%80%EC%9E%90/%EA%B0%80%EC%9E%A5%E2%80%85%EA%B0%80%EA%B9%8C%EC%9A%B4%E2%80%85%EA%B0%99%EC%9D%80%E2%80%85%EA%B8%80%EC%9E%90.cpp,2023. 8. 25,40,2
2023. 8. 25 오후 5:01:30,김대민,Unity,41 - 푸드 파이트 대회,"#include <string>
#include <vector>
#include <algorithm>
using namespace std;

string solution(vector<int> food) {
    string answer = ""0"";
    
    
    for(int i = food.size() - 1; i > 0; --i)
    {
        int insert = food[i] / 2;
        char ch = *to_string(i).c_str();
        string a(insert * 2, *to_string(i).c_str());

        answer = a.substr(0, insert) + answer + a.substr(insert);
    }
    return answer;
}",https://github.com/KimDaeMins/CodingTest/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/unrated/134240.%E2%80%85%ED%91%B8%EB%93%9C%E2%80%85%ED%8C%8C%EC%9D%B4%ED%8A%B8%E2%80%85%EB%8C%80%ED%9A%8C/%ED%91%B8%EB%93%9C%E2%80%85%ED%8C%8C%EC%9D%B4%ED%8A%B8%E2%80%85%EB%8C%80%ED%9A%8C.cpp,2023. 8. 25,41,2
2023. 8. 25 오후 5:01:52,김대민,Unity,42 - 콜라 문제,"#include <string>
#include <vector>

using namespace std;

int solution(int a, int b, int n) {
    int answer = 0;
    
    while(n >= a)
    {
        int reward = n / a * b;
        n = reward + n % a;
        answer += reward;
    }
    return answer;
}",https://github.com/KimDaeMins/CodingTest/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/unrated/132267.%E2%80%85%EC%BD%9C%EB%9D%BC%E2%80%85%EB%AC%B8%EC%A0%9C/%EC%BD%9C%EB%9D%BC%E2%80%85%EB%AC%B8%EC%A0%9C.cpp,2023. 8. 25,42,2
2023. 8. 25 오후 5:02:14,김대민,Unity,43 - 명예의 전당 (1),"#include <string>
#include <vector>
#include <queue>
#include <algorithm>
using namespace std;

vector<int> solution(int k, vector<int> score) {
    vector<int> answer;
    priority_queue<int, vector<int>, greater<int>> pq;
    for(int i = 0; i < score.size(); ++i)
    {
        if(pq.size() < k)
        {
            pq.push(score[i]);
        }
        else if(pq.top() < score[i])
        {
            pq.pop();
            pq.push(score[i]);
        }
        answer.push_back(pq.top());
    }
    return answer;
}",https://github.com/KimDaeMins/CodingTest/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/unrated/138477.%E2%80%85%EB%AA%85%EC%98%88%EC%9D%98%E2%80%85%EC%A0%84%EB%8B%B9%E2%80%85%EF%BC%881%EF%BC%89/%EB%AA%85%EC%98%88%EC%9D%98%E2%80%85%EC%A0%84%EB%8B%B9%E2%80%85%EF%BC%881%EF%BC%89.cpp,2023. 8. 25,43,2
2023. 8. 25 오후 5:02:39,김대민,Unity,44 - 2016년,"#include <string>
#include <vector>

using namespace std;

string solution(int a, int b) {
    string answer = """";
    //1.윤년이뭔지
    //2.각 개월의 일수.
    int days[13] = {0, 31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31};
    int count = 0;
    for(int i = 1; i < a; ++i)
    {
        count += days[i];
    }
    count +=  b;
    string results[7] = {""THU"",""FRI"",""SAT"",""SUN"",""MON"",""TUE"",""WED""};
    answer = results[count % 7];
    return answer;
}",https://github.com/KimDaeMins/CodingTest/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12901.%E2%80%852016%EB%85%84/2016%EB%85%84.cpp,2023. 8. 25,44,2
2023. 8. 25 오후 5:03:08,김대민,Unity,45 - 카드 뭉치,"#include <string>
#include <vector>

using namespace std;

string solution(vector<string> cards1, vector<string> cards2, vector<string> goal) {
    string answer = ""Yes"";
    
    int aCount = 0;
    int bCount = 0;
    for(int i = 0; i < goal.size(); ++i)
    {
        if(cards1[aCount] == goal[i])
            ++aCount;
        else if(cards2[bCount] == goal[i])
            ++bCount;
        else
        {
            answer = ""No"";
            break;
        }
    }
    
    
    return answer;
}",https://github.com/KimDaeMins/CodingTest/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/unrated/159994.%E2%80%85%EC%B9%B4%EB%93%9C%E2%80%85%EB%AD%89%EC%B9%98/%EC%B9%B4%EB%93%9C%E2%80%85%EB%AD%89%EC%B9%98.cpp,2023. 8. 25,45,2
2023. 8. 25 오후 5:03:29,김대민,Unity,46 - 과일 장수,"#include <string>
#include <vector>
#include <algorithm>
using namespace std;

int solution(int k, int m, vector<int> score) {
    long answer = 0;
    vector<int> a(k + 1, 0);
    int count = 0;
    for (int b : score)
    {
        ++a[b];
        ++count;
    }

    int index = k;
    while (count >= m)
    {
        int c = m;
        while (a[index] > 0)
        {
            a[index] -= c;
            if (a[index] < 0)
            {
                c = -a[index];
            }
            else
            {
                c = m;
                answer += index * m;
                count -= m;
                if (count < m)
                    break;
            }
            while (a[index] <= 0)
            {
                --index;
            }
        }
    }
    return answer;
}",https://github.com/KimDaeMins/CodingTest/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/unrated/135808.%E2%80%85%EA%B3%BC%EC%9D%BC%E2%80%85%EC%9E%A5%EC%88%98/%EA%B3%BC%EC%9D%BC%E2%80%85%EC%9E%A5%EC%88%98.cpp,2023. 8. 25,46,2
2023. 8. 25 오후 5:03:59,김대민,Unity,47 - 모의고사완전탐색,"#include <string>
#include <vector>
#include <algorithm>
using namespace std;
//문제를 잘 읽자!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
vector<int> solution(vector<int> answers) {
    vector<int> answer;
    
    int a[5] = {1,2,3,4,5};
    int b[8] = {2,1,2,3,2,4,2,5};
    int c[10] = {3,3,1,1,2,2,4,4,5,5};
    int Correct[3] = {0, 0, 0};
    
    for(int i = 0; i < answers.size(); ++i)
    {
        if(a[i%5] == answers[i]) 
            ++Correct[0];
        if(b[i%8] == answers[i]) 
            ++Correct[1];
        if(c[i%10] == answers[i])
            ++Correct[2];
    }
    
    int max = *max_element(Correct, Correct+3);
    
    for(int i = 0; i < 3; ++i)
    {
        if(Correct[i] == max) 
            answer.push_back(i + 1);
    }
    return answer;
}",https://github.com/KimDaeMins/CodingTest/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/42840.%E2%80%85%EB%AA%A8%EC%9D%98%EA%B3%A0%EC%82%AC/%EB%AA%A8%EC%9D%98%EA%B3%A0%EC%82%AC.cpp,2023. 8. 25,47,2
2023. 8. 25 오후 5:05:40,김대민,Unity,48 - 소수 만들기,"#include <vector>
#include <iostream>
using namespace std;

bool isPrime(int num) {
if (num <= 1) {
return false;
}
if (num <= 3) {
    return true;
}

if (num % 2 == 0 || num % 3 == 0) {
    return false;
}

for (int i = 5; i * i <= num; i += 6) {
    if (num % i == 0 || num % (i + 2) == 0) {
        return false;
    }
}

return true;
}

int combi(vector<int> nums, int start, vector<int> a, int n)
{
    if(a.size()  == 3)
    {
        if(isPrime(nums[a[0]] + nums[a[1]] + nums[a[2]]))
            return 1;
        return 0;
    }
    int answer = 0;
    for(int i = start + 1; i < n; ++i)
    {
        a.push_back(i);
        answer += combi(nums, i, a, n);
        a.pop_back();
    }
    return answer;
}
int solution(vector<int> nums) {
    int answer = -1;
    vector<int> a; 
    answer = combi(nums, -1, a, nums.size());
    
    return answer;
}",https://github.com/KimDaeMins/CodingTest/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12977.%E2%80%85%EC%86%8C%EC%88%98%E2%80%85%EB%A7%8C%EB%93%A4%EA%B8%B0/%EC%86%8C%EC%88%98%E2%80%85%EB%A7%8C%EB%93%A4%EA%B8%B0.cpp,2023. 8. 25,48,2
2023. 8. 25 오후 5:05:49,송승훈,Unity,6 - x만큼 간격이 있는 n개의 숫자,"public class Solution {
    public long[] solution(int x, int n) {
        
        long[] answer = new long[n] ;
        
        for(long i = 0  ;  i < n;i++)
        {
            answer[i] = (i+1)*x;
            
        }
        return answer;
    }
}",https://github.com/DoDokang318/CodeKata.git,2023. 8. 25,6,1
2023. 8. 25 오후 5:06:09,김대민,Unity,49 - 덧칠하기,"#include <string>
#include <vector>

using namespace std;

int solution(int n, int m, vector<int> section) {
    int answer = 1;
    //빈공간의 섹션이 있잖아.
    //빈공간~ + 4까지는 칠해진다고
    
    int nowRoller = section[0];
    for(int i = 1; i < section.size(); i++)
    {
        if(section[i] >= nowRoller + m)
        {
            nowRoller = section[i];
            ++answer;
        }
    }
    
    return answer;
}",https://github.com/KimDaeMins/CodingTest/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/unrated/161989.%E2%80%85%EB%8D%A7%EC%B9%A0%ED%95%98%EA%B8%B0/%EB%8D%A7%EC%B9%A0%ED%95%98%EA%B8%B0.cpp,2023. 8. 25,49,2
2023. 8. 25 오후 5:06:36,김진환,Unity,29 - 최대공약수와 최소공배수,"public int[] solution(int n, int m)
        {
            // 현재 9,13,15,16 안됨  =>  공배수는 long으로 바꿔보자
            // 아직 9, 15안됨
            //int[] answer = new int[2];
            //int min = 0;
            //int max = 0;

            //if(n > m)
            //{
            //    int temp = n;
            //    n = m;
            //    m = temp;
            //}

            //List<int> mList = new List<int>();

            //if (m % n == 0)
            //{
            //    min = n;
            //    max = m;
            //}
            //else
            //{
            //    for(int i = 1; i * i <= m; i++)
            //    {
            //        if (m % i == 0)
            //        {
            //            mList.Add(i);
            //        }
            //    }
            //    mList.Add(m);
            //    for(int i = mList.Count - 1; i >= 0; i--)
            //    {
            //        if (n % mList[i] == 0)
            //        {
            //            min = mList[i];
            //            break;
            //        }
            //    }
            //    max = (m * n) / min;
            //}

            //answer[0] = min;
            //answer[1] = max;
            //return answer;
            // -------------------------------------------------------

            int[] answer = new int[2];
            int min;
            int max;

            //최대공약수 -> 유클리드 호제법 gcd(n, m) = gcd(m, n%m)
            // https://www.youtube.com/watch?v=TxdljAFjTNw
            min = gcd(n, m);
            //최소공배수 -> 두수의 곱 / 최대 공약수
            max = (n * m) / min;

            answer[0] = min;
            answer[1] = max;
            return answer;
        }
        public int gcd(int n, int m)
        {
            //두 수 n, m 이 있을 때 어느 한 수가 0이 될 때 까지
            //gcd(m, n%m) 의 재귀함수 반복
            if (m == 0) 
                return n;
            else 
                return gcd(m, n % m);
        }",https://github.com/NewRound/AlgorithmKata.git,2023. 8. 25,29,1
2023. 8. 25 오후 5:07:10,김대민,Unity,50 - 기사단원의 무기,"#include <iostream>

int sumOfDivisors(int n)
{
    int result = 0;
    for(int i=1;i * i<=n;i++)
    {
        if(n%i == 0)
        {
            ++ result;
            if(i != n / i)
                ++result;
        }
    }
	return result;
}

int solution(int number, int limit, int power) {
    int answer = 0;
    int weapon = 0;
    for(int i = 1 ; i <= number; ++i)
    {
        weapon =  sumOfDivisors(i);
        if(weapon > limit)
            weapon = power;
        answer += weapon;
    }
    return answer;
}",https://github.com/KimDaeMins/CodingTest/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/unrated/136798.%E2%80%85%EA%B8%B0%EC%82%AC%EB%8B%A8%EC%9B%90%EC%9D%98%E2%80%85%EB%AC%B4%EA%B8%B0/%EA%B8%B0%EC%82%AC%EB%8B%A8%EC%9B%90%EC%9D%98%E2%80%85%EB%AC%B4%EA%B8%B0.cpp,2023. 8. 25,50,2
2023. 8. 25 오후 5:07:36,김대민,Unity,51 - 로또의 최고 순위와 최저 순위,"#include <string>
#include <vector>
#include <cmath>
using namespace std;

vector<int> solution(vector<int> lottos, vector<int> win_nums) {
    vector<int> answer;
    bool wins[46] = {};
    for(int a : win_nums)
    {
        wins[a] = true;
    }
    
    int win = 0;
    int erase = 0;
    for(int a : lottos)
    {
        if(a == 0)
            ++erase;
        if(wins[a])
            ++win;
    }
    answer.push_back(min(6, 7 - erase - win));
    answer.push_back(min(6, 7 - win));
    return answer;
}",https://github.com/KimDaeMins/CodingTest/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/77484.%E2%80%85%EB%A1%9C%EB%98%90%EC%9D%98%E2%80%85%EC%B5%9C%EA%B3%A0%E2%80%85%EC%88%9C%EC%9C%84%EC%99%80%E2%80%85%EC%B5%9C%EC%A0%80%E2%80%85%EC%88%9C%EC%9C%84/%EB%A1%9C%EB%98%90%EC%9D%98%E2%80%85%EC%B5%9C%EA%B3%A0%E2%80%85%EC%88%9C%EC%9C%84%EC%99%80%E2%80%85%EC%B5%9C%EC%A0%80%E2%80%85%EC%88%9C%EC%9C%84.cpp,2023. 8. 25,51,2
2023. 8. 25 오후 5:08:02,김대민,Unity,52 - 옹알이 (2),"#include <string>
#include <vector>

using namespace std;

int solution(vector<string> babbling) {
    int answer = 0;
    string a[4] = { ""aya"", ""ye"", ""woo"", ""ma"" };

    for (int i = 0; i < babbling.size(); ++i)
    {
         int beforeIndex = -1;
        int index = 0;
        while (true)
        {
            if (babbling[i].size() == index)
            {
                ++answer;
                break;
            }
            //사이즈는 7 인덱스는 0이라쳤을때 
            if (index + 2 <= babbling[i].size())
            {
                if (babbling[i].substr(index, 2) == ""ye"")
                {
                    if (beforeIndex == 1)
                        break;
                    beforeIndex = 1;
                    index += 2;
                }
                else if (babbling[i].substr(index, 2) == ""ma"")
                {
                    if (beforeIndex == 3)
                        break;
                    beforeIndex = 3;
                    index += 2;
                }
                else if (index + 3 <= babbling[i].size())
                {
                    if (babbling[i].substr(index, 3) == ""aya"")
                    {
                        if (beforeIndex == 0)
                            break;
                        beforeIndex = 0;
                        index += 3;
                    }
                    else if (babbling[i].substr(index, 3) == ""woo"")
                    {
                        if (beforeIndex == 2)
                            break;
                        beforeIndex = 2;
                        index += 3;
                    }
                    else
                        break;
                }
                else
                    break;
            }
            else
                break;

        }
    }
    return answer;
}",https://github.com/KimDaeMins/CodingTest/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/unrated/133499.%E2%80%85%EC%98%B9%EC%95%8C%EC%9D%B4%E2%80%85%EF%BC%882%EF%BC%89/%EC%98%B9%EC%95%8C%EC%9D%B4%E2%80%85%EF%BC%882%EF%BC%89.cpp,2023. 8. 25,52,2
2023. 8. 25 오후 5:08:29,김대민,Unity,53 - 숫자 짝꿍,"#include <string>
#include <vector>
#include <cmath>

using namespace std;

string solution(string X, string Y) {
    string answer = """";
    int a[10] = {};
    int b[10] = {};
    for(char c : X)
    {
        ++a[c - '0'];
    }
    for(char c : Y)
    {
        ++b[c - '0'];
    }
    
    for(int i = 9; i > 0; --i)
    {
        int count = min(a[i], b[i]);
        
        answer += string(count, (char)(i + '0'));
    }
    
    if(answer.empty())
    {
        if(min(a[0], b[0]))
            answer = ""0"";
        else
            answer = ""-1"";
    }
    else
    {
        int count = min(a[0], b[0]);
        
        answer += string(count, '0');
    }
    return answer;
}",https://github.com/KimDaeMins/CodingTest/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/131128.%E2%80%85%EC%88%AB%EC%9E%90%E2%80%85%EC%A7%9D%EA%BF%8D/%EC%88%AB%EC%9E%90%E2%80%85%EC%A7%9D%EA%BF%8D.cpp,2023. 8. 25,53,2
2023. 8. 25 오후 5:09:01,김대민,Unity,54 - 체육복,"#include <string>
#include <vector>

using namespace std;

int solution(int n, vector<int> lost, vector<int> reserve) {
    int answer = 0;
    
    //어차피 왼쪽에서 오른쪽으로 찾으면 그게그거다는것... 그래서 그렇구만
    vector<int> v;
    v.resize(n + 2, 0);
    for(auto SIndex : lost)
        --v[SIndex];
    for(auto SIndex : reserve)
        ++v[SIndex];
    
    for(int i = 1; i < n + 1; ++ i)
    {
        if(v[i] == -1)
        {
            if(v[i - 1] == 1)
            {
                ++v[i];
                --v[i-1];
            }
            else if(v[i + 1] == 1)
            {
                ++v[i];
                --v[i+1];
            }
        }
    }
    
    for(auto& I : v)
        if(I != -1) ++answer;
    return answer - 2;
}",https://github.com/KimDaeMins/CodingTest/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/42862.%E2%80%85%EC%B2%B4%EC%9C%A1%EB%B3%B5/%EC%B2%B4%EC%9C%A1%EB%B3%B5.cpp,2023. 8. 25,54,2
2023. 8. 25 오후 5:10:45,김해찬,Unity,59 - 성격 유형 검사하기,"using System;
using System.Collections;
using System.Collections.Generic;

public class Solution {
    public string solution(string[] survey, int[] choices) {
        string answer = """";
        int[] map     = new int[8] {0, 3, 2, 1, 0, 1, 2, 3};
        int[] persona = new int[26];
        
        for(int i = 0; i < survey.Length; i++)
        {
            char left  = survey[i][0];
            char right = survey[i][1];
            
            int choice = choices[i];
            
            if(choice > 4)
            {
                persona[right - 'A'] += map[choice];
            }
            else if(choice < 4)
            {
                persona[left - 'A'] += map[choice];
            }
        }
        
        char[] rules = new char[8]{ 'R', 'T', 'C', 'F', 'J', 'M', 'A', 'N'};
        
        for(int i = 0; i < 8; i+=2)
        {
            char left = rules[i];
            char right = rules[i+1];
            
            if(persona[left - 'A'] == persona[right - 'A'])
            {
                List<char> lst = new List<char>();
                
                lst.Add(left);
                lst.Add(right);
                
                answer += lst[0];
            }
            else if(persona[left - 'A'] > persona[right - 'A'])
            {
                answer += left;
            }
            else
            {
                answer += right;
            }
        }
        
        return answer;
    }
}",,2023. 8. 25,59,3
2023. 8. 25 오후 5:10:57,김광수,Unity,46 - 과일 장수,"using System;
using System.Collections.Generic;

public class Solution {
    // 사과는 1~k점
    // 한 상자에는 m개의 사과가들어감
    // 사과 한상자의 가격은 가장낮은점수 p * m
    
    // 최대한 많은 이익을 남겨라!
    
    // 높은 점수의 사과만 골라야됨
    public int solution(int k, int m, int[] score) 
    {        
        int answer = 0;
        int index = 0;
        int length = score.Length;
        int[] array;
        
        Array.Sort(score);       
        while(length >= m)
        {
            length -= m;
            array = new int[m];
            
            for(int i =0; i< m; i++)
            {
                array[i] = score[score.Length- 1 - (index++)];
                
            }
            answer += array[m-1] * m;           
        }
        return answer;
    }
}",https://github.com/kksoo0131/Study/commit/4c253538a12ab4543f4a9d6414d01fe6b8cbc75a,2023. 8. 25,46,2
2023. 8. 25 오후 5:19:22,장성민,Unity,3 - 자릿수 더하기,"using System;

public class Solution {
    public int solution(int n) {
        int answer = 0;
        while (n > 0){
            answer += n % 10;
            n = n / 10;
        }
        return answer;
    }
}",,2023. 8. 25,3,1
2023. 8. 25 오후 5:21:24,심명희,AI,9 - 정수 제곱근 판별,"def solution(n):
    x = n**(1/2)   
    if x == int(x):
        return (x+1)**2
    else:
        return -1",,2023. 8. 25,9,1
2023. 8. 25 오후 5:22:05,배인호,Unity,11 - 하샤드 수,"using System;

public class Solution
{
    public bool solution(int x)
    {
        int length = (int)(Math.Log10(x) + 1);
        int num = 0;
        int sum = 0;
        bool answer = false;

        for (int i = 1; i <= length; i++)
        {
            num = x % Pow10(i);

            if (i != 1)
            {
                num = (num - num % Pow10(i - 1)) / Pow10(i - 1);
            }

            sum += num;
        }

        if (x % sum == 0)
        {
            answer = true;
        }

        return answer;
    }

    public int Pow10(int pow)
    {
        return (int)Math.Pow(10, pow);
    }
}
",https://github.com/cutlake2000/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12947.%E2%80%85%ED%95%98%EC%83%A4%EB%93%9C%E2%80%85%EC%88%98,2023. 8. 25,11,1
2023. 8. 25 오후 5:25:22,배인호,Unity,12 - 두 정수 사이의 합,"public class Solution
{
    public long solution(int a, int b)
    {
        long answer = 0;

        if (a <= b)
        {
            for (int i = a; i <= b; i++)
            {
                answer += i;
            }
        }
        else
        {
            for (int i = b; i <= a; i++)
            {
                answer += i;
            }
        }

        return answer;
    }
}
",https://github.com/cutlake2000/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12912.%E2%80%85%EB%91%90%E2%80%85%EC%A0%95%EC%88%98%E2%80%85%EC%82%AC%EC%9D%B4%EC%9D%98%E2%80%85%ED%95%A9,2023. 8. 25,12,1
2023. 8. 25 오후 5:27:58,임규한,AI,15 - 나누어 떨어지는 숫자,"def solution(arr, divisor):
    answer = []
    cnt = 0
    for i in arr:
        if i%divisor == 0:
            answer.append(i)
            answer.sort()
    if len(answer) == 0:
        return [-1]
    return answer",,2023. 8. 25,15,1
2023. 8. 25 오후 5:29:12,김광수,Unity,47 - 모의고사완전탐색,"using System;
using System.Linq;
using System.Collections.Generic;

public class Solution {
    public int[] solution(int[] answers) {
        // 각자의 시험지가 있고
        // 답지 answer가 주어질때
        // 가장 높은 점수를 가진 사람들을 배열(오름차순)으로 리턴
        
        // 사람은 저 3명인건가?
        
        int[] score = new int[3];
        int[][] student = new int[3][];
        student[0] = new int[]{1,2,3,4,5};
        student[1] = new int[]{2,1,2,3,2,4,2,5};
        student[2] = new int[]{3,3,1,1,2,2,4,4,5,5};
        
        for(int i =0; i< 3; i++)
        {
            int index = 0;
            foreach(int ansNum in answers)
            {
                score[i] += student[i][index++] == ansNum ? 1 : 0;
                
                if (index >= student[i].Length)
                {
                    index = 0;
                }
            }
        }

        // 배열에 3명의 점수가 담겨있음
        int max = score.Max();
        List<int> answer = new List<int>();
        
        for(int i =0; i< score.Length; i++)
        {
            if (score[i] == max)
            {
                answer.Add(i+1);
            }
        }
        
        return answer.ToArray();
    }
}",https://github.com/kksoo0131/Study/commit/c280af00ffcd43c945a136b746890ab22454a042,2023. 8. 25,47,2
2023. 8. 25 오후 5:35:39,김해찬,Unity,60 - 바탕화면 정리,"using System;

public class Solution {
    public int[] solution(string[] wallpaper) {
        int[] answer = new int[4] { -1, int.MaxValue, -1, -1 };
        
        for(int i = 0; i < wallpaper.Length; i++)
        {
            for(int j = 0; j < wallpaper[i].Length; j++)
            {
                // min Y
                if(answer[0] == -1 && wallpaper[i][j] == '#')
                {
                    answer[0] = i;
                }
                // min X
                if(wallpaper[i][j] == '#' && answer[1] >= j)
                {
                    answer[1] = j;
                }
                // max Y
                if(wallpaper[i][j] == '#')
                {
                    answer[2] = i+1;
                }
                // max X
                if(wallpaper[i][j] == '#' && answer[3] <= j)
                {
                    answer[3] = j+1;
                }
            }
        }
        
        
        return answer;
    }
}",,2023. 8. 25,60,3
2023. 8. 25 오후 5:37:57,장성민,Unity,4 - 약수의 합,"public class Solution {
    public int solution(int n) {
        int answer = 0;
        for (int i = 1; i <= n; i++){
            if (n % i == 0){
                answer += i;
            }
        }
        return answer;
    }
}",,2023. 8. 25,4,1
2023. 8. 25 오후 5:40:35,배인호,Unity,13 - 콜라츠 추측,"public class Solution
{
    public int solution(long num)
    {
        int answer = 0;

        if (num != 1)
        {
            while (num != 1)
            {
                if (num % 2 == 0)
                {
                    num /= 2;
                }
                else
                {
                    num *= 3;
                    num++;
                }

                answer++;

                if (answer == 500)
                {
                    answer = -1;
                    break;
                }
            }
        }

        return answer;
    }
}
",https://github.com/cutlake2000/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12943.%E2%80%85%EC%BD%9C%EB%9D%BC%EC%B8%A0%E2%80%85%EC%B6%94%EC%B8%A1,2023. 8. 25,13,1
2023. 8. 25 오후 5:40:41,최종민,AI,11 - 하샤드 수,"def solution(x):
    answer = 0
    for i in str(x):
        answer += int(i)
    if x % answer == 0:
        answer = True
    else:
        answer = False
    return answer",,2023. 8. 25,11,1
2023. 8. 25 오후 5:43:45,김진환,Unity,30 - 3진법 뒤집기,"public int solution(int n)
        {
            int answer = 0;
            int count = 0;

            string str = string.Empty;

            while (true)
            {
                double temp = Math.Pow(3, count);
                if (temp > n)
                {
                    count--;
                    break;
                }

                count++;
            }
            for (int i = count; i >= 0; i--)
            {
                int pow = (int)Math.Pow(3, i);
                for (int j = 2; j >= 0; j--)
                {
                    if (n >= pow * j)
                    {
                        str += j;
                        n -= pow * j;
                        break;
                    }

                    if (j == 0)
                    {
                        str += ""0"";
                    }
                }
            }
            for (int i = 0; i < str.Length; i++)
            {
                int pow = (int)Math.Pow(3, i);

                int num = (int)Char.GetNumericValue(str[i]);

                answer += num * pow;
            }
            return answer;
        }",https://github.com/NewRound/AlgorithmKata.git,2023. 8. 25,30,1
2023. 8. 25 오후 5:45:27,배인호,Unity,14 - 서울에서 김서방 찾기,"public class Solution
{
    public string solution(string[] seoul)
    {
        int index = 0;

        foreach (string name in seoul)
        {
            if (name == ""Kim"")
                break;
            else
                index++;
        }
        string answer = ""김서방은 "" + index + ""에 있다"";
        return answer;
    }
}
",https://github.com/cutlake2000/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12919.%E2%80%85%EC%84%9C%EC%9A%B8%EC%97%90%EC%84%9C%E2%80%85%EA%B9%80%EC%84%9C%EB%B0%A9%E2%80%85%EC%B0%BE%EA%B8%B0,2023. 8. 25,14,1
2023. 8. 25 오후 5:49:48,정재호,Unity,27 - 행렬의 덧셈,"using System;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Linq;

public class Solution
{
    public int[,] solution(int[,] arr1, int[,] arr2)
    {
        int[,] answer = new int[arr1.GetLength(0), arr1.GetLength(1)];

        for (int i = 0; i < arr1.GetLength(0); i++)
        {
            for (int j = 0; j < arr1.GetLength(1); j++)
            {
                answer[i,j] = arr1[i,j] + arr2[i,j];

            }
        }

        return answer;
    }
}",,2023. 8. 25,27,1
2023. 8. 25 오후 5:52:21,정재호,Unity,28 - 직사각형 별찍기,"using System;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Linq;

public class Example
{
    public static void Main()
    {
        String[] s;

        Console.Clear();
        s = Console.ReadLine().Split(' ');

        int a = Int32.Parse(s[0]);
        int b = Int32.Parse(s[1]);

        for (int i = 0; i < b; i++)
        {
            for (int j = 0; j < a; j++)
            {
                Console.Write(""*"");
            }
            Console.WriteLine();
        }
    }
}",,2023. 8. 25,28,1
2023. 8. 25 오후 5:59:47,차요한,Unity,15 - 나누어 떨어지는 숫자,"using System.Collections.Generic;
using System;
public class Solution {
    public int[] solution(int[] arr, int divisor) {
        int[] answer; 
        List<int> list = new List<int>();
        for(int i=0; i<arr.Length; i++)     
        {
            if(arr[i]%divisor==0) list.Add(arr[i]);
        }
        if(list.Count != 0)
        {
            list.Sort();
            answer = list.ToArray();
        }
        else
        {
            answer = new int[] {-1};
        }
        return answer;
    }
}",https://github.com/HOHOJO/Algorithm_test,2023. 8. 25,15,1
2023. 8. 25 오후 6:01:37,김정민,Unity,31 - 이상한 문자 만들기,"public static string solution(string s)
            {
                StringBuilder sb = new StringBuilder();
                int idx = 0;
                for (int i = 0; i < s.Length; i++)
                {
                    string cur = s[i] + """";
                    if (cur == "" "") {
                        sb.Append(cur);
                        idx = 0;
                    }
                    else
                    {
                        if (idx % 2 == 0) sb.Append(cur.ToUpper());
                        else sb.Append(cur.ToLower());
                        idx++;
                    }
                }
                string answer = sb.ToString();
                return answer;
            }",https://github.com/j-miiin/Algorithm_Study/blob/main/SPARTA_ALGORITHM_2023/Level2/StrangeStr.cs,2023. 8. 25,31,2
2023. 8. 25 오후 6:04:17,김광수,Unity,48 - 소수 만들기,"using System;
using System.Linq;
using System.Collections.Generic;

class Solution
    {
        int[] nums;
        public int solution(int[] _nums)
        {
            nums = _nums;
            // 일단 3개의 수를 더하는 조합을 리스트로 뽑아서

            // 그 수들이 소수인지 검사
            // 소수검사는 에리스토의 체? -> 에라토스테네스의 체 ㅋㅋ

            List<int> combination = new List<int>();
            MakeList(combination);
            return primeCheck(combination);
        }

        public void MakeList(List<int> combination)
        {
            for (int i = 0; i < nums.Length - 2; i++)
            {
                for (int j = i+1; j < nums.Length - 1; j++)
                {
                    for (int k = j+1; k < nums.Length; k++)
                    {
                        combination.Add(nums[i] + nums[j] + nums[k]);
                    }
                }
            }

        }

        public int primeCheck(List<int> combination)
        {
            // 2부터 처음 선택하는 수는 소수

            // 그런데 선택 된 수의 배수들은 소수가 아님으로 
            // bool 배열을 통해서 NotPrime = true 처리를한다.

            int max = combination.Max();
            int count = 0;
            bool[] NotPrime = new bool[max+1];


            for (int i = 2; i <= max; i++)
            {
                if (NotPrime[i]) continue;

                for (int j = i * 2; j <= max; j += i)
                {
                    NotPrime[j] = true;
                }
            }

            foreach (int num in combination)
            {
                if (!NotPrime[num])
                {
                    count++;
                }
                
            }

            return count;

        }
    }",https://github.com/kksoo0131/Study/commit/5429a605369dd4ab93e012681191a573ea619fc5,2023. 8. 25,48,2
2023. 8. 25 오후 6:11:47,배인호,Unity,15 - 나누어 떨어지는 숫자,"using System.Collections.Generic;

public class Solution
{
    public int[] solution(int[] arr, int divisor)
    {
        List<int> answerList = new List<int>();
        int[] answer = new int[] { };

        int arrLength = arr.Length;

        for (int i = 0; i < arrLength; i++)
        {
            if (arr[i] % divisor == 0)
            {
                answerList.Add(arr[i]);
            }
        }

        if (answerList.Count == 0)
        {
            answerList.Add(-1);
        }
        else
        {
            answerList.Sort();
        }

        answer = answerList.ToArray();

        return answer;
    }
}
",https://github.com/cutlake2000/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12910.%E2%80%85%EB%82%98%EB%88%84%EC%96%B4%E2%80%85%EB%96%A8%EC%96%B4%EC%A7%80%EB%8A%94%E2%80%85%EC%88%AB%EC%9E%90%E2%80%85%EB%B0%B0%EC%97%B4,2023. 8. 25,15,1
2023. 8. 25 오후 6:15:27,배인호,Unity,16 - 음양 더하기,"using System;

public class Solution
{
    public int solution(int[] absolutes, bool[] signs)
    {
        int index = absolutes.Length;
        int answer = 0;

        for (int i = 0; i < index; i++)
        {
            answer += signs[i] == true ? absolutes[i] : absolutes[i] * -1;
        }

        return answer;
    }
}
",https://github.com/cutlake2000/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/76501.%E2%80%85%EC%9D%8C%EC%96%91%E2%80%85%EB%8D%94%ED%95%98%EA%B8%B0,2023. 8. 25,16,1
2023. 8. 25 오후 6:22:29,김광수,Unity,49 - 덧칠하기,"using System;

public class Solution
    {
        // n 미터의 벽을 1m 마다 섹션을 나눈다
        // 한번에 m미터의 벽을 칠한다.
        // 벽을 칠할때 시작점 ~ 시작점+m 까지 한번에 칠해진다.
        // 페인트 칠을 해야하는 최소횟수는?

        public int solution(int n, int m, int[] section)
        {
            // 1~n번까지 번호를 붙혔으므로 0은 버리자
            // 한번에 m을 칠하기 때문에 +m으로 여유공간 생성
            bool[] wall = new bool[n + 1 + m];
            int count = 0;

            foreach (int i in section)
            {
                wall[i] = true;
            }

            // 칠해야하는 부분들이 wall배열에서 true로 표시되어있음

            for (int i = section[0]; i <= section[section.Length-1]; i++)
            {
                if (wall[i])
                {
                    for (int j = 0; j < m; j++)
                    {
                        wall[i + j] = false;
                    }
                    count++;
                }
            }

            return count;
        }
    }",https://github.com/kksoo0131/Study/commit/cec5fee65aca263ce41d7c905e044789c4ff3d48,2023. 8. 25,49,2
2023. 8. 25 오후 6:23:20,배인호,Unity,17 - 핸드폰 번호 가리기,"public class Solution
{
    public string solution(string phone_number)
    {
        string answer = """";

        char[] answerArray = phone_number.ToCharArray();

        for (int i = 0; i < answerArray.Length - 4; i++)
        {
            answerArray[i] = '*';
        }

        answer = new string(answerArray);
        return answer;
    }
}
",https://github.com/cutlake2000/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12948.%E2%80%85%ED%95%B8%EB%93%9C%ED%8F%B0%E2%80%85%EB%B2%88%ED%98%B8%E2%80%85%EA%B0%80%EB%A6%AC%EA%B8%B0,2023. 8. 25,17,1
2023. 8. 25 오후 6:32:13,최종민,AI,12 - 두 정수 사이의 합,"def solution(a, b):
    answer = 0
    
    if a == b:
        answer = a
    else:
        if a > b:
            temp = a
            a = b
            b = temp
        for i in range(a, b + 1):
            answer += i

    return answer",,2023. 8. 25,12,1
2023. 8. 25 오후 6:39:58,김진규,Unity,11 - 하샤드 수,"public class Solution {
    public bool solution(int x) {
        bool answer = true;
        int num = x;
        int sum =0;
        while(num > 0)
        {
            sum += num % 10;
            num /=10;
        }
        if(x % sum != 0)
            answer = false;
        return answer;
    }
}",,2023. 8. 25,11,1
2023. 8. 25 오후 6:42:30,김진규,Unity,12 - 두 정수 사이의 합,"public class Solution {
    public long solution(int a, int b) {
        long answer = 0;
        if(a>b)
        {
            for(int i =b; i<=a;i++)
            {
                answer += i;
            }
        }else if(a < b)
        {
            for(int i =a; i<=b;i++)
            {
                answer += i;
            }
        }else
        {
            answer = a;
        }
        return answer;
    }
}",,2023. 8. 25,12,1
2023. 8. 25 오후 6:42:56,김광수,Unity,50 - 기사단원의 무기,"using System;
public class Solution {
    public int solution(int number, int limit, int power) {
        // 기사의 번호의 약수에 해당하는 무기를 구매
        
        // 제한 수치보다 큰 무기인 경우 지정해준 무기를 구매해야됨
        
        // 모든기사에게 무기를 만들어주기 위한 철의 무게를 계산해야됨
        
        // 1. 각 기사들의 약수의 개수 즉, 필요한 무기의 공격력을 리스트로 만들어준다.
        
        // 기사의 번호는 1번부터기 떄문에 0을 버림
        
        /*
        시간초과 발생 테스트 케이스 : 11~16,18,24~25

        number가 100,000 배열의길이가 10만이 되고 

        각 약수를 구할때 N^2 의 이중 for문으로 작동하기 때문에 개선이 필요하다

        앞에서 부터 해당 수의 배수를 구하면서 전부 +1씩 해주는 방식은 어떤가? 성공
        > 수가 커질수록 배수의 갯수가 줄어들기 떄문에 계산양이 줄어들었다.
        */
        
        int[] array = new int[number+1];
        int answer = 0;
        
        for(int i =1; i<= number; i++)
        {
            for (int j = i; j <= number; j+=i)
            {
                array[j] += 1;
            }
            
        }
        
        //이제 배열을 돌면서 limit보다 큰값의 경우 power을 더함
        
        for(int i =1; i< number+1; i++)
        {
            answer += array[i] > limit ? power : array[i];
        }
        
        return answer;
    }
    
}
/*

public class Solution {
    public int solution(int number, int limit, int power) {
        // 기사의 번호의 약수에 해당하는 무기를 구매
        
        // 제한 수치보다 큰 무기인 경우 지정해준 무기를 구매해야됨
        
        // 모든기사에게 무기를 만들어주기 위한 철의 무게를 계산해야됨
        
        // 1. 각 기사들의 약수의 개수 즉, 필요한 무기의 공격력을 리스트로 만들어준다.
        
        // 기사의 번호는 1번부터기 떄문에 0을 버림
        int[] array = new int[number+1];
        int answer = 0;
        
        for(int i =1; i<= number; i++)
        {
            array[i] = NumDivisor(i);
        }
        
        //이제 배열을 돌면서 limit보다 큰값의 경우 power을 더함
        
        for(int i =1; i< number+1; i++)
        {
            answer += array[i] > limit ? power : array[i];
        }
        
        return answer;
    }
    
    public int NumDivisor(int num)
    {
        int count =0;
        for(int i =1; i <= num ; i++)
        {
            count += num % i == 0 ? 1 :0;
        }
        return count;
    }
}
*/",https://github.com/kksoo0131/Study/commit/0b0a738f83241ad3df97731e4c3a90380ba21012,2023. 8. 25,50,2
2023. 8. 25 오후 6:59:50,함영주,Unity,3 - 자릿수 더하기,"using System;

public class Solution {
    public int solution(int n) {
        int answer = 0;
        string a = n.ToString();

        for(int i = 0; i < a.Length; i++)

            answer += int.Parse(a.Substring(i,1));

        return answer;
    }
}",https://github.com/HamYoungjoo/CodeAlgorithm,2023. 8. 25,3,1
2023. 8. 25 오후 7:01:33,김해찬,Unity,61 - 개인정보 수집 유효기간,"using System;
using System.Collections;
using System.Collections.Generic;

public class Solution {
    public int[] solution(string today, string[] terms, string[] privacies)
    {
        int[] term = new int[26];
        List<int> lst = new List<int>();

        for (int i = 0; i < terms.Length; i++)
        {
            string[] temp = terms[i].Split(' ');

            term[temp[0][0] - 'A'] = int.Parse(temp[1]);
        }

        string[] a = today.Split('.');
        int[] todays = new int[a.Length];

        for (int i = 0; i < a.Length; i++)
        {
            todays[i] = int.Parse(a[i]);
        }

        for (int i = 0; i < privacies.Length; i++)
        {
            string privacy = privacies[i];
            string[] splited = privacy.Split(' ');

            string[] ymd = splited[0].Split('.');

            int gradeCut = term[splited[1][0] - 'A'];
            int month = 0;
            
            month -= int.Parse(ymd[1]) - todays[1];

            month += 12 * (todays[0] - int.Parse(ymd[0]));

            int day = todays[2] - int.Parse(ymd[2]);

            if (gradeCut < month)
            {
                lst.Add(i + 1);
            }
            else if (gradeCut == month && day >= 0)
            {
                lst.Add(i + 1);
            }
        }

        int[] answer = new int[lst.Count];

        for (int i = 0; i < lst.Count; i++)
        {
            answer[i] = lst[i];
        }

        return answer;
    }
}",,2023. 8. 25,61,3
2023. 8. 25 오후 7:01:59,정재호,Unity,29 - 최대공약수와 최소공배수,"using System;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Linq;

public class Solution
{
    public int[] solution(int n, int m)
    {
        int[] answer = new int[2];

        int min = 0;
        int max = 0;

        if (n > m)
        {
            for (int i = 1; i < n; i++)
            {
                if (n % i == 0 && m % i == 0)
                {
                    if (i > max)
                    {
                        max = i;
                    }

                }
                else if (i > m)
                {
                    break;
                }
            }

            int asd = m;

            while (true)
            {

                if (asd % n == 0 && asd % m == 0)
                {
                    min = asd;
                    break;
                }
                asd++;
            }
        }

        else if (n < m)
        {
            for (int i = 1; i < m; i++)
            {
                if (n % i == 0 && m % i == 0)
                {
                    if (i > max)
                    {
                        max = i;
                    }

                }
                else if (i > n)
                {
                    break;
                }
            }

            int asd = m;

            while (true)
            {

                if (asd % n == 0 && asd % m == 0)
                {
                    min = asd;
                    break;
                }
                asd++;
            }
        }

        answer[0] = max;
        answer[1] = min;


        return answer;
    }
}",,2023. 8. 25,29,1
2023. 8. 25 오후 7:04:55,김광수,Unity,51 - 로또의 최고 순위와 최저 순위,"using System;
using System.Linq;

public class Solution
    {
        // 알아볼 수 없는 번호를 0으로 표기
        // 일단 최저 갯수를 계산하고 최고 순위는 최저갯수 + 0의 갯수
        public int[] solution(int[] lottos, int[] win_nums)
        {
            int zeroNum = 0;
            int count = 0;
            foreach (int num in lottos)
            {
                if (num == 0) 
                {
                    zeroNum++; 
                    continue;
                }
                
                count += win_nums.Contains(num) ? 1 : 0;
            }
            
            int[] answer = new int[2];
            
            answer[1] = count < 2 ? 6 : count < 3 ? 5 : count < 4 ? 4 :count < 5 ? 3 : count < 6 ? 2 : 1;
            count += zeroNum;
            answer[0] = count < 2 ? 6 : count < 3 ? 5 : count < 4 ? 4 :count < 5 ? 3 : count < 6 ? 2 : 1;
            
            return answer;
        }
    }",https://github.com/kksoo0131/Study/commit/7bce1ea6bd4a54ed99b673b45285e0e877d003a6,2023. 8. 25,51,2
2023. 8. 25 오후 7:18:45,김해찬,Unity,62 - 달리기 경주,"using System;
using System.Collections;
using System.Collections.Generic;

public class Solution {
    public string[] solution(string[] players, string[] callings) {
        string[] answer = new string[players.Length];
        Dictionary<string, int> dic = new Dictionary<string, int>();
        
        for(int i = 0; i < players.Length; i++)
        {
            dic.Add(players[i], i);
        }
        
        for(int i = 0; i < callings.Length; i++)
        {
            int index = dic.GetValueOrDefault(callings[i]);
            
            string front = players[index-1];
            players[index-1] = players[index];
            players[index] = front;
            
            dic[callings[i]] = index-1;
            dic[front] = index;
        }
        
        for(int i = 0; i < players.Length; i++)
        {
            answer[i] = players[i];
        }
        return answer;
    }
}",,2023. 8. 25,62,3
2023. 8. 25 오후 7:48:35,김해찬,Unity,63 - 공원 산책,"using System;

public class Solution {
    public int[] solution(string[] park, string[] routes) {
        int[] answer = new int[2];
        
        int startX = 0, startY = 0;
        
        int mapX = park[0].Length;
        int mapY = park.Length;
        
        for(int i = 0; i < park.Length; i++)
        {
            for(int j = 0; j < park[i].Length; j++)
            {
                if(park[i][j] == 'S')
                {
                    startX = j;
                    startY = i;
                }
            }
        }
        
        for(int i = 0; i < routes.Length; i++)
        {
            string[] temp = routes[i].Split(' ');
            
            char direction = temp[0][0];
            int  move      = int.Parse(temp[1]);
            bool trigger   = true;
            
            int x = startX;
            int y = startY;
            
            for(int j = 0; j < move; j++)
                {
                    if(direction == 'N')
                    {
                        if((y - 1) < 0 || park[y - 1][x] == 'X')
                        {
                            trigger = false;
                            break;
                        }
                        else
                        {
                            y--;
                        }
                    }
                    else if(direction == 'S')
                    {
                        if((y + 1) >= mapY || park[y + 1][x] == 'X')
                        {
                            trigger = false;
                            break;
                        }
                        else
                        {
                            y++;
                        }
                    }
                    else if(direction == 'W')
                    {
                        if((x - 1) < 0 || park[y][x - 1] == 'X')
                        {
                            trigger = false;
                            break;
                        }
                        else
                        {
                            x--;
                        }
                    }
                    else
                    {
                        if((x + 1) >= mapX || park[y][x + 1] == 'X')
                        {
                            trigger = false;
                            break;
                        }
                        else
                        {
                            x++;
                        }
                    }
                }
            
            if(trigger == true)
            {
                startX = x;
                startY = y;
            }
        }
        
        answer[0] = startY;
        answer[1] = startX;
        return answer;
    }
}",,2023. 8. 25,63,3
2023. 8. 25 오후 8:10:05,최종민,AI,13 - 콜라츠 추측,"def solution(num):
    count = 0
    while num != 1:
        if num % 2 == 0:
            num //= 2
        else:
            num = num * 3 + 1
        count += 1
        if count >= 500:
            count = -1
            break
    answer = count
    return answer",,2023. 8. 25,13,1
2023. 8. 25 오후 8:15:53,김도현B,Unity,27 - 행렬의 덧셈,"public class Solution {
    public int[,] solution(int[,] arr1, int[,] arr2) {
        int[,] answer = new int[arr1.GetLength(0), arr1.GetLength(1)];
        for (int i = 0; i < arr1.GetLength(0); i++)
        {
            for(int j = 0; j < arr1.GetLength(1); j++)
            {
                answer[i, j] = arr1[i,j] + arr2[i,j];
            }
        }
        return answer;
    }
}",https://github.com/subscriptioncat/Algorithm,2023. 8. 25,27,1
2023. 8. 25 오후 8:23:15,김광수,Unity,52 - 옹알이 (2),"using System;

public class Solution
    {
        
        public int solution(string[] babbling)
        {
            string[] continous = new string[]{""ayaaya"",""yeye"",""woowoo"",""mama""};
            string[][] possible = new string[4][];
            possible[0] = new string[]{""aya"",""ye"",""woo"",""ma""};
            possible[1] = new string[]{""ye"",""aya"",""woo"",""ma""};
            possible[2] = new string[]{""woo"",""ye"",""aya"",""ma""};
            possible[3] = new string[]{""ma"",""ye"",""woo"",""aya""};
            //string 배열을 순회하면서
            
            // 각각의 스트링을 만들수 있는지 판별

            // Replace로 하게되면 원래 안되다가 삭제해서 되는 경우가 발생함

            // 순서를 지켜서 확인을 해야된다. - > 교차검증으로 확인함
            
            int count = 0;
            foreach(string babStr in babbling)
            {   
                string temp = babStr;
                
                // 연속인것을 걸러내야되고
                foreach(string conWord in continous)
                {
                    temp = temp.Replace(conWord,"""");
                }
                
                if(temp.Length != babStr.Length) continue;
                
                
                int[] length = new int[4];
                
                for(int i =0; i< 4; i++)
                {
                    temp = babStr;
                    foreach(string posWord in possible[i])
                    {
                        temp= temp.Replace(posWord,"""");
                    }
                    
                    length[i] = temp.Length;
                }
                // possible의 순서가 다를때도 0이여됨
                
                bool isSuccess = true;
                
                for(int i =0; i< 4; i++)
                {
                    if(length[i] != 0){
                        isSuccess = false;
                    }
                }
                
                if(isSuccess){
                    count++;
                }
                
                
            }
            
           return count;
        }
    
        
    }",https://github.com/kksoo0131/Study/commit/509cb260db70f6436da30c058cfa04fca1f12a44,2023. 8. 25,52,2
2023. 8. 25 오후 8:26:39,김형중,Unity,27 - 행렬의 덧셈,"public class Solution
{
    public int[,] solution(int[,] arr1, int[,] arr2)
    {
        int[,] answer = new int[arr1.GetLength(0), arr1.GetLength(1)];

        for (int i = 0; i < arr1.GetLength(0); i++)
        {
            for (int j = 0; j < arr1.GetLength(1); j++)
            {
                answer[i,j] = arr1[i,j] + arr2[i,j];
            }
        }
        return answer;
    }
}",,2023. 8. 25,27,1
2023. 8. 25 오후 8:51:19,정재호,Unity,30 - 3진법 뒤집기,"using System;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Linq;

public class Solution
{
    public int solution(int n)
    {
        int answer = 0;
        int devide = 0;
        string three = """";

        while (true)
        {
            devide = n / 3;
            three += (n % 3).ToString();
            n /= 3;
            if (devide == 0)
            {
                break;
            }
        }

        char[] chars = three.ToCharArray();
        Array.Reverse(chars);

        for (int i = chars.Length-1; i >= 0; i--)
        {
            answer += (chars[i] - '0') * (int)Math.Pow(3, i);
        }



        return answer;
    }
}",,2023. 8. 25,30,1
2023. 8. 25 오후 9:01:55,김광수,Unity,53 - 숫자 짝꿍,"using System;
using System.Text;

public class Solution
    {
        // X와 Y에서 공통으로 존재하는 요소들을 가져와서 가장 큰 정수를 만들어라
        // 없다면 -1
        // 문자열로 큰수 다루기
    
        // 중복선택을 방지해야됨
    
        // 시간 초과 발생
        // X와 Y는 300만 자리수??
        // 만약에 0이 300만개 짜리라고 치면??
    
        //StringBuilder 써야되는듯?
    

        public string solution(string X, string Y)
        {
            StringBuilder sb = new StringBuilder();
            int[] arrayX = new int[10];
            int[] arrayY = new int[10];
            
            foreach (char x in X)
            {
                arrayX[int.Parse(x.ToString())]++;
            }
            
            foreach (char y in Y)
            {
                arrayY[int.Parse(y.ToString())]++;
            }
            
            for(int i =0; i< 10; i++)
            {
                int min = Math.Min(arrayX[i], arrayY[i]);
                
                for (int j =0; j< min; j++)
                {
                    sb.Append(i);
                }
            }

            char[] temp = sb.ToString().ToCharArray();
            Array.Sort(temp);
            Array.Reverse(temp);
            string answer = new string(temp);

            return answer.Length == 0 ? ""-1"" : answer[0] == '0' ? ""0"" : answer;

        }

    }",https://github.com/kksoo0131/Study/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/131128.%E2%80%85%EC%88%AB%EC%9E%90%E2%80%85%EC%A7%9D%EA%BF%8D,2023. 8. 25,53,2
2023. 8. 25 오후 9:27:53,정재호,Unity,31 - 이상한 문자 만들기,"using System;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Linq;

public class Solution
{
    public string solution(string s)
    {
        StringBuilder sb = new StringBuilder();

        string[] sa = s.Split();

        for (int i = 0; i < sa.Length; i++)
        {
            char[] chars = new char[sa[i].Length];

            for (int j = 0; j < sa[i].Length; j++)
            {
                chars[j] = sa[i][j];
            }

            for (int k = 0; k < chars.Length; k++)
            {
                if (k % 2 == 0)
                {
                    sb.Append(chars[k].ToString().ToUpper());
                }
                else
                {
                    sb.Append(chars[k].ToString().ToLower());
                }
            }
            if (i == sa.Length-1)
            {
                break;
            }
            sb.Append("" "");
        }
        return sb.ToString();
    }
}",,2023. 8. 25,31,2
2023. 8. 25 오후 10:22:14,김해찬,Unity,64 - 신고 결과 받기,"using System;
using System.Collections;
using System.Collections.Generic;

public class Solution {
    public int[] solution(string[] id_list, string[] report, int k)
    {
        int[] answer = new int[id_list.Length];
        Dictionary<string, bool[]> reportBase = new Dictionary<string, bool[]>();
        Dictionary<string, int> idBase = new Dictionary<string, int>();

        for (int i = 0; i < id_list.Length; i++)
        {
            reportBase.Add(id_list[i], new bool[id_list.Length]);
            idBase.Add(id_list[i], i);
        }

        for (int i = 0; i < report.Length; i++)
        {
            string[] temp = report[i].Split(' ');

            bool[] reportLog = reportBase.GetValueOrDefault(temp[0]);
            int reportIndex   = idBase.GetValueOrDefault(temp[1]);
            
            reportLog[reportIndex] = true;
        }
        
        int[] reported = new int[id_list.Length];
        
        for(int i = 0; i < id_list.Length; i++)
        {
            bool[] reportLog = reportBase.GetValueOrDefault(id_list[i]);
            
            for(int j = 0; j < reportLog.Length; j++)
            {
                if(reportLog[j] == true)
                {
                    reported[j]++;
                }
            }
        }
        
        for(int i = 0; i < id_list.Length; i++)
        {
            bool[] reportLog = reportBase.GetValueOrDefault(id_list[i]);
            
            for(int j = 0; j < reportLog.Length; j++)
            {
                if(reportLog[j] == true && reported[j] >= k)
                {
                    answer[i]++;
                }
            }
        }

        return answer;
    }
}",,2023. 8. 25,64,3
2023. 8. 25 오후 10:26:29,김해찬,Unity,65 - 최댓값과 최솟값,"public class Solution {
    public string solution(string s) {
        string answer = """";
        int max = int.MinValue;
        int min = int.MaxValue;
        
        string[] arr = s.Split(' ');
        
        for(int i = 0; i < arr.Length; i++)
        {
            int value = int.Parse(arr[i]);
            
            if(max < value)
            {
                max = value;
            }
            if(min > value)
            {
                min = value;
            }
        }
        
        answer += min + "" "" + max;
        
        return answer;
    }
}",,2023. 8. 25,65,3
2023. 8. 25 오후 10:50:51,김해찬,Unity,66 - JadenCase 문자열 만들기,"public class Solution {
    public string solution(string s) {
        string answer = """";
        
        bool trigger = false;
        
        for(int i = 0; i < s.Length; i++)
        {            
            if(s[i] == ' ')
            {
                trigger = false;
                answer += s[i];
            }
            else if(trigger == false && s[i] >= 'a' && s[i] <= 'z')
            {
                answer += (char)(s[i] - 32);
                trigger = true;
            }
            else if(trigger == true && s[i] >= 'A' && s[i] <= 'Z')
            {
                answer += (char)(s[i] + 32);
            }
            else
            {
                if(trigger == false)
                {
                    trigger = true;
                }
                answer += s[i];
            }
        }
            
        
        return answer;
    }
}",,2023. 8. 25,66,3
2023. 8. 25 오후 11:15:14,김해찬,Unity,67 - 이진 변환 반복하기,"using System;

public class Solution {
    public int[] solution(string s) {
        
        int zeroCount = 0;
        int binaryCount = 0;
        while(true)
        {
            if(s == ""1"")
            {
                break;
            }
            binaryCount++;
            
            foreach(char chr in s)
            {
                if(chr == '0')
                {
                    zeroCount++;
                }
            }
            
            s = s.Replace(""0"", "" "");
            s = s.Replace("" "", """");
        
            int x = s.Length;
            s = Convert.ToString(x, 2);
        }

        return new int[2]{binaryCount, zeroCount};
    }
}",,2023. 8. 25,67,3
2023. 8. 25 오후 11:24:28,김해찬,Unity,68 - 피보나치 수,"public class Solution {
    int fixedNumber = 1234567;
    int[] memo = new int[100001];
    
    public int fibo(int n)
    {
        if(n <= 1)
        {
            return n;
        }
        
        if (memo[n] > 0)
        {
            return memo[n] % fixedNumber;    
        }
        memo[n] = fibo(n-1) + fibo(n-2);
        return memo[n] % fixedNumber;
    }
    
    public int solution(int n) {
        int answer = fibo(n);
        return answer;
    }
}",,2023. 8. 25,68,3
2023. 8. 26 오전 12:43:24,김해찬,Unity,69 - 카펫,"using System;

public class Solution {
    public int[] solution(int brown, int yellow) {
        int[] answer = new int[2];
        
        int x = 0, y = 0;
        
        while(true)
        {
            x++;
            
            if((brown + yellow) % x == 0)
            {
                y = (brown + yellow) / x;
                
                if((x + y) == (brown / 2) + 2)
                {
                    if(x > y)
                    {
                        answer[0] = x;
                        answer[1] = y;
                    }
                    else
                    {
                        answer[0] = y;
                        answer[1] = x;
                    }
                    
                    return answer;
                }
            }
        }
        
        return answer;
    }
}",,2023. 8. 25,69,3
2023. 8. 26 오전 12:52:41,김해찬,Unity,70 - 예상 대진표,"using System;

class Solution
{
    public int solution(int n, int a, int b)
    {
        int answer = 1;
        
        for(int i = 0; i <= n / 2 - 1; i++)
        {
            if(a % 2 == 0 && b == a - 1)
            {
                break;
            }
            else if(a % 2 != 0 && b == a + 1)
            {
                break;
            }
            
            if(a % 2 == 0)
            {
                a = a / 2;
            }
            else
            {
                a = a / 2 + 1;
            }
            
            if(b % 2 == 0)
            {
                b = b / 2;
            }
            else
            {
                b = b / 2 + 1;
            } 
            
            answer++;
        }

        return answer;
    }
}",,2023. 8. 26,70,3
2023. 8. 26 오전 12:59:27,김해찬,Unity,71 - N개의 최소공배수,"public class Solution {
    public int GCD(int a, int b)
    {
	    if (b == 0)
	    {
		    return a;
	    }
	    else
	    {
		    return GCD(b, a % b);
	    }
    }
    
    public int LCM(int a, int b)
    {
        return (a * b) / GCD(a, b);
    }
    
    public int solution(int[] arr) {
        int answer = LCM(arr[0], arr[1]);
        
        for(int i = 2; i < arr.Length; i++)
        {
            answer = LCM(answer, arr[i]);
        }
        
        return answer;
    }
}",,2023. 8. 26,71,3
2023. 8. 26 오후 12:35:15,임규한,AI,18 - 없는 숫자 더하기,"def solution(numbers):
    return 45 - sum(numbers)",,2023. 8. 26,18,1
2023. 8. 26 오후 12:55:33,임규한,AI,19 - 제일 작은 수 제거하기,"def solution(arr):
    if len(arr) == 1:
        return [-1]
    else:
        arr.remove(min(arr))
        return arr",,2023. 8. 26,19,1
2023. 8. 26 오후 1:11:30,임규한,AI,20 - 가운데 글자 가져오기,"def solution(s):
    answer = """"
    if len(s)%2 == 1:
        return s[len(s)//2]
    else:
        return s[(len(s)//2-1) : (len(s)//2+1)]",,2023. 8. 26,20,1
2023. 8. 26 오후 1:15:31,최지연,AI,8 - 문자열을 정수로 바꾸기,"def solution(s):
    answer = int(s)
    return answer",https://github.com/jiyeonCoder/algorithmPractice/blob/main/8.%20%EB%AC%B8%EC%9E%90%EC%97%B4%EC%9D%84%20%EC%A0%95%EC%88%98%EB%A1%9C%20%EB%B0%94%EA%BE%B8%EA%B8%B0.py,2023. 8. 26,8,1
2023. 8. 26 오후 2:13:51,최지연,AI,9 - 정수 제곱근 판별,"def solution(n):
    answer = 0
    result = n % (n ** (1 / 2))
    if result == 0:
        return (n**(1/2)+1)**2
    else:
        return -1


print(solution(4))

",https://github.com/jiyeonCoder/algorithmPractice/blob/main/9.%20%EC%A0%95%EC%88%98%20%EC%A0%9C%EA%B3%B1%EA%B7%BC%20%ED%8C%90%EB%B3%84.py,2023. 8. 26,9,1
2023. 8. 26 오후 3:56:03,김호연,Unity,11 - 하샤드 수,"using System;

public class Solution 
{
    public bool solution(int x) 
    {
        bool answer = false; 
        // 일단 자릿수 더하기를 해야됨

        int sum = 0;  // 자릿수를 더한 변수
        string str = x.ToString();

        for (int i = 0; i < str.Length; i++)
        {
                sum += int.Parse(str[i].ToString());
        }

        if(x % sum == 0)
        {
            answer = true;
        }
            
            
        return answer;

    }
}",,2023. 8. 26,11,1
2023. 8. 26 오후 4:15:01,배인호,Unity,18 - 없는 숫자 더하기,"using System;

public class Solution
{
    public int solution(int[] numbers)
    {
        int[] compareNum = { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 };
        int answer = 0;

        for (int i = 0; i < numbers.Length; i++)
        {
            compareNum[numbers[i]] = 0;
        }

        for (int i = 0; i < compareNum.Length; i++)
        {
            answer += compareNum[i];
        }
        return answer;
    }
}
",https://github.com/cutlake2000/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/86051.%E2%80%85%EC%97%86%EB%8A%94%E2%80%85%EC%88%AB%EC%9E%90%E2%80%85%EB%8D%94%ED%95%98%EA%B8%B0,2023. 8. 26,18,1
2023. 8. 26 오후 4:20:26,권수민,AI,6 - x만큼 간격이 있는 n개의 숫자,"def solution(x, n):
#     answer = []
#     if not x >= -10000000 and x <= 10000000 and n <= 1000:
#         return
#     for i in range (1,n+1):
#         v = x
#         v *= i
#         answer.append(v)
#     return answer
    return [i * x for i in range(1,n+1)]",https://github.com/Stella-Kwon/git-github.com-Stella-Kwon-algorithm_prac/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12954.%E2%80%85x%EB%A7%8C%ED%81%BC%E2%80%85%EA%B0%84%EA%B2%A9%EC%9D%B4%E2%80%85%EC%9E%88%EB%8A%94%E2%80%85n%EA%B0%9C%EC%9D%98%E2%80%85%EC%88%AB%EC%9E%90/x%EB%A7%8C%ED%81%BC%E2%80%85%EA%B0%84%EA%B2%A9%EC%9D%B4%E2%80%85%EC%9E%88%EB%8A%94%E2%80%85n%EA%B0%9C%EC%9D%98%E2%80%85%EC%88%AB%EC%9E%90.py,2023. 8. 26,6,1
2023. 8. 26 오후 4:26:58,배인호,Unity,19 - 제일 작은 수 제거하기,"using System;
using System.Collections.Generic;
using System.Linq;

public class Solution
{
    public int[] solution(int[] arr)
    {
        List<int> list = arr.ToList();

        int[] answer = new int[] { };
        int minNum = arr[0];

        for (int i = 0; i < list.Count; i++)
        {
            if (minNum > arr[i])
            {
                minNum = arr[i];
            }
        }

        list.Remove(minNum);

        if (list.Count == 0)
        {
            list.Add(-1);
        }

        answer = list.ToArray();

        return answer;
    }
}
",https://github.com/cutlake2000/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12935.%E2%80%85%EC%A0%9C%EC%9D%BC%E2%80%85%EC%9E%91%EC%9D%80%E2%80%85%EC%88%98%E2%80%85%EC%A0%9C%EA%B1%B0%ED%95%98%EA%B8%B0,2023. 8. 26,19,1
2023. 8. 26 오후 4:36:26,배인호,Unity,20 - 가운데 글자 가져오기,"public class Solution
{
    public string solution(string s)
    {
        string answer = """";
        int length = s.Length;
        int middleIndex = length / 2;

        char[] stringToChar = new char[length];

        stringToChar = s.ToCharArray();

        if (length % 2 == 0)
        {
            answer = stringToChar.GetValue(middleIndex - 1).ToString();
        }

        answer += (string)stringToChar.GetValue(middleIndex).ToString();

        return answer;
    }
}
",https://github.com/cutlake2000/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12903.%E2%80%85%EA%B0%80%EC%9A%B4%EB%8D%B0%E2%80%85%EA%B8%80%EC%9E%90%E2%80%85%EA%B0%80%EC%A0%B8%EC%98%A4%EA%B8%B0,2023. 8. 26,20,1
2023. 8. 26 오후 4:39:48,배인호,Unity,21 - 수박수박수박수박수박수?,"public class Solution
{
    public string solution(int n)
    {
        string answer = """";
        string su = ""수"";
        string bak = ""박"";

        for (int i = 1; i <= n; i++)
        {
            if (i % 2 != 0)
            {
                answer += su;
            }
            else
            {
                answer += bak;
            }
        }
        return answer;
    }
}
",https://github.com/cutlake2000/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12922.%E2%80%85%EC%88%98%EB%B0%95%EC%88%98%EB%B0%95%EC%88%98%EB%B0%95%EC%88%98%EB%B0%95%EC%88%98%EB%B0%95%EC%88%98%EF%BC%9F,2023. 8. 26,21,1
2023. 8. 26 오후 4:51:27,배인호,Unity,22 - 내적,"using System;

public class Solution
{
    public long solution(int[] a, int[] b)
    {
        int index = a.Length;
        long answer = 0;

        for (int i = 0; i < index; i++)
        {
            answer += (a[i] * b[i]);
        }
        return answer;
    }
}
",https://github.com/cutlake2000/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/70128.%E2%80%85%EB%82%B4%EC%A0%81,2023. 8. 26,22,1
2023. 8. 26 오후 5:03:10,배인호,Unity,23 - 약수의 개수와 덧셈,"using System;

public class Solution
{
    public int solution(int left, int right)
    {
        int answer = 0;
        int count;

        for (int i = left; i <= right; i++)
        {
            count = 2;
            if (IsEvenNum(i) == false)
            {
                if (i % (i / 2 + 1) == 0)
                {
                    count++;
                }
            }

            for (int j = 2; j <= i / 2; j++)
            {
                if (i % j == 0)
                {
                    count++;
                }
            }

            if (IsEvenNum(count) == true)
            {
                answer += i;
            }
            else
            {
                answer -= i;
            }
        }
        return answer;
    }

    public bool IsEvenNum(int input)
    {
        if (input % 2 == 0)
        {
            return true;
        }
        else
            return false;
    }
}
",https://github.com/cutlake2000/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/77884.%E2%80%85%EC%95%BD%EC%88%98%EC%9D%98%E2%80%85%EA%B0%9C%EC%88%98%EC%99%80%E2%80%85%EB%8D%A7%EC%85%88,2023. 8. 26,23,1
2023. 8. 26 오후 6:06:16,김해찬,Unity,72 - 멀리 뛰기,"public class Solution {
    long[] memo = new long[2001];
    
    public long Jump(long n)
    {
        for(int i = 3; i < n+1; i++)
        {
            memo[i] = memo[i-1] + memo[i-2] % 1234567;
        }
        
        return memo[n];
    }
    
    public long solution(int n) {
        memo[1] = 1;
        memo[2] = 2;
        
        long answer = Jump(n);
        return answer % 1234567;
    }
}",,2023. 8. 26,72,3
2023. 8. 26 오후 6:06:49,김해찬,Unity,73 - 귤 고르기,"using System;
using System.Collections;
using System.Collections.Generic;

public class Solution {
    
    public int solution(int k, int[] tangerine) {
        int answer = 0;
        Dictionary<int, int> dic = new Dictionary<int, int>();
        
        for(int i = 0; i < tangerine.Length; i++)
        {
            int temp = 0;
            
            bool isExist = dic.TryGetValue(tangerine[i], out temp);
            
            if(isExist == true)
            {
                dic[tangerine[i]] = temp + 1;
            }
            else
            {
                dic.Add(tangerine[i], 1);
            }
        }
        
        int max = int.MinValue;
        List<int> lst = new List<int>();
        
        foreach(KeyValuePair<int, int> element in dic)
        {
            lst.Add(element.Value);
            if(max <= element.Value)
            {
                max = element.Value;
            }
        }
        
        lst.Sort();
        int sum = 0;
        
        for(int i = lst.Count - 1; i > - 1; i--)
        {
            if(sum >= k)
            {
                break;
            }
            else
            {
                answer++;
                sum += lst[i];
            }
        }
        
        return answer;
    }
}",,2023. 8. 26,73,3
2023. 8. 26 오후 10:16:17,이민열,Unity,1 - 짝수와 홀수,"public class Solution {
    public string solution(int num) {
        string answer = """";

        if(num % 2 == 0) {
            answer = ""Even"";
        } else {
            answer = ""Odd"";
        }
        
        return answer;
    }
}",https://github.com/LeeMinyeol/Algorithm,2023. 8. 26,1,1
2023. 8. 26 오후 10:16:55,이민열,Unity,2 - 평균 구하기,"public class Solution {
    public double solution(int[] arr) {
        double answer = 0;
        int sum = 0;
        for(int i = 0; i < arr.Length; i++) {
            sum += arr[i];
        }
        answer = (double)sum / arr.Length;
        return answer;
    }
}",https://github.com/LeeMinyeol/Algorithm,2023. 8. 26,2,1
2023. 8. 27 오전 12:08:02,조영오,Unity,14 - 서울에서 김서방 찾기,"public class Solution {
    public string solution(string[] seoul) {
        string answer = """";
        for(int i = 0 ;i<seoul.Length;i++){
            if(seoul[i] == ""Kim"")
                answer = ""김서방은 "" + (i) + ""에 있다"";
        }
        
        return answer;
    }
}",,2023. 8. 27,14,1
2023. 8. 27 오전 12:20:56,조영오,Unity,15 - 나누어 떨어지는 숫자,"using System;
using System.Collections.Generic;

public class Solution {
    public int[] solution(int[] arr, int divisor) {
        
        List<int> answerList = new List<int>{};
        
        foreach(int n in arr){
            if(n % divisor == 0){
                answerList.Add(n);
            }
        }        
        
        int[] answer;
        
        if(answerList.Count == 0){answer = new int[1]; answer[0] = -1;}
        else{
            answer = new int[answerList.Count];
            answerList.CopyTo(answer);
            Array.Sort(answer);
        }
        
        return answer;
    }
}",,2023. 8. 27,15,1
2023. 8. 27 오전 12:26:52,조영오,Unity,16 - 음양 더하기,"using System;

public class Solution {
    public int solution(int[] absolutes, bool[] signs) {
        int answer = 0;
        int abs = 0;
        
        for(int i = 0 ; i < absolutes.Length ; i++){
            abs = absolutes[i];
            
            if(!signs[i]){abs *= -1;}
            answer += abs;
        }
        
        return answer;
    }
}",,2023. 8. 27,16,1
2023. 8. 27 오전 2:04:26,장현웅,AI,3 - 자릿수 더하기,"def solution(n):
    answer = 0
    
    n_list = []
    
    for i in str(n) :
        n_list.append(int(i))
        answer = sum(n_list)
    return answer

# def solution(n):
#     answer = 0
    
#     for i in str(n) :
#         answer = answer + int(i)
#     return answer",https://github.com/HyeonwoongJang/Algorithm/commit/e77a5874f82d109656dc5b8a0965ee40d545c6c7,2023. 8. 26,3,1
2023. 8. 27 오후 12:36:41,김경환,Unity,1 - 짝수와 홀수,"public class Solution {
    public string solution(int num) {
        if (num % 2 == 0)
            return ""Even"";
        return ""Odd"";
    }
}",https://github.com/kkh9700/algorithm/blob/main/OddEven.cs,2023. 8. 27,1,1
2023. 8. 27 오후 12:41:07,김경환,Unity,2 - 평균 구하기,"public class Solution {
     public double solution(int[] arr) {
         double sum = 0;
         int length = arr.Length;
                  for(int i = 0; i < length; i++)
         {
             sum += arr[i];
         }
                  return sum/length;
     }
 }",https://github.com/kkh9700/algorithm/blob/main/Average.cs,2023. 8. 27,2,1
2023. 8. 27 오후 12:43:57,김경환,Unity,3 - 자릿수 더하기,"using System;

public class Solution {
    public int solution(int n) {
        int answer = 0;
        
        while(n != 0)
        {
            answer += n%10;
            n/=10;
        }
        
        return answer;
    }
}",https://github.com/kkh9700/algorithm,2023. 8. 27,3,1
2023. 8. 27 오후 12:48:37,김경환,Unity,4 - 약수의 합,"using System;
public class Solution {
    public int solution(int n) {
        int answer = 0;
        
        for(int i = 1; i <= n; i++)
        {
            if(n%i==0)
            {
                answer += i;
            }
        }
        
        return answer;
    }
}",https://github.com/kkh9700/algorithm,2023. 8. 27,4,1
2023. 8. 27 오후 12:52:19,김경환,Unity,5 - 나머지가 1이 되는 수 찾기,"using System;

public class Solution
{
    public int solution(int n)
    {
        for (int i = 2; i < n; i++)
        {
            if ((n - 1) % i == 0)
                return i;
        }

        return -1;
    }
}",https://github.com/kkh9700/algorithm,2023. 8. 27,5,1
2023. 8. 27 오후 12:56:14,김경환,Unity,6 - x만큼 간격이 있는 n개의 숫자,"public class Solution {
    public long[] solution(int x, int n) {
        long[] answer = new long[n];
        
        for(int i = 0; i < n; i++)
        {
            answer[i] = (long)x * (long)(i+1);
        }
        
        return answer;
    }
}",https://github.com/kkh9700/algorithm,2023. 8. 27,6,1
2023. 8. 27 오후 1:05:33,김경환,Unity,7 - 자연수 뒤집어 배열로 만들기,"using System;

public class Solution
{
    public int[] solution(long n)
    {
        int length = (int)Math.Floor(Math.Log10(n) + 1);
        int[] answer = new int[length];

        for (int i = 0; i < length; i++)
        {
            answer[i] = (int)(n % 10);
            n /= 10;
        }

        return answer;
    }
}",https://github.com/kkh9700/algorithm,2023. 8. 27,7,1
2023. 8. 27 오후 1:10:24,김경환,Unity,8 - 문자열을 정수로 바꾸기,"public class Solution {
    public int solution(string s) {
        int answer = 0;
        bool minus = false;
        for(int i = 0; i < s.Length; i++)
        {
            char c = s[i];
            if(c == '-')
            {
                minus = true;
            }
            else if(c == '+')
            {
                continue;
            }
            else
            {
                answer *= 10;
                answer += (c - '0');
            }
            
        }
        
        return minus ? -answer : answer;
    }
}",https://github.com/kkh9700/algorithm,2023. 8. 27,8,1
2023. 8. 27 오후 1:14:27,김경환,Unity,9 - 정수 제곱근 판별,"using System;

public class Solution {
    public long solution(long n) {
        double sqrt = Math.Sqrt(n);
        
        if(sqrt % 1 != 0)
            return -1;
        
        return (long)(sqrt+1) * (long)(sqrt+1);;
    }
}",https://github.com/kkh9700/algorithm,2023. 8. 27,9,1
2023. 8. 27 오후 1:19:12,김경환,Unity,10 - 정수 내림차순으로 배치하기,"using System;

public class Solution {
    public long solution(long n) {
        int length = (int)Math.Floor(Math.Log10(n) + 1);
        int[] array = new int[length];
        
        for(int i = 0; i < length; i++)
        {
            array[i] = (int)(n % 10);
            n /= 10;
        }
        
        Array.Sort(array);
        
        long answer = 0;
        
        for(int i = length - 1; i >= 0; i--)
        {
            answer *= 10;
            answer += array[i];
        }
        
        return answer;
    }
}",https://github.com/kkh9700/algorithm,2023. 8. 27,10,1
2023. 8. 27 오후 1:40:13,김민상,Unity,32 - 삼총사,"public class Solution {
    public int solution(int[] number) {
        int answer = 0;
        
        for (int i = 0; i < number.Length - 2; i++)
        {
            for (int j = i + 1; j < number.Length - 1; j++)
            {
                for (int k = j + 1; k < number.Length; k++)
                {
                    if (number[i] + number[j] + number[k] == 0)
                        answer += 1;
                }
            }
        }
        return answer;
    }
}",,2023. 8. 27,32,2
2023. 8. 27 오후 1:54:50,김민상,Unity,33 - 크기가 작은 부분,"public class Solution {
    public int solution(string t, string p) {
        int answer = 0;
        long num = long.Parse(p);
        
        for (int i = 0; i < t.Length - p.Length + 1; i++)
        {
            if (long.Parse(t.Substring(i, p.Length)) <= num)
                answer += 1;
        }
        
        return answer;
    }
}",,2023. 8. 27,33,2
2023. 8. 27 오후 2:42:17,정재호,Unity,32 - 삼총사,"using System;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Linq;

public class Solution
{
    public int solution(int[] number)
    {
        int count = 0;

        for (int i = 0; i < number.Length; i++)
        {
            for (int j = 1 + i; j < number.Length; j++)
            {
                for (int k = 1 + j; k < number.Length; k++)
                {
                    if (number[i] + number[j] + number[k] == 0)
                    {
                        count++;
                    }
                }
            }
        }
        return count;
    }
}",,2023. 8. 27,32,2
2023. 8. 27 오후 3:03:49,정재호,Unity,33 - 크기가 작은 부분,"using System;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Linq;

public class Solution
{
    public int solution(string t, string p)
    {
        int answer = 0;

        char[] chars = t.ToCharArray();
        long tLen = t.Length;
        long pLen = p.Length;

        for (int i = 0; i < tLen - pLen + 1; i++)
        {
            string three = """";

            for (int j = 0; j < pLen; j++)
            {
                three += chars[j+i].ToString();
            }

            if (long.Parse(three) <= long.Parse(p))
            {
                answer++;
            }
        }

        return answer;
    }
}",,2023. 8. 27,33,2
2023. 8. 27 오후 3:19:23,김민상,Unity,34 - 최소직사각형,"using System;
using System.Linq;

public class Solution
{
    public int solution(int[,] sizes)
    {
        int[] maxs = new int[sizes.GetLength(0)];
        int[] mins = new int[sizes.GetLength(0)];

        for (int i = 0; i < sizes.GetLength(0); i++)
        {
            if (sizes[i,0] > sizes[i,1])
            {
                maxs[i] = sizes[i, 0];
                mins[i] = sizes[i, 1];
            }
            else
            {
                maxs[i] = sizes[i, 1];
                mins[i] = sizes[i, 0];
            }
        }
        
        return maxs.Max() * mins.Max();
    }
}",,2023. 8. 27,34,2
2023. 8. 27 오후 3:40:28,김민상,Unity,35 - 시저 암호,"public class Solution
{
    public string solution(string s, int n)
    {
        string big = ""ABCDEFGHIJKLMNOPQRSTUVWXYZ"";
        string small = ""abcdefghijklmnopqrstuvwxyz"";

        string answer = """";

        foreach (char l in s)
        {
            string now = l.ToString();

            if (big.Contains(now))
            {
                answer += big[(big.IndexOf(now) + n) % 26];
            }
            else if (small.Contains(now))
            {
                answer += small[(small.IndexOf(now) + n) % 26];
            }
            else
                answer += "" "";
        }

        return answer;
    }
}",,2023. 8. 27,35,2
2023. 8. 27 오후 4:41:36,정재호,Unity,34 - 최소직사각형,"using System;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Linq;

public class Solution
{
    public int solution(int[,] sizes)
    {
        int answer = 0;
        int horizon = 0;
        int vertical = 0;

        for (int i = 0; i < sizes.GetLength(0); i++)
        {
            int max = Math.Max(sizes[i,0], sizes[i, 1]);
            int min = Math.Min(sizes[i, 0], sizes[i, 1]);

            if (horizon < max)
            {
                horizon = max;
            }
            if (vertical < min)
            {
                vertical = min;
            }
        }

        return answer = horizon * vertical;
    }
}",,2023. 8. 27,34,2
2023. 8. 27 오후 4:41:40,이진범,AI,7 - 자연수 뒤집어 배열로 만들기,"def admin(a):
    b = []
    while a > 0:
        b_b = a % 10
        b.append(b_b)
        a //= 10
        return b


a = 12345
result = admin(a)
print(result)
",,2023. 8. 27,7,1
2023. 8. 27 오후 5:12:34,이진범,AI,8 - 문자열을 정수로 바꾸기,"def solution(s):
    answer = int(a)
    return answer


a = ""-12345""
result = solution(a)
print(result)
",,2023. 8. 27,8,1
2023. 8. 27 오후 5:35:02,김해찬,Unity,74 - 괄호 회전하기,"using System;
using System.Collections;
using System.Collections.Generic;

public class Solution
{
    public bool Check(Queue<char> queue)
    {
        Stack<char> stk = new Stack<char>();
        
        char[] left = new char[3]{'(', '[', '{'};
        char[] right = new char[3]{')', ']', '}'};
        
        foreach(char element in queue)
        {
            if(stk.Count == 0)
            {
                foreach(char r in right)
                {
                    if(element == r)
                    {
                        return false;
                    }
                }
                
                stk.Push(element);
            }
            else
            {
                switch(element)
                {
                    case ')':
                        if(stk.Peek() == '(')
                        {
                            stk.Pop();
                        }
                        else
                        {
                            return false;
                        }
                        break;
                    case ']':
                        if(stk.Peek() == '[')
                        {
                            stk.Pop();
                        }
                        else
                        {
                            return false;
                        }
                        break;
                    case '}':
                        if(stk.Peek() == '{')
                        {
                            stk.Pop();
                        }
                        else
                        {
                            return false;
                        }
                        break;
                    default :
                        stk.Push(element);
                        break;
                }
            }
        }
        
        if(stk.Count != 0)
        {
            return false;
        }
        else
        {
            return true;
        }
    }
    
    public int solution(string s)
    {
        int answer = 0;
        Queue<char> que = new Queue<char>();
        
        foreach(char element in s)
        {
            que.Enqueue(element);
        }
        
        for(int i = 0; i < s.Length; i++)
        {
            bool isCorrect = Check(que);
            
            if(isCorrect == true)
            {
                answer++;
            }
            
            que.Enqueue(que.Dequeue());
        }
        
        return answer;
    }
}",,2023. 8. 27,74,3
2023. 8. 27 오후 5:35:31,김해찬,Unity,75 - 연속 부분 수열 합의 개수,"using System;
using System.Collections;
using System.Collections.Generic;

public class Solution
{
    public int solution(int[] elements)
    {
        int answer = 0;
        HashSet<int> answers = new HashSet<int>();
        
        for(int i = 1; i < elements.Length+1; i++)
        {
            for(int j = 0; j < elements.Length; j++)
            {
                int sum = 0;
                
                for(int k = j; k < i + j; k++)
                {
                    if(k >= elements.Length)
                    {
                        sum += elements[k - elements.Length];
                    }
                    else
                    {
                        sum += elements[k];
                    }
                }
                
                if(answers.Add(sum) == true)
                {
                    answer++;
                }
            }
        }
        
        return answer;
    }
}",,2023. 8. 27,75,3
2023. 8. 27 오후 5:40:21,이진범,AI,9 - 정수 제곱근 판별,"def solution(a):
    b = int(a ** 0.5)

    if b * b == a:
        return (b + 1) ** 2
    else:
        return -1


print(solution(121))
print(solution(3))
",,2023. 8. 27,9,1
2023. 8. 27 오후 6:06:14,최지연,AI,10 - 정수 내림차순으로 배치하기,"def solution(n):
    answer = []
    for i in str(n):
        answer.append(i)
    answer.sort(reverse=True)
    string_value = ''.join(answer)
    return int(string_value)",https://github.com/jiyeonCoder/algorithmPractice/blob/main/10.%20%EC%A0%95%EC%88%98%20%EB%82%B4%EB%A6%BC%EC%B0%A8%EC%88%9C%EC%9C%BC%EB%A1%9C%20%EB%B0%B0%EC%B9%98%ED%95%98%EA%B8%B0.py,2023. 8. 27,10,1
2023. 8. 27 오후 6:22:16,임전혁,Unity,126 - 요격 시스템,"using System;
using System.Collections.Generic;
using System.Linq;

public class Solution {
    public int solution(int[,] targets) {
        int answer = 0;
        
        List<Missile> list = new List<Missile>();

        for (int i = 0; i < targets.GetLength(0); i++)
            list.Add( new Missile(targets[i, 0], targets[i, 1]) );

        list = list.OrderBy( x => x.Start ).ToList();

        int tail = -1;
        foreach (Missile missile in list)
        {
            if (missile.End < tail)
            {
                tail = missile.End;
            }
            else if (missile.Start >= tail)
            {
                answer++;
                tail = missile.End;
            }
        }
        
        return answer;
    }
}

class Missile
{
    public int Start { get; set; }
    public int End { get; set; }

    public Missile(int start, int end)
    {
        Start = start;
        End = end;
    }
}",https://github.com/yarogono/Algorithm_CSharp/blob/master/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/unrated/181188.%E2%80%85%EC%9A%94%EA%B2%A9%E2%80%85%EC%8B%9C%EC%8A%A4%ED%85%9C/%EC%9A%94%EA%B2%A9%E2%80%85%EC%8B%9C%EC%8A%A4%ED%85%9C.cs,2023. 8. 27,126,5
2023. 8. 27 오후 6:36:48,임전혁,Unity,24 - 문자열 내림차순으로 배치하기,"using System;
using System.Text;

public class Solution {
    public string solution(string s) {
        StringBuilder sb = new StringBuilder();
        char[] charArr = new char[s.Length];
        
        for (int i = 0; i < s.Length; i++)
            charArr[i] = s[i];
        
        Array.Sort(charArr);
        Array.Reverse(charArr);
        
        foreach (char word in charArr)
            sb.Append(word);
        
        return sb.ToString();
    }
}",https://github.com/yarogono/Algorithm_CSharp/blob/master/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12917.%E2%80%85%EB%AC%B8%EC%9E%90%EC%97%B4%E2%80%85%EB%82%B4%EB%A6%BC%EC%B0%A8%EC%88%9C%EC%9C%BC%EB%A1%9C%E2%80%85%EB%B0%B0%EC%B9%98%ED%95%98%EA%B8%B0/%EB%AC%B8%EC%9E%90%EC%97%B4%E2%80%85%EB%82%B4%EB%A6%BC%EC%B0%A8%EC%88%9C%EC%9C%BC%EB%A1%9C%E2%80%85%EB%B0%B0%EC%B9%98%ED%95%98%EA%B8%B0.cs,2023. 8. 27,24,1
2023. 8. 27 오후 9:08:44,배인호,Unity,24 - 문자열 내림차순으로 배치하기,"using System.Collections.Generic;
using System.Linq;

public class Solution
{
    public string solution(string s)
    {
        string answer = """";
        int length = s.Length;
        char[] toCharArray = new char[length];
        List<char> capital = new List<char>();
        List<char> lower = new List<char>();

        toCharArray = s.ToCharArray();

        for (int i = 0; i < length; i++)
        {
            if ('A' <= toCharArray[i] && toCharArray[i] <= 'Z')
            {
                capital.Add(toCharArray[i]);
            }
            else
            {
                lower.Add(toCharArray[i]);
            }
        }

        lower = lower.OrderByDescending(p => p).ToList();
        capital = capital.OrderByDescending(p => p).ToList();

        answer = new string(lower.ToArray()) + new string(capital.ToArray());

        return answer;
    }
}
",https://github.com/cutlake2000/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12917.%E2%80%85%EB%AC%B8%EC%9E%90%EC%97%B4%E2%80%85%EB%82%B4%EB%A6%BC%EC%B0%A8%EC%88%9C%EC%9C%BC%EB%A1%9C%E2%80%85%EB%B0%B0%EC%B9%98%ED%95%98%EA%B8%B0,2023. 8. 27,24,1
2023. 8. 27 오후 9:46:11,장현웅,AI,4 - 약수의 합,"def solution(n):
    answer = 0

    d = range(1,3000)

    arr = []

    for i in d :
        if n >= i and n%i == 0:
            arr.append(i)
            answer = sum(arr)
    return answer",https://github.com/HyeonwoongJang/Algorithm.git,2023. 8. 27,4,1
2023. 8. 27 오후 9:51:34,김호연,Unity,12 - 두 정수 사이의 합,"public class Solution {
    public long solution(int a, int b)
    {
        long answer = 0;
        long sum = 0;  // a+x를 위한 변수
        //모든 정수의 합을 더하는 방법 => a + a+1 +...+ b
                
        if(a < b)  // b가 큰 경우와 a가 큰 경우 둘 다 받기 위해
        {
            for (int i = 0; i < b - a; i++)
            {
                sum += a + i;    // a보다 1 큰 수를 더해야함. 0부터 시작하므로 a도 포함됨
                answer = sum + b;  //a보다 큰 수를 더한 뒤 b까지 더해야됨.
            }

        }
        else if(a > b)  //a가 큰 경우. 식은 똑같은데 b랑 a 위치만 바꿈
        {
            for (int i = 0; i < a - b; i++)
            {
                sum += b + i;
                answer = sum + a;
            }
        }
        else
        {
            answer = a;  // 수가 같으면 아무거나 출력.
        }

        return answer;
    }
}",,2023. 8. 27,12,1
2023. 8. 27 오후 10:48:05,김대열,Unity,114 - 미로 탈출,"//
//  ExitMaze.cpp
//  ProblemSolving_W1
//
//  Created by 김대열 on 2023/08/25.
//
#include <iostream>
#include <string>
#include <vector>
#include <queue>


int dx[4] = {1,0,-1,0};
int dy[4] = {0,1,0,-1};
int m ;
int n;
using namespace std;
int bfs(int startX, int startY, int destX, int destY, vector<string> maps){
    
    
    queue<pair<pair<int,int>,int>> q;
    pair<pair<int, int>, int> pointAndLen;
    pair<int, int> point;
    int result = 0;
    
    point.first = startX;
    point.second = startY;
    bool visited[101][101] = {false,};
    
    pointAndLen.first = point;
    pointAndLen.second = 0;
    q.push(pointAndLen);
    
    while(!q.empty()){
        auto current = q.front();
        q.pop();
        int x = current.first.first;
        int y = current.first.second;
        int l = current.second;
        
        
        if(x == destX && y == destY){
            result = l ;
            break;
        }
        
        for(int i = 0; i < 4; i ++){
            if(!visited[y+dy[i]][x+dx[i]] && 
                x + dx[i] >=0 && 
                x + dx[i] < n && 
               y + dy[i] >= 0 && 
               y + dy[i] < m &&
               maps[y + dy[i]][x + dx[i]] != 'X'
              ){
                pair<pair<int,int>, int> next;
                pair<int, int> nextPoint;
                nextPoint.first = x + dx[i];
                nextPoint.second = y + dy[i];
                next.first =  nextPoint;
                next.second = l + 1;
                visited[y+dy[i]][x+dx[i]] = true;
                q.push(next);
            }
        }
    }
    
    return result;
}

int solution(vector<string> maps) {
    int answer = 0;
    int startX;
    int startY;
    int leverX;
    int leverY;
    int exitX;
    int exitY;
    
    int len =0;
    m = maps.size();
    n = maps[0].length();
    
    
    for(int i = 0; i < maps.size(); i++){
        for(int j = 0; j < maps[i].length(); j++){
            if(maps[i][j] == 'S'){
                startX = j;
                startY = i;
            }else if(maps[i][j] == 'L'){
                leverX = j;
                leverY = i;
            }else if(maps[i][j] == 'E'){
                exitX = j;
                exitY = i;
            }
        }
    }
    
    int sToL = bfs(leverX,leverY,startX,startY, maps);
    if(sToL == 0){
        return -1;
    }
    int lToE = bfs(exitX,exitY,leverX,leverY, maps);
    if(lToE == 0){
        return -1;
    }
    
    return sToL + lToE;
}
",,2023. 8. 27,114,5
2023. 8. 28 오전 2:50:11,김우진,AI,3 - 자릿수 더하기,"def solution(n):
    answer = 0
    for N in str(n):
        answer = answer + int(N)
    
    return answer

print(solution(12))",,2023. 8. 28,3,1
2023. 8. 28 오전 9:07:43,양수홍,AI,23 - 약수의 개수와 덧셈,"def solution(left, right):
    answer = 0
    for num in range(left,right+1):
        cnt=0
        for i in range(1,num+1):
            if num%i==0:
                cnt+=1
        if cnt%2==0:
            answer+=num
        else:
            answer-=num
    return answer",,2023. 8. 23,23,1
2023. 8. 28 오전 9:10:15,공혜진,AI,8 - 문자열을 정수로 바꾸기,"def solution(s):
    answer = int(s)
    return answer",,2023. 8. 28,8,1
2023. 8. 28 오전 9:11:07,양수홍,AI,24 - 문자열 내림차순으로 배치하기,"def solution(s):
    answer = ''
    list_s=list(s)
    list_s.sort(reverse=True)
    for c in list(list_s):
        answer+=c
    return answer",,2023. 8. 23,24,1
2023. 8. 28 오전 9:12:26,이진범,AI,10 - 정수 내림차순으로 배치하기,"def solution(n):
    a = str(n)
    l = list(a)
    l.sort(reverse=True)
    l_l = ''.join(l)
    i = int(l_l)
    return i


n = 118372
print(solution(n))
",,2023. 8. 28,10,1
2023. 8. 28 오전 9:13:21,조장원,AI,3 - 자릿수 더하기,"def solution(n):
    
    result = 0
    
    for i in str(n):
        result += int(i)
        
    return result",https://github.com/jangwonne/code_test/commit/9048402725afe77b4631907c5dfcd46e74011fce,2023. 8. 28,3,1
2023. 8. 28 오전 9:13:42,김지우,AI,7 - 자연수 뒤집어 배열로 만들기,"def solution(n):
    answer = [int(i) for i in reversed(str(n))]
    return answer",,2023. 8. 28,7,1
2023. 8. 28 오전 9:13:55,이진형,AI,14 - 서울에서 김서방 찾기,"def solution(seoul):
    index=len(seoul)
    for i in range(index):
        if seoul[i]=='Kim':
            return ""김서방은 {}에 있다"".format(i)",,2023. 8. 28,14,1
2023. 8. 28 오전 9:15:07,강상찬,AI,13 - 콜라츠 추측,"def solution(num):
    cnt = 0
    if num == 1:
        return 0
    while (num != 1):
        if cnt == 500:
            return -1
        cnt += 1
        if(num%2 == 0):
            num = num/2
        else:
            num = num*3 + 1
    return cnt",,2023. 8. 28,13,1
2023. 8. 28 오전 9:15:23,양수홍,AI,25 - 부족한 금액 계산하기,"def solution(price, money, count):
    cost=0
    for i in range(1,count+1):
        cost+=i*price
    answer=cost-money
    if answer<0:
        answer=0
    return answer",,2023. 8. 28,25,1
2023. 8. 28 오전 9:15:30,정범수,AI,27 - 행렬의 덧셈,"def solution(arr1, arr2):
    return [[arr1[i][j]+arr2[i][j] for j in range(len(arr1[i]))] for i in range(len(arr1))]",https://github.com/sudog1/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12950.%E2%80%85%ED%96%89%EB%A0%AC%EC%9D%98%E2%80%85%EB%8D%A7%EC%85%88,2023. 8. 28,27,1
2023. 8. 28 오전 9:15:32,김지우,AI,8 - 문자열을 정수로 바꾸기,"def solution(s):
    answer = int(s)
    
    return answer",,2023. 8. 28,8,1
2023. 8. 28 오전 9:17:50,조장원,AI,4 - 약수의 합,"def solution(n):
    answer = 0
    
    for i in range(1, n+1):
        if n % i == 0:
            
            answer += i
    return answer",https://github.com/jangwonne/code_test/commit/d0eb71ca5aa2b325aea31b8ac5e7beeb277ccd75,2023. 8. 28,4,1
2023. 8. 28 오전 9:18:02,남의서,AI,1 - 짝수와 홀수,"def solution(num):
    if num % 2 == 0:
        answer = 'Even'
    else:
        answer = ""Odd""
    return answer",https://github.com/2021147566,2023. 8. 28,1,1
2023. 8. 28 오전 9:18:08,정범수,AI,28 - 직사각형 별찍기,"n, m = map(int, input().split())
line = '*'*n
for _ in range(m):
    print(line)",https://github.com/sudog1/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12969.%E2%80%85%EC%A7%81%EC%82%AC%EA%B0%81%ED%98%95%E2%80%85%EB%B3%84%EC%B0%8D%EA%B8%B0,2023. 8. 28,28,1
2023. 8. 28 오전 9:20:05,강상찬,AI,14 - 서울에서 김서방 찾기,"def solution(seoul):
    location = seoul.index('Kim')
    return f""김서방은 {location}에 있다""",,2023. 8. 28,14,1
2023. 8. 28 오전 9:20:26,차명경,AI,4 - 약수의 합,"def solution(n):
    answer=[] #리스트로 받아야하니까 
    for i in range(1, n +1 ): #숫자 범위를 돌렸을 때
        if n % i == 0:
            answer.append(i)
    return sum (answer)",,2023. 8. 28,4,1
2023. 8. 28 오전 9:21:26,정범수,AI,29 - 최대공약수와 최소공배수,"from math import gcd

def solution(n, m):
    return [gcd(n, m), n*m / gcd(n, m)]",https://github.com/sudog1/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12940.%E2%80%85%EC%B5%9C%EB%8C%80%EA%B3%B5%EC%95%BD%EC%88%98%EC%99%80%E2%80%85%EC%B5%9C%EC%86%8C%EA%B3%B5%EB%B0%B0%EC%88%98,2023. 8. 28,29,1
2023. 8. 28 오전 9:21:38,장현웅,AI,5 - 나머지가 1이 되는 수 찾기,"def solution(n):
    answer = 0
    x = []
    
    for i in range(1,999999):
        if n > i and (n%i == 1):
            x.append(i)
            answer = min(x)    
    return answer",https://github.com/HyeonwoongJang/Algorithm.git,2023. 8. 28,5,1
2023. 8. 28 오전 9:22:09,최지연,AI,11 - 하샤드 수,"def solution(x):
    input_list = list(str(x))
    add_val = 0
    for i in input_list:
        add_val += int(i)
    if x % add_val == 0:
        return True
    else:
        return False",https://github.com/jiyeonCoder/algorithmPractice/blob/main/11.%20%ED%95%98%EC%83%A4%EB%93%9C%20%EC%88%98.py,2023. 8. 28,11,1
2023. 8. 28 오전 9:23:14,남의서,AI,2 - 평균 구하기,"def solution(arr):
    answer = sum(arr) / len(arr)
    return answer",https://github.com/2021147566,2023. 8. 28,2,1
2023. 8. 28 오전 9:23:29,양수홍,AI,26 - 문자열 다루기 기본,"def solution(s):
    if len(s)==4 or len(s)==6:
        for c in s:
            if not c.isdigit():
                return False
        return True
    else :
        return False",,2023. 8. 28,26,1
2023. 8. 28 오전 9:23:55,김지우,AI,9 - 정수 제곱근 판별,"import math
def solution(n):
    a = math.sqrt(n)
    if int(a) == a:
       return (a+1)**2
    else:
       return -1",,2023. 8. 28,9,1
2023. 8. 28 오전 9:24:24,정범수,AI,30 - 3진법 뒤집기,"def tenToThreeRvs(n):
    result = []
    while n >= 3:
        n, s = divmod(n, 3)
        result.append(str(s))
    if n > 0:
        result.append(str(n))
    result = ''.join(result)
    return result
    
def solution(n):
    answer = int(tenToThreeRvs(n), 3)
    return answer",https://github.com/sudog1/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/68935.%E2%80%853%EC%A7%84%EB%B2%95%E2%80%85%EB%92%A4%EC%A7%91%EA%B8%B0,2023. 8. 28,30,1
2023. 8. 28 오전 9:25:55,명세인,AI,12 - 두 정수 사이의 합,"def solution(a, b):
    answer = 0
    if a > b:
        for i in range(b, a+1):
            answer += i
    elif b > a:
        for i in range(a, b+1):
            answer += i
    else:
        answer = a
    return answer",https://github.com/playersein/Coding_Test/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12912.%E2%80%85%EB%91%90%E2%80%85%EC%A0%95%EC%88%98%E2%80%85%EC%82%AC%EC%9D%B4%EC%9D%98%E2%80%85%ED%95%A9,2023. 8. 28,12,1
2023. 8. 28 오전 9:26:13,조호진,AI,13 - 콜라츠 추측,"def solution(num):
    answer = 0
    while num != 1:

        if num % 2 == 0:
            num = num / 2
            answer += 1
            
 
        elif num % 2 == 1:
            num = (num*3)+1
            answer +=1
        if answer >500:
            answer = -1
            break
    return answer
        ",https://github.com/bm4706/Algorithm_practice/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1,2023. 8. 28,13,1
2023. 8. 28 오전 9:26:21,김정규,AI,8 - 문자열을 정수로 바꾸기,"def solution(s):
    answer = 0
    answer = int(s)
    return answer",https://github.com/JungGyu00/algorithm,2023. 8. 28,8,1
2023. 8. 28 오전 9:26:34,강상찬,AI,15 - 나누어 떨어지는 숫자,"def solution(arr, divisor):
    answer = []
    for i in arr:
        if (i%divisor == 0):
            answer.append(i)
    return ([-1] if answer == [] else sorted(answer))",,2023. 8. 28,15,1
2023. 8. 28 오전 9:27:11,남의서,AI,3 - 자릿수 더하기,"def solution(n):
    answer = 0
    for i in str(n):
        answer += int(i)
    return answer",https://github.com/2021147566,2023. 8. 28,3,1
2023. 8. 28 오전 9:28:01,김지수,AI,7 - 자연수 뒤집어 배열로 만들기,"def solution(n):
    arr = list(str(n))
    arr.reverse()
    return list(map(int,arr))",,2023. 8. 28,7,1
2023. 8. 28 오전 9:28:37,차명경,AI,5 - 나머지가 1이 되는 수 찾기,"def solution(n):
    answer = 0
    for i in range (3,1000000):
        if n % i == 1:
            return answer+i
        ",,2023. 8. 28,5,1
2023. 8. 28 오전 9:29:08,남의서,AI,4 - 약수의 합,"def solution(n):
    answer = 0
    for i in range(1, n+1):
        if n % i == 0:
            answer += i
    return answer",https://github.com/2021147566,2023. 8. 28,4,1
2023. 8. 28 오전 9:29:49,이진형,AI,15 - 나누어 떨어지는 숫자,"def solution(arr, divisor):
    arr.sort()
    newarr=[]
    for i in arr:
        if i%divisor==0:
            newarr.append(i)
    if newarr==[]:
        return [-1]
    else:
        return newarr    ",,2023. 8. 28,15,1
2023. 8. 28 오전 9:30:42,김민태,Unity,21 - 수박수박수박수박수박수?,"public class Solution {
    public string solution(int n) {
        string answer = """";
        for(int i = 0; i<n; i++){
            if(i%2 == 0){
                answer += ""수"";
            }
            else{
                answer += ""박"";
            }
        }
        return answer;
    }
}",https://github.com/rlaalsxo/CodingTest,2023. 8. 28,21,1
2023. 8. 28 오전 9:30:47,남의서,AI,5 - 나머지가 1이 되는 수 찾기,"def solution(n):
    for i in range(2, n):
        if n % i == 1:
            answer = i
            break
    return answer",https://github.com/2021147566,2023. 8. 28,5,1
2023. 8. 28 오전 9:31:19,조호진,AI,14 - 서울에서 김서방 찾기,"def solution(seoul):
    answer = f'김서방은 {seoul.index(""Kim"")}에 있다'
    return answer",https://github.com/bm4706/Algorithm_practice/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1,2023. 8. 28,14,1
2023. 8. 28 오전 9:32:49,강상찬,AI,16 - 음양 더하기,"def solution(absolutes, signs):
    cnt = 0
    for i in range(len(absolutes)):
        if signs[i]:
            cnt = cnt + absolutes[i]
        else:
            cnt = cnt -absolutes[i]
    return cnt",,2023. 8. 28,16,1
2023. 8. 28 오전 9:32:53,양덕영,AI,13 - 콜라츠 추측,"def solution(num):
    count = 0
    while num != 1:
        if num % 2 == 0:
            num //= 2
        else:
            num = num * 3 + 1
        
        count += 1
        
        if count >= 500:  # 500번 초과하면 -1 반환
            return -1
    
    return count

# 예시
print(solution(6))  # 출력: 8",https://github.com/DeokYoung980130/Ai_Project2023-08-07/tree/a82e7b5247885eca4f1d16232aa1d02ce66dc029,2023. 8. 28,13,1
2023. 8. 28 오전 9:32:54,김지우,AI,10 - 정수 내림차순으로 배치하기,"def solution(n):
    answer = 0
    ls = list(str(n))
    ls.sort(reverse=True)
    answer = int("""".join(ls))
    return answer",,2023. 8. 28,10,1
2023. 8. 28 오전 9:34:44,남의서,AI,6 - x만큼 간격이 있는 n개의 숫자,"def solution(x, n):
    answer = []
    for i in range(1,n+1):
        answer.append(x*i)
    return answer",https://github.com/2021147566,2023. 8. 28,6,1
2023. 8. 28 오전 9:35:44,양덕영,AI,14 - 서울에서 김서방 찾기,"def solution(seoul):
    index = seoul.index(""Kim"")
    answer = f""김서방은 {index}에 있다""
    return answer

# 예시
seoul = [""Jane"", ""Kim"", ""Tom""]",https://github.com/DeokYoung980130/Ai_Project2023-08-07/tree/d7c64ae68290af5b01dc8c68ae21c408f9f74b5c,2023. 8. 28,14,1
2023. 8. 28 오전 9:35:50,이진형,AI,16 - 음양 더하기,"def solution(absolutes, signs):
    answer=0
    for i in range(len(signs)):
        if signs[i]==True:
            answer+=absolutes[i]
        else:
            answer-=absolutes[i]            

    return answer",,2023. 8. 28,16,1
2023. 8. 28 오전 9:35:51,양수홍,AI,27 - 행렬의 덧셈,"def solution(arr1, arr2):
    answer = []
    for i in range(0,len(arr1)):
        answer.append([])
        for j in range(0,len(arr1[i])):
            answer[i].append(arr1[i][j]+arr2[i][j])
    return answer",,2023. 8. 28,27,1
2023. 8. 28 오전 9:36:30,김호찬,AI,7 - 자연수 뒤집어 배열로 만들기,"def solution(n):
    result = [int(i) for i in reversed(str(n))]
  
     return result",https://github.com/hckim1/Coding-Practice.git,2023. 8. 28,7,1
2023. 8. 28 오전 9:37:13,양덕영,AI,15 - 나누어 떨어지는 숫자,"def solution(arr, divisor):
    divisible_elements = [x for x in arr if x % divisor == 0]
    if len(divisible_elements) == 0:
        return [-1]
    else:
        return sorted(divisible_elements)

arr = [5, 9, 7, 10]
divisor = 5
print(solution(arr, divisor))",https://github.com/DeokYoung980130/Ai_Project2023-08-07/tree/09430b78aeb5e4337020aa87241568df02ee366f,2023. 8. 28,15,1
2023. 8. 28 오전 9:37:29,남의서,AI,7 - 자연수 뒤집어 배열로 만들기,"def solution(n):
    answer = []
    for i in str(n):
        answer.insert(0 , int(i))
    return answer",https://github.com/2021147566,2023. 8. 28,7,1
2023. 8. 28 오전 9:37:30,명세인,AI,13 - 콜라츠 추측,"def solution(num):
    answer = 0
    if num == 1:
        answer = 0
    while num > 1:
        if num % 2 == 0:
            num = num / 2
            answer += 1
        else:
            num = num * 3 +1
            answer += 1
    if answer > 500:
        answer = -1
    return answer",https://github.com/playersein/Coding_Test/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12943.%E2%80%85%EC%BD%9C%EB%9D%BC%EC%B8%A0%E2%80%85%EC%B6%94%EC%B8%A1,2023. 8. 28,13,1
2023. 8. 28 오전 9:37:59,정범수,AI,31 - 이상한 문자 만들기,"def conv_str(x):
    return ''.join([x[i].lower() if i%2 else x[i].upper() for i in range(len(x))])

def solution(s):
    return ' '.join(map(conv_str, s.split(' ')))",https://github.com/sudog1/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12930.%E2%80%85%EC%9D%B4%EC%83%81%ED%95%9C%E2%80%85%EB%AC%B8%EC%9E%90%E2%80%85%EB%A7%8C%EB%93%A4%EA%B8%B0,2023. 8. 28,31,2
2023. 8. 28 오전 9:38:44,김진규,Unity,13 - 콜라츠 추측,"public class Solution {
    public int solution(int num) {
        int answer = 0;
        if(num == 1) answer = 0;
        while(num != 1)
        {
            if(num % 2 == 0)
                num /=2;
            else if(num % 2 == 1)
                num = (num*3)+1;
            answer++;
            if(answer >= 500)
            {
                answer = -1;
                break;
            }
        }
        return answer;
    }
}",,2023. 8. 28,13,1
2023. 8. 28 오전 9:38:58,양덕영,AI,16 - 음양 더하기,"def solution(absolutes, signs):
    total_sum = 0
    for i in range(len(absolutes)):
        if signs[i]:
            total_sum += absolutes[i]
        else:
            total_sum -= absolutes[i]
    return total_sum

absolutes = [4, 7, 12]
signs = [True, False, True]
print(solution(absolutes, signs))",https://github.com/DeokYoung980130/Ai_Project2023-08-07/tree/49a0a4d813b3e5aaa5161b0ef442e0b546882cac,2023. 8. 28,16,1
2023. 8. 28 오전 9:39:10,김지수,AI,3 - 자릿수 더하기,"def solution(n):
    new = str(n)
    add = 0
    for i in range(len(new)):
        add += int(new[i])
    return add",,2023. 8. 28,3,1
2023. 8. 28 오전 9:39:52,양수홍,AI,28 - 직사각형 별찍기,"a, b = map(int, input().strip().split(' '))
for i in range(b):
    s=""""
    for j in range(a):
        s+=""*""
    print(f""{s}"")",,2023. 8. 28,28,1
2023. 8. 28 오전 9:39:59,남의서,AI,8 - 문자열을 정수로 바꾸기,"def solution(s):
    answer = 0
    if s[0] == '-':
        answer = -1 * int(s[1:])
    else:
        answer = int(s)
    return answer",https://github.com/2021147566,2023. 8. 28,8,1
2023. 8. 28 오전 9:40:08,이진형,AI,17 - 핸드폰 번호 가리기,"def solution(phone_number):
    index=len(phone_number)-4
    four=phone_number[index:]
    answer=""*""*index+four
    return answer
",,2023. 8. 28,17,1
2023. 8. 28 오전 9:40:16,김민태,Unity,22 - 내적,"using System;

public class Solution {
    public int solution(int[] a, int[] b) {
        int answer = 0;
        for(int i = 0; i<a.Length; i++){
            answer += a[i]*b[i];
        }
        return answer;
    }
}",https://github.com/rlaalsxo/CodingTest,2023. 8. 28,22,1
2023. 8. 28 오전 9:40:21,김해찬,Unity,76 - H-Index,"using System;
using System.Collections;
using System.Collections.Generic;

public class Solution
{
    public int solution(int[] citations)
    {
        int answer = 0;
        
        Array.Sort(citations);
        int cnt = 0;
        
        for(int i = citations.Length; i > 0; i--)
        {
            if(citations[i-1] >= (cnt + 1))
            {
                answer++;
            }
            cnt++;
        }
        
        return answer;
    }
}",,2023. 8. 28,76,3
2023. 8. 28 오전 9:40:44,김해찬,Unity,77 - n^2 배열 자르기,"using System;

public class Solution
{
    public int[] solution(int n, long left, long right)
    {
        int[] answer = new int[(right+1) - left];
        
        int idx = 0;
        
        for (long i = left; i <= right; i++)
        {      
            answer[idx] = (int)((i / n) < (i % n) ? (i % n) + 1 : (i / n) + 1);
            idx++;
        }
        
        return answer;
    }
}",,2023. 8. 28,77,3
2023. 8. 28 오전 9:41:01,강상찬,AI,17 - 핸드폰 번호 가리기,"def solution(phone_number):
    return ((len(phone_number)-4)*""*""+phone_number[-4:])",,2023. 8. 28,17,1
2023. 8. 28 오전 9:42:19,이정환,Unity,8 - 문자열을 정수로 바꾸기,"public class Solution {
    public int solution(string s) {
        int answer =  int.Parse(s);
       
        return answer;
    }
}",,2023. 8. 28,8,1
2023. 8. 28 오전 9:42:52,장현웅,AI,6 - x만큼 간격이 있는 n개의 숫자,"def solution(x, n):
    answer = []
    
    for i in range(1,n+1):
        answer.append(x*i)
    return answer",https://github.com/HyeonwoongJang/Algorithm.git,2023. 8. 28,6,1
2023. 8. 28 오전 9:43:13,이진형,AI,18 - 없는 숫자 더하기,"def solution(numbers):
    answer = 45-sum(numbers)
    return answer
",,2023. 8. 28,18,1
2023. 8. 28 오전 9:43:28,배인호,Unity,25 - 부족한 금액 계산하기,"using System;

class Solution
{
    public long solution(int price, int money, int count)
    {
        long answer = 0;

        for (int i = 1; i <= count; i++)
        {
            answer += (price * i);
        }

        if (answer > money)
        {
            answer -= money;
        }
        else
        {
            answer = 0;
        }

        return answer;
    }
}
",https://github.com/cutlake2000/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/82612.%E2%80%85%EB%B6%80%EC%A1%B1%ED%95%9C%E2%80%85%EA%B8%88%EC%95%A1%E2%80%85%EA%B3%84%EC%82%B0%ED%95%98%EA%B8%B0,2023. 8. 28,25,1
2023. 8. 28 오전 9:44:10,이승연,Unity,6 - x만큼 간격이 있는 n개의 숫자,"public class Solution {
    public long[] solution(int x, int n) {
        long[] answer = new long[n];
        

        for (long i = 0; i < n; i++)
        {
            answer[i] = x*(i+1);
        }
        
        return answer;
        
        
    }
}",,2023. 8. 25,6,1
2023. 8. 28 오전 9:44:12,신우석,Unity,28 - 직사각형 별찍기,"using System;

public class Example
{
    public static void Main()
    {
        String[] s;

        Console.Clear();
        s = Console.ReadLine().Split(' ');

        int a = Int32.Parse(s[0]);
        int b = Int32.Parse(s[1]);

        for (int i = 0; i < b; ++i) {
            for (int j = 0; j < a; ++j)
                Console.Write('*');
            Console.WriteLine();
        }         
    }
}",https://github.com/seoksii/AlgorithmCodeKata/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12969.%E2%80%85%EC%A7%81%EC%82%AC%EA%B0%81%ED%98%95%E2%80%85%EB%B3%84%EC%B0%8D%EA%B8%B0,2023. 8. 28,28,1
2023. 8. 28 오전 9:44:16,김진규,Unity,14 - 서울에서 김서방 찾기,"using System;

public class Solution {
    public string solution(string[] seoul) {
        string answer = """";
        int x = Array.IndexOf(seoul,""Kim"");
        answer = $""김서방은 {x}에 있다"";
        return answer;
    }
}",,2023. 8. 28,14,1
2023. 8. 28 오전 9:44:18,김경환,Unity,11 - 하샤드 수,"public class Solution {
    public bool solution(int x) {
        int harshad = 0;
        int i = x;
        
        while(i != 0)
        {
            harshad += i % 10;
            i /= 10;
        }
        
        if(x % harshad == 0)
            return true;
        
        return false;
    }
}",https://github.com/kkh9700,2023. 8. 28,11,1
2023. 8. 28 오전 9:44:38,이주연,Unity,27 - 행렬의 덧셈,"#include <string>
#include <vector>

using namespace std;

vector<vector<int>> solution(vector<vector<int>> arr1, vector<vector<int>> arr2) {
    vector<vector<int>> answer;
    
    for(int i = 0; i < arr1.size(); i++)
    {
        vector<int> tmp;
        for(int j = 0; j < arr1[i].size(); j++)
        {
            tmp.emplace_back(arr1[i][j] + arr2[i][j]);
        }
        answer.emplace_back(tmp);
    }
    
    return answer;
}",,2023. 8. 28,27,1
2023. 8. 28 오전 9:44:39,이소이,Unity,16 - 음양 더하기,"using System;

public class Solution {
    public int solution(int[] absolutes, bool[] signs) {
        int answer = 0;
        int sign;
        for (int i = 0; i < signs.Length; i++)
        {
            sign = signs[i] ? 1 : -1;
            answer += sign * absolutes[i];
        }
        return answer;
    }
}",https://github.com/leesy015599/AlgorithmCodeKata/blob/master/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/76501.%E2%80%85%EC%9D%8C%EC%96%91%E2%80%85%EB%8D%94%ED%95%98%EA%B8%B0/%EC%9D%8C%EC%96%91%E2%80%85%EB%8D%94%ED%95%98%EA%B8%B0.cs,2023. 8. 28,16,1
2023. 8. 28 오전 9:44:52,조영오,Unity,17 - 핸드폰 번호 가리기,"public class Solution {
    public string solution(string phone_number) {
        
        char[] str = phone_number.ToCharArray();
        
        for(int i = 0 ; i < str.Length-4;i++){
            str[i] = '*';
        }
        
        string answer = new string(str);
        
        return answer;
    }
}",,2023. 8. 28,17,1
2023. 8. 28 오전 9:45:04,김지우,AI,11 - 하샤드 수,"def solution(x):
    answer = True
    li = list(str(x))
    sum = 0
    for i in li:
        sum += int(i)
        if x % sum == 0:
            answer = True
        else:
            answer = False
    return answer",,2023. 8. 28,11,1
2023. 8. 28 오전 9:45:05,김호찬,AI,8 - 문자열을 정수로 바꾸기,"def solution(s):
    return int(s)",https://github.com/hckim1/Coding-Practice.git,2023. 8. 28,8,1
2023. 8. 28 오전 9:45:05,김정규,AI,9 - 정수 제곱근 판별,"def solution(n):
    answer = 0
    if n ** (1/2) == int(n ** (1/2)):
        answer = int(n ** (1/2)) + 1
        answer **= 2
    else:
        return -1
    return answer",https://github.com/JungGyu00/algorithm,2023. 8. 28,9,1
2023. 8. 28 오전 9:45:28,심명희,AI,11 - 하샤드 수,"def solution(x):
    a=len(str(x))
    
    if x % a == 0:
        return True
    else:
        return False",,2023. 8. 28,11,1
2023. 8. 28 오전 9:45:43,이진형,AI,19 - 제일 작은 수 제거하기,"def solution(arr):
    x=min(arr)
    arr.remove(x)
    if arr==[]:
        return [-1]
    return arr",,2023. 8. 28,19,1
2023. 8. 28 오전 9:45:45,강상찬,AI,18 - 없는 숫자 더하기,"def solution(numbers):
    return (45-sum(set(numbers)&set(range(10))))",,2023. 8. 28,18,1
2023. 8. 28 오전 9:45:46,이현지,Unity,12 - 두 정수 사이의 합,"public class Solution {
    public long solution(int a, int b) {
        long answer = 0;
        if (a < b) 
        {
            for (long i = a ; i < b + 1; i++) answer += i;
        }
        else 
        {
            for (long i = b ; i < a + 1; i++) answer += i;
        }
        
        return answer;
    }
}",https://github.com/szlovelee/Programmers-Algorithm,2023. 8. 28,12,1
2023. 8. 28 오전 9:45:49,명세인,AI,14 - 서울에서 김서방 찾기,"def solution(seoul):
    x = seoul.index('Kim')
    answer = f'김서방은 {x}에 있다'
    return answer",https://github.com/playersein/Coding_Test/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12919.%E2%80%85%EC%84%9C%EC%9A%B8%EC%97%90%EC%84%9C%E2%80%85%EA%B9%80%EC%84%9C%EB%B0%A9%E2%80%85%EC%B0%BE%EA%B8%B0,2023. 8. 28,14,1
2023. 8. 28 오전 9:46:13,김경원,Unity,4 - 약수의 합,"public class Solution {
    public int solution(int n) {
        int divisorSum = 0;

        for (int i = 1; i <= n; i++) {
            if (n % i == 0) {
                divisorSum += i;
            }
        }

        return divisorSum;
    }
}",,2023. 8. 28,4,1
2023. 8. 28 오전 9:46:31,이주연,Unity,28 - 직사각형 별찍기," #include <iostream>

using namespace std;

int main(void) {
    ios::sync_with_stdio(0);
    cin.tie(0);
    int a;
    int b;
    cin >> a >> b;
    
    for(int i = 0; i < b; i++)
    {
        for(int j = 0; j < a; j++)
        {
            cout << ""*"";
        }
        cout << '\n';
    }
    
    return 0;
}",,2023. 8. 28,28,1
2023. 8. 28 오전 9:46:42,최성원,Unity,2 - 평균 구하기,"public class Solution {
    public double solution(int[] arr) {
        int sum = 0;
        foreach (int a in arr) {
            sum += a;
        }
        return (double)sum / arr.Length;
    }
}
",,2023. 8. 28,2,1
2023. 8. 28 오전 9:46:42,양수홍,AI,29 - 최대공약수와 최소공배수,"def solution(n, m):
    answer = []
    gcd=0
    for i in range(1,min([n,m])+1):
        if n%i==0 and m%i==0:
            if gcd<i:
                gcd=i
    answer.append(gcd)
    answer.append(gcd*(n//gcd)*(m//gcd))
    return answer",,2023. 8. 28,29,1
2023. 8. 28 오전 9:47:01,김예준,Unity,8 - 문자열을 정수로 바꾸기,"#include <string>
#include <vector>

using namespace std;

int solution(string s) {
    int answer = 0;
    
    if (s[0] == '+') answer = stoi(s.substr(1));
    else if (s[0] == '-') answer = stoi(s.substr(1)) * -1;
    else answer = stoi(s);
    
    return answer;
}",,2023. 8. 28,8,1
2023. 8. 28 오전 9:47:22,이소이,Unity,17 - 핸드폰 번호 가리기,"public class Solution {
    public string solution(string phone_number) {
        string answer = """";
        for (int i = 0; i < phone_number.Length - 4; i++)
        {
            answer += ""*"";
        }
        for (int i = phone_number.Length - 4;
                 i < phone_number.Length;
                 i++)
        {
            answer += phone_number[i];
        }
        return answer;
    }
}",https://github.com/leesy015599/AlgorithmCodeKata/blob/master/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12948.%E2%80%85%ED%95%B8%EB%93%9C%ED%8F%B0%E2%80%85%EB%B2%88%ED%98%B8%E2%80%85%EA%B0%80%EB%A6%AC%EA%B8%B0/%ED%95%B8%EB%93%9C%ED%8F%B0%E2%80%85%EB%B2%88%ED%98%B8%E2%80%85%EA%B0%80%EB%A6%AC%EA%B8%B0.cs,2023. 8. 28,17,1
2023. 8. 28 오전 9:47:27,문준권,Unity,3 - 자릿수 더하기,"using System;

public class Solution {
    public int solution(int n) {
        int answer = 0;
        
        while(n>0) {
            answer += n % 10;
            n /= 10;
        }
        return answer;
    }
}",,2023. 8. 28,3,1
2023. 8. 28 오전 9:47:27,김도현B,Unity,16 - 음양 더하기,"using System;

public class Solution {
    public int solution(int[] absolutes, bool[] signs) {
        int answer = 0;
        for (int i = 0; i < absolutes.Length; i++)
        {
            if (signs[i])
                answer += absolutes[i];
            else
                answer -= absolutes[i];
        }
        return answer;
    }
}",https://github.com/subscriptioncat/Algorithm,2023. 8. 28,16,1
2023. 8. 28 오전 9:47:31,노재우,Unity,8 - 문자열을 정수로 바꾸기,"public class Solution8
{
    public int solution(string s)
    {
        int answer = int.Parse(s);
        return answer;
    }
}",https://github.com/Chu-Nyan,2023. 8. 28,8,1
2023. 8. 28 오전 9:47:31,김현우,AI,33 - 크기가 작은 부분,"function solution(t, p) {
    const sliceArr = [];
    const tLen = t.length;
    const pLen = p.length;
    
    for(let i=0; i<tLen; i++) {
        let targetSlice = t.substring(i, pLen + i)
        
        if(targetSlice.length === pLen) {{
            sliceArr.push(targetSlice)
        }}
    }
    let filterArr = sliceArr.filter((slice) => +slice <= +p).length;
    return filterArr;
}",,2023. 8. 28,33,2
2023. 8. 28 오전 9:48:37,이선재,Unity,18 - 없는 숫자 더하기,"#include <string>
#include <vector>

using namespace std;

int solution(vector<int> numbers) {
    int answer = 0;
    
    for(int i = 0; i < numbers.size(); i++){
        answer += numbers[i];
    }
    
    return 45 - answer;
}",https://github.com/Lyrwhitt/Algorithm/blob/main/Programmers/LEVEL1/%EC%97%86%EB%8A%94%20%EC%88%AB%EC%9E%90%20%EB%8D%94%ED%95%98%EA%B8%B0,2023. 8. 28,18,1
2023. 8. 28 오전 9:48:44,김경환,Unity,12 - 두 정수 사이의 합,"public class Solution012
{
    public long solution(int a, int b)
    {
        long answer = 0;

        if (a > b)
        {
            int temp = a;
            a = b;
            b = temp;
        }

        for (long i = a; i <= b; i++)
        {
            answer += i;
        }

        return answer;
    }
}",https://github.com/kkh9700,2023. 8. 28,12,1
2023. 8. 28 오전 9:48:58,김하늘,Unity,9 - 정수 제곱근 판별,"using System;

public class Solution 
{
    public long solution(long n) 
    {
        if (n < 0) return -1;
        long root = (long)Math.Sqrt(n);
        if (root * root == n) return (root + 1) * (root + 1);
        else return -1;
    }
}",,2023. 8. 28,9,1
2023. 8. 28 오전 9:49:09,김어진,Unity,8 - 문자열을 정수로 바꾸기,"public class Solution {
    public int solution(string s) {
        int answer = 0;
        answer = int.Parse(s);
        return answer;
    }
}",https://github.com/KimEoJin24/ProgrammersCodingTests/commit/45b4c826564f5abbcc90c227501eba51e46fffcb,2023. 8. 28,8,1
2023. 8. 28 오전 9:49:11,지민규,Unity,12 - 두 정수 사이의 합,"public class Solution {
    public long solution(int a, int b) {
        long answer = 0;
        long a_temp = (long)a;
        long b_temp = (long)b;
        long c = (long)a;
        if (a_temp > b_temp)
        {
            a_temp = b_temp;
            b_temp = c;
        }
        for (long i = a_temp; i < b_temp + 1; i++)
        {
            answer+=i;
        }
        return answer;
    }
}",,2023. 8. 28,12,1
2023. 8. 28 오전 9:49:25,김현우,AI,34 - 최소직사각형,"function solution(sizes) {
    let w = sizes.map((el => Math.max(...el)));
    let h = sizes.map((el => Math.min(...el)));
    return Math.max(...w) * Math.max(...h);
}",,2023. 8. 28,34,2
2023. 8. 28 오전 9:49:37,김하늘,Unity,8 - 문자열을 정수로 바꾸기,"public class Solution 
{
    public int solution(string s) 
    {
        int answer = 0;
        bool success = int.TryParse(s, out answer);
        if (success) return answer;
        else
        {
            char plusminus = s[0];
            s = s.Remove(0, 1);
            return solution(s);
        }
    }
}",,2023. 8. 25,8,1
2023. 8. 28 오전 9:49:52,조영오,Unity,18 - 없는 숫자 더하기,"using System;

public class Solution {
    public int solution(int[] numbers) {
        int answer = 0;
        bool[] num = new bool[10];
        
        foreach(int n in numbers){
            num[n] = true;
        }
        
        for(int i = 0 ; i < num.Length ; i++ ){
            if(!num[i]){answer += i;}
        }
        
        return answer;
    }
}",,2023. 8. 28,18,1
2023. 8. 28 오전 9:49:55,이재윤,AI,5 - 나머지가 1이 되는 수 찾기,"def solution(n):
    x = 0
    while True:
        x += 1
        if n % x == 1:
            break
    return x",https://github.com/JaeYoonAI/coding_test/blob/2b17f8fcbce4dd8e71b10e7bef9f5090c1ce661f/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/87389.%E2%80%85%EB%82%98%EB%A8%B8%EC%A7%80%EA%B0%80%E2%80%851%EC%9D%B4%E2%80%85%EB%90%98%EB%8A%94%E2%80%85%EC%88%98%E2%80%85%EC%B0%BE%EA%B8%B0/%EB%82%98%EB%A8%B8%EC%A7%80%EA%B0%80%E2%80%851%EC%9D%B4%E2%80%85%EB%90%98%EB%8A%94%E2%80%85%EC%88%98%E2%80%85%EC%B0%BE%EA%B8%B0.py,2023. 8. 28,5,1
2023. 8. 28 오전 9:49:59,이소이,Unity,18 - 없는 숫자 더하기,"using System;

public class Solution {
    public int solution(int[] numbers) {
        int answer = 45;
        for (int i = 0; i < numbers.Length; i++)
        {
            answer -= numbers[i];
        }
        return answer;
    }
}",https://github.com/leesy015599/AlgorithmCodeKata/blob/master/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/86051.%E2%80%85%EC%97%86%EB%8A%94%E2%80%85%EC%88%AB%EC%9E%90%E2%80%85%EB%8D%94%ED%95%98%EA%B8%B0/%EC%97%86%EB%8A%94%E2%80%85%EC%88%AB%EC%9E%90%E2%80%85%EB%8D%94%ED%95%98%EA%B8%B0.cs,2023. 8. 28,18,1
2023. 8. 28 오전 9:50:02,조호진,AI,15 - 나누어 떨어지는 숫자,"def solution(arr, divisor):
    answer = []
    for i in arr:
        if i % divisor ==0:
            answer.append(i)
    if not answer:
        return [-1]
    answer.sort()
    return answer",https://github.com/bm4706/Algorithm_practice/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12910.%E2%80%85%EB%82%98%EB%88%84%EC%96%B4%E2%80%85%EB%96%A8%EC%96%B4%EC%A7%80%EB%8A%94%E2%80%85%EC%88%AB%EC%9E%90%E2%80%85%EB%B0%B0%EC%97%B4,2023. 8. 28,15,1
2023. 8. 28 오전 9:50:08,강상찬,AI,19 - 제일 작은 수 제거하기,"def solution(arr):
    arr.remove(min(arr))
    return ([-1] if arr == [] else arr)",,2023. 8. 28,19,1
2023. 8. 28 오전 9:50:46,김현우,AI,35 - 시저 암호,"function solution(s, n) {
    return s.split("""").map(el => {
        if(el === "" "") {
            return el;
        } else if(el.toUpperCase().charCodeAt() + n > 90) {
            return String.fromCharCode(el.charCodeAt() - 26 + n);
        } else {
            return String.fromCharCode(el.charCodeAt() + n);
        }
    }).join("""");
}",,2023. 8. 28,35,2
2023. 8. 28 오전 9:50:50,이주연,Unity,29 - 최대공약수와 최소공배수,"#include <string>
#include <vector>

using namespace std;

int gcd(int a, int b)
{
    int c;
    while(b != 0)
    {
        c = a % b;
        a = b;
        b = c;
    }
    return a;
}

int lcm(int a, int b, int gcdN)
{
    return a * b / gcdN;
}

vector<int> solution(int n, int m) {
    vector<int> answer;
    
    
    int gcdN = gcd(n, m);
    int lcmN = lcm(n, m, gcdN);
    
    answer.emplace_back(gcdN);
    answer.emplace_back(lcmN);
    
    return answer;
}",,2023. 8. 28,29,1
2023. 8. 28 오전 9:51:04,김경원,Unity,3 - 자릿수 더하기,"
public class Solution {
    public int solution(int n) {
        int digitSum = 0;

        while (n > 0) {
            digitSum += n % 10;
            n /= 10;
        }

        return digitSum;
    }
}

class Program {
    static void Main(string[] args) {
        Solution solution = new Solution();
        
        Console.WriteLine(solution.solution(123));  // 출력: 6
        Console.WriteLine(solution.solution(987));  // 출력: 24
    }
}",,2023. 8. 28,3,1
2023. 8. 28 오전 9:51:06,정범수,AI,32 - 삼총사,"def solution(number):
    number.sort()
    count = 0
    for i in range(len(number)):
        if number[i] > 0:
            break
        for j in range(i+1, len(number)):
            temp = number[i]+number[j]
            if temp > 0:
                break
            for k in range(j+1, len(number)):
                res = number[i]+number[j]+number[k]
                if res == 0:
                    count += 1
                elif res > 0:
                    break
    return count",https://github.com/sudog1/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/131705.%E2%80%85%EC%82%BC%EC%B4%9D%EC%82%AC,2023. 8. 28,32,2
2023. 8. 28 오전 9:51:07,최지연,AI,12 - 두 정수 사이의 합,"def solution(a, b):
    answer = 0
    if a >= b:
        for i in range(b, a+1):
            answer += i

    else:
        for i in range(a, b+1):
            answer += i
    return answer",https://github.com/jiyeonCoder/algorithmPractice/blob/main/12.%20%EB%91%90%20%EC%A0%95%EC%88%98%20%EC%82%AC%EC%9D%B4%EC%9D%98%20%ED%95%A9.py,2023. 8. 28,12,1
2023. 8. 28 오전 9:51:26,이홍준,Unity,13 - 콜라츠 추측,"public class Solution {
    public int solution(int num) {
        int answer = 0;
        long temp = num;
        for(int i = 0; i <= 500; i++)
        {
            if(temp == 1)
            {
                return i;
            }
            if(temp % 2 == 0)
            {
                temp = temp / 2;
            }
            else
            {
                temp = temp * 3 + 1;
            }
        }
        answer = -1;
        return answer;
    }
}",https://github.com/dlghdwns97/Study/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12943.%E2%80%85%EC%BD%9C%EB%9D%BC%EC%B8%A0%E2%80%85%EC%B6%94%EC%B8%A1,2023. 8. 28,13,1
2023. 8. 28 오전 9:51:48,김민재,AI,5 - 나머지가 1이 되는 수 찾기,"def solution(n):
    list = []
    answer = 0
    for x in range(1, n+1):
        if n % x == 1:
            list.append(x)
            answer = min(list)
    return answer",https://github.com/Kim-Minjae9872/Code_Kata,2023. 8. 28,5,1
2023. 8. 28 오전 9:52:00,김예준,Unity,9 - 정수 제곱근 판별,"#include <cmath>

using namespace std;

long long solution(long long n) {
    long long answer = 0;
    
    if (sqrt(n) == (int)sqrt(n)) answer = pow(sqrt(n) + 1, 2);
    else answer = -1;
    
    return answer;
}",,2023. 8. 28,9,1
2023. 8. 28 오전 9:52:08,박도현,Unity,4 - 약수의 합,"public class Solution {
    public int solution(int n) {
        int answer = 0;
        for(int i=1; i <= n; i ++)
        {
            if(n%i == 0)
            {answer+=i;}
        }
        return answer;
    }
}
",,2023. 8. 28,4,1
2023. 8. 28 오전 9:52:21,배인호,Unity,26 - 문자열 다루기 기본,"public class Solution
{
    public bool solution(string s)
    {
        bool answer = false;
        int length = s.Length;
        char[] array = new char[length];
        array = s.ToCharArray();

        if (s.Length == 4 || s.Length == 6)
        {
            for (int i = 0; i < length; i++)
            {
                if (48 <= array[i] && array[i] <= 57)
                {
                    answer = true;
                }
                else
                {
                    answer = false;
                    break;
                }
            }
        }
        return answer;
    }
}
",https://github.com/cutlake2000/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12918.%E2%80%85%EB%AC%B8%EC%9E%90%EC%97%B4%E2%80%85%EB%8B%A4%EB%A3%A8%EA%B8%B0%E2%80%85%EA%B8%B0%EB%B3%B8,2023. 8. 28,26,1
2023. 8. 28 오전 9:52:32,박도현,Unity,5 - 나머지가 1이 되는 수 찾기,"using System;
using System.Collections.Generic;
using System.Linq;
public class Solution {
    public int solution(int n) {
        int answer = 0;
        Stack<int> value = new Stack<int>();
        for(int i = 1; i <= n; i++)
        {
            if(n%i == 1)
            {
                value.Push(i);
            }
        }
        answer = value.Min();
        return answer;
    }
}
",,2023. 8. 28,5,1
2023. 8. 28 오전 9:52:36,기현빈,Unity,15 - 나누어 떨어지는 숫자,"using System.Collections.Generic;
using System.Linq;

public class Solution {
    public int[] solution(int[] arr, int divisor) {
        List<int> list = new List<int>();
        
        foreach(int num in arr) {
            if(num % divisor == 0) list.Add(num);
        }
        
        if(list.Count == 0) return new int[1]{-1};
        else {
            list = list.OrderBy(x => x).ToList();
            return list.ToArray();
        }
    }
}",,2023. 8. 28,15,1
2023. 8. 28 오전 9:52:53,박도현,Unity,6 - x만큼 간격이 있는 n개의 숫자,"public class Solution {
    public long[] solution(int x, int n) {
        long[] answer = new long[]{};
        answer = new long[n];
        answer[0] = x;
        for(int i = 1; i < n; i++)
        {
            answer[i] = answer[i-1] + x;
        }
        return answer;
    }
}",,2023. 8. 28,6,1
2023. 8. 28 오전 9:52:55,장성림,Unity,13 - 콜라츠 추측,"public class Solution {
    public int solution(int num) {
        int answer = 0;
        int count = 0;
        long numLong = (long)num;
        for (count = 0; count < 500; count ++){
                if (numLong == 1){
                    answer = count;
                    break;
                }else{
                    if (numLong % 2 == 0)
                        numLong /= 2;
                    else
                        numLong = numLong * 3 + 1;
                }
            }
        if (count >= 500)
            answer = -1;
        return answer;
    }
}",https://github.com/hoobhoob,2023. 8. 28,13,1
2023. 8. 28 오전 9:53:25,정재호,Unity,35 - 시저 암호,"using System;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Linq;

public class Solution
{
    public string solution(string s, int n)
    {
        string answer = """";

        char[] smallAlphabet = new char[26];
        for (int i = 0; i < 26; i++)
        {
            smallAlphabet[i] = (char)(i + 97);
        }

        char[] bigAlphabet = new char[26];
        for (int i = 0; i < 26; i++)
        {
            bigAlphabet[i] = (char)(i + 65);
        }

        char[] sChar = s.ToCharArray();

        foreach (char c in sChar)
        {
            if ('A' <= c && c <= 'Z')
            {
                if (c + n > 90)
                {
                    answer += ((char)(c + n - 26)).ToString();
                }
                else
                {
                    answer += ((char)(c + n)).ToString();
                }
            }
            else if ('a' <= c && c <= 'z')
            {
                if (c + n > 122)
                {
                    answer += ((char)(c + n - 26)).ToString();
                }
                else
                {
                    answer += ((char)(c + n)).ToString();
                }
            }
            else if (c == ' ')
            {
                answer += "" "";
            }
        }
        return answer;
    }
}",,2023. 8. 28,35,2
2023. 8. 28 오전 9:53:50,곽정원,AI,3 - 자릿수 더하기,"import sys

n = input(""정수를 입력하세요> "")

n = int(n)

def solution(n):
    answer=0
    if (n > 100000000) :
        print(""1억자리 미만의 수를 입력하세요."");
        sys.exit(0);
    
    else :
        while n>0 :
            answer+=n%10
            n//=10
        print(answer)
        return answer

solution(n)",https://github.com/Team-Kawa/nbc/blob/master/code_KATA/3rd.py,2023. 8. 28,3,1
2023. 8. 28 오전 9:54:41,조병우,Unity,6 - x만큼 간격이 있는 n개의 숫자,"#include <string>
#include <vector>



std::vector<long long> solution(int x, int n) 
{
    std::vector<long long> answer;
    
    for(int i = 1; i <= n; i++)
    {
        answer.push_back(x*i); 
    }
    return answer;
}",,2023. 8. 28,6,1
2023. 8. 28 오전 9:54:50,이홍준,Unity,14 - 서울에서 김서방 찾기,"using System;

public class Solution {
    public string solution(string[] seoul) {
        string answer = """";
        
        int indexKim = Array.IndexOf(seoul, ""Kim"");
        
        answer = ""김서방은 "" + indexKim + ""에 있다"";
        
        return answer;
    }
}",https://github.com/dlghdwns97/Study/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12919.%E2%80%85%EC%84%9C%EC%9A%B8%EC%97%90%EC%84%9C%E2%80%85%EA%B9%80%EC%84%9C%EB%B0%A9%E2%80%85%EC%B0%BE%EA%B8%B0,2023. 8. 28,14,1
2023. 8. 28 오전 9:54:54,이진형,AI,20 - 가운데 글자 가져오기,"def solution(s):
    num=len(s)
    if len(s)%2!=0:
        return s[int((num-1)/2)]
    else:
        return s[int(num/2-1):int(num/2+1)]
        ",,2023. 8. 28,20,1
2023. 8. 28 오전 9:55:05,신우석,Unity,29 - 최대공약수와 최소공배수,"public class Solution {
    public int[] solution(int n, int m) {
        if (n == m) return new int[] {n, n};
        int min = n < m ? n : m;
        int max = n > m ? n : m;
        
        if (max % min == 0) return new int[] {min, max};
        
        int mod = 0;
        while (min != 0) {
            mod = max % min;
            max = min;
            min = mod;
        }
        
        return new int[] {max, n * m / max};
    }
}",https://github.com/seoksii/AlgorithmCodeKata/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12940.%E2%80%85%EC%B5%9C%EB%8C%80%EA%B3%B5%EC%95%BD%EC%88%98%EC%99%80%E2%80%85%EC%B5%9C%EC%86%8C%EA%B3%B5%EB%B0%B0%EC%88%98,2023. 8. 28,29,1
2023. 8. 28 오전 9:55:22,김나운,Unity,9 - 정수 제곱근 판별,"class Solution {
    public long solution(long n) {
        long answer = 0;

        for(long i=1;i<=n;i++){
            if(i*i==n){
                answer =(i+1)*(i+1);
                break;
            }else
                answer =-1;
        }
        return answer;
    }
}",,2023. 8. 28,9,1
2023. 8. 28 오전 9:55:44,문준권,Unity,4 - 약수의 합,"public class Solution {
    public int solution(int n) {
        int answer = 0;

        for ( int i=1; i<=n; i++ ) {
            if ( n % i == 0 ) answer += i;
        }

        return answer;
    }
}",,2023. 8. 28,4,1
2023. 8. 28 오전 9:56:14,남의서,AI,9 - 정수 제곱근 판별,"
def solution(n):
    sq = n ** 0.5
    if  (sq) % 1 == 0:

        return (sq + 1) ** 2
    else: 
        return -1",,2023. 8. 28,9,1
2023. 8. 28 오전 9:56:16,조범준,Unity,18 - 없는 숫자 더하기,"using System;

public class Solution {
    public int solution(int[] numbers) {
        int answer = 0;
        for(int i = 1; i < 10; i++){
            answer += i;
            for(int j = 1; j < numbers.Length+1; j++){
                if(numbers[j-1] == i){
                    answer -= i;
                    break;
                }
            }
        }
        return answer;
    }
}",https://github.com/KimMaYa1/BaekJoonEx/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1,2023. 8. 28,18,1
2023. 8. 28 오전 9:56:25,명세인,AI,11 - 하샤드 수,"def solution(x):
    x = str(x)
    sum = 0
    for a in x:
        a = int(a)
        sum += a
    if int(x) % sum == 0:
        answer = True
    else:
        answer = False
    return answer",https://github.com/playersein/Coding_Test/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12947.%E2%80%85%ED%95%98%EC%83%A4%EB%93%9C%E2%80%85%EC%88%98,2023. 8. 28,11,1
2023. 8. 28 오전 9:56:34,박민호,Unity,15 - 나누어 떨어지는 숫자,"using System;
using System.Collections.Generic;
using System.Linq;
public class Solution {
    public int[] solution(int[] arr, int divisor) {
        int[] answer = new int[0];
        List<int> answerList = answer.ToList();
        for(int i=0;i<arr.Length;i++){
            if(arr[i]%divisor==0){
                answerList.Add(arr[i]);
            }
        }
        if (answerList.Count==0){
            answerList.Add(-1);
        }
        answerList.Sort();
        answer = answerList.ToArray();
        
        return answer;
    }
}",,2023. 8. 28,15,1
2023. 8. 28 오전 9:56:37,장성림,Unity,14 - 서울에서 김서방 찾기,"public class Solution {
    public string solution(string[] seoul) {
        string answer = """";
        for(int i = 0; i < seoul.Length; i++){
            if (seoul[i] == ""Kim""){
                answer = ""김서방은 "" + i + ""에 있다"";
                break;
            }                
        }
        return answer;
    }
}",https://github.com/hoobhoob,2023. 8. 28,14,1
2023. 8. 28 오전 9:56:43,한병권,Unity,35 - 시저 암호,"public class Solution {
    public string solution(string s, int n) {
        string answer = """";
        char[] chars = s.ToCharArray();
        for ( int i = 0; i < s.Length; i ++)
        {
            char c = chars[i];
            int temp = (int)c;
            if(temp != 32)
            {
                temp += n;
                if((int)c > 96)
                {
                    if(temp > 122)
                    {
                        temp -= 26;
                    }
                }
                else
                {
                   if(temp > 90)
                    {
                        temp -= 26;
                    }
                }
                c = (char)temp;
            }
            answer = answer + c;
        }
        return answer;
    }
}",https://github.com/hbg9212/AlgorithmCodekata,2023. 8. 28,35,2
2023. 8. 28 오전 9:56:51,박민호,Unity,15 - 나누어 떨어지는 숫자,"using System;
using System.Collections.Generic;
using System.Linq;
public class Solution {
    public int[] solution(int[] arr, int divisor) {
        int[] answer = new int[0];
        List<int> answerList = answer.ToList();
        for(int i=0;i<arr.Length;i++){
            if(arr[i]%divisor==0){
                answerList.Add(arr[i]);
            }
        }
        if (answerList.Count==0){
            answerList.Add(-1);
        }
        answerList.Sort();
        answer = answerList.ToArray();
        
        return answer;
    }
}",,2023. 8. 28,15,1
2023. 8. 28 오전 9:57:06,기현빈,Unity,16 - 음양 더하기,"using System;

public class Solution {
    public int solution(int[] absolutes, bool[] signs) {
        int answer = 0;
        
        for(int i = 0; i < absolutes.Length; i++) {
            answer += (signs[i]) ? absolutes[i] : -absolutes[i];
        }
        
        return answer;
    }
}",,2023. 8. 28,16,1
2023. 8. 28 오전 9:57:09,김민태,Unity,23 - 약수의 개수와 덧셈,"using System;

public class Solution {
    public int solution(int left, int right) {
        int answer = 0;
        
        for(int i=left; i<=right; i++)
        {
            int count=0;
           
            for(int j=1; j<=i; j++)
            {
                
                if(i%j==0) count++;
            }
            
            if(count%2==0) answer += i;
            
            else answer -= i;
        }
        return answer;
    }
}
",https://github.com/rlaalsxo/CodingTest,2023. 8. 28,23,1
2023. 8. 28 오전 9:57:21,이현지,Unity,13 - 콜라츠 추측,"public class Solution 
{
    public int solution(long num) 
    {
        int answer = 0;
        while (num != 1)
        {
            if (num % 2 == 0) num /= 2;
            else num = (num * 3) + 1;
            ++answer;
        }
        return (answer <= 500)? answer : -1 ;
    }
}",https://github.com/szlovelee/Programmers-Algorithm,2023. 8. 28,13,1
2023. 8. 28 오전 9:57:27,김진규,Unity,15 - 나누어 떨어지는 숫자,"using System;
public class Solution {
    public int[] solution(int[] arr, int divisor) {
        int count = 0;
        for (int i = 0; i < arr.Length; i++) {
            if (arr[i] % divisor == 0)
                count++;
        }
        if (count == 0) {
            return new int[] { -1 };
        }
        int[] answer = new int[count];
        count = 0;
        for (int i = 0; i < arr.Length; i++) {
            if(arr[i] % divisor == 0)
                answer[count++] = arr[i];
        }
        Array.Sort(answer);
        return answer;
    }
}",,2023. 8. 28,15,1
2023. 8. 28 오전 9:57:29,김경환,Unity,13 - 콜라츠 추측,"public class Solution {
    public int solution(int num) {
        int answer = 0;
        long l = num;
        while(l != 1)
        {
            if(l % 2 == 0)
                l /= 2;
            else
                l = l * 3 + 1;
            
            answer++;
            
            if(answer == 500)
                return -1;
        }
        
        
        return answer;
    }
}",public class Solution {     public int solution(int num) {         int answer = 0;         long l = num;         while(l != 1)         {             if(l % 2 == 0)                 l /= 2;             else                 l = l * 3 + 1;                          answer++;                          if(answer == 500)                 return -1;         }                           return answer;     } },2023. 8. 28,13,1
2023. 8. 28 오전 9:57:35,이소이,Unity,19 - 제일 작은 수 제거하기,"public class Solution {
    public int[] solution(int[] arr) {
        int[] answer;
        if (arr.Length == 1)
            answer = new int[1] {-1};
        else
        {
            answer = new int[arr.Length - 1];
            int min = int.MaxValue;
            int minIndex = 0;
            for (int i = 0; i < arr.Length; i++)
            {
                if (min > arr[i])
                {
                    min = arr[i];
                    minIndex = i;
                }
            }
            for (int i = 0; i < answer.Length; i++)
            {
                if (i < minIndex)
                    answer[i] = arr[i];
                else
                    answer[i] = arr[i + 1];
            }
        }
        return answer;
    }
}",https://github.com/leesy015599/AlgorithmCodeKata/blob/master/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12935.%E2%80%85%EC%A0%9C%EC%9D%BC%E2%80%85%EC%9E%91%EC%9D%80%E2%80%85%EC%88%98%E2%80%85%EC%A0%9C%EA%B1%B0%ED%95%98%EA%B8%B0/%EC%A0%9C%EC%9D%BC%E2%80%85%EC%9E%91%EC%9D%80%E2%80%85%EC%88%98%E2%80%85%EC%A0%9C%EA%B1%B0%ED%95%98%EA%B8%B0.cs,2023. 8. 28,19,1
2023. 8. 28 오전 9:57:51,최수용,Unity,8 - 문자열을 정수로 바꾸기,"
public class Solution {
    public int solution(string s) {
        int answer = 0;
        answer = int.Parse(s);
        return answer;
    }
}
",,2023. 8. 28,8,1
2023. 8. 28 오전 9:58:00,이진형,AI,21 - 수박수박수박수박수박수?,"def solution(n):
    if n%2==0:
        return '수박'*(n//2)
    else:
        return '수'+('박수'*(n//2))",,2023. 8. 28,21,1
2023. 8. 28 오전 9:58:58,차요한,Unity,16 - 음양 더하기,"using System;

public class Solution {
    public int solution(int[] absolutes, bool[] signs) {
        int answer = 0;
        for(int i = 0; i<signs.Length; i++)
        {
            if(signs[i])
            {
                answer+=absolutes[i];
            }
            else
            {
                answer-=absolutes[i];
            }
        }
        return answer;
    }
}",https://github.com/HOHOJO,2023. 8. 28,16,1
2023. 8. 28 오전 9:59:11,윤지연,Unity,4 - 약수의 합,"public class Solution {
    public int solution(int n) {
        int answer = 0;
        for(int i = 1; i <= n; i++)
        {
            if(n % i == 0) answer += i;
        }
        return answer;
    }   
}",https://github.com/jungbosong/Codekata/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12928.%E2%80%85%EC%95%BD%EC%88%98%EC%9D%98%E2%80%85%ED%95%A9,2023. 8. 28,4,1
2023. 8. 28 오전 9:59:28,김현우,AI,36 - 숫자 문자열과 영단어,"function solution(s) {
    const numbers = [""zero"", ""one"", ""two"", ""three"", ""four"", ""five"", ""six"", ""seven"", ""eight"", ""nine""];
    
    let answer = s;
    
    for(let i=0; i<10; i++) {
    let target = answer.split(numbers[i])
        answer = target.join(i)
    }
    return +answer
}",,2023. 8. 28,36,2
2023. 8. 28 오전 9:59:39,김예준,Unity,10 - 정수 내림차순으로 배치하기,"#include <vector>
#include <algorithm>
#include <cmath>

using namespace std;

long long solution(long long n) {
    long long answer = 0;
    vector<long long> nums;
    
    while (n != 0)
    {
        nums.push_back(n % 10);
        n /= 10;
    }
    
    sort(nums.begin(), nums.end());
    
    for (int i = 0; i < nums.size(); i++)
    {
        answer += nums[i] * pow(10, i);
    }
    
    return answer;
}",,2023. 8. 28,10,1
2023. 8. 28 오전 9:59:46,장성민,Unity,5 - 나머지가 1이 되는 수 찾기,"using System;

public class Solution {
    public int solution(int n) {
        int answer = 0;
        for (int i = 2; i < n; i++){
            if (n % i == 1){
                answer = i;
                break;
            }
        }
        return answer;
    }
}",,2023. 8. 28,5,1
2023. 8. 28 오전 10:00:07,김경원,Unity,5 - 나머지가 1이 되는 수 찾기,"using System;

public class Solution {
    public int solution(int n) {
        for (int x = 2; x <= n; x++) {
            if (n % x == 1) {
                return x;
            }
        }

        return -1; // 정답이 항상 존재함은 문제에 주어졌으므로 이 부분은 실행되지 않음
    }
}",,2023. 8. 28,5,1
2023. 8. 28 오전 10:00:08,이진형,AI,22 - 내적,"def solution(a, b):
    answer=0
    for i in range(len(a)):
        answer=answer+a[i]*b[i]
    return answer",,2023. 8. 28,22,1
2023. 8. 28 오전 10:00:20,김경환,Unity,14 - 서울에서 김서방 찾기,"public class Solution {
    public string solution(string[] seoul) {
        int length = seoul.Length;
        
        for(int i = 0; i < length; i++)
        {
            if(seoul[i].Equals(""Kim""))
            {
                return ""김서방은 "" + i +""에 있다"";
            }
        }
        
        
        
        return null;
    }
}",https://github.com/kkh9700,2023. 8. 28,14,1
2023. 8. 28 오전 10:00:45,기현빈,Unity,17 - 핸드폰 번호 가리기,"public class Solution {
    public string solution(string phone_number) {
        string answer = """";
        
        answer = phone_number.Substring(phone_number.Length - 4, 4).PadLeft(phone_number.Length, '*');
        
        return answer;
    }
}",,2023. 8. 28,17,1
2023. 8. 28 오전 10:01:08,이소이,Unity,20 - 가운데 글자 가져오기,"public class Solution {
    public string solution(string s) {
        string answer = """";
        if (s.Length % 2 == 0)
            answer += s[s.Length / 2 - 1];
        answer += s[s.Length / 2];
        return answer;
    }
}",https://github.com/leesy015599/AlgorithmCodeKata/blob/master/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12903.%E2%80%85%EA%B0%80%EC%9A%B4%EB%8D%B0%E2%80%85%EA%B8%80%EC%9E%90%E2%80%85%EA%B0%80%EC%A0%B8%EC%98%A4%EA%B8%B0/%EA%B0%80%EC%9A%B4%EB%8D%B0%E2%80%85%EA%B8%80%EC%9E%90%E2%80%85%EA%B0%80%EC%A0%B8%EC%98%A4%EA%B8%B0.cs,2023. 8. 28,20,1
2023. 8. 28 오전 10:01:15,김호찬,AI,9 - 정수 제곱근 판별,"def solution(n):
    n = n ** (0.5)
    if n % 1 == 0:
        return (n + 1) ** 2
    return -1",https://github.com/hckim1/Coding-Practice.git,2023. 8. 28,9,1
2023. 8. 28 오전 10:01:25,손병의,Unity,9 - 정수 제곱근 판별,"using System;
public class Solution {
    public long solution(long n) 
    {
        long x = (long)Math.Sqrt(n);
        
        if(x*x == n)
        {
            return (x+1) * (x+1);
        }
        else
        {
            return -1;
        }
        
        
    }
}",https://github.com/Son-BE/CodeKata1/commit/8bb26177672bcb3dc9ee6865e6576c9c221985d3,2023. 8. 28,9,1
2023. 8. 28 오전 10:01:32,김호연,Unity,13 - 콜라츠 추측,"public class Solution {
    public int solution(int num) {
        int answer = 0;
        int times = 0;  // 반복 횟수
        if (num == 1)
        {
            return 0;
        }
        while(true) //무한 반복 시킴
        {
            if(num % 2 == 0 && num > 0)  //짝수이면서 양수라면
            {
                num = num / 2;
            }
            else if(num % 2 != 0 && num > 0) //홀수이면서 양수라면
            {
                num = num * 3 + 1;
            }
            else  // 수가 음수로 가면 -1 반환. 이거 안하면 음수로 갔다오면서 500번 내에 1이 되는 수가 생김 
            {
                return -1;
            }
            times++;
            if(num == 1) // 숫자가 1이 되면 반복 탈출
            {
                break;
            }
        }
        if(times > 500)  // 500번 반복하면 -1 반환
        {
            answer = -1;
            return answer;
        }
        answer = times;
        return answer;
    }
}",,2023. 8. 28,13,1
2023. 8. 28 오전 10:01:33,김현우,AI,37 - 문자열 내 마음대로 정렬하기,"function solution(strings, n) {
    return strings.sort((a, b) => {
        if(a[n] > b[n]) {
            return 1;
        } else if(a[n] < b[n]) {
            return -1;
        } else {
            return a.localeCompare(b);
        }
    })
}",,2023. 8. 28,37,2
2023. 8. 28 오전 10:01:33,김진규,Unity,16 - 음양 더하기,"using System;

public class Solution {
    public int solution(int[] absolutes, bool[] signs) {
        int answer = 0;
        for(int i = 0; i< absolutes.Length; i++)
        {
            if(signs[i]) answer += absolutes[i];
            else answer -= absolutes[i];
        }
        return answer;
    }
}",,2023. 8. 28,16,1
2023. 8. 28 오전 10:01:58,정범수,AI,33 - 크기가 작은 부분,"def solution(t, p):
    count = 0
    for i in range(len(t)-len(p)+1):
        for j in range(len(p)):
            if t[i+j] < p[j]:
                count += 1
                break
            elif t[i+j] > p[j]:
                break
        else:
            count += 1
    return count",https://github.com/sudog1/Algorithm/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/unrated/147355.%E2%80%85%ED%81%AC%EA%B8%B0%EA%B0%80%E2%80%85%EC%9E%91%EC%9D%80%E2%80%85%EB%B6%80%EB%B6%84%EB%AC%B8%EC%9E%90%EC%97%B4/%ED%81%AC%EA%B8%B0%EA%B0%80%E2%80%85%EC%9E%91%EC%9D%80%E2%80%85%EB%B6%80%EB%B6%84%EB%AC%B8%EC%9E%90%EC%97%B4.py,2023. 8. 28,33,2
2023. 8. 28 오전 10:01:59,최장범,Unity,10 - 정수 내림차순으로 배치하기,"using System;

public class Solution {
    public long solution(long n) {
        long answer = 0;
        //문자열로 바꾸고,char 문자 하나하나씩으로 바꾸기
        char[] temp = n.ToString().ToCharArray();
        
        // 오름차순으로 정렬
        Array.Sort(temp);
        
        //내림차순으로 정렬
        Array.Reverse(temp);
        
        //다시 long형태로
        answer = long.Parse(new string(temp));
        
    
        return answer;
    }
}",,2023. 8. 28,10,1
2023. 8. 28 오전 10:02:04,지민규,Unity,13 - 콜라츠 추측,"public class Solution {
    public int solution(int num) {
        int answer = 0;
        long longNum = (long)num;
        while (answer < 500)
        {
            if (longNum == 1)
            {
                return answer;
                break;
            }
            if (longNum % 2 == 0)
            {
                answer += 1;
                longNum /= 2;
            }
            else
            {
                answer += 1;
                longNum *= 3;
                longNum += 1;
            }  
        }
        answer = -1;
        return answer;
    }
}",,2023. 8. 28,13,1
2023. 8. 28 오전 10:02:08,우민규,Unity,12 - 두 정수 사이의 합,"public class Solution {
    public long solution(int a, int b) {
        long answer = 0;
        
        //a(시작점)이 b(도착점) 보다 작은 경우
        if(a < b)
        {
            for(int i = a; i <= b; i++)
            {
                answer += i;
            }    
        }
        //a(시작점)이 b(도착점) 보다 큰 경우
        else
        {
            for(int i = a; i >= b; i--)
            {
                answer += i;
            }
        }
        
        return answer;
    }
}",https://github.com/Woomingyu/Programmers,2023. 8. 28,12,1
2023. 8. 28 오전 10:02:11,조영오,Unity,19 - 제일 작은 수 제거하기,"public class Solution {
    public int[] solution(int[] arr) {
        
        int size = 0;
        if(arr.Length <= 1){size = 1;}
        else{size = arr.Length-1;}
        
        int[] answer = new int[size];
        
        if(answer.Length == 1){answer[0] = -1;}
        else{
            int min = 9999;
            int count = 0;
            foreach(int n in arr){
                if(min > n){
                    min = n;
                }
            }
        
            for(int i = 0; i < arr.Length ; i++){
                if(arr[i] != min){
                    answer[count] = arr[i];
                    count++;
                }
            }
        }
        
        return answer;
    }
}",,2023. 8. 28,19,1
2023. 8. 28 오전 10:02:21,김민석,Unity,7 - 자연수 뒤집어 배열로 만들기,"using System;

public class Solution {
    public int[] solution(long n) {
        // n을 문자열로 변환
        string temp = n.ToString();
        // 문자열의 길이만큼의 배열 생성
        int[] answer = new int[temp.Length];
        
        // 문자열의 길이만큼 for문 반복
        for (int i = 0; i < temp.Length; i++){
            // 한글자씩 배열에 순서대로 담는다
            answer[i] = (int)Char.GetNumericValue(temp[temp.Length-1 - i]);
        }
        return answer;
    }
}",https://github.com/ms0753/codekata/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12932.%E2%80%85%EC%9E%90%EC%97%B0%EC%88%98%E2%80%85%EB%92%A4%EC%A7%91%EC%96%B4%E2%80%85%EB%B0%B0%EC%97%B4%EB%A1%9C%E2%80%85%EB%A7%8C%EB%93%A4%EA%B8%B0,2023. 8. 28,7,1
2023. 8. 28 오전 10:02:25,박민혁,Unity,15 - 나누어 떨어지는 숫자,"using System;
using System.Collections.Generic;
public class Solution {
    public int[] solution(int[] arr, int divisor) {
        int[] answer;
        List<int> list= new List<int>();
        bool check=false;
        int stack=0;
        for(int i=0; i< arr.Length; i++)
        {
            
            if(arr[i]%divisor==0)
            {
                list.Add(arr[i]);
                check=true;
            }
        }
        if(check)
        {
            list.Sort();
        answer=list.ToArray();
        }
        else
        {
            answer= new int[] {-1};
        }
        
        return answer;
    }
}",,2023. 8. 28,15,1
2023. 8. 28 오전 10:02:34,김예준,Unity,11 - 하샤드 수,"using namespace std;

bool solution(int x)
{
    int num = x;
    int sum = 0;
    
    while (num != 0)
    {
        sum += num % 10;
        num /= 10;
    }
    
    if (x % sum == 0) return true;
    return false;
}",,2023. 8. 28,11,1
2023. 8. 28 오전 10:02:57,박준규,Unity,10 - 정수 내림차순으로 배치하기,"using System.Linq;
using System;

public class Solution 
{
    public long solution(long n) 
    {
        string l = n.ToString();
        long[] num = new long[l.Length];
        long answer = 0;
        while(n>0)
        {
            for (int i = 0; i < l.Length; i++)
            {
                num[i] = n % 10;
                n = n / 10;
            }
        }
        Array.Sort(num,(x,y)=> y.CompareTo(x));
        Array.Reverse(num);
        for (int j =0;j<num.Length;j++)
        {
            answer += num[j] * (long)Math.Pow(10, j);
        }
        return answer;
    }
}",,2023. 8. 28,10,1
2023. 8. 28 오전 10:03:04,공혜진,AI,9 - 정수 제곱근 판별,"def solution(n):
    anwser = 0
    x = n ** 0.5
    if x == int(x):
        answer = (x+1) ** 2
    else:
        answer = -1
    return answer",,2023. 8. 28,9,1
2023. 8. 28 오전 10:03:27,박민호,Unity,16 - 음양 더하기,"using System;

public class Solution {
    public int solution(int[] absolutes, bool[] signs) {
        int answer = 0;
        for(int i=0;i<absolutes.Length;i++){
            if (signs[i]==false){
                answer+=absolutes[i]*(-1);
            }
            else{
                answer+=absolutes[i];
            }
        }
        return answer;
    }
}",,2023. 8. 28,16,1
2023. 8. 28 오전 10:03:29,이소이,Unity,21 - 수박수박수박수박수박수?,"public class Solution {
    public string solution(int n) {
        string answer = """";
        int su = 0;
        while (su++ < n)
        {
            if (su % 2 == 1)
                answer += ""수"";
            else
                answer += ""박"";
        }
        return answer;
    }
}",https://github.com/leesy015599/AlgorithmCodeKata/blob/master/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12922.%E2%80%85%EC%88%98%EB%B0%95%EC%88%98%EB%B0%95%EC%88%98%EB%B0%95%EC%88%98%EB%B0%95%EC%88%98%EB%B0%95%EC%88%98%EF%BC%9F/%EC%88%98%EB%B0%95%EC%88%98%EB%B0%95%EC%88%98%EB%B0%95%EC%88%98%EB%B0%95%EC%88%98%EB%B0%95%EC%88%98%EF%BC%9F.cs,2023. 8. 28,21,1
2023. 8. 28 오전 10:03:39,이재윤,AI,6 - x만큼 간격이 있는 n개의 숫자,"def solution(x, n):
    answer = []
    for i in range(1, n + 1):
        answer.append(x * i)

    return answer",https://github.com/JaeYoonAI/coding_test/blob/bcdb7506d75515047a7ad93200bc42621233f117/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12954.%E2%80%85x%EB%A7%8C%ED%81%BC%E2%80%85%EA%B0%84%EA%B2%A9%EC%9D%B4%E2%80%85%EC%9E%88%EB%8A%94%E2%80%85n%EA%B0%9C%EC%9D%98%E2%80%85%EC%88%AB%EC%9E%90/x%EB%A7%8C%ED%81%BC%E2%80%85%EA%B0%84%EA%B2%A9%EC%9D%B4%E2%80%85%EC%9E%88%EB%8A%94%E2%80%85n%EA%B0%9C%EC%9D%98%E2%80%85%EC%88%AB%EC%9E%90.py,2023. 8. 28,6,1
2023. 8. 28 오전 10:03:48,이정환,Unity,9 - 정수 제곱근 판별,"public class Solution {
    public long solution(long n) {
        long num = 1;
        long square = 1;

        while (square < n) {
            num++;
            square = num * num;
        }

        if (square == n) {
            return (num + 1) * (num + 1); // 제곱수인 경우 (x+1)^2 반환
        } else {
            return -1; // 제곱수가 아닌 경우 -1 반환
        }
    }
}",,2023. 8. 28,9,1
2023. 8. 28 오전 10:03:53,조호진,AI,16 - 음양 더하기,"def solution(absolutes, signs):
    answer = 0
    for i in range(len(absolutes)):
        if signs[i] == True:
            answer += absolutes[i]
        elif signs[i] == False:
            answer -= absolutes[i]       
    return answer",https://github.com/bm4706/Algorithm_practice/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/76501.%E2%80%85%EC%9D%8C%EC%96%91%E2%80%85%EB%8D%94%ED%95%98%EA%B8%B0,2023. 8. 28,16,1
2023. 8. 28 오전 10:04:16,김민태,Unity,24 - 문자열 내림차순으로 배치하기,"using System;

public class Solution {
    public string solution(string s) {
        string answer = """";
        char[] array = s.ToCharArray();
        Array.Sort(array);
        Array.Reverse(array);
        answer = new string(array);
        return answer;
    }
}",https://github.com/rlaalsxo/CodingTest,2023. 8. 28,24,1
2023. 8. 28 오전 10:04:29,기현빈,Unity,18 - 없는 숫자 더하기,"using System;

public class Solution {
    public int solution(int[] numbers) {
        int answer = 45;
        
        foreach(int num in numbers) {
            answer -= num;
        }
        
        return answer;
    }
}",,2023. 8. 28,18,1
2023. 8. 28 오전 10:04:36,김현우,AI,38 - K번째수정렬,"function solution(array, commands) {
    let result = [];
    const len = commands.length;
    
    for(let i=0; i<len; i++) {
        let sliceArr = array.slice(commands[i][0] - 1, commands[i][1]);
        sliceArr.sort((a, b) => a - b);
        result.push(sliceArr[commands[i][2] - 1]);
    }
    return result;
}",,2023. 8. 28,38,2
2023. 8. 28 오전 10:04:39,김지수,AI,9 - 정수 제곱근 판별,"def solution(n):
    answer = 0
    num = n**0.5
    
    if num == int(num):
        answer = (num+1)**2
    else: 
        answer = -1
    return answer",,2023. 8. 28,9,1
2023. 8. 28 오전 10:05:16,이소이,Unity,22 - 내적,"using System;

public class Solution {
    public int solution(int[] a, int[] b) {
        int answer = 0;
        for (int i = 0; i < a.Length; i++)
        {
            answer += a[i] * b[i];
        }
        return answer;
    }
}",https://github.com/leesy015599/AlgorithmCodeKata/blob/master/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/70128.%E2%80%85%EB%82%B4%EC%A0%81/%EB%82%B4%EC%A0%81.cs,2023. 8. 28,22,1
2023. 8. 28 오전 10:05:46,차요한,Unity,17 - 핸드폰 번호 가리기,"public class Solution {
    public string solution(string phone_number) {
        string answer = """";
        int n = phone_number.Length - 4;
        for(int i =0; i<n; i++)
        {
            answer+=""*"";
        }
        answer+=phone_number.Substring(phone_number.Length-4);
        return answer;
    }
}",https://github.com/HOHOJO/Algorithm_test,2023. 8. 28,17,1
2023. 8. 28 오전 10:05:50,이선재,Unity,19 - 제일 작은 수 제거하기,"#include <string>
#include <vector>
#include <algorithm>

using namespace std;

vector<int> solution(vector<int> arr) {
    vector<int> answer;
    
    arr.erase(min_element(arr.begin(), arr.end()));
    
    answer = arr;
    
    if(answer.size() == 0)
        answer.push_back(-1);
    
    return answer;
}",https://github.com/Lyrwhitt/Algorithm/blob/main/Programmers/LEVEL1/%EC%A0%9C%EC%9D%BC%20%EC%9E%91%EC%9D%80%20%EC%88%98%20%EC%A0%9C%EA%B1%B0%ED%95%98%EA%B8%B0,2023. 8. 28,19,1
2023. 8. 28 오전 10:05:50,이진형,AI,23 - 약수의 개수와 덧셈,"def solution(left, right):
    answer=0
    for i in range(left,right+1):
        divisors=[]
        for j in range(1,i+1):
            if i%j==0:
                divisors.append(j)
        if len(divisors)%2==0:
            answer+=i
        else:
            answer-=i
    return answer",,2023. 8. 28,23,1
2023. 8. 28 오전 10:05:52,지민규,Unity,14 - 서울에서 김서방 찾기,"public class Solution {
    public string solution(string[] seoul) {
        string answer = """";
        for (int i = 0; i < seoul.Length; i++)
        {
            if (seoul[i] == ""Kim"")
            {
                answer =  $""김서방은 {i}에 있다"";
            }
        }
        return answer;
    }
}",,2023. 8. 28,14,1
2023. 8. 28 오전 10:05:57,양수홍,AI,30 - 3진법 뒤집기,"def solution(n):
    answer = 0
    i=0
    temp=[]
    while True:
        if 3**i<=n and 3**(i+1)>n:
            break
        i+=1
    for j in range(i,-1,-1):
        temp.append(n//(3**j))
        n=n%(3**j)
    for k in range(len(temp)):
        answer+=temp[k]*(3**k)
    return answer",,2023. 8. 28,30,1
2023. 8. 28 오전 10:06:29,김현우,AI,39 - 두 개 뽑아서 더하기,"function solution(numbers) {
    const answer = [];
    const len = numbers.length;
    
    for(let i=0; i<len; i++) {
        for(let j=i + 1; j<len; j++) {
            if(!answer.includes(numbers[i] + numbers[j])) {
                answer.push(numbers[i] + numbers[j]);
            }
        }
    }
    
    return answer.sort((a, b) => a - b);
}",,2023. 8. 28,39,2
2023. 8. 28 오전 10:06:31,남의서,AI,10 - 정수 내림차순으로 배치하기,"def solution(n):
    return int(''.join(sorted(str(n), reverse = True)))",,2023. 8. 28,10,1
2023. 8. 28 오전 10:06:54,윤지연,Unity,5 - 나머지가 1이 되는 수 찾기,"using System;

public class Solution {
    public int solution(int n) {
        int answer = 2;
        for(int i = 2; i <= n-1; i++)
        {
            if(n % i == 1)
            {
                answer = i;
                break;
            }
        }
        return answer;
    }
}",https://github.com/jungbosong/Codekata/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/87389.%E2%80%85%EB%82%98%EB%A8%B8%EC%A7%80%EA%B0%80%E2%80%851%EC%9D%B4%E2%80%85%EB%90%98%EB%8A%94%E2%80%85%EC%88%98%E2%80%85%EC%B0%BE%EA%B8%B0,2023. 8. 28,5,1
2023. 8. 28 오전 10:07:15,김호찬,AI,10 - 정수 내림차순으로 배치하기,"def solution(n):
    digits = list(str(n))
    digits.sort(reverse=True)
    new_number = int(''.join(digits))

    return new_number",https://github.com/hckim1/Coding-Practice.git,2023. 8. 28,10,1
2023. 8. 28 오전 10:07:21,장성림,Unity,15 - 나누어 떨어지는 숫자,"using System;
using System.Collections.Generic;
public class Solution {
    public int[] solution(int[] arr, int divisor) {
        int[] answer = new int[] {};
        List<int> intList = new List<int>();
        Array.Sort(arr);
        foreach (int num in arr){
            if (num % divisor == 0)
                intList.Add(num);
        }
        if (intList.Count == 0)
            intList.Add(-1);
        answer = intList.ToArray();
        return answer;
    }
}",https://github.com/hoobhoob,2023. 8. 28,15,1
2023. 8. 28 오전 10:07:30,조영오,Unity,20 - 가운데 글자 가져오기,"public class Solution {
    public string solution(string s) {
        string answer = """";
        int size = s.Length;
        
        if(size % 2 == 0){
            answer += s[size/2 -1];
            answer += s[size/2];
        }
        else{
            answer += s[size/2];
        }
        
        return answer;
    }
}",,2023. 8. 28,20,1
2023. 8. 28 오전 10:07:33,김예준,Unity,12 - 두 정수 사이의 합,"using namespace std;

long long solution(int a, int b) {
    long long answer = 0;
    
    if (a > b)
    {
        int tmp = a;
        a = b;
        b = tmp;
    }
    
    for (int i = a; i <= b; i++)
    {
        answer += i;
    }
    
    return answer;
}",,2023. 8. 28,12,1
2023. 8. 28 오전 10:07:36,강상찬,AI,20 - 가운데 글자 가져오기,"def solution(s):
    if (len(s) == 1 or len(s) == 2):
        return s
    else:
        return s[((len(s)+1)//2)-1:-(((len(s)+1)//2)-1)]",,2023. 8. 28,20,1
2023. 8. 28 오전 10:07:37,박민혁,Unity,16 - 음양 더하기,"using System;

public class Solution {
    public int solution(int[] absolutes, bool[] signs) {
            int answer = 0;
    for(int i=0;i<absolutes.Length;++i)
    {
        if(signs[i]==false)
        {
            answer-=absolutes[i];
        }
        else
        {
            answer+=absolutes[i];
        }
    }
    return answer;
    }
}",,2023. 8. 28,16,1
2023. 8. 28 오전 10:07:57,박도현,Unity,7 - 자연수 뒤집어 배열로 만들기,"public class Solution {
    public int[] solution(long n) {
        int[] answer = new int[] {};
        string value = n.ToString();
        answer = new int[value.Length];
        for(int i = 1; i <= value.Length; i++)
        {
            answer[i-1] = int.Parse(value.Substring(value.Length-i,1));
        }
        return answer;
    }
}",,2023. 8. 28,7,1
2023. 8. 28 오전 10:08:51,김진규,Unity,17 - 핸드폰 번호 가리기,"public class Solution {
    public string solution(string phone_number) {
        string answer = """";
        int length = phone_number.Length;
        answer = new string('*', length - 4) + phone_number.Substring(length - 4);
        return answer;
    }
}",,2023. 8. 28,17,1
2023. 8. 28 오전 10:08:57,함영주,Unity,6 - x만큼 간격이 있는 n개의 숫자,"public class Solution {
    public long[] solution(int x, int n) {
        long[] answer = new long[n] ;
        long a = (long)x;
        for (long i = 0; i < n; i++ )
        {
            a = x * (i+1);
           answer[i] = a; 
        }

        return answer;
    }
}",,2023. 8. 28,6,1
2023. 8. 28 오전 10:08:58,정재훈,Unity,5 - 나머지가 1이 되는 수 찾기,"public class Solution
    {
       static public int solution(int n)
        {
            int answer = 0;
            for (int i = 1; i < n; i++)
            {
                if (n % i == 1)
                {
                    answer = i;
                    break;
                }
               
            }
            return answer;
        }
           
           
        
    }",https://github.com/toadsam/Algorithm,2023. 8. 28,5,1
2023. 8. 28 오전 10:08:58,김호연,Unity,14 - 서울에서 김서방 찾기,"using System;

public class Solution {
    public string solution(string[] seoul) {
        //배열의 인덱스를 찾는 방법?
        //배열 인덱스 찾는 함수 IndexOf
        string answer = """";
        
        int kim = Array.IndexOf(seoul, ""Kim"");
        answer = $""김서방은 {kim}에 있다"";
 
        return answer;
    }
}",,2023. 8. 28,14,1
2023. 8. 28 오전 10:08:59,김형중,Unity,9 - 정수 제곱근 판별,"public class Solution {
    public long solution(long n) {
        long answer = -1;
        
        for(long x = 1; x*x <= n; x++)
        {
            if (x*x == n)
            {
                answer = (x+1)*(x+1);
            }
        }
        return answer;
    }
}",,2023. 8. 28,9,1
2023. 8. 28 오전 10:09:40,정범수,AI,34 - 최소직사각형,"def solution(sizes):
    a, b = map(max, zip(*map(sorted, sizes)))
    return a*b",https://github.com/sudog1/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/86491.%E2%80%85%EC%B5%9C%EC%86%8C%EC%A7%81%EC%82%AC%EA%B0%81%ED%98%95,2023. 8. 28,34,2
2023. 8. 28 오전 10:09:48,이선재,Unity,20 - 가운데 글자 가져오기,"#include <string>
#include <vector>

using namespace std;

string solution(string s) {
    string answer = """";
    
    if(s.length() % 2 == 0){
        answer = s.substr((s.length()/2) - 1, 2);
    }
    else
        answer = s[s.length()/2];
    
    return answer;
}",https://github.com/Lyrwhitt/Algorithm/blob/main/Programmers/LEVEL1/%EA%B0%80%EC%9A%B4%EB%8D%B0%20%EA%B8%80%EC%9E%90%20%EA%B0%80%EC%A0%B8%EC%98%A4%EA%B8%B0,2023. 8. 28,20,1
2023. 8. 28 오전 10:09:52,어하림,Unity,4 - 약수의 합,"public class Solution {
    public int solution(int n) {
        int answer = 0;
        for (int i =1; i <= n/2; i++)
        {
            if (n % i == 0)
            {
                answer += i;
            }
        }
        return answer +n;
    }
}",,2023. 8. 28,4,1
2023. 8. 28 오전 10:10:01,신우석,Unity,30 - 3진법 뒤집기,"using System;

public class Solution {
    public int solution(int n) {
        int num = 1;
        while (num * 3 <= n)
            num *= 3;
        
        int answer = 0;
        for (int i = num; i > 0; i /= 3) {
            answer += n / i * num / i;
            n %= i;
        }
            
        return answer;
    }
}",https://github.com/seoksii/AlgorithmCodeKata/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/68935.%E2%80%853%EC%A7%84%EB%B2%95%E2%80%85%EB%92%A4%EC%A7%91%EA%B8%B0,2023. 8. 28,30,1
2023. 8. 28 오전 10:10:04,조영오,Unity,21 - 수박수박수박수박수박수?,"public class Solution {
    public string solution(int n) {
        string answer = """";
        
        for(int i = 1 ; i <= n; i++){
            if(i%2 == 0){
                answer += ""박"";
            }
            else{answer += ""수"";}
        }
        
        return answer;
    }
}",,2023. 8. 28,21,1
2023. 8. 28 오전 10:10:24,이현지,Unity,14 - 서울에서 김서방 찾기,"using System;

public class Solution {
    public string solution(string[] seoul) 
    {
        int index = Array.IndexOf(seoul, ""Kim"");
        string answer = string.Format($""김서방은 {index}에 있다"");
        return answer;
    }
}",https://github.com/szlovelee/Programmers-Algorithm,2023. 8. 28,14,1
2023. 8. 28 오전 10:10:30,김나운,Unity,10 - 정수 내림차순으로 배치하기,"public class Solution {
    public long solution(long n) {
        char[] arr = n.ToString().ToCharArray();

        for (int i = 0; i < arr.Length - 1; i++) {
            for (int j = 0; j < arr.Length - i - 1; j++) {
                if (arr[j] < arr[j + 1]) {
                    char temp = arr[j];
                    arr[j] = arr[j + 1];
                    arr[j + 1] = temp;
                }
            }
        }
        
        string sortedNumberStr = new string(arr);
        long answer = long.Parse(sortedNumberStr);
        return answer;
    }
}
",,2023. 8. 28,10,1
2023. 8. 28 오전 10:10:30,임전혁,Unity,25 - 부족한 금액 계산하기,"using System;

class Solution
{
    public long solution(int price, int money, int count)
    {
        
        long cost = price;
        for (int i = 2; i <= count; i++)
            cost += price * i;
        
        long result = money - cost;
        
        result = result >= 0 ? 0 : -result;
        
        return result;
    }
}",https://github.com/yarogono/Algorithm_CSharp/blob/master/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/82612.%E2%80%85%EB%B6%80%EC%A1%B1%ED%95%9C%E2%80%85%EA%B8%88%EC%95%A1%E2%80%85%EA%B3%84%EC%82%B0%ED%95%98%EA%B8%B0/%EB%B6%80%EC%A1%B1%ED%95%9C%E2%80%85%EA%B8%88%EC%95%A1%E2%80%85%EA%B3%84%EC%82%B0%ED%95%98%EA%B8%B0.cs,2023. 8. 28,25,1
2023. 8. 28 오전 10:10:45,김민태,Unity,25 - 부족한 금액 계산하기,"using System;

class Solution
{
    public long solution(int price, int money, int count)
    {
        long temp = 0;
        for(int i = 0; i <= count; i++)
        {
            temp += price * i;
        }
        if(money <= temp)
        {
            return temp - money;
        }
        else
        {
            return 0;
        }
    }
}",https://github.com/rlaalsxo/CodingTest,2023. 8. 28,25,1
2023. 8. 28 오전 10:10:52,박민혁,Unity,17 - 핸드폰 번호 가리기,"public class Solution {
    public string solution(string phone_number) {
        string answer = """";
        for(int i=0;i<phone_number.Length;++i)
        {
         if(phone_number.Length-4>i)
         {
             answer+=""*"";
         }   
         else
         {
             answer+=phone_number[i];
         }
        }
        return answer;
    }
}",,2023. 8. 28,17,1
2023. 8. 28 오전 10:10:57,차요한,Unity,18 - 없는 숫자 더하기,"using System;

public class Solution {
    public int solution(int[] numbers) {
        int answer = 45;
        int n =0;
        for(int i = 0; i<numbers.Length; i++)
        {
            answer-=numbers[i];
        }
        return answer;
    }
}",https://github.com/HOHOJO/Algorithm_test,2023. 8. 28,18,1
2023. 8. 28 오전 10:11:11,이소이,Unity,23 - 약수의 개수와 덧셈,"using System;

public class Solution {
    public int solution(int left, int right) {
        int answer = 0;
        for (int i = left; i < right + 1; i++)
        {
            if (GetDivisorCount(i) % 2 == 0)
                answer += i;
            else
                answer -= i;
        }
        return answer;
    }
    
    private int GetDivisorCount(int num)
    {
        int result = 0;
        if (num == 1)
            return 1;
        for (int i = 1; i < num + 1; i++)
        {
            if (num % i == 0)
                result++;
        }
        return result;
    }
}",https://github.com/leesy015599/AlgorithmCodeKata/blob/master/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/77884.%E2%80%85%EC%95%BD%EC%88%98%EC%9D%98%E2%80%85%EA%B0%9C%EC%88%98%EC%99%80%E2%80%85%EB%8D%A7%EC%85%88/%EC%95%BD%EC%88%98%EC%9D%98%E2%80%85%EA%B0%9C%EC%88%98%EC%99%80%E2%80%85%EB%8D%A7%EC%85%88.cs,2023. 8. 28,23,1
2023. 8. 28 오전 10:11:17,김도현B,Unity,17 - 핸드폰 번호 가리기,"using System.Text;
public class Solution {
    public string solution(string phone_number) {
        StringBuilder stringBuilder = new StringBuilder(phone_number);
        for(int i = 0; i < phone_number.Length - 4 ; i++)
        {
            stringBuilder[i] = '*';
        }
        return stringBuilder.ToString();
    }
}",https://github.com/subscriptioncat/Algorithm,2023. 8. 28,17,1
2023. 8. 28 오전 10:12:14,이주연,Unity,30 - 3진법 뒤집기,"#include <string>
#include <vector>
#include <cmath>
#include <algorithm>

using namespace std;

int solution(int n) {
    int answer = 0;
    
    vector<int> num_3;
    while(n != 0)
    {
        num_3.emplace_back(n % 3);
        n /= 3;
    }
    
    reverse(num_3.begin(), num_3.end());
    
    for(int i = 0; i < num_3.size(); i++)
    {
        answer += num_3[i] * pow(3, i);
    }
    
    return answer;
}",,2023. 8. 28,30,1
2023. 8. 28 오전 10:12:31,이정환,Unity,10 - 정수 내림차순으로 배치하기,"using System.Collections.Generic;

public class Solution
{
     public long solution(long n)
            {
                List<long>list = new List<long>();
                while (n > 0)
                {
                    list.Add(n % 10);
                    n /= 10;
                }
                list.Sort();
                list.Reverse();
                long answer = 0;
                foreach(int i in list)
                {
                    answer *= 10;
                    answer += i;
                }

                return answer;
            }
}",,2023. 8. 28,10,1
2023. 8. 28 오전 10:12:36,김해찬,Unity,78 - 행렬의 곱셈,"using System;

public class Solution {
    public int[,] solution(int[,] arr1, int[,] arr2) {
        int x = arr2.GetLength(1);
        int y = arr1.GetLength(0);
        int arr1X = arr1.GetLength(1);
        
        int[,] answer = new int[y, x];
        
        for(int i = 0; i < y; i++)
        {
            for(int j = 0; j < arr1X; j++)
            {                
                for (int k = 0; k < x; k++)
                {
                    answer[i, k] += arr1[i, j] * arr2[j, k];
                }
            }
        }
        
        return answer;
    }
}",,2023. 8. 28,78,3
2023. 8. 28 오전 10:12:56,조영오,Unity,22 - 내적,"using System;

public class Solution {
    public int solution(int[] a, int[] b) {
        int answer = 0;
        
        for(int i = 0; i < a.Length; i++){
            answer += a[i]*b[i];
        }
        
        return answer;
    }
}",,2023. 8. 28,22,1
2023. 8. 28 오전 10:12:56,김하늘,Unity,10 - 정수 내림차순으로 배치하기,"public class Solution 
{
    public long solution(long n) 
    {
        string s = n.ToString();
            char[] arr = s.ToCharArray();

            for (int i = 0; i < arr.Length; i++)
            {
                for (int j = i+1; j < arr.Length; j++)
                {
                    if (arr[i] < arr[j])
                    {
                        char c = arr[i];
                        arr[i] = arr[j];
                        arr[j] = c;
                    }
                }
            }
            s = new string(arr);
            long answer = long.Parse(s);
            return answer;
    }
}",,2023. 8. 28,10,1
2023. 8. 28 오전 10:13:31,문현우,Unity,8 - 문자열을 정수로 바꾸기,"public class Solution {
    public int solution(string s) {
        int answer = int.Parse(s);
        return answer;
    }
}",https://github.com/Munch310/Algorithm-Csharp/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12925.%E2%80%85%EB%AC%B8%EC%9E%90%EC%97%B4%EC%9D%84%E2%80%85%EC%A0%95%EC%88%98%EB%A1%9C%E2%80%85%EB%B0%94%EA%BE%B8%EA%B8%B0,2023. 8. 28,8,1
2023. 8. 28 오전 10:13:33,박민혁,Unity,18 - 없는 숫자 더하기,"using System;

public class Solution {
    public int solution(int[] numbers) {
        int answer = 45;
        foreach(int number in numbers)
        {
            answer-=number;
        }
        return answer;
    }
}",,2023. 8. 28,18,1
2023. 8. 28 오전 10:13:51,이선재,Unity,21 - 수박수박수박수박수박수?,"#include <string>
#include <vector>

using namespace std;

string solution(int n) {
    string answer = """";
    
    for(int i = 0; i < n; i++){
        if(i % 2 == 0)
            answer += ""수"";
        else
            answer += ""박"";
    }
    
    return answer;
}",https://github.com/Lyrwhitt/Algorithm/blob/main/Programmers/LEVEL1/%EC%88%98%EB%B0%95%EC%88%98%EB%B0%95%EC%88%98%EB%B0%95%EC%88%98%EB%B0%95%EC%88%98%EB%B0%95%EC%88%98%3F,2023. 8. 28,21,1
2023. 8. 28 오전 10:14:21,이형빈,Unity,6 - x만큼 간격이 있는 n개의 숫자,"public class Solution {
    public long[] solution(int x, int n) 
    {
        long[] answer = new long[n];
        for(int i = 0; i<n; i++)
        {
            answer[i] = (i*(long)x)+(long)x;         
        }
        return answer;
    }
}",,2023. 8. 28,6,1
2023. 8. 28 오전 10:14:33,강성호,Unity,36 - 숫자 문자열과 영단어,"using System;

public class Solution {
    public int solution(string s) {
      
			int answer = 0;
			s = s.Replace(""zero"", ""0"");
			s = s.Replace(""one"", ""1"");
			s = s.Replace(""two"", ""2"");
			s = s.Replace(""three"", ""3"");
			s = s.Replace(""four"", ""4"");
			s = s.Replace(""five"", ""5"");
			s = s.Replace(""six"", ""6"");
			s = s.Replace(""seven"", ""7"");
			s = s.Replace(""eight"", ""8"");
			s = s.Replace(""nine"", ""9"");

			answer = int.Parse(s);
			return answer;
    }
}",,2023. 8. 28,36,2
2023. 8. 28 오전 10:14:38,김예준,Unity,13 - 콜라츠 추측,"using namespace std;

int solution(int num) {
    int answer = 0;
    long long n = num;
    
    while (n != 1)
    {
        if (n % 2 == 0) n /= 2;
        else n = n * 3 + 1;
        answer++;
        
        if (answer > 500) return -1;
    }
    
    return answer;
}",,2023. 8. 28,13,1
2023. 8. 28 오전 10:14:48,최장범,Unity,11 - 하샤드 수,"using System;

public class Solution {
    public bool solution(int x) 
    {
        //x를 문자열로
        string temp = x.ToString();
        
        //for문
        int sum =0;
        for (int i =0; i<temp.Length; i++)
        {
            sum += (int)Char.GetNumericValue(temp[i]);
        }
        //나머지가 0이면 참, 아니면 거짓
        bool answer = x % sum ==0 ? true:false;
        return answer;
    }
}",,2023. 8. 28,11,1
2023. 8. 28 오전 10:14:50,이홍준,Unity,15 - 나누어 떨어지는 숫자,"using System;
using System.Collections.Generic;

public class Solution {
    public int[] solution(int[] arr, int divisor) {
        int[] answer = new int[] {};
        List<int> list = new List<int>();
        
        for (int i = 0; i < arr.Length; i++)
        {
            if (arr[i] % divisor == 0) list.Add(arr[i]);
        }
        
        if (list.Count == 0)
        {
            answer = new int[] {-1};
        }
        else
        {
            list.Sort();
            answer = list.ToArray();
        }
        
        return answer;
    }
}",https://github.com/dlghdwns97/Study/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12910.%E2%80%85%EB%82%98%EB%88%84%EC%96%B4%E2%80%85%EB%96%A8%EC%96%B4%EC%A7%80%EB%8A%94%E2%80%85%EC%88%AB%EC%9E%90%E2%80%85%EB%B0%B0%EC%97%B4,2023. 8. 28,15,1
2023. 8. 28 오전 10:15:32,박준규,Unity,11 - 하샤드 수,"public class Solution 
{
    public bool solution(int x) 
    {
        int xtest = x;
        int num =0;
        bool answer = true;
        // 각 자릿수의 합(for문) > if문으로 나눠지는 지 판별
        while(x>0){
            num += x%10;
            x = x/10;            
        }
        if(xtest%num == 0){
            answer = true;
        }else{
            answer = false;
        }
        return answer;
    }
}",,2023. 8. 28,11,1
2023. 8. 28 오전 10:16:14,임전혁,Unity,26 - 문자열 다루기 기본,"public class Solution {
    public bool solution(string s) {
        bool answer = true;
        
        if(s.Length != 4 && s.Length != 6) {
            return false;
        }

        for(int i = 0; i < s.Length; i++) {
            char tempChar = s[i];
            if(tempChar > 57) {
                return false;
            }
        }
        
        return answer;
    }
}",https://github.com/yarogono/Algorithm_CSharp/blob/master/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12918.%E2%80%85%EB%AC%B8%EC%9E%90%EC%97%B4%E2%80%85%EB%8B%A4%EB%A3%A8%EA%B8%B0%E2%80%85%EA%B8%B0%EB%B3%B8/%EB%AC%B8%EC%9E%90%EC%97%B4%E2%80%85%EB%8B%A4%EB%A3%A8%EA%B8%B0%E2%80%85%EA%B8%B0%EB%B3%B8.cs,2023. 8. 28,26,1
2023. 8. 28 오전 10:16:32,이선재,Unity,22 - 내적,"#include <string>
#include <vector>

using namespace std;

int solution(vector<int> a, vector<int> b) {
    int answer = 0;
    
    for(int i = 0; i < a.size(); i++){
        answer += a[i] * b[i];
    }
    
    return answer;
}",https://github.com/Lyrwhitt/Algorithm/blob/main/Programmers/LEVEL1/%EB%82%B4%EC%A0%81,2023. 8. 28,22,1
2023. 8. 28 오전 10:16:37,김민상,Unity,36 - 숫자 문자열과 영단어,"public class Solution
{
    public int solution(string s)
    {
        string[] numbers = new string[] { ""zero"", ""one"", ""two"", ""three"", ""four"", ""five"", ""six"", ""seven"", ""eight"", ""nine"" };

        for (int i = 0; i < numbers.Length; i++)
            s = s.Replace(numbers[i], i.ToString());

        return int.Parse(s);
    }
}",,2023. 8. 28,36,2
2023. 8. 28 오전 10:16:50,김형중,Unity,10 - 정수 내림차순으로 배치하기,"using System;

public class Solution {
    public long solution(long n) {
        long answer = 0;
        
        // n을 char형태로 변환, 새로운 char 배열에 저장
        char[] temp = n.ToString().ToCharArray();
        
        // 배열 오름차순 정렬 (Sort) 사용
        Array.Sort(temp);
        
        // 배열 뒤집기 (Reverse) 사용
        Array.Reverse(temp);
        
        // 배열을 문자열로 만들고 (new string)사용
        // 기존의 long형태로 변환 (long은 ToInt64를 사용한다)
        answer = Convert.ToInt64(new string(temp));
            
        return answer;
    }
}",,2023. 8. 28,10,1
2023. 8. 28 오전 10:18:06,이정환,Unity,11 - 하샤드 수,"public class Solution {
    public bool solution(int x) {
        int n=x;
        int sum=0;
        bool answer;
        while(n>0)
        {
            sum += n%10;
            n /= 10;
        }
        if(x%sum ==0)
        {
           answer = true; 
        }else
        {
            answer = false;
        }


        return answer;
    }
}",,2023. 8. 28,11,1
2023. 8. 28 오전 10:18:10,신현,Unity,10 - 정수 내림차순으로 배치하기,"using System;

public class Solution {
    public long solution(long n) {
        char[] cArr = n.ToString().ToCharArray();
        Array.Sort(cArr);
        Array.Reverse(cArr);
        long answer = long.Parse(new string(cArr));
        return answer;
    }
}",https://github.com/Shyunju/codTaka.git,2023. 8. 28,10,1
2023. 8. 28 오전 10:18:12,강상찬,AI,21 - 수박수박수박수박수박수?,"def solution(n):
    return ((n//2)*""수박""+(n%2)*'수')",,2023. 8. 28,21,1
2023. 8. 28 오전 10:18:31,이홍준,Unity,16 - 음양 더하기,"using System;

public class Solution {
    public int solution(int[] absolutes, bool[] signs) {
        int answer = 0;
        
        for (int i = 0; i < absolutes.Length; i++)
        {
            if (signs[i] == true)
            {
                answer += absolutes[i];
            }
            else
            {
                answer -= absolutes[i];
            }
        }
        
        return answer;
    }
}",https://github.com/dlghdwns97/Study/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/76501.%E2%80%85%EC%9D%8C%EC%96%91%E2%80%85%EB%8D%94%ED%95%98%EA%B8%B0,2023. 8. 28,16,1
2023. 8. 28 오전 10:18:55,최석준,Unity,4 - 약수의 합,"int solution(int n) {
    int answer = 0;
    for(int i = 1; i <= n; i++)
        if(n % i == 0) 
            answer += i;
    
    return answer;
}",,2023. 8. 28,4,1
2023. 8. 28 오전 10:19:08,이장원,Unity,3 - 자릿수 더하기,"public int Solution(int n)
    {
            int answer = 0;
            string A = n.ToString();

            for (int i = 0; i < A.Length; i++)
            {
                answer += int.Parse(A[i].ToString());
            }

            return answer;
        }",,2023. 8. 28,3,1
2023. 8. 28 오전 10:19:19,김진규,Unity,18 - 없는 숫자 더하기,"using System;

public class Solution {
    public int solution(int[] numbers) {
        int answer = 0;
        for(int i=0;i<10;i++)
        {
            if(Array.IndexOf(numbers,i) == -1)answer+=i;
        }
        return answer;
    }
}",,2023. 8. 28,18,1
2023. 8. 28 오전 10:19:28,심명희,AI,12 - 두 정수 사이의 합,"def solution(a, b):
    answer = 0
    if a==b:
        return a
    elif a<b:
        for i in range(a,b+1):
            answer += i
        return answer
    else:
        for i in range(b,a+1):
            answer += i
        return answer",,2023. 8. 28,12,1
2023. 8. 28 오전 10:19:33,최석준,Unity,5 - 나머지가 1이 되는 수 찾기,"int solution(int n) {
    for(int x = 2; x < n; x++)
    {
        if(n % x == 1)
        {
            return x;
        }
    }
}",,2023. 8. 28,5,1
2023. 8. 28 오전 10:19:35,박민호,Unity,17 - 핸드폰 번호 가리기,"using System;
public class Solution {
    public string solution(string phone_number) {
        char[] arr = phone_number.ToCharArray();
        for(int i=0;i<arr.Length;i++){
            if (i<arr.Length-4){
                arr[i]='*';
            }
        }
        string answer = new string(arr);
        return answer;
    }
}",,2023. 8. 8,17,1
2023. 8. 28 오전 10:19:38,임전혁,Unity,27 - 행렬의 덧셈,"public class Solution {
    public int[,] solution(int[,] arr1, int[,] arr2) {
        
        for (int i = 0; i < arr1.GetLength(0); i++)
        {
            for (int j = 0; j < arr1.GetLength(1); j++)
            {
                arr1[i, j] += arr2[i, j];
            }
        }
        
        return arr1;
    }
}",https://github.com/yarogono/Algorithm_CSharp/blob/master/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12950.%E2%80%85%ED%96%89%EB%A0%AC%EC%9D%98%E2%80%85%EB%8D%A7%EC%85%88/%ED%96%89%EB%A0%AC%EC%9D%98%E2%80%85%EB%8D%A7%EC%85%88.cs,2023. 8. 28,27,1
2023. 8. 28 오전 10:19:43,김어진,Unity,9 - 정수 제곱근 판별,"using System;
public class Solution {
    public long solution(long n) {
        long answer = 0;
        long m = (long)Math.Sqrt(n);
        answer = (m*m==n) ? (m+1)*(m+1) : -1;
        return answer;
    }
}",https://github.com/KimEoJin24/ProgrammersCodingTests/commit/188c9f7145cbc9a2085bc47cae7fe1502a03d6ff,2023. 8. 28,9,1
2023. 8. 28 오전 10:19:48,박민호,Unity,17 - 핸드폰 번호 가리기,"using System;
public class Solution {
    public string solution(string phone_number) {
        char[] arr = phone_number.ToCharArray();
        for(int i=0;i<arr.Length;i++){
            if (i<arr.Length-4){
                arr[i]='*';
            }
        }
        string answer = new string(arr);
        return answer;
    }
}",,2023. 8. 28,17,1
2023. 8. 28 오전 10:19:51,신해준,Unity,7 - 자연수 뒤집어 배열로 만들기,"using System;
using System.Collections.Generic;

public class Solution
{
    public List<int> solution(long n)
    {
        List<int> answer = new List<int>();

        while (n > 0)
        {
            int digit = (int)(n % 10);
            answer.Add(digit); 
            n /= 10;
        }


        return answer;
    }
}",,2023. 8. 28,7,1
2023. 8. 28 오전 10:20:19,장성림,Unity,16 - 음양 더하기,"using System;

public class Solution {
    public int solution(int[] absolutes, bool[] signs) {
        int answer = 123456789;
        long sum = 0;
        for(int i = 0; i < absolutes.Length; i++){
            if(signs[i])
                sum += absolutes[i];
            else
                sum -= absolutes[i];
        }
        answer = (int)sum;
        return answer;
    }
}",https://github.com/hoobhoob,2023. 8. 28,16,1
2023. 8. 28 오전 10:20:29,강희건,Unity,2 - 평균 구하기,"namespace ConsoleApp4
{
    internal class Program
    {
        class Solution
        {
            public double CalculateAverage(int[] arr)
            {
                if (arr == null || arr.Length == 0)
                {
                    throw new ArgumentException(""배열이 비어있거나 null입니다."");
                }

                if (arr.Length > 100)
                {
                    throw new ArgumentException(""배열의 길이는 100 이하여야 합니다."");
                }

                foreach (int num in arr)
                {
                    if (num < -10000 || num > 10000)
                    {
                        throw new ArgumentOutOfRangeException(""배열의 원소는 -10,000 이상 10,000 이하여야 합니다."");
                    }
                }

                int sum = 0;
                foreach (int num in arr)
                {
                    sum += num;
                }

                double average = (double)sum / arr.Length;
                return average;
            }
        }

        static void Main(string[] args)
        {
            int[] numbers = { 1,2,3,4 };
            Solution solution = new Solution();
            double average = solution.CalculateAverage(numbers);
            Console.WriteLine(""평균: "" + average);
        }

    }
}",https://github.com/bo9us,2023. 8. 28,2,1
2023. 8. 28 오전 10:21:18,윤지연,Unity,6 - x만큼 간격이 있는 n개의 숫자,"public class Solution {     
    public long[] solution(int x, int n) {
        long[] answer = new long[n];
        for(long i = 0; i < n; i++)
        {
            answer[i] = x + (x * i);    
        }
        return answer;
    }
}",https://github.com/jungbosong/Codekata/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12954.%E2%80%85x%EB%A7%8C%ED%81%BC%E2%80%85%EA%B0%84%EA%B2%A9%EC%9D%B4%E2%80%85%EC%9E%88%EB%8A%94%E2%80%85n%EA%B0%9C%EC%9D%98%E2%80%85%EC%88%AB%EC%9E%90,2023. 8. 28,6,1
2023. 8. 28 오전 10:21:26,장현교,Unity,8 - 문자열을 정수로 바꾸기,"public int solution(string s)
{
    int answer = 0;
    if (s.Contains('-'))
    {
        answer = -int.Parse(s.Substring(1));
    }
    else
    {
        answer = int.Parse(s);
    }
    return answer;
}",,2023. 8. 28,8,1
2023. 8. 28 오전 10:21:55,남의서,AI,11 - 하샤드 수,"def solution(x):
    sum = 0
    for i in str(x):
        sum += int(i)
    if x % sum == 0:
        return True
    else:
        return False",,2023. 8. 28,11,1
2023. 8. 28 오전 10:21:58,이현지,Unity,15 - 나누어 떨어지는 숫자,"using System.Collections.Generic;

public class Solution 
{
    public int[] solution(int[] arr, int divisor) 
    {
        List<int> nums = new List<int>();
        
        foreach (int i in arr)
        {
            if (i % divisor == 0) nums.Add(i);
        }
        
        nums.Sort();
        
        int[] answer = new int[nums.Count];
        
        for (int i = 0; i < nums.Count; i++)
        {
            answer[i] = nums[i];
        }
        return (answer.Length == 0)? answer = new int[] {-1} : answer;
    }
}",https://github.com/szlovelee/Programmers-Algorithm,2023. 8. 28,15,1
2023. 8. 28 오전 10:21:58,조영오,Unity,23 - 약수의 개수와 덧셈,"using System;

public class Solution {
    public int solution(int left, int right) {
        int answer = 0;
        int check;
        int count = 0;
        int div;
        
        for(int i = left; i<= right; i++){
            check = i;
            div = 1;
            count = 0;
            
            while(check >= div){
                if(check % div == 0){
                    count++;
                }
                div++;
            }
            
            if(count % 2 == 0){answer += i;}
            else{answer -= i;}
        }
        
        
        return answer;
    }
}",,2023. 8. 28,23,1
2023. 8. 28 오전 10:22:04,신우석,Unity,31 - 이상한 문자 만들기,"using System;

public class Solution {
    public string solution(string s) {
        char[] charArr = s.ToCharArray();
        int cnt = 0;
        for (int i = 0; i < s.Length; ++i)
            if (charArr[i] == ' ') cnt = 0;
            else if (cnt++ % 2 == 0)
                charArr[i] = Char.ToUpper(charArr[i]);
            else
                charArr[i] = Char.ToLower(charArr[i]);
        
        return new string(charArr);
    }
}",https://github.com/seoksii/AlgorithmCodeKata/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12930.%E2%80%85%EC%9D%B4%EC%83%81%ED%95%9C%E2%80%85%EB%AC%B8%EC%9E%90%E2%80%85%EB%A7%8C%EB%93%A4%EA%B8%B0,2023. 8. 28,31,2
2023. 8. 28 오전 10:22:44,김예준,Unity,14 - 서울에서 김서방 찾기,"#include <string>
#include <vector>

using namespace std;

string solution(vector<string> seoul)
{
    for (int i = 0; i < seoul.size(); i++)
    {
        if (seoul[i] == ""Kim"")
        {
            return ""김서방은 "" + to_string(i) + ""에 있다"";
        }
    }
}",,2023. 8. 28,14,1
2023. 8. 28 오전 10:22:55,임전혁,Unity,28 - 직사각형 별찍기,"using System;

public class Solution
{
    public static void Main()
    {
        String[] s;

        Console.Clear();
        s = Console.ReadLine().Split(' ');

        int a = int.Parse(s[0]);
        int b = int.Parse(s[1]);

        for (int i = 0; i < b; i++)
        {
            for (int j = 0; j < a; j++)
            {
                Console.Write(""*"");
            }
            Console.WriteLine();
        }
    }
}",https://github.com/yarogono/Algorithm_CSharp/blob/master/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12969.%E2%80%85%EC%A7%81%EC%82%AC%EA%B0%81%ED%98%95%E2%80%85%EB%B3%84%EC%B0%8D%EA%B8%B0/%EC%A7%81%EC%82%AC%EA%B0%81%ED%98%95%E2%80%85%EB%B3%84%EC%B0%8D%EA%B8%B0.cs,2023. 8. 28,28,1
2023. 8. 28 오전 10:23:08,김민태,Unity,26 - 문자열 다루기 기본,"public class Solution {
    public bool solution(string s) {
        bool answer = false;
        
        if (s.Length == 4 || s.Length == 6)
        {	
            answer = int.TryParse(s, out int temp);
        }
        return answer;
    }
}",https://github.com/rlaalsxo/CodingTest,2023. 8. 28,26,1
2023. 8. 28 오전 10:23:30,김도현A,Unity,6 - x만큼 간격이 있는 n개의 숫자,"public class Solution 
{
    public long[] solution(int x, int n) 
    {
        long[] answer = new long[n];
        
        for (int i = 0; i<n; i++)
        {
            answer[i]=(long)x * (i+1);
        }
        
        
        return answer;
    }
}",,2023. 8. 28,6,1
2023. 8. 28 오전 10:23:54,이성권,Unity,3 - 자릿수 더하기,"using System;

public class Solution {
    public int solution(int n) {
        int answer = 0;
        //정수 n을 String형으로 변환 후 CharArray로 변환
        char[] arr = n.ToString().ToCharArray();
        
        //반복문을 통해 각 해당 문자를 int형으로 바꾸어 answer에 더해줌.
        foreach(char a in arr)
        {
            answer += System.Convert.ToInt32(a.ToString());
        }
        return answer;
    }
}",https://github.com/,2023. 8. 28,3,1
2023. 8. 28 오전 10:24:22,이정환,Unity,12 - 두 정수 사이의 합,"
public class Solution {
    public long solution(int a, int b) {
        if(a==b)
        {
            return a;
        }
         long low;
         long up;
        if(a>b){
            low=b;
            up=a;
        }else{
            low =a;
            up=b;
        }

        long num=low;
        long  answer = 0;
        while(num <= up)
        {
            answer += num;
            num++;
        }

        return answer;
    }
}",,2023. 8. 28,12,1
2023. 8. 28 오전 10:24:39,김민상,Unity,37 - 문자열 내 마음대로 정렬하기,"using System.Linq;
public class Solution {
    public string[] solution(string[] strings, int n)
    {
        var sortedWords = from word in strings
                          orderby (word[n], word)
                          select word;

        return sortedWords.ToArray();
    }
}",,2023. 8. 28,37,2
2023. 8. 28 오전 10:24:51,임전혁,Unity,29 - 최대공약수와 최소공배수,"public class Solution {
    public int[] solution(int n, int m) {
        int gcdN = gcd(n, m);
        
        return new int[] {gcdN, (n * m / gcdN) };
    }
    
    private int gcd(int n, int m) {
        if(n % m == 0) {
            return m;
        }
        return gcd(m, n % m);
    }
}",https://github.com/yarogono/Algorithm_CSharp/blob/master/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12940.%E2%80%85%EC%B5%9C%EB%8C%80%EA%B3%B5%EC%95%BD%EC%88%98%EC%99%80%E2%80%85%EC%B5%9C%EC%86%8C%EA%B3%B5%EB%B0%B0%EC%88%98/%EC%B5%9C%EB%8C%80%EA%B3%B5%EC%95%BD%EC%88%98%EC%99%80%E2%80%85%EC%B5%9C%EC%86%8C%EA%B3%B5%EB%B0%B0%EC%88%98.cs,2023. 8. 28,29,1
2023. 8. 28 오전 10:25:07,강상찬,AI,22 - 내적,"def solution(a, b):
    sum = 0
    for i in range(len(a)):
        sum = sum + a[i]*b[i]
    return sum",,2023. 8. 28,22,1
2023. 8. 28 오전 10:25:07,기현빈,Unity,19 - 제일 작은 수 제거하기,"using System;
using System.Linq;
using System.Collections.Generic;

public class Solution {
    public int[] solution(int[] arr) {
        if(arr.Length == 1) return new int[]{-1};
        
        int target = arr.OrderBy(x => x).ToArray()[0];
        
        return arr.Except(new int[]{target}).ToArray();
    }
}",,2023. 8. 28,19,1
2023. 8. 28 오전 10:25:19,김예준,Unity,15 - 나누어 떨어지는 숫자,"#include <vector>
#include <algorithm>

using namespace std;

vector<int> solution(vector<int> arr, int divisor) {
    vector<int> answer;
    
    for (int i = 0; i < arr.size(); i++)
    {
        if (arr[i] % divisor == 0)
        {
            answer.push_back(arr[i]);
        }
    }
    
    if (answer.size() == 0) answer.push_back(-1);
    else sort(answer.begin(), answer.end());
    
    return answer;
}",,2023. 8. 28,15,1
2023. 8. 28 오전 10:25:21,박민호,Unity,18 - 없는 숫자 더하기,"using System;

public class Solution {
    public int solution(int[] numbers) {
        int answer = 45;
        for(int i=0;i<10;i++){
            for(int j=0;j<numbers.Length;j++){
                if (numbers[j]==i){
                    answer-=i;
                }
            }
        }       
        return answer;
    }
}",,2023. 8. 28,18,1
2023. 8. 28 오전 10:26:21,손병의,Unity,10 - 정수 내림차순으로 배치하기,"using System;
public class Solution 
{
    public long solution(long n) 
    {
        long answer = 0;
        
        //정수 n을 Char배열로 전환
        char[] temp = n.ToString().ToCharArray();
        
        Array.Sort(temp); // 오름차순 정렬[1,1,2,3,7,8]
        Array.Reverse(temp); // 배열 뒤집기[8,7,3,2,1,1]
        
        //char 배열 문자열로 바꾸고, 정수형으로 변환
        
        answer = Convert.ToInt64(new string(temp));
        
        return answer;
    }
}",https://github.com/Son-BE/CodeKata1,2023. 8. 28,10,1
2023. 8. 28 오전 10:26:28,박준규,Unity,12 - 두 정수 사이의 합,"public class Solution 
{
    public long solution(int a, int b) 
    {
        long answer = 0;
        if(a>b){
            for(int i = b;i<=a;i++){
                answer += (long)i;
            }
        }else if(a<b){
            for(int i = a;i<=b;i++){
                answer += (long)i;
            }
        }else if(a==b){
            answer = (long)a;
        }
        return answer;
    }
}",,2023. 8. 28,12,1
2023. 8. 28 오전 10:26:35,이현지,Unity,16 - 음양 더하기,"public class Solution 
{
    public int solution(int[] absolutes, bool[] signs) {
        int answer = 0;
        for (int i = 0; i < absolutes.Length; i++)
        {
            if (signs[i]) answer += absolutes[i];
            else answer -= absolutes[i];
        }
        return answer;
    }
}",https://github.com/szlovelee/Programmers-Algorithm,2023. 8. 28,16,1
2023. 8. 28 오전 10:26:45,이소이,Unity,24 - 문자열 내림차순으로 배치하기,"using System;

public class Solution {
    public string solution(string s) {
        int[] intAnswer = new int[s.Length];
        for (int i = 0; i < s.Length; i++)
            intAnswer[i] = (int)s[i];
        string answer = """";
        Array.Sort(intAnswer);
        Array.Reverse(intAnswer);
        for (int i = 0; i < s.Length; i++)
            answer += (char)intAnswer[i];
        return answer;
    }
}",https://github.com/leesy015599/AlgorithmCodeKata/blob/master/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12917.%E2%80%85%EB%AC%B8%EC%9E%90%EC%97%B4%E2%80%85%EB%82%B4%EB%A6%BC%EC%B0%A8%EC%88%9C%EC%9C%BC%EB%A1%9C%E2%80%85%EB%B0%B0%EC%B9%98%ED%95%98%EA%B8%B0/%EB%AC%B8%EC%9E%90%EC%97%B4%E2%80%85%EB%82%B4%EB%A6%BC%EC%B0%A8%EC%88%9C%EC%9C%BC%EB%A1%9C%E2%80%85%EB%B0%B0%EC%B9%98%ED%95%98%EA%B8%B0.cs,2023. 8. 28,24,1
2023. 8. 28 오전 10:26:55,조범준,Unity,19 - 제일 작은 수 제거하기,"using System;
using System.Linq;

public class Solution {
    public int[] solution(int[] arr) {
        int[] answer = new int[arr.Length-1];
        int min = arr[0];
        if(answer.Length==0){
            answer = new int[1] {-1};
        } else
        {
            for(int i = 0; i < arr.Length; i++)
            {
                if (arr[i] < min)
                {
                    min = arr[i];
                }
            }
            answer = arr.Except(new int[] { min }).ToArray();
        }
        return answer;
    }
}",https://github.com/KimMaYa1/BaekJoonEx/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1,2023. 8. 28,19,1
2023. 8. 28 오전 10:26:57,신우석,Unity,32 - 삼총사,"using System;

public class Solution {
    public int solution(int[] number) {
        int answer = 0;
        for (int i = 0; i < number.Length - 2; ++i)
            for (int j = i + 1; j < number.Length - 1; ++j)
                for (int k = j + 1; k < number.Length; ++k)
                    if (number[i] + number[j] + number[k] == 0)
                        ++answer;
        return answer;
    }
}",https://github.com/seoksii/AlgorithmCodeKata/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/131705.%E2%80%85%EC%82%BC%EC%B4%9D%EC%82%AC,2023. 8. 28,32,2
2023. 8. 28 오전 10:27:01,한병권,Unity,36 - 숫자 문자열과 영단어,"using System;

public class Solution {
    public int solution(string s) {
        int answer = 0;
        for (int i = 0; i < s.Length; i ++)
        {
            bool parseSuccess = int.TryParse(s.Substring(i,1), out var ret);
            if (parseSuccess)
            {
                answer = (answer*10) + ret;
            }
            else
            {

                int temp = -1;
                string str3 = s.Substring(i,3);

                switch (str3)
                {
                    case ""one"":
                        temp = 1;
                        i += 2;
                        break;
                    case ""two"":
                        temp = 2;
                        i += 2;
                        break;
                    case ""six"":
                        temp = 6;
                        i += 2;
                        break;
                }

                if(temp == -1)
                {
                    string str4 = s.Substring(i,4);

                    switch (str4)
                    {
                        case ""zero"":
                            temp = 0;
                            i += 3;
                            break;
                        case ""four"":
                            temp = 4;
                            i += 3;
                            break;
                        case ""five"":
                            temp = 5;
                            i += 3;
                            break;
                        case ""nine"":
                            temp = 9;
                            i += 3;
                            break;
                    }
                }
                
                if(temp == -1)
                {
                    string str5 = s.Substring(i,5);

                    switch (str5)
                    {
                        case ""three"":
                            temp = 3;
                            i += 4;
                            break;
                        case ""seven"":
                            temp = 7;
                            i += 4;
                            break;
                        case ""eight"":
                            temp = 8;
                            i += 4;
                            break;
                    }
                }
                
               answer = (answer*10) +temp;

            }
        }
        
        return answer;
    }
}",https://github.com/hbg9212/AlgorithmCodekata,2023. 8. 28,36,2
2023. 8. 28 오전 10:27:11,조영오,Unity,24 - 문자열 내림차순으로 배치하기,"public class Solution {
    public string solution(string s) {
        
        char[] msg = s.ToCharArray();
        char temp = ' ';
        
        for(int i = 0; i< msg.Length; i++){
            for(int j = 0; j < msg.Length ; j++){
                if(msg[i] > msg[j]){
                    temp = msg[i];
                    msg[i] = msg[j];
                    msg[j] = temp;
                }
            }
        }
                
        string answer = new string(msg);
        
        return answer;
    }
}",,2023. 8. 28,24,1
2023. 8. 28 오전 10:27:29,김연우,Unity,2 - 평균 구하기,"#include <stdio.h>

double solution(int arr[], int size) {
    int total_sum = 0;

    for (int i = 0; i < size; i++) {
        total_sum += arr[i];
    }

    double average = (double)total_sum / size;
    return average;
}

int main() {
    int arr[] = {1, 2, 3, 4, 5};
    int size = sizeof(arr) / sizeof(arr[0]);

    double result = solution(arr, size);
    printf(""Average: %lf\n"", result);

    return 0;
}",,2023. 8. 28,2,1
2023. 8. 28 오전 10:27:42,이선재,Unity,23 - 약수의 개수와 덧셈,"#include <string>
#include <vector>

using namespace std;

int solution(int left, int right) {
    int answer = 0;
    
    for(int i = left; i <= right; i++){
        int count = 0;
        
        for(int j = 1; j <= i; j++){
            
            if(i % j == 0)
                count += 1;
        }
        
        if(count % 2 == 0)
            answer += i;
        else
            answer -= i;
    }
    
    return answer;
}",https://github.com/Lyrwhitt/Algorithm/blob/main/Programmers/LEVEL1/%EC%95%BD%EC%88%98%EC%9D%98%20%EA%B0%9C%EC%88%98%EC%99%80%20%EB%8D%A7%EC%83%98,2023. 8. 28,23,1
2023. 8. 28 오전 10:27:43,김나운,Unity,11 - 하샤드 수,"public class Solution {
    public bool solution(int x) {
        bool answer = true;
        int sum = 0;
        int n = x;
        
        while(x > 0){
            sum += x % 10;
            x /= 10;
        }
        
        if(n % sum == 0){
            answer = true;
        }else{
            answer = false;
        }
        
        return answer;
    }
}",,2023. 8. 28,11,1
2023. 8. 28 오전 10:27:50,김도현B,Unity,18 - 없는 숫자 더하기,"using System;
using System.Linq;
public class Solution {
    public int solution(int[] numbers) {
        return 45 - numbers.Sum(x => x);
    }
}",https://github.com/subscriptioncat/Algorithm,2023. 8. 28,18,1
2023. 8. 28 오전 10:28:05,박도현,Unity,8 - 문자열을 정수로 바꾸기,"public class Solution {
    public int solution(string s) {
        int answer = 0;
        answer = int.Parse(s.Substring(0,s.Length));

        return answer;
    }
}",,2023. 8. 28,8,1
2023. 8. 28 오전 10:28:06,함영주,Unity,7 - 자연수 뒤집어 배열로 만들기,"public class Solution {
    public int[] solution(long n) {


        string a = n.ToString();
        int[] answer = new int[a.Length] ;

        for(int i = 0; i < a.Length; i++)
        {
            answer[a.Length - i - 1] = int.Parse(a[i].ToString());
        }

        return answer;
    }
}",,2023. 8. 28,7,1
2023. 8. 28 오전 10:28:18,최장범,Unity,12 - 두 정수 사이의 합,"public class Solution {
    public long solution(int a, int b) 
    {  
        long answer = 0;
        for (int i = (a>=b) ? b: a; i <= a || i<= b; i++)
        {
            answer += i;    
        }
        return answer;
    }
}",,2023. 8. 28,12,1
2023. 8. 28 오전 10:28:40,이주연,Unity,31 - 이상한 문자 만들기,"#include <string>
#include <vector>
#include<cctype>

using namespace std;

string solution(string s) {
    int idx = 0;
    
    for(int i = 0; i < s.size(); i++)
    { 
        if(isspace(s[i]) != 0)
        {
            idx = 0;
            continue;
        }
        
        if(idx % 2 == 0)
            s[i] = toupper(s[i]);
        else
            s[i] = tolower(s[i]);
        
        idx+=1;
    }
    
    return s;
}",,2023. 8. 28,31,2
2023. 8. 28 오전 10:28:49,김진규,Unity,19 - 제일 작은 수 제거하기,"using System;
using System.Linq;
public class Solution {
    public int[] solution(int[] arr) {
        if (arr.Length <= 1)return new int[] {-1};
        int minValue = arr.Min();
        int[] answer = Array.FindAll(arr, num => num != minValue).ToArray();
        return answer;
    }
}",,2023. 8. 28,19,1
2023. 8. 28 오전 10:29:20,박종수,Unity,4 - 약수의 합,"public class Solution {
    public int solution(int n) {
        int answer = 0;
        for(int i=1; i<=n;i++)
        {
            if(n%i==0)
            {
                answer+=i;
            }
        }
        return answer;
    }
}",https://github.com/pjayas/AlgorithmCodeKata,2023. 8. 28,4,1
2023. 8. 28 오전 10:29:39,서재민,Unity,3 - 자릿수 더하기,"using System;

public class Solution {
    public int solution(int n) {
        int answer = 0;
        char[] arr = n.ToString().ToCharArray();
        foreach(char a in arr)
        {
            answer += System.Convert.ToInt32(a.ToString());
        }
        return answer;
    }
}",https://github.com/SeoJaeMin619/algorithm,2023. 8. 28,3,1
2023. 8. 28 오전 10:29:51,정범수,AI,35 - 시저 암호,"def solution(s, n):
    a = ord('a')
    A = ord('A')
    cnt = ord('z') - a + 1
    res = []
    for c in s:
        if c == ' ':
            res.append(c)
        elif c.islower():
            res.append(chr(((ord(c)-a+n) % cnt)+a))
        else:
            res.append(chr(((ord(c)-A+n) % cnt)+A))
    return ''.join(res)",https://github.com/sudog1/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12926.%E2%80%85%EC%8B%9C%EC%A0%80%E2%80%85%EC%95%94%ED%98%B8,2023. 8. 28,35,2
2023. 8. 28 오전 10:29:58,최수용,Unity,9 - 정수 제곱근 판별,"
using System;
public class Solution
    {
        public long solution(long n)
        {
            long sqrt = (long)Math.Sqrt(n);
            if (sqrt * sqrt == n) return (sqrt + 1) * (sqrt + 1);
            else return -1;
        }
    }",,2023. 8. 28,9,1
2023. 8. 28 오전 10:30:15,신현주,Unity,11 - 하샤드 수,"using System;
public class Solution {
    public bool solution(int x) {
        bool answer = true;
        int sum =0;
        char[] cArr = x.ToString().ToCharArray();
        for(int i =0; i < cArr.Length; i++){
            sum += int.Parse(cArr[i].ToString());
        }
        if ( x % sum == 0){
            return answer;

        }else{
            return answer = false;
        }
    }
}",https://github.com/Shyunju/codTaka.git,2023. 8. 28,11,1
2023. 8. 28 오전 10:30:21,장성림,Unity,17 - 핸드폰 번호 가리기,"using System;
public class Solution {
    public string solution(string phone_number) {
        string answer = """";
        char[] pn = phone_number.ToCharArray();
        for (int i = 0; i < pn.Length -4; i++){
            pn[i] = '*';
        }
        answer = new string(pn);
        return answer;
    }
}",https://github.com/hoobhoob,2023. 8. 28,17,1
2023. 8. 28 오전 10:30:39,김종훈,Unity,3 - 자릿수 더하기,"using System;

public class Solution {
    public int solution(int n) {
        int answer = 0;      
        while(0<n){
            answer += n % 10;
            n = n / 10;
        }
        return answer;
    }
}",,2023. 8. 28,3,1
2023. 8. 28 오전 10:30:41,지민규,Unity,16 - 음양 더하기,"using System;

public class Solution {
    public int solution(int[] absolutes, bool[] signs) {
        int answer = 0;
        for (int ele = 0; ele < absolutes.Length; ele++)
        {
            int times = (signs[ele] == true) ? 1 : -1;
            answer += (times * absolutes[ele]);
        }
        return answer;
    }
}",,2023. 8. 28,16,1
2023. 8. 28 오전 10:31:10,김종훈,Unity,4 - 약수의 합,"public class Solution {
    public int solution(int n) {
        int answer = 0;
        
        for(int i = 1; i <= n; i ++)
            if(n % i == 0)
                answer += i;
        return answer;
    }
}",,2023. 8. 28,4,1
2023. 8. 28 오전 10:31:27,남의서,AI,12 - 두 정수 사이의 합,"def solution(a, b):
    return (a + b) * (abs(a - b) + 1) * 0.5",,2023. 8. 28,12,1
2023. 8. 28 오전 10:31:27,이선재,Unity,24 - 문자열 내림차순으로 배치하기,"#include <string>
#include <vector>
#include <algorithm>

using namespace std;

string solution(string s) {
    sort(s.begin(), s.end(), greater<>());
    
    return s;
}",https://github.com/Lyrwhitt/Algorithm/blob/main/Programmers/LEVEL1/%EB%AC%B8%EC%9E%90%EC%97%B4%20%EB%82%B4%EB%A6%BC%EC%B0%A8%EC%88%9C%EC%9C%BC%EB%A1%9C%20%EB%B0%B0%EC%B9%98%ED%95%98%EA%B8%B0,2023. 8. 28,24,1
2023. 8. 28 오전 10:31:43,차요한,Unity,19 - 제일 작은 수 제거하기,"using System.Collections.Generic;
public class Solution {
    public int[] solution(int[] arr) {
        int[] answer ;
        List<int> list = new List<int>();
        
        int n =arr[0];
        if(arr.Length==1||arr.Length==0)
        {
            answer = new int[1];
            answer[0] = -1;
            return answer;
        }
        else
        {
            for(int i=1; i<arr.Length; i++)
            {
                if(arr[i]<n)
                {
                    n=arr[i];
                }
            }
            
            for(int i = 0 ; i<arr.Length ; i++)
            {
                if(arr[i]!=n)
                {
                    list.Add(arr[i]);
                }
            }
            
            answer=list.ToArray();
            return answer;
        }
    }
}",https://github.com/HOHOJO/Algorithm_test,2023. 8. 28,19,1
2023. 8. 28 오전 10:31:49,김종훈,Unity,5 - 나머지가 1이 되는 수 찾기,"using System;

public class Solution {
    public int solution(int n) {
        int answer = 0;
        
        for(int i = 2; i < n; i++){
            if(n % i == 1){
                answer = i;
                return answer;
            }
        }
        return answer;
    }
}",,2023. 8. 28,5,1
2023. 8. 28 오전 10:32:08,김하늘,Unity,11 - 하샤드 수,"public class Solution 
{
    public bool solution(int x) 
    {
        int[] arr = new int[5];
        int sum = 0;
        int t = x;
        for (int i = 0; i < arr.Length; i++)
        {
            arr[i] = t % 10;
            t = t / 10;
            sum += arr[i];
        }
        
        if (x % sum == 0) return true;
        else return false;
    }
}",,2023. 8. 28,11,1
2023. 8. 28 오전 10:32:10,신우석,Unity,33 - 크기가 작은 부분,"using System;

public class Solution {
    public int solution(string t, string p) {
        int answer = 0;
        for (int i = 0; i <= t.Length - p.Length; ++i)
            if (string.Compare(t.Substring(i, p.Length), p) <= 0)
                ++answer;
        return answer;
    }
}",https://github.com/seoksii/AlgorithmCodeKata/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/unrated/147355.%E2%80%85%ED%81%AC%EA%B8%B0%EA%B0%80%E2%80%85%EC%9E%91%EC%9D%80%E2%80%85%EB%B6%80%EB%B6%84%EB%AC%B8%EC%9E%90%EC%97%B4,2023. 8. 28,33,2
2023. 8. 28 오전 10:32:22,김종훈,Unity,6 - x만큼 간격이 있는 n개의 숫자,"public class Solution {
    public long[] solution(int x, int n) {
        long[] answer = new long[n] ;
        for(int i = 0; i < n ; i++){
            answer[i] = (long)x * (i+1);
        }
        return answer;
    }
}",,2023. 8. 28,6,1
2023. 8. 28 오전 10:32:33,기현빈,Unity,20 - 가운데 글자 가져오기,"public class Solution {
    public string solution(string s) {
        char[] charArr = s.ToCharArray();
        int len = s.Length;
        
        if(len % 2 == 0) return $""{charArr[len / 2 - 1]}{charArr[len / 2]}"";
        else return $""{charArr[len / 2]}"";
    }
}",,2023. 8. 28,20,1
2023. 8. 28 오전 10:32:51,이홍준,Unity,17 - 핸드폰 번호 가리기,https://school.programmers.co.kr/learn/courses/30/lessons/12948,https://github.com/dlghdwns97/Study/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12948.%E2%80%85%ED%95%B8%EB%93%9C%ED%8F%B0%E2%80%85%EB%B2%88%ED%98%B8%E2%80%85%EA%B0%80%EB%A6%AC%EA%B8%B0,2023. 8. 28,17,1
2023. 8. 28 오전 10:32:56,김종훈,Unity,7 - 자연수 뒤집어 배열로 만들기,"public class Solution {
    public int[] solution(long n) {
        string a=n.ToString();
        int[] answer = new int[a.Length];
        for(int i=0;i<a.Length;i++){
            answer[i]=(int)(n%10);
            n=n/10;
        }
        return answer;
    }
    
}",,2023. 8. 28,7,1
2023. 8. 28 오전 10:32:56,김예준,Unity,16 - 음양 더하기,"#include <vector>

using namespace std;

int solution(vector<int> absolutes, vector<bool> signs) {
    int answer = 0;
    
    for (int i = 0; i < absolutes.size(); i++)
    {
        if (signs[i]) answer += absolutes[i];
        else answer -= absolutes[i];
    }
    
    return answer;
}",,2023. 8. 28,16,1
2023. 8. 28 오전 10:33:03,이현지,Unity,17 - 핸드폰 번호 가리기,"using System.Text;

public class Solution {
    public string solution(string phone_number) 
    {    
        StringBuilder hidden = new StringBuilder();
        int count = 1;
        foreach (char n in phone_number)
        {
            if (count < phone_number.Length - 3) hidden.Append(""*"");
            else hidden.Append(n);
            ++count;
        }
        return hidden.ToString();
    }
}",https://github.com/szlovelee/Programmers-Algorithm,2023. 8. 28,17,1
2023. 8. 28 오전 10:33:06,김호연,Unity,15 - 나누어 떨어지는 숫자,"using System;
using System.Collections.Generic;

public class Solution {
    public int[] solution(int[] arr, int divisor) {
        List<int> answerList = new List<int>();

        foreach (int num in arr) {
            if (num % divisor == 0) {
                answerList.Add(num);
            }
        }

        if (answerList.Count == 0) {
            return new int[] { -1 };
        }

        answerList.Sort();

        return answerList.ToArray();
    }
}",,2023. 8. 28,15,1
2023. 8. 28 오전 10:33:30,김민태,Unity,27 - 행렬의 덧셈,"using System;

public class Solution 
{
    public int[,] solution(int[,] arr1, int[,] arr2) 
    {
        int[,] answer = new int[arr1.GetLength(0),arr1.GetLength(1)];
        
        for(int i = 0; i < arr1.GetLength(0); i++)
        {
            for(int j = 0; j < arr1.GetLength(1); j++)
            {
                answer[i,j] = arr1[i,j] + arr2[i,j];
            }
        }
        return answer;
    }
}",https://github.com/rlaalsxo/CodingTest,2023. 8. 28,27,1
2023. 8. 28 오전 10:33:41,강상찬,AI,23 - 약수의 개수와 덧셈,"def solution(left, right):
    answer = 0
    for i in range(left,right+1):
        if (i**0.5 == int(i**0.5)):
            answer = answer-i
        else:
            answer = answer+i
    return answer",,2023. 8. 28,23,1
2023. 8. 28 오전 10:33:41,신현주,Unity,12 - 두 정수 사이의 합,"public class Solution {
    public long solution(int a, int b) {
        long answer = 0;
        if( a == b){
            return answer = a;
        }
        if( a > b){
            int temp = a;
            a = b;
            b = temp;
        }
        for ( int i = a; i <= b ; i++ ){
            answer += i;
        }
        return answer;
    }
}",https://github.com/Shyunju/codTaka.git,2023. 8. 28,12,1
2023. 8. 28 오전 10:34:06,문준권,Unity,6 - x만큼 간격이 있는 n개의 숫자,"public class Solution {
    public long[] solution(int x, int n) {
        long[] answer = new long[n];
        for(int i = 0; i < n; i++){
            answer[i] = (long)x * (i + 1);
            }
    
        return answer;
    }
}",,2023. 8. 28,6,1
2023. 8. 28 오전 10:34:09,윤지연,Unity,7 - 자연수 뒤집어 배열로 만들기,"public class Solution {
    public int[] solution(long n) {
        string str = n.ToString();
        int[] answer = new int[str.Length];
        int idx = str.Length - 1;
        foreach(char c in str)
        {
            answer[idx--] = c-'0';
        }
        return answer;
    }
}",https://github.com/jungbosong/Codekata/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12932.%E2%80%85%EC%9E%90%EC%97%B0%EC%88%98%E2%80%85%EB%92%A4%EC%A7%91%EC%96%B4%E2%80%85%EB%B0%B0%EC%97%B4%EB%A1%9C%E2%80%85%EB%A7%8C%EB%93%A4%EA%B8%B0,2023. 8. 28,7,1
2023. 8. 28 오전 10:34:17,조용준,Unity,8 - 문자열을 정수로 바꾸기,"public class Solution
{
    public int solution(string s)
    {
        int answer = 0;
        answer = int.Parse(s);
        return answer;
    }
}",,2023. 8. 28,8,1
2023. 8. 28 오전 10:34:33,이소이,Unity,25 - 부족한 금액 계산하기,"using System;

class Solution
{
    public long solution(int price, int money, int count)
    {
        long answer = (long)money;
        for (int i = 1; i < count + 1; i++)
        {
            answer -= (long)price * (long)i;
        }
        
        if (answer >= 0)
            return 0;
        return answer * (long)(-1);
    }
}",https://github.com/leesy015599/AlgorithmCodeKata/blob/master/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/82612.%E2%80%85%EB%B6%80%EC%A1%B1%ED%95%9C%E2%80%85%EA%B8%88%EC%95%A1%E2%80%85%EA%B3%84%EC%82%B0%ED%95%98%EA%B8%B0/%EB%B6%80%EC%A1%B1%ED%95%9C%E2%80%85%EA%B8%88%EC%95%A1%E2%80%85%EA%B3%84%EC%82%B0%ED%95%98%EA%B8%B0.cs,2023. 8. 28,25,1
2023. 8. 28 오전 10:34:36,신해준,Unity,8 - 문자열을 정수로 바꾸기,"public class Solution {
    public int solution(string s)
    {
        int answer = int.Parse(s);
        return answer;
    }
}
",,2023. 8. 28,8,1
2023. 8. 28 오전 10:34:37,조용준,Unity,9 - 정수 제곱근 판별,"public class Solution
{
    public long solution(long n)
    {
        long answer = 0;
        for (long i = 1; i <= n; i++)
        {
            if (n%i==0 && n/i==i)
            {
                answer = (i+1)*(i+1);
                break;
            }
            else
            {
                answer = -1;
            }
        }
        return answer;
    }
}",,2023. 8. 28,9,1
2023. 8. 28 오전 10:34:55,김나운,Unity,12 - 두 정수 사이의 합,"public class Solution {
    public long solution(int a, int b) {
        long answer = 0;
        
        if(a > b){
                int temp = a;
                a = b; 
                b = temp;
            }
        
        for(int i = a; i <= b; i++){
            answer += i;
        }
        
        return answer;
    }
}",,2023. 8. 28,12,1
2023. 8. 28 오전 10:35:02,조용준,Unity,10 - 정수 내림차순으로 배치하기,"using System;

public class Solution
{
    public long solution(long n)
    {
        string s = n.ToString();
        char[] temp = s.ToCharArray();
        Array.Sort(temp);
        Array.Reverse(temp);
        string num = new string(temp);
        long answer = long.Parse(num);
        
        return answer;
    }
}",,2023. 8. 28,10,1
2023. 8. 28 오전 10:35:08,이도현,Unity,4 - 약수의 합,"using System;

public class Solution {
    public int solution(int n) {
        int sum = 0;
        double sqrtN = Math.Sqrt(n);
        for (int i = 1; i <= sqrtN; ++i)
        {
            if (i * i == n)
                sum += i;
            else if (n % i == 0)
            {
                sum += i + n / i;
            }
        }
        return sum;
    }
}",,2023. 8. 28,4,1
2023. 8. 28 오전 10:35:19,배인호,Unity,27 - 행렬의 덧셈,"public class Solution
{
    public int[,] solution(int[,] arr1, int[,] arr2)
    {
        int rowLength = arr1.GetLength(0);
        int columnLength = arr1.GetLength(1);

        int[,] answer = new int[rowLength, columnLength];

        for (int i = 0; i < rowLength; i++)
        {
            for (int j = 0; j < columnLength; j++)
            {
                answer[i, j] = arr1[i, j] + arr2[i, j];
            }
        }
        return answer;
    }
}
",https://github.com/cutlake2000/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12950.%E2%80%85%ED%96%89%EB%A0%AC%EC%9D%98%E2%80%85%EB%8D%A7%EC%85%88,2023. 8. 28,27,1
2023. 8. 28 오전 10:35:21,조영오,Unity,25 - 부족한 금액 계산하기,"using System;

class Solution
{
    public long solution(int price, int money, int count)
    {
        long m = (long)money;
        long p = (long)price;
        
        for(int i = 1; i <= count; i++){
            m -= p*i;
        }
        
        if(m > 0){return 0;}
        
        return m*-1;
    }
}",,2023. 8. 28,25,1
2023. 8. 28 오전 10:35:30,조범준,Unity,20 - 가운데 글자 가져오기,"using System;
public class Solution {
    public string solution(string s) {
        string answer = """";
        if(s.Length%2!=0){
            answer = s.Substring(s.Length/2,1);
        }else{
            answer = s.Substring(s.Length/2-1,2);
        }
        return answer;
    }
}",https://github.com/KimMaYa1/BaekJoonEx/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1,2023. 8. 28,20,1
2023. 8. 28 오전 10:35:43,장현교,Unity,9 - 정수 제곱근 판별,"public class Solution
{
    public int solution(int n)
    {
        int answer = 0;
        for (int i = n; i > 0; i--)
        {
            if (i * i == n)
            {
                answer = (i + 1) * (i + 1);
                break;
            }
            if (i == 1)
            {
                answer = -1;
            }
        }
        return answer;
    }
}",,2023. 8. 28,9,1
2023. 8. 28 오전 10:35:49,차요한,Unity,20 - 가운데 글자 가져오기,"public class Solution {
    public string solution(string s) {
        string answer = """";
        int n =0;
        if(s.Length%2==0)
        {
            n = s.Length/2;
            answer = s.Substring(n-1,2);
        }
        else
        {
            n = s.Length/2;
            answer = s.Substring(n,1);
        }
        return answer;
    }
}",https://github.com/HOHOJO/Algorithm_test,2023. 8. 28,20,1
2023. 8. 28 오전 10:35:49,김예준,Unity,17 - 핸드폰 번호 가리기,"#include <string>

using namespace std;

string solution(string phone_number) {
    string answer = """";
    
    for (int i = 0; i < phone_number.size(); i++)
    {
        if (i < phone_number.size() - 4) answer += '*';
        else answer += phone_number[i];
    }
    
    return answer;
}",,2023. 8. 28,17,1
2023. 8. 28 오전 10:36:06,박희원,Unity,13 - 콜라츠 추측,"public class Solution {
    
        
               public int solution(long num)
            {
                int answer = 0;

                if (num == 1)
                    return 0;
               
                while (num != 1)
                {
                    if (num % 2 == 0)
                        num /= 2;
                    else
                        num = num * 3 + 1;

                     answer++;
                }
                if (answer >= 500)
                    return -1;
                return answer;
            }
}",,2023. 8. 28,13,1
2023. 8. 28 오전 10:36:34,김지수,AI,10 - 정수 내림차순으로 배치하기,"def solution(n):
    n_list = list(str(n))
    n_list.sort(reverse = True)
    return int("""".join(n_list))",,2023. 8. 28,10,1
2023. 8. 28 오전 10:36:44,박희원,Unity,14 - 서울에서 김서방 찾기,"using System; 
public class Solution {
        public string solution(string[] seoul)
            {
                int answer = 0;

                answer = Array.FindIndex(seoul, i => i == ""Kim"");
                return $""김서방은 {answer}에 있다""; 
            }
}",,2023. 8. 28,14,1
2023. 8. 28 오전 10:36:49,김형중,Unity,11 - 하샤드 수,"public class Solution {
    public bool solution(int x) {
        bool answer = true;
        
        string s = x.ToString();
        
        int sum = 0;
        foreach(char c in s)
        {
            sum += int.Parse(c.ToString());
        }
        
        if (x % sum == 0) 
        {
            return true;
        }
        else 
        {
            return false;
        }
    }
}",,2023. 8. 28,11,1
2023. 8. 28 오전 10:36:50,강상찬,AI,24 - 문자열 내림차순으로 배치하기,"def solution(s):
    return ''.join(sorted(s,reverse=True))",,2023. 8. 28,24,1
2023. 8. 28 오전 10:37:03,김민태,Unity,28 - 직사각형 별찍기,"using System;

public class Example
{
    public static void Main()
    {
        String[] s;

        Console.Clear();
        s = Console.ReadLine().Split(' ');

        int a = Int32.Parse(s[0]);
        int b = Int32.Parse(s[1]);

        for(int i = 0; i < b; i++){
            for(int j = 0; j < a; j++){
                Console.Write(""*"");
            }
            Console.WriteLine();
        }
    }
}",https://github.com/rlaalsxo/CodingTest,2023. 8. 28,28,1
2023. 8. 28 오전 10:37:11,이현지,Unity,18 - 없는 숫자 더하기,"using System;

public class Solution 
{
    public int solution(int[] numbers) 
    {
        int answer = 0;
        for (int i = 0; i < 10; i++)
        {
            if (Array.IndexOf(numbers, i) == -1) answer += i;
        }
        return answer;
    }
}",https://github.com/szlovelee/Programmers-Algorithm,2023. 8. 28,18,1
2023. 8. 28 오전 10:37:20,박희원,Unity,12 - 두 정수 사이의 합,"public class Solution {
   public long solution(int a, int b)
            {
                long answer = 0;

                if (a>b)
                {
                    for (int i = b; i <= a; i++)
                    {
                        answer += i;
                    }

                    return answer;

                }
                else if (a < b)
                {
                    for (int i = a; i <= b; i++)
                    {
                        answer += i;
                    }

                    return answer;
                }
                else
                {
                    return a; 
                }
            }
}",,2023. 8. 28,12,1
2023. 8. 28 오전 10:37:31,이선재,Unity,25 - 부족한 금액 계산하기,"using namespace std;

long long solution(int price, int money, int count)
{
    long long answer = 0;
    
    for(int i = 1; i <= count; i++){
        answer += price * i;
    }
    
    if(money >= answer)
        return 0;
    else
        return answer - money;
}",https://github.com/Lyrwhitt/Algorithm/blob/main/Programmers/LEVEL1/%EB%B6%80%EC%A1%B1%ED%95%9C%20%EA%B8%88%EC%95%A1%20%EA%B3%84%EC%82%B0%ED%95%98%EA%B8%B0,2023. 8. 28,25,1
2023. 8. 28 오전 10:37:41,조범준,Unity,21 - 수박수박수박수박수박수?,"public class Solution {
    public string solution(int n) {
        string answer = """";
        for(int i = 0; i < n; i++){
            if(i%2==0){
                answer += ""수"";
            }else{
                answer += ""박"";
            }
        }
        return answer;
    }
}",https://github.com/KimMaYa1/BaekJoonEx/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1,2023. 8. 28,21,1
2023. 8. 28 오전 10:38:05,이주연,Unity,32 - 삼총사,"#include <string>
#include <vector>

using namespace std;

int solution(vector<int> number) {
    int answer = 0;
    
    for(int i = 0; i < number.size() - 2; i++)
    {
        for(int j = i+1; j < number.size() - 1; j++)
        {
            for(int k = j+1; k < number.size(); k++)
            {
                if((number[i] + number[j] + number[k]) == 0) answer+=1;
            }
        }
    }
    
    
    return answer;
}


//next_permutation + 보조 순열 구현해서 풀어보기",,2023. 8. 28,32,2
2023. 8. 28 오전 10:38:20,이소이,Unity,26 - 문자열 다루기 기본,"public class Solution {
    public bool solution(string s) {
        bool answer = true;
        if (s.Length != 4 && s.Length != 6)
            return false;
        for(int i = 0; i < s.Length; i++)
        {
            if (('0' <= s[i]) && (s[i] <= '9'))
                continue;
            else
                answer = false;
        }
        return answer;
    }
}",https://github.com/leesy015599/AlgorithmCodeKata/blob/master/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12918.%E2%80%85%EB%AC%B8%EC%9E%90%EC%97%B4%E2%80%85%EB%8B%A4%EB%A3%A8%EA%B8%B0%E2%80%85%EA%B8%B0%EB%B3%B8/%EB%AC%B8%EC%9E%90%EC%97%B4%E2%80%85%EB%8B%A4%EB%A3%A8%EA%B8%B0%E2%80%85%EA%B8%B0%EB%B3%B8.cs,2023. 8. 28,26,1
2023. 8. 28 오전 10:39:01,강성호,Unity,37 - 문자열 내 마음대로 정렬하기,"using System;
using System.Collections.Generic;
using System.Linq;
public class Solution {
    public string[] solution(string[] strings, int n) {
        string[] answer = new string[] { };

			answer = strings.OrderBy(s => s).OrderBy(s => s[n]).ToArray();

			return answer;
    }
}",,2023. 8. 28,37,2
2023. 8. 28 오전 10:39:08,문현우,Unity,9 - 정수 제곱근 판별,"using System;

public class Solution {
    public long solution(long n) {
        var retN = Math.Ceiling(Math.Sqrt(n));
        long answer = 0;
        if(n / retN == retN){ 
            answer = (long)Math.Pow((retN + 1), 2);
        }
        else{
            answer = -1;
        }
        return answer;
    }
}",https://github.com/Munch310/Algorithm-Csharp/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12934.%E2%80%85%EC%A0%95%EC%88%98%E2%80%85%EC%A0%9C%EA%B3%B1%EA%B7%BC%E2%80%85%ED%8C%90%EB%B3%84,2023. 8. 28,9,1
2023. 8. 28 오전 10:39:28,맹주한,AI,3 - 자릿수 더하기,"int solution(int n) {
    int sum = 0;
    
    while (n > 0) {
        int digit = n % 10; 
        sum += digit;       
        n /= 10;            
    }
    
    return sum;
}

int main() {
    int n;
    printf(""10000000000 미만의 자연수를 입력하십시오"");
    scanf(""%d"", &n);

    if (n >= 0 && n < 100000000) {
        int result = solution(n);
        printf("" %d의 자릿수의 합 : %d\n"", n, result);
    } else {
        printf(""범위 밖입니다.\n"");
    }
    
    return 0;
}",,2023. 8. 28,3,1
2023. 8. 28 오전 10:39:29,이승연,Unity,7 - 자연수 뒤집어 배열로 만들기,"public class Solution {
    public int[] solution(long n) {

        string str= n.ToString();
        int[] answer = new int[str.Length];
        
        for(int i=0;i<str.Length;i++)
        {
            answer[i]=(int)(n%10);
            n=n/10;
        }

        return answer;
    }
}",,2023. 8. 28,7,1
2023. 8. 28 오전 10:39:48,조성훈,Unity,5 - 나머지가 1이 되는 수 찾기,"using System;

public class Solution 
{
    public int solution(int n) 
    {
        int answer = 0;
        
        for(int i = 1; i < n; i++)
        {
            if(n % i == 1 )
            {
                answer = i;
                break;
            }
        }
        
        return answer;
    }
}",,2023. 8. 28,5,1
2023. 8. 28 오전 10:40:00,조범준,Unity,22 - 내적,"using System;

public class Solution {
    public int solution(int[] a, int[] b) {
        int answer = 0;
        for(int i = 0; i < a.Length; i++){
           answer += a[i] * b[i];
        }
        return answer;
    }
}",https://github.com/KimMaYa1/BaekJoonEx/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1,2023. 8. 28,22,1
2023. 8. 28 오전 10:40:03,배인호,Unity,28 - 직사각형 별찍기,"using System;

public class Example
{
    public static void Main()
    {
        String[] s;

        Console.Clear();
        s = Console.ReadLine().Split(' ');

        int a = Int32.Parse(s[0]);
        int b = Int32.Parse(s[1]);
        
        for (int i = 0 ; i < b ; i++){
            for (int j = 0 ; j < a ; j++){
                Console.Write('*'a);
            }
            Console.WriteLine();
        }
    }
}",https://github.com/cutlake2000/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12969.%E2%80%85%EC%A7%81%EC%82%AC%EA%B0%81%ED%98%95%E2%80%85%EB%B3%84%EC%B0%8D%EA%B8%B0,2023. 8. 28,28,1
2023. 8. 28 오전 10:40:05,정재호,Unity,36 - 숫자 문자열과 영단어,"using System;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Linq;

public class Solution
{
    public int solution(string s)
    {
        int answer = 0;
        string wNumSum = """";
        string sum = """";

        string[] wordNumbs = new string[] { ""zero"", ""one"", ""two"", ""three"", ""four"", ""five"", ""six"", ""seven"", ""eight"", ""nine"" };

        foreach (char c in s)
        {
            wNumSum += c.ToString();
            int a;
            int.TryParse(wNumSum, out a);

            if (wordNumbs.Contains(wNumSum))
            {
                sum += Array.IndexOf(wordNumbs, wNumSum);
                wNumSum = """";
            }
            else if (int.TryParse(wNumSum, out a))
            {
                sum += a.ToString();
                wNumSum = """";
            }
            else
            {
                continue;
            }
        }

        return answer = int.Parse(sum);
    }
}",,2023. 8. 28,36,2
2023. 8. 28 오전 10:40:09,채이환,Unity,15 - 나누어 떨어지는 숫자,"using System.Collections.Generic;
public class Solution {
    public int[] solution(int[] arr, int divisor) {
        List<int> nums = new List<int>();
        for (int i=0; i<arr.Length; ++i)
        {
            if (arr[i] % divisor == 0)
            {
                nums.Add(arr[i]);
            }
        }
        if (nums.Count == 0)
            return new int[] {-1};
        else
            nums.Sort();
        return nums.ToArray();
    }
}",,2023. 8. 28,15,1
2023. 8. 28 오전 10:40:10,조성훈,AI,6 - x만큼 간격이 있는 n개의 숫자,"public class Solution 
{
    public long[] solution(int x, int n) 
    {
        long[] answer = new long[n];
        
        for(int i = 1; i < n+1; i++)
        {
            answer[i-1] = i*(long)x;
        }
        return answer;
        
    }
}",,2023. 8. 28,6,1
2023. 8. 28 오전 10:40:24,장성림,Unity,18 - 없는 숫자 더하기,"using System;

public class Solution {
    public int solution(int[] numbers) {
        int answer = 0;
        Array.Sort(numbers);
        int num = 0;
        for(int count = 0; count < numbers.Length; count++){
            if (num != numbers[count]){
                answer += num;
                count--;
            }
            num++;
        }
        for (;num < 10; num++)
            answer += num;
        return answer;
    }
}",https://github.com/hoobhoob,2023. 8. 28,18,1
2023. 8. 28 오전 10:40:30,채이환,Unity,16 - 음양 더하기,"using System;

public class Solution {
    public int solution(int[] absolutes, bool[] signs) {
        int answer = 0;
        for (int i=0; i<absolutes.Length; ++i)
        {
            if (signs[i] == true)
                answer += absolutes[i];
            else
                answer -= absolutes[i];
        }
        return answer;
    }
}",,2023. 8. 28,16,1
2023. 8. 28 오전 10:40:34,조성훈,Unity,7 - 자연수 뒤집어 배열로 만들기,"public class Solution 
{
    public int[] solution(long n) 
    {
        string number = n.ToString();
        char[] numberdiv = number.ToCharArray();
        int[] answer = new int[numberdiv.Length];
        
        for(int i = 0; i < numberdiv.Length; i++)
        {
            answer[i] = int.Parse(numberdiv[numberdiv.Length-1 - i].ToString());
        }
        return answer;
    }
}",,2023. 8. 28,7,1
2023. 8. 28 오전 10:40:42,김민재,AI,6 - x만큼 간격이 있는 n개의 숫자,"def solution(x, n):
    answer = []
    for i in range(1, n+1):
        answer.append(x*i)

    return answer",https://github.com/Kim-Minjae9872/Code_Kata,2023. 8. 28,6,1
2023. 8. 28 오전 10:40:46,곽민규,Unity,3 - 자릿수 더하기,"using System;

public class Solution {
    public int solution(int n) {
        int sum = 0;
        while(n > 0) {
            sum += n % 10;
            n /= 10;
        }
        return sum;
    }
}",https://github.com/kwakminkyu,2023. 8. 28,3,1
2023. 8. 28 오전 10:40:48,신우석,Unity,34 - 최소직사각형,"using System;

public class Solution {
    public int solution(int[,] sizes) {
        int maxX = int.MinValue;
        int maxY = int.MinValue;
        for (int i = 0; i < sizes.GetLength(0); ++i)
        {
            if (sizes[i, 0] < sizes[i, 1]) {
                int tmp = sizes[i, 0];
                sizes[i, 0] = sizes[i, 1];
                sizes[i, 1] = tmp;
            }
            if (sizes[i, 0] > maxX) maxX = sizes[i, 0];
            if (sizes[i, 1] > maxY) maxY = sizes[i, 1];
        }
            
        return maxX * maxY;
    }
}",https://github.com/seoksii/AlgorithmCodeKata/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/86491.%E2%80%85%EC%B5%9C%EC%86%8C%EC%A7%81%EC%82%AC%EA%B0%81%ED%98%95,2023. 8. 28,34,2
2023. 8. 28 오전 10:40:53,채이환,Unity,17 - 핸드폰 번호 가리기,"using System;
using System.Text;

public class Solution {
    public string solution(string phone_number) {
        StringBuilder sb = new StringBuilder();
        int limit = phone_number.Length-4;
        for (int i=0; i<limit; ++i)
        {
            sb.Append(""*"");
        }
        sb.Append(phone_number.Substring(limit, 4));
        return sb.ToString();
    }
}",,2023. 8. 28,17,1
2023. 8. 28 오전 10:41:13,채이환,Unity,18 - 없는 숫자 더하기,"using System;

public class Solution {
    public int solution(int[] numbers) {
        int answer = 0;
        bool[] nums = new bool[10] {
            false, false, false, false,
            false, false, false, false,
            false, false };
        foreach (int i in numbers)
        {
            nums[i] = true;
        }
        for (int i=0; i<10; ++i)
        {
            if (nums[i] == false)
                answer += i;
        }
        return answer;
    }
}",,2023. 8. 28,18,1
2023. 8. 28 오전 10:41:33,채이환,Unity,19 - 제일 작은 수 제거하기,"using System;
using System.Collections.Generic;

public class Solution {
    public int[] solution(int[] arr) {
        int index = 0;
        int small = int.MaxValue;
        if (arr.Length <= 1)
            return new int[] {-1};
        else
        {
            for (int i=0; i<arr.Length; ++i)
            {
                if (arr[i] < small)
                {
                    small = arr[i];
                    index = i;
                }
            }
            List<int> li = new List<int>();
            li.AddRange(arr);
            li.RemoveAt(index);
            return li.ToArray();
        }
        
    }
}",,2023. 8. 28,19,1
2023. 8. 28 오전 10:41:40,김준범,Unity,4 - 약수의 합,"public class Solution {
    public int solution(int n) 
    {
        int answer = 0;
        
        for (int i = 1; i <= n; i++)
        {
            if(n%i == 0)
            {
                answer += i;
            }
        }
        
        return answer;
    }
}",,2023. 8. 28,4,1
2023. 8. 28 오전 10:41:51,채이환,Unity,20 - 가운데 글자 가져오기,"public class Solution {
    public string solution(string s) {
        int length = s.Length;
        if (length % 2 == 0)
        {
            return s.Substring(length/2-1, 2);
        }
        else
        {
            return s[length/2].ToString();
        }
    }
}",,2023. 8. 28,20,1
2023. 8. 28 오전 10:42:15,박민호,Unity,19 - 제일 작은 수 제거하기,"using System;
using System.Collections.Generic;
using System.Linq;
public class Solution {
    public int[] solution(int[] arr) {
        int[] answer = new int[arr.Length-1];
        int min=arr[0];
        List<int> list = arr.ToList();
        if(answer.Length==0){
            answer = new int[]{-1};
        }
        else{
            for(int i=0;i<arr.Length;i++){
                if(min>arr[i]){
                    min = arr[i];
                }
            }
            list.Remove(min);
            answer = list.ToArray();
        }
        return answer;
    }
}",,2023. 8. 28,19,1
2023. 8. 28 오전 10:43:55,강상찬,AI,25 - 부족한 금액 계산하기,"def solution(price, money, count):
    return (0 if sum(range(count+1))*price < money else sum(range(count+1))*price - money)",,2023. 8. 28,25,1
2023. 8. 28 오전 10:44:04,송승훈,Unity,11 - 하샤드 수,"public class Solution {
    public bool solution(int x) {
        bool answer = true;
        
        string strnum = x.ToString();
        char[] Charnum = strnum.ToCharArray();
        int a = 0 ;
        for(int i = 0 ; i <Charnum.Length ; i++)            
        {
            a += int.Parse(Charnum[i].ToString());
        }
        
     if(x%a == 0 )
     {
         answer = true;
     }
        else
        {
             answer =  false ;
        }
        
        
        return answer;
    }
}",https://github.com/DoDokang318,2023. 8. 28,11,1
2023. 8. 28 오전 10:44:05,노재우,Unity,9 - 정수 제곱근 판별,"public class Solution
{
    public long solution(long n)
    {
        long answer = -1;
        double num = Math.Sqrt(n);

        if ((int)num - num == 0)
        {
            answer = (long)Math.Pow(num + 1,2);
            return answer;
        }
        return answer;
    }
}",https://github.com/Chu-Nyan,2023. 8. 28,9,1
2023. 8. 28 오전 10:44:30,최지연,AI,13 - 콜라츠 추측,"def solution(num):
    count = 0

    while True:
        if num == 1:
            break

        if num % 2 != 0:
            num = num * 3 + 1
            count += 1

        if num % 2 == 0:
            num = num / 2
            count += 1

    if count == 0:
        return 0
    elif count > 500:
        return -1
    else:
        return count",https://github.com/jiyeonCoder/algorithmPractice/blob/main/13.%20%EC%BD%9C%EB%9D%BC%EC%B8%A0%20%EC%B6%94%EC%B8%A1.py,2023. 8. 28,13,1
2023. 8. 28 오전 10:44:35,이선재,Unity,26 - 문자열 다루기 기본,"#include <string>
#include <vector>

using namespace std;

bool solution(string s) {
    bool answer = true;
    
    if(s.length() == 4 || s.length() == 6){
        for(int i = 0; i < s.length(); i++){
            if(s[i] < '0' || s[i] > '9'){
                answer = false;
            }
        }
    }
    else{
        answer = false;
    }
    
    return answer;
}",https://github.com/Lyrwhitt/Algorithm/blob/main/Programmers/LEVEL1/%EB%AC%B8%EC%9E%90%EC%97%B4%20%EB%8B%A4%EB%A3%A8%EA%B8%B0%20%EA%B8%B0%EB%B3%B8,2023. 8. 28,26,1
2023. 8. 28 오전 10:44:50,송승훈,Unity,12 - 두 정수 사이의 합,"public class Solution {
    public long solution(long a, int b) {
        long answer = 0;
         
        if(a>=b)
        {
          long[] NumArray = new long[a-b+1];
            
            
            for(int i = 0  ; i < NumArray.Length ; i++)
            {
                NumArray[i]+= b++;
                   answer+=NumArray[i];
            }
        }
        else
        {
            long[] NumArray = new long[b-a+1];
            
              for(int i = 0  ; i < NumArray.Length ; i++)
            {
                NumArray[i]+= a++;
                   answer+=NumArray[i];
            }
            
            
        }
        
        return answer;
    }
}",https://github.com/DoDokang318/CodeKata.git,2023. 8. 28,12,1
2023. 8. 28 오전 10:45:08,안소정,Unity,10 - 정수 내림차순으로 배치하기,"using System;

public class Solution {
    public long solution(long n) {
        long answer = 0;
        char[] a = n.ToString().ToCharArray();
        Array.Sort (a);
        Array.Reverse (a);
        answer = long.Parse(new string(a));
        return answer;
    }
}",,2023. 8. 28,10,1
2023. 8. 28 오전 10:45:19,송승훈,Unity,13 - 콜라츠 추측,"public class Solution {
    public int solution(long num) {
        int answer = 0;
        int a = -1;
int count = 0;
                  
               for( count = 0 ; count<=500&& num != 1 ; count++ )
                  {
                   if(num%2==0)
                    {
                     num = num/2;   
                    
                    }
                   else
                   {
                      num = num*3+1;    
                     
                   }
                                      
                  }
                if(num == 1)
                           {
                               return count;
                           }
                           else
                           {
                           return a;
                           }
                
            }            
                            
        
    }
",https://github.com/DoDokang318/CodeKata.git,2023. 8. 28,13,1
2023. 8. 28 오전 10:45:56,송승훈,Unity,14 - 서울에서 김서방 찾기,"public class Solution {
    public string solution(string[] seoul) {
        string answer = """";
        int count = 0;
        while(true)
        {                        
            if(seoul[count] ==""Kim"" )
            {
                return answer = ""김서방은""+"" ""+ count+""에 있다"";
            }
             count++;                
        }
        
        return answer;
    }
}",https://github.com/DoDokang318/CodeKata,2023. 8. 28,14,1
2023. 8. 28 오전 10:46:46,남의서,AI,13 - 콜라츠 추측,"def solution(num):
    answer = 0
    while num != 1:
        if answer == 500:
            return -1
        if num % 2 == 0:
            num /= 2
        else:
            num = num * 3 + 1
        answer += 1
    return answer",,2023. 8. 28,13,1
2023. 8. 28 오전 10:47:19,김정민,Unity,32 - 삼총사,"public class Solution
        {
            static int count = 0;
            static int[] students;
            static bool[] visited;
            public static int solution(int[] number)
            {
                int answer = 0;

                students = number;
                visited = new bool[number.Length];

                dfs(0, 0, 0);

                answer = count;

                return answer;
            }

            static void dfs(int start, int depth, int sum)
            {
                if (depth == 3)
                {
                    if (sum == 0)
                    {
                        count++;
                    }
                    return;
                }

                for (int i = start; i < students.Length; i++)
                {
                    if (!visited[i])
                    {
                        visited[i] = true;
                        dfs(i + 1, depth + 1, sum + students[i]);
                        visited[i] = false;
                    }
                }
            }
        }",https://github.com/j-miiin/Algorithm_Study/blob/main/SPARTA_ALGORITHM_2023/Level2/32_Trio.cs,2023. 8. 28,32,2
2023. 8. 28 오전 10:47:36,송명근,AI,8 - 문자열을 정수로 바꾸기,"public class Solution {
    public int solution(string s) {
        int answer = 0;
        if (s[0] == '-')
        {
            answer = -int.Parse(s.Substring(1));
        }
        else if (s[0] == '+')
        {
            answer = int.Parse(s.Substring(1));
        }
        else
        {
            answer = int.Parse(s);
        }
        return answer;
    }
}",https://github.com/audrms6494/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12925.%E2%80%85%EB%AC%B8%EC%9E%90%EC%97%B4%EC%9D%84%E2%80%85%EC%A0%95%EC%88%98%EB%A1%9C%E2%80%85%EB%B0%94%EA%BE%B8%EA%B8%B0,2023. 8. 28,8,1
2023. 8. 28 오전 10:48:20,김정민,Unity,33 - 크기가 작은 부분,"public class Solution
        {
            public static int solution(string t, string p)
            {
                int answer = 0;

                int length = p.Length;
                for (int i = 0; i + length - 1 < t.Length; i++)
                {
                    string curStr = """";
                    for (int j = 0; j < length; j++) curStr += t[i + j];

                    if (ulong.Parse(curStr) <= ulong.Parse(p)) answer++;
                }

                return answer;
            }

        }",https://github.com/j-miiin/Algorithm_Study/blob/main/SPARTA_ALGORITHM_2023/Level2/33_SmallSubStr.cs,2023. 8. 28,33,2
2023. 8. 28 오전 10:48:26,송명근,AI,9 - 정수 제곱근 판별,"public class Solution {
    public long solution(long n) {
        long min = 1;
        long max = 2;
        long mid = 1;
        while (max*max <= n)
        {
            min *= 2;
            max *= 2;
        }
        while (min <= max)
        {
            mid = (min + max)/2;
            if (mid * mid == n)
            {
                return (mid+1) * (mid+1);
            }
            else if (mid * mid < n)
            {
                min = mid + 1;
            }
            else if (mid * mid > n)
            {
                max = mid - 1;
            }
        }
        return -1;
    }
}",https://github.com/audrms6494/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12934.%E2%80%85%EC%A0%95%EC%88%98%E2%80%85%EC%A0%9C%EA%B3%B1%EA%B7%BC%E2%80%85%ED%8C%90%EB%B3%84,2023. 8. 28,9,1
2023. 8. 28 오전 10:48:36,김진환,Unity,31 - 이상한 문자 만들기,"public static string solution(string s)
        {
            string answer = """";
            // 공백일 때 카운트를 제로로 만들고 카운트의 값에 따라 대소문자로 변경
            int count = 0;

            for(int i = 0; i < s.Length;i++)
            {
                if (s[i] == ' ')
                {
                    count = 0;
                    answer += ' ';
                    continue;
                }
                // 홀짝에 따라 문자 구분
                if(count % 2 == 0)
                {
                    if (s[i] > 'Z')
                    {
                        answer += (char)(s[i] - 32);
                        Console.WriteLine(s[i]);
                        Console.WriteLine((char)(s[i] - 32));
                        Console.WriteLine(answer);
                    }
                    else
                        answer += (char)s[i];
                }
                else
                {
                    if (s[i] < 'a')
                        answer += (char)(s[i] + 32);
                    else
                        answer += (char)s[i];
                }
                count++;
            }
            return answer;
        }",https://github.com/NewRound/AlgorithmKata.git,2023. 8. 28,31,2
2023. 8. 28 오전 10:48:55,최수용,Unity,10 - 정수 내림차순으로 배치하기,"using System;
public class Solution
    {
        public long solution(long n)
        {
            long answer = 0;
            char[] x = n.ToString().ToCharArray();
            Array.Sort(x);
            Array.Reverse(x);
            answer = long.Parse(new string(x));

            return answer;
        }
    }",,2023. 8. 28,10,1
2023. 8. 28 오전 10:49:00,김정민,Unity,34 - 최소직사각형,"public class Solution
        {
            public int solution(int[,] sizes)
            {
                int answer = 0;
                int maxWidth = 0;
                int maxHeight = 0;

                for (int i = 0; i < sizes.GetLength(0); i++)
                {
                    if (sizes[i, 0] < sizes[i, 1])
                    {
                        int tmp = sizes[i, 0];
                        sizes[i, 0] = sizes[i, 1];
                        sizes[i, 1] = tmp;
                    }

                    if (maxWidth < sizes[i, 0]) maxWidth = sizes[i, 0];
                    if (maxHeight < sizes[i, 1]) maxHeight = sizes[i, 1];
                }

                answer = maxWidth * maxHeight;
                
                return answer;
            }
        }",https://github.com/j-miiin/Algorithm_Study/blob/main/SPARTA_ALGORITHM_2023/Level2/34_MinSquare.cs,2023. 8. 28,34,2
2023. 8. 28 오전 10:49:36,김정민,Unity,35 - 시저 암호,"public class Solution
        {
            public static string solution(string s, int n)
            {
                string answer = """";
                for (int i = 0; i < s.Length; i++)
                {
                    if (s[i] == ' ')
                    {
                        answer += s[i];
                        continue;
                    }

                    int curChar = s[i] + n;
                    Console.WriteLine(curChar);

                    if (s[i] >= 65 && s[i] <= 90)
                    {
                        if (curChar > 90)
                        {
                            curChar -= 26;
                        }
                    } else
                    {
                        if (curChar > 122) curChar -= 26;
                    }

                    answer += (char)curChar;
                }
                return answer;
            }
        }",https://github.com/j-miiin/Algorithm_Study/blob/main/SPARTA_ALGORITHM_2023/Level2/35_CaesarCipher.cs,2023. 8. 28,35,2
2023. 8. 28 오전 10:51:02,김정규,AI,10 - 정수 내림차순으로 배치하기,"def solution(n):
    answer = list(str(n))

    answer.sort(reverse=True)
    return int(''.join(e for e in answer))",https://github.com/JungGyu00/algorithm,2023. 8. 28,10,1
2023. 8. 28 오전 10:55:40,정주찬,Unity,19 - 제일 작은 수 제거하기,"using System.Collections.Generic;
using System.Linq;
public class Solution {
    public int[] solution(int[] arr) {
        if (arr.Length == 1)
        {
            return new int[] { -1 };
        }
        else
        {
            List<int> newList = arr.ToList();
            int min = arr.ToList().Min();
            newList.RemoveAt(newList.IndexOf(min));
            return newList.ToArray();
        }
    }
}",https://github.com/JeongJuChan/Algorithm/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12935.%E2%80%85%EC%A0%9C%EC%9D%BC%E2%80%85%EC%9E%91%EC%9D%80%E2%80%85%EC%88%98%E2%80%85%EC%A0%9C%EA%B1%B0%ED%95%98%EA%B8%B0/%EC%A0%9C%EC%9D%BC%E2%80%85%EC%9E%91%EC%9D%80%E2%80%85%EC%88%98%E2%80%85%EC%A0%9C%EA%B1%B0%ED%95%98%EA%B8%B0.cs,2023. 8. 28,19,1
2023. 8. 28 오전 10:56:07,정주찬,Unity,20 - 가운데 글자 가져오기,"public class Solution {
    public string solution(string s) {
        if (s.Length % 2 == 0)
        {

            return new string(s[s.Length / 2 - 1].ToString() + s[s.Length / 2]);
        }
        else
        {
            return s[s.Length / 2].ToString();
        }
    }
}",https://github.com/JeongJuChan/Algorithm/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12903.%E2%80%85%EA%B0%80%EC%9A%B4%EB%8D%B0%E2%80%85%EA%B8%80%EC%9E%90%E2%80%85%EA%B0%80%EC%A0%B8%EC%98%A4%EA%B8%B0/%EA%B0%80%EC%9A%B4%EB%8D%B0%E2%80%85%EA%B8%80%EC%9E%90%E2%80%85%EA%B0%80%EC%A0%B8%EC%98%A4%EA%B8%B0.cs,2023. 8. 28,20,1
2023. 8. 28 오전 10:56:34,정주찬,Unity,21 - 수박수박수박수박수박수?,"using System.Collections.Generic;
using System.Text;
public class Solution {
    public string solution(int n) {
        StringBuilder sb = new StringBuilder();
        for (int i = 0; i < n; i++)
        {
            if (i % 2 == 0) 
            { 
                sb.Append(""수"");
            }
            else
            {
                sb.Append(""박"");
            }
        }
        
        return sb.ToString();
    }
}",https://github.com/JeongJuChan/Algorithm/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12922.%E2%80%85%EC%88%98%EB%B0%95%EC%88%98%EB%B0%95%EC%88%98%EB%B0%95%EC%88%98%EB%B0%95%EC%88%98%EB%B0%95%EC%88%98%EF%BC%9F/%EC%88%98%EB%B0%95%EC%88%98%EB%B0%95%EC%88%98%EB%B0%95%EC%88%98%EB%B0%95%EC%88%98%EB%B0%95%EC%88%98%EF%BC%9F.cs,2023. 8. 28,21,1
2023. 8. 28 오전 10:56:45,유채연,Unity,9 - 정수 제곱근 판별,"    public long solution(long n) {
        long i = 1;
        while(true){
            if(n==i*i){
                return (i+1)*(i+1);
            }
            i++;
            if(i>n) break;
        }
        return -1;
    }",https://github.com/ychy0006/AlgorithmCodeKata/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1,2023. 8. 28,9,1
2023. 8. 28 오전 10:57:25,정주찬,Unity,22 - 내적,"using System;

public class Solution {
    public int solution(int[] a, int[] b) {
        int answer = 0;
        for (int i = 0; i < a.Length; i++)
        {
            answer += a[i] * b[i];
        }
        return answer;
    }
}",https://github.com/JeongJuChan/Algorithm/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/70128.%E2%80%85%EB%82%B4%EC%A0%81/%EB%82%B4%EC%A0%81.cs,2023. 8. 28,22,1
2023. 8. 28 오전 10:57:50,정주찬,Unity,23 - 약수의 개수와 덧셈,"using System;

public class Solution {
    public int solution(int left, int right) {
        int answer = 0;
        for (int i = left; i <= right; i++)
        {
            int count = 1;
            for (int j = 2; j <= i; j++)
            {
                if (i % j == 0)
                {
                    count++;
                }
            }
            answer += count % 2 == 0 ? i : -i;
        }
        return answer;
    }
}",https://github.com/JeongJuChan/Algorithm/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/77884.%E2%80%85%EC%95%BD%EC%88%98%EC%9D%98%E2%80%85%EA%B0%9C%EC%88%98%EC%99%80%E2%80%85%EB%8D%A7%EC%85%88/%EC%95%BD%EC%88%98%EC%9D%98%E2%80%85%EA%B0%9C%EC%88%98%EC%99%80%E2%80%85%EB%8D%A7%EC%85%88.cs,2023. 8. 28,23,1
2023. 8. 28 오전 10:58:56,정주찬,Unity,24 - 문자열 내림차순으로 배치하기,"using System.Linq;
using System;
public class Solution {
    public string solution(string s) {
        char[] cArr = s.ToCharArray();
        Array.Sort(cArr, (x, y) => -x.CompareTo(y));
        return new string(cArr);
    }
}",https://github.com/JeongJuChan/Algorithm/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12917.%E2%80%85%EB%AC%B8%EC%9E%90%EC%97%B4%E2%80%85%EB%82%B4%EB%A6%BC%EC%B0%A8%EC%88%9C%EC%9C%BC%EB%A1%9C%E2%80%85%EB%B0%B0%EC%B9%98%ED%95%98%EA%B8%B0/%EB%AC%B8%EC%9E%90%EC%97%B4%E2%80%85%EB%82%B4%EB%A6%BC%EC%B0%A8%EC%88%9C%EC%9C%BC%EB%A1%9C%E2%80%85%EB%B0%B0%EC%B9%98%ED%95%98%EA%B8%B0.cs,2023. 8. 28,24,1
2023. 8. 28 오전 10:59:36,유채연,Unity,10 - 정수 내림차순으로 배치하기,"            long answer = 0;

            char[] str = n.ToString().ToCharArray();
            System.Array.Sort(str); 
            System.Array.Reverse(str);
            answer = long.Parse(new string(str));

            return answer;",https://github.com/ychy0006/AlgorithmCodeKata/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1,2023. 8. 28,10,1
2023. 8. 28 오전 10:59:48,이혜리,AI,85 - k진수에서 소수 개수 구하기,"import math
def solution(n, k):
    answer = 0
    num = """"
    while(n > 0):
        q,r = divmod(n,k)
        num += str(r)
        n = q
    num = num[::-1]
    
    li = num.split(""0"")
    
    for i in li:
        if i == '':
            continue
        i = int(i)
        cnt = 0
        if i == 1:
            continue
        for j in range(1,int(math.sqrt(i)) + 1):
            if i%j == 0:
                cnt += 1
        if cnt == 1:
            answer += 1     
            
    return answer",https://github.com/hyeleenotharry/Programmers/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv2/92335.%E2%80%85k%EC%A7%84%EC%88%98%EC%97%90%EC%84%9C%E2%80%85%EC%86%8C%EC%88%98%E2%80%85%EA%B0%9C%EC%88%98%E2%80%85%EA%B5%AC%ED%95%98%EA%B8%B0,2023. 8. 28,85,4
2023. 8. 28 오전 10:59:49,정주찬,Unity,25 - 부족한 금액 계산하기,"using System;

class Solution
{
    public long solution(int price, int money, int count)
    {
        long answer = money;
        for (int i = 1; i <= count; i++)
        {
            answer -= price * i;
        }

        answer = answer >= 0 ? 0 : -answer;
        return answer;
    }
}",https://github.com/JeongJuChan/Algorithm/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/82612.%E2%80%85%EB%B6%80%EC%A1%B1%ED%95%9C%E2%80%85%EA%B8%88%EC%95%A1%E2%80%85%EA%B3%84%EC%82%B0%ED%95%98%EA%B8%B0/%EB%B6%80%EC%A1%B1%ED%95%9C%E2%80%85%EA%B8%88%EC%95%A1%E2%80%85%EA%B3%84%EC%82%B0%ED%95%98%EA%B8%B0.cs,2023. 8. 28,25,1
2023. 8. 28 오전 11:00:22,남의서,AI,14 - 서울에서 김서방 찾기,"def solution(seoul):
    return ""김서방은 "" + str(seoul.index('Kim')) + ""에 있다""",,2023. 8. 28,14,1
2023. 8. 28 오전 11:00:32,유채연,Unity,11 - 하샤드 수,"        int sum = 0;
        for(int y = x;y>0;y/=10){
            sum += y%10;
        }
        
        bool answer = false;
        if(x%sum==0) answer = true;
        return answer;",https://github.com/ychy0006/AlgorithmCodeKata/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1,2023. 8. 28,11,1
2023. 8. 28 오전 11:00:44,정주찬,Unity,26 - 문자열 다루기 기본,"public class Solution {
    public bool solution(string s) {
        bool answer = false;
        if (s.Length == 4 || s.Length == 6)
        {
            for (int i = 0; i < s.Length; i++)
            {
                answer = int.TryParse(s[i].ToString(), out int j);
                if (!answer)
                {
                    return false;
                }
            }
            return true;
        }
        else
        {
            return false;
        }
    }
}",https://github.com/JeongJuChan/Algorithm/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12918.%E2%80%85%EB%AC%B8%EC%9E%90%EC%97%B4%E2%80%85%EB%8B%A4%EB%A3%A8%EA%B8%B0%E2%80%85%EA%B8%B0%EB%B3%B8/%EB%AC%B8%EC%9E%90%EC%97%B4%E2%80%85%EB%8B%A4%EB%A3%A8%EA%B8%B0%E2%80%85%EA%B8%B0%EB%B3%B8.cs,2023. 8. 28,26,1
2023. 8. 28 오전 11:01:11,유채연,Unity,12 - 두 정수 사이의 합,"        long answer = 0;
        
        if(a>b){
            int temp=a;
            a=b;
            b=temp;
        }
        for(;a<=b;a++){
            answer+=a;
        }
        
        return answer;",https://github.com/ychy0006/AlgorithmCodeKata/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1,2023. 8. 28,12,1
2023. 8. 28 오전 11:01:21,윤지석,Unity,10 - 정수 내림차순으로 배치하기,"using System.Collections.Generic;
using System.Linq;

public class Solution {
    public long solution(long n) {
        
        // 자릿수를 분리한다
        int num = 0;
        List<int> digits = new List<int>();
        while (n != 0)
        {
            num = (int)(n % 10);
            digits.Add(num);
            n /= 10;
        }
        // 분리한 자릿수를 정렬한다
        digits = digits.OrderByDescending(item => item).ToList();
        
        // 곱해서 새로운 정수를 만든다
        long answer = 0;
            
        for (int i = 0; i < digits.Count; i++)
        {
            answer *= 10;
            answer += digits[i];
        }
        
        return answer;
    }
}",https://github.com/noyyo/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12933.%E2%80%85%EC%A0%95%EC%88%98%E2%80%85%EB%82%B4%EB%A6%BC%EC%B0%A8%EC%88%9C%EC%9C%BC%EB%A1%9C%E2%80%85%EB%B0%B0%EC%B9%98%ED%95%98%EA%B8%B0,2023. 8. 28,10,1
2023. 8. 28 오전 11:01:37,정주찬,Unity,27 - 행렬의 덧셈,"public class Solution {
    public int[,] solution(int[,] arr1, int[,] arr2) {
        int[,] answer = new int[arr1.GetLength(0), arr1.GetLength(1)];
        for (int i = 0; i < arr1.GetLength(0); i++)
        {
            for (int j = 0; j < arr1.GetLength(1); j++)
            {
                answer[i, j] = arr1[i, j] + arr2[i, j];
            }
        }
        return answer;
    }
}",https://github.com/JeongJuChan/Algorithm/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12950.%E2%80%85%ED%96%89%EB%A0%AC%EC%9D%98%E2%80%85%EB%8D%A7%EC%85%88/%ED%96%89%EB%A0%AC%EC%9D%98%E2%80%85%EB%8D%A7%EC%85%88.cs,2023. 8. 28,27,1
2023. 8. 28 오전 11:01:59,정주찬,Unity,28 - 직사각형 별찍기,"using System;

public class Example
{
    public static void Main()
    {
        int[] inputs = Array.ConvertAll(Console.ReadLine().Split(), int.Parse);
        for (int i = 0; i < inputs[1]; i++)
        {
            for (int j = 0; j < inputs[0]; j++)
            {
                Console.Write(""*"");
            }
            Console.WriteLine();
        }
    }
}",https://github.com/JeongJuChan/Algorithm/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12969.%E2%80%85%EC%A7%81%EC%82%AC%EA%B0%81%ED%98%95%E2%80%85%EB%B3%84%EC%B0%8D%EA%B8%B0/%EC%A7%81%EC%82%AC%EA%B0%81%ED%98%95%E2%80%85%EB%B3%84%EC%B0%8D%EA%B8%B0.cs,2023. 8. 28,28,1
2023. 8. 28 오전 11:01:59,김주형,Unity,9 - 정수 제곱근 판별,"using System;

public class Solution 
{
    public long solution(long n) 
    {
        long answer = 0;
        long nSqrt = (long)Math.Sqrt(n);

        if (nSqrt * nSqrt == n)
        {
            answer = (nSqrt + 1) * (nSqrt + 1);
        }
        else
        {
            answer = -1;
        }            
        
        return answer;
    }
}",https://github.com/kjuhyung/Algorithm.git,2023. 8. 28,9,1
2023. 8. 28 오전 11:02:26,유채연,Unity,13 - 콜라츠 추측,"        int answer = 0;
        long n = num;
        while(n!=1){
            if(answer>500) {
                answer = -1;
                break;
            }
            if(n%2==0){
                n/=2;
            }
            else{
                n=n*3+1;
            }
            answer++;
        }
        return answer;",https://github.com/ychy0006/AlgorithmCodeKata/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1,2023. 8. 28,13,1
2023. 8. 28 오전 11:02:26,정주찬,Unity,29 - 최대공약수와 최소공배수,"public class Solution {
    public int[] solution(int n, int m) {
        int min = 0;
        int max = 0;
        if (n < m)
        {
            return ReturnMinMax(n, m);
        }
        else
        {
            return ReturnMinMax(n, m);
        }
    }
    
    private int[] ReturnMinMax(int n, int m)
    {
        int min = 0;
        for (int i = 1; i <= n; i++)
        {
            if (n % i == 0 && m % i == 0)
            {
                min = i;
            }
        }

        int j = 1;
        int max = 0;
        while (true)
        {
            if (m * j % n == 0)
            {
                max = m * j;
                break;
            }

            j++;
        }

        return new int[] { min, max };
    }
}",https://github.com/JeongJuChan/Algorithm/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12940.%E2%80%85%EC%B5%9C%EB%8C%80%EA%B3%B5%EC%95%BD%EC%88%98%EC%99%80%E2%80%85%EC%B5%9C%EC%86%8C%EA%B3%B5%EB%B0%B0%EC%88%98/%EC%B5%9C%EB%8C%80%EA%B3%B5%EC%95%BD%EC%88%98%EC%99%80%E2%80%85%EC%B5%9C%EC%86%8C%EA%B3%B5%EB%B0%B0%EC%88%98.cs,2023. 8. 28,29,1
2023. 8. 28 오전 11:03:04,유채연,Unity,14 - 서울에서 김서방 찾기,"        int index = System.Array.IndexOf(seoul,""Kim"");
        string answer = ""김서방은 ""+index+""에 있다"";
        return answer;",https://github.com/ychy0006/AlgorithmCodeKata/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1,2023. 8. 28,14,1
2023. 8. 28 오전 11:03:06,채이환,Unity,22 - 내적,"using System;
using System.Linq;

public class Solution {
    public int solution(int[] a, int[] b) {
        int[] answer = new int[a.Length];
        for (int i=0; i<a.Length; ++i)
        {
            answer[i] = a[i] * b[i];
        }
        return answer.Sum();
    }
}",,2023. 8. 28,22,1
2023. 8. 28 오전 11:03:24,채이환,Unity,21 - 수박수박수박수박수박수?,"using System.Linq;
public class Solution {
    public string solution(int n) {
        string answer = """";
        answer = string.Concat(Enumerable.Repeat<string>(""수박"", n/2)) + (n%2 == 0 ? """":""수"");
        return answer;
    }
}",,2023. 8. 28,21,1
2023. 8. 28 오전 11:04:46,김주형,Unity,10 - 정수 내림차순으로 배치하기,"using System;

public class Solution
{
    public long solution(long n) 
    {
        string arr = n.ToString();
        long[] a = new long[arr.Length];
        for (int i = 0; i<arr.Length; i++)
        {
        a[i] = long.Parse(arr[i].ToString());
        }
        Array.Sort(a);
        Array.Reverse(a);
        
        long answer = 0;
        for (int i = 0; i<a.Length; i++)
        {
            answer = answer * 10 + a[i];
        }
        
        return answer;
    }
}",https://github.com/kjuhyung/Algorithm.git,2023. 8. 28,10,1
2023. 8. 28 오전 11:05:36,남의서,AI,15 - 나누어 떨어지는 숫자,"def solution(arr, divisor):
    answer = sorted([n for n in arr if n % divisor == 0]) or [-1]
    return answer",,2023. 8. 28,15,1
2023. 8. 28 오전 11:06:01,이정환,Unity,13 - 콜라츠 추측,"public class Solution
{

   
    public static void Main(String[] args)
        {

        long result = solution(626331);
           Console.Write(""Result: "" + result);

        int solution(int num)
        {
            long Input = num;
            int count = 0;

            if (Input == 1)
            {
                return 0;
            }

            while (Input != 1)
            {
                count++;

                if (Input % 2 == 0)
                {
                    Input /= 2;
                }
                else
                {
                    Input *= 3;
                    Input++;
                }
             
                if (count > 500)
                {
                    return -1;
                }
            }

            return count;
        }
    }
    }

",,2023. 8. 28,13,1
2023. 8. 28 오전 11:06:44,유채연,Unity,15 - 나누어 떨어지는 숫자,"        int[] answer;
        int count = 0;
        foreach(int i in arr){
            if(i%divisor==0){
                count++;
            }
        }
        if(count==0){
            answer = new int[1] {-1};
            return answer;
        }
        answer = new int[count];
        int j=0;
        foreach(int i in arr){
            if(i%divisor==0){
                answer[j++]=i;
            }
        }
        System.Array.Sort(answer);
        return answer;",https://github.com/ychy0006/AlgorithmCodeKata/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1,2023. 8. 28,15,1
2023. 8. 28 오전 11:07:38,유채연,Unity,16 - 음양 더하기,"        int answer = 0;
        for(int i=0;i<absolutes.Length;i++){
            if(signs[i]==true) answer += absolutes[i];
            else answer += (-1*absolutes[i]);
        }
        return answer;",https://github.com/ychy0006/AlgorithmCodeKata/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1,2023. 8. 28,16,1
2023. 8. 28 오전 11:07:59,임전혁,Unity,30 - 3진법 뒤집기,"using System;
using System.Text;

public class Solution {
    public int solution(int n) 
    {
        int answer = 0;
        StringBuilder sb = new StringBuilder();

        while(n > 0) {
            sb.Append(n % 3);
            n /= 3;
        }
        
        string s = sb.ToString();
        int index = 1;
        for (int i = s.Length; 0 < i; i--)
        {
            answer += int.Parse(s[i - 1].ToString()) * index;
            index *= 3;
        }
        
        return answer;
    }
}",https://github.com/yarogono/Algorithm_CSharp/blob/master/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/68935.%E2%80%853%EC%A7%84%EB%B2%95%E2%80%85%EB%92%A4%EC%A7%91%EA%B8%B0/3%EC%A7%84%EB%B2%95%E2%80%85%EB%92%A4%EC%A7%91%EA%B8%B0.cs,2023. 8. 28,30,1
2023. 8. 28 오전 11:08:33,유채연,Unity,17 - 핸드폰 번호 가리기,"        string s ="""";
        for(int i=0;i<phone_number.Length-4;i++){
            s += ""*"";
        }
        
        string str = phone_number.Substring(phone_number.Length-4,4);
        string answer = s+str;
        return answer;",https://github.com/ychy0006/AlgorithmCodeKata/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1,2023. 8. 28,17,1
2023. 8. 28 오전 11:10:23,유채연,Unity,18 - 없는 숫자 더하기,"        int answer = 45;
        int index=0;
        System.Array.Sort(numbers);
        for(int n=0;n<10;n++){
            if(numbers[index]==n){
                answer-=n;
                index++;
                if(numbers.Length==index) break;
            }
        }
        return answer;",https://github.com/ychy0006/AlgorithmCodeKata/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1,2023. 8. 28,18,1
2023. 8. 28 오전 11:15:21,김민상,Unity,38 - K번째수정렬,"using System.Collections.Generic;
using System.Linq;
public class Solution
{
    public int[] solution(int[] array, int[,] commands)
    {
        List<int> answer = new List<int>();

        for (int i = 0; i < commands.GetLength(0); i++)
        {
            int start = commands[i, 0];
            int end = commands[i, 1];
            int idx = commands[i, 2];

            List<int> newList = new List<int>();
            for (int j = start - 1 ; j < end; j++)
            {
                newList.Add(array[j]);
            }

            answer.Add(newList.OrderBy(c => c).ToArray()[idx - 1]);
        }

        return answer.ToArray();
    }
}",,2023. 8. 28,38,2
2023. 8. 28 오전 11:18:37,김도현B,Unity,19 - 제일 작은 수 제거하기,"using System.Linq;
public class Solution {
    public int[] solution(int[] arr) {
        int arrMin = arr.Min();
        return arr.Where(n => n != arrMin).Count() == 0 ? new int[] {-1} : arr.Where(n => n != arrMin).ToArray();

    }
}",https://github.com/subscriptioncat/Algorithm,2023. 8. 28,19,1
2023. 8. 28 오전 11:20:07,임규한,AI,9 - 정수 제곱근 판별,"def solution(n):
    x = n**0.5
    if x == int(x):
        return (x+1)**2
    else:
        return -1",,2023. 8. 28,9,1
2023. 8. 28 오전 11:20:15,김윤경,Unity,4 - 약수의 합,"public class Solution
    {
        public int solution(int n)
        {
            int answer = 0;
            
            
            for (int i = 1; i <= n/2; i++)
            {
                if (n % i == 0)
                {
                
                    answer += i;
                }
            }
            
            return answer + n;
        }
    }",,2023. 8. 28,4,1
2023. 8. 28 오전 11:20:33,김광수,Unity,54 - 체육복,"using System;
using System.Linq;

public class Solution {
   // 1. 모든 학생들의 체육복 list를 만들자
   // 체육복의 개수가 student에 저장
   // 학생의 번호와 인덱스 번호를 맞춰주기 위해서 n+1의 배열 생성
    
    
    // 생각 해야되는 부분?
    // 만약 1,2,3 세 학생이 있을때
    // 2가 여분의 체육복이 이 있다면 1,3중에 한명한테 빌려줄 수 있다.
    
    // 그런데 1,2,3,4,5 5명의 학생이 있을떄 {0,2,1,2,0} 이라면
    // 1 1 1 2 0 이거나 (무조건 앞의 사람한테 빌려줌)
    // 0 2 1 1 1 이된다.(무조건 뒤의 사람한테 빌려줌)
    // 1 1 1 1 1 (내가 원하는 답)
    // 그러면 둘다 실행하면 되나?
    
    // 앞 -> 뒤 , 뒤 -> 앞의 순서에 따라서 결과값이 달라질 수 있나..?
    
    // student
    
 
    public int solution(int n, int[] lost, int[] reserve) {
        int answer1 = 0;
        int answer2 = 0;
        
        int[] student1 = Enumerable.Repeat(1,n+1).ToArray();
        int[] student2 = new int[n+1];
        int count =0;
        student1[0] = 0;
        
        foreach(int lostStudent in lost)
        {
            student1[lostStudent]--;
        }
        
        foreach(int reserveStudent in reserve)
        {
            student1[reserveStudent]++;
        }
        
        student1.CopyTo(student2,0);
        
        for (int i=1; i< n; i++)
        {
            if(student1[i] > 1 && student1[i+1] == 0){
                student1[i]--;
                student1[i+1]++;
            }
        }
        
        for (int i=n; i>1; i--)
        {
            if(student1[i] > 1 && student1[i-1] == 0){
                student1[i]--;
                student1[i-1]++;
            }
            
            if(student2[i] > 1 && student2[i-1] == 0){
                student2[i]--;
                student2[i-1]++;
            }
        }
        
        for (int i=1; i< n; i++)
        {
            if(student2[i] > 1 && student2[i+1] == 0){
                student2[i]--;
                student2[i+1]++;
            }
        }
        
        foreach(int i in student1)
        {
            answer1 += i > 0 ? 1 : 0;
        }
        
         foreach(int i in student2)
        {
            answer2 += i > 0 ? 1 : 0;
        }
        
        return answer1 > answer2 ? answer1 : answer2;
        
       
    }
}",https://github.com/kksoo0131/Study/commit/d696102106e80ad3063bbbfb69ee2530ee0b9bdd,2023. 8. 28,54,2
2023. 8. 28 오전 11:21:32,김진성,Unity,7 - 자연수 뒤집어 배열로 만들기,"public class _7Solution // 좀 맛ㅇ
        {
        public static int[] solution(long n)
        {
            long length = n.ToString().Length; // 매개변수의 길이 (123 : 3)
            int[] answer = new int[length]; // 그 길이만큼 자리 만들어주고

            for (int i = 0; i < length; i++) // 그 길이동안
            {
                long m = n % 10; // 10나눈 나머지를
                answer[i] = (int)m; // i번째 자리에 할당한다.
                n = n / 10; // 1의 자리부터 한칸 씩 지우면서 반복
            }

            return answer;
        }",https://github.com/GYALLERHORN/ALGORITHM,2023. 8. 28,7,1
2023. 8. 28 오전 11:21:40,남의서,AI,16 - 음양 더하기,"def solution(absolutes, signs):
    answer = 0
    for n in range(len(signs)):
        if signs[n] == False:
            answer -= absolutes[n]
        else:
            answer += absolutes[n]
    return answer",,2023. 8. 28,16,1
2023. 8. 28 오전 11:21:59,김진성,Unity,8 - 문자열을 정수로 바꾸기,"public class _8Solution
    {
        public int solution(string s)
        {

            int answer = 0;
            answer = int.Parse(s); // ?? 네, 바꿔드렸습니다.
            return answer;
        }
    }",https://github.com/GYALLERHORN/ALGORITHMhttps://github.com/GYALLERHORN/ALGORITHM,2023. 8. 28,8,1
2023. 8. 28 오전 11:22:37,김진성,Unity,9 - 정수 제곱근 판별,"public class _9Solution
    {
        public static long solution(long n)
        {
            double root = Math.Sqrt(n); // 매개변수의 제곱근을 구한다. 유리수형의 수가 나올 수 있다.

            long answer = 0;

            if (root % 1 == 0) // root를 정수라고 할 수 있다면?
            {
                answer = ((long)root + 1) * ((long)root + 1); // answer는 root+1의 제곱이다.
            }
            else
            {
                answer = -1; // 아니면 -1이고
            }

            return answer;
        }
    }",https://github.com/GYALLERHORN/ALGORITHM,2023. 8. 28,9,1
2023. 8. 28 오전 11:26:18,남의서,AI,17 - 핸드폰 번호 가리기,"def solution(phone_number):
    answer = ''
    for i in phone_number[:-4]:
        answer += '*'
    for i in phone_number [-4:]:
        answer += i

    return answer",,2023. 8. 28,17,1
2023. 8. 28 오전 11:29:36,이승연,Unity,8 - 문자열을 정수로 바꾸기,"public class Solution {
    public int solution(string s) {
        int answer = 0;
                
        return answer=int.Parse(s);;
    }
}",,2023. 8. 28,8,1
2023. 8. 28 오전 11:30:20,남의서,AI,18 - 없는 숫자 더하기,"def solution(numbers):
    answer = 45
    for number in numbers:
        answer -= number

    return answer",,2023. 8. 28,18,1
2023. 8. 28 오전 11:30:53,이승연,Unity,7 - 자연수 뒤집어 배열로 만들기,"public class Solution {
    public int[] solution(long n) {

        string str= n.ToString();
        int[] answer = new int[str.Length];
        
        for(int i=0;i<str.Length;i++)
        {
            answer[i]=(int)(n%10);
            n=n/10;
        }

        return answer;
    }
}",,2023. 8. 28,7,1
2023. 8. 28 오전 11:42:06,송유섭,Unity,3 - 자릿수 더하기,"using System;
 
public class Solution {
     public int solution(int n)
            {
                int answer = 0;
    
                while(n != 0)
                {
                    answer += n % 10;
                    n = n / 10; 
                }
                return answer;
            }
}",https://github.com/SongJinx3512/codeKata,2023. 8. 28,3,1
2023. 8. 28 오전 11:43:03,남의서,AI,19 - 제일 작은 수 제거하기,"def solution(arr):
    m = min(arr)
    arr.remove(m)
    if arr == []:
        return [-1]
    else:
        return arr",,2023. 8. 28,19,1
2023. 8. 28 오전 11:46:55,남의서,AI,20 - 가운데 글자 가져오기,"def solution(s):
    a = len(s)
    if a % 2 == 0:
        return s[len(s) // 2 - 1: len(s) // 2 + 1]
    else:
        return s[len(s)//2]",,2023. 8. 28,20,1
2023. 8. 28 오전 11:52:39,남의서,AI,21 - 수박수박수박수박수박수?,"def solution(n):
    return ('수박'* n) [:n]",,2023. 8. 28,21,1
2023. 8. 28 오전 11:55:18,남의서,AI,22 - 내적,"def solution(a, b):
    return sum([x*y for x, y in zip(a, b)])",,2023. 8. 28,22,1
2023. 8. 28 오전 11:55:45,임전혁,Unity,31 - 이상한 문자 만들기,"using System;
using System.Text;

public class Solution {
    public string solution(string s) {
        StringBuilder sb = new StringBuilder();
        string[] sArr = s.Split();
        
        for (int i = 0; i < sArr.Length; i++)
        {
            string tempStr = sArr[i];
            for (int j = 0; j < tempStr.Length; j++)
            {    
                if (j % 2 == 0 || j == 0)
                    sb.Append(Char.ToUpper(tempStr[j]).ToString());
                else
                    sb.Append(Char.ToLower(tempStr[j]).ToString());
            }
             if (i != sArr.Length-1)
            {
                sb.Append("" "");
            }
        }
        
        return sb.ToString();
    }
}",https://github.com/yarogono/Algorithm_CSharp/blob/master/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12930.%E2%80%85%EC%9D%B4%EC%83%81%ED%95%9C%E2%80%85%EB%AC%B8%EC%9E%90%E2%80%85%EB%A7%8C%EB%93%A4%EA%B8%B0/%EC%9D%B4%EC%83%81%ED%95%9C%E2%80%85%EB%AC%B8%EC%9E%90%E2%80%85%EB%A7%8C%EB%93%A4%EA%B8%B0.cs,2023. 8. 28,31,2
2023. 8. 28 오전 11:57:02,김광수,Unity,55 - 문자열 나누기,"using System;

public class Solution {
    // 첫글자의 글자수와 첫글자가 아닌글자의 글자수를 센다.
    
    public int solution(string s) {
        int index = 0;
        int answer = 1;
        
        char temp = s[0];
        int tempCount = 1;
        int notTemp = 0;
        
        while(++index < s.Length)
        {
            if(tempCount == 0 && notTemp == 0)
            {
                answer++;
                temp = s[index];
            }
                 
            if( s[index] == temp)
            {
                tempCount++;
            }
            else
            {
                notTemp++;
            } 
            
            if (tempCount == notTemp)
            {
                tempCount = 0;
                notTemp = 0;  
            }
            
           
        }
        
        return answer;
    }

}",https://github.com/kksoo0131/Study/commit/94c19607129a0961380f248c07a722c0bb998c1c,2023. 8. 28,55,3
2023. 8. 28 오후 12:00:30,이경민,Unity,1 - 짝수와 홀수,"public class Solution {
    public string solution(int num) {
        int remainder = num % 2;
        string answer = """";
        if (remainder == 0)
        {
            answer = ""Even"";
        }
        else
        {
            answer = ""Odd"";
        }
        
        return answer;
    }
}",https://github.com/kminsmin/Algorithm_Test_Practice/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12937.%E2%80%85%EC%A7%9D%EC%88%98%EC%99%80%E2%80%85%ED%99%80%EC%88%98,2023. 8. 28,1,1
2023. 8. 28 오후 12:01:13,이경민,Unity,2 - 평균 구하기,"public class Solution {
    public double solution(int[] arr) {
        double sum = 0;
        foreach (int num in arr)
        {
            sum += num;
        }
        double answer = 0;
        answer = sum / arr.Length;
        return answer;
    }
}",https://github.com/kminsmin/Algorithm_Test_Practice/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12944.%E2%80%85%ED%8F%89%EA%B7%A0%E2%80%85%EA%B5%AC%ED%95%98%EA%B8%B0,2023. 8. 28,2,1
2023. 8. 28 오후 12:02:09,이경민,Unity,3 - 자릿수 더하기,"using System;

public class Solution {
    public int solution(int n) {
        string numString = n.ToString();
        string[] stringList = new string[numString.Length];
        for (int i = 0; i < numString.Length; i ++)
        {
            stringList[i] = numString.Substring(i,1);
        }
        int[] numList = new int[stringList.Length];
        for (int i = 0; i < stringList.Length; i++)
        {
            numList[i] = int.Parse(stringList[i]);
        }
        int sum= 0;
        foreach (int num in numList)
        {
            sum += num;
        }
        int answer = sum;
        return answer;
    }
}",https://github.com/kminsmin/Algorithm_Test_Practice/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12931.%E2%80%85%EC%9E%90%EB%A6%BF%EC%88%98%E2%80%85%EB%8D%94%ED%95%98%EA%B8%B0,2023. 8. 28,3,1
2023. 8. 28 오후 12:04:33,심명희,AI,13 - 콜라츠 추측,"def solution(num):
    count = 0
    
    while num != 1:
        if count > 500:
            return -1
        elif num % 2 == 0:
            num = num/2
            count += 1
        elif num % 2 == 1:
            num = num*3+1
            count += 1 
        elif num == 1:
            count == 0
    return count",,2023. 8. 28,13,1
2023. 8. 28 오후 12:14:43,남의서,AI,23 - 약수의 개수와 덧셈,"def solution(left, right):
    answer = 0
    for i in range(left, right + 1):
        square_root = i**(1/2)
        if int(square_root) == square_root:
            answer -= i
        else:
            answer += i
    return answer",,2023. 8. 28,23,1
2023. 8. 28 오후 12:18:35,심명희,AI,14 - 서울에서 김서방 찾기,"def solution(seoul):
    answer = ''
    for i in range(len(seoul)):
        if seoul[i] == ""Kim"" :
            answer = i
            
    return(f""김서방은 {answer}에 있다"")",,2023. 8. 28,14,1
2023. 8. 28 오후 12:23:37,임규한,AI,16 - 음양 더하기,"def solution(absolutes, signs):
    answer = 0
    for i in range(len(absolutes)):
        if signs[i] == True:
            answer = answer + absolutes[i]
        else:
            answer = answer - absolutes[i]
    return answer",,2023. 8. 28,16,1
2023. 8. 28 오후 12:24:26,남의서,AI,24 - 문자열 내림차순으로 배치하기,"def solution(s):
    return ''.join(sorted(s, reverse=True))",,2023. 8. 28,24,1
2023. 8. 28 오후 12:50:49,임현진,Unity,6 - x만큼 간격이 있는 n개의 숫자,"public class Solution {
    public long[] solution(long x, int n) {
        long[] answer = new long[n];
        long originx = x;
        int count = 0;

        while (count < n)
        {
            answer[count] = x;
            x += originx;
            count++;
        }

            return answer;
    }
}",https://github.com/pporrorro/CodeKata_programmers,2023. 8. 28,6,1
2023. 8. 28 오후 2:21:20,안소정,Unity,11 - 하샤드 수,"public class Solution {
    public bool solution(int x) {
        int i = x;
        int sum = 0;
        //while문 /10 반복 1의 자리 만들기
        while (i != 0)
        {
            sum += i % 10;
            i /= 10;
        }
        //if문 %합이 0이면 true else return false;
        if (x % sum == 0) return true;
        else return false;     
    }
}",,2023. 8. 28,11,1
2023. 8. 28 오후 2:39:10,권수민,AI,7 - 자연수 뒤집어 배열로 만들기,"#코드 1
answer = []
def solution(n):
    ## answer = [] #여기다 놓으면 계속 리스트가 비어진다. 전역변수로 바꿔야해
    if n <= 10000000000 and n > 0:
        i = n % 10
        answer.append(i)
        if n >= 10:
            solution(n//10)
    return answer
       
        ## TypeError: Object of type int64 is not JSON serializable
        ## Json모듈이 알아듣지 못하는것
        ## 아에 따로 typeerror에 관련한 예외를 설정해줘야한다.
        ## import json 하고 def json용 따로 만들어주고 'json_data = json.dumps(reversed_data)'  => 이건 추가로 velog에 TIL작성 ""https://velog.io/write?id=d825cbd2-7c15-483f-b47a-c4a7af9296d2""
        
    ##새로운 다른 코드 => reversed()사용안하고 
    
        # string = str(n)
        # for i in range(len(string),0,-1): #12345면 길이 5개부터 -1해서 1까지 돈다
        #     integer = int(string[i-1])
        #     answer.append(integer)
        # return string #answer
        
    ##새로운 다른 코드  
    
        ## answer = reversed(str(n)) 이렇게 해버리면 도출된 값 <메모리주소가> answer이 되기떄문에 type reversed 가 되어 받지를 못하는것이고
        ## return list(reversed(str(n)) 이렇게 하면 -> str 이 나와 int로 바꿔줘야돼.
        # return list(map(int, reversed(str(n))))
        ##reversed()의 객체 자체는 이터레이블이기 떄문에 list없이 매개변수로 가능
        
   ##새로운 다른 코드
    
        # return [int(i) for i in str(n)][::-1] 
        ## [::-1]슬라이싱을 사용하여 역행
        ## 아래는 테스트로 출력해 보기 위한 코드입니다.
        ## print(""결과 : {}"".format(solution(12345)))
                     
                     ",https://github.com/Stella-Kwon/git-github.com-Stella-Kwon-algorithm_prac/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12932.%E2%80%85%EC%9E%90%EC%97%B0%EC%88%98%E2%80%85%EB%92%A4%EC%A7%91%EC%96%B4%E2%80%85%EB%B0%B0%EC%97%B4%EB%A1%9C%E2%80%85%EB%A7%8C%EB%93%A4%EA%B8%B0/%EC%9E%90%EC%97%B0%EC%88%98%E2%80%85%EB%92%A4%EC%A7%91%EC%96%B4%E2%80%85%EB%B0%B0%EC%97%B4%EB%A1%9C%E2%80%85%EB%A7%8C%EB%93%A4%EA%B8%B0.py,2023. 8. 28,7,1
2023. 8. 28 오후 2:42:30,박지원,Unity,11 - 하샤드 수,"public class Solution {
    public bool solution(int x) {
        int temp = x;
        int sum = 0;
        int i;
        for(i = 0; temp>=1; i++){
            sum += (temp % 10);
            temp /= 10;
        }
        return (x % sum == 0);
    }
}",https://github.com/jwonp9127/AlgorithmStudy/tree/ad115a5ae80adee2d9c60eb0b2713f1263e80033/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12947.%E2%80%85%ED%95%98%EC%83%A4%EB%93%9C%E2%80%85%EC%88%98,2023. 8. 28,11,1
2023. 8. 28 오후 3:04:58,심우진,Unity,5 - 나머지가 1이 되는 수 찾기,"public class Solution
{
    public int solution(int n)
    {
        for (int x = 2; x < n; x++)
        {
            if (n % x == 1)
            {
                return x;
            }
        }
        return -1;  // 이 부분은 실행되지 않지만, 에러를 대비해서 넣습니다.
    }
}",https://github.com/agasa0624/at,2023. 8. 28,5,1
2023. 8. 28 오후 3:13:41,배인호,Unity,29 - 최대공약수와 최소공배수,"public class Solution
{
    public int[] solution(int n, int m)
    {
        int[] answer = new int[2];
        int smallNum = n >= m ? m : n;
        bool isEnd = false;
        int leastCommonMultiple = 1;

        while (isEnd == false)
        {
            for (int i = 2; i <= smallNum; i++)
            {
                if (n % i == 0 && m % i == 0)
                {
                    leastCommonMultiple *= i;
                    n /= i;
                    m /= i;
                    break;
                }

                if (i == smallNum)
                {
                    isEnd = true;
                }
            }
        }

        answer[0] = leastCommonMultiple;
        answer[1] = leastCommonMultiple * n * m;

        return answer;
    }
}
",https://github.com/cutlake2000/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12940.%E2%80%85%EC%B5%9C%EB%8C%80%EA%B3%B5%EC%95%BD%EC%88%98%EC%99%80%E2%80%85%EC%B5%9C%EC%86%8C%EA%B3%B5%EB%B0%B0%EC%88%98,2023. 8. 28,29,1
2023. 8. 28 오후 3:53:55,신선화,AI,1 - 짝수와 홀수,"def solution(num):
    return ""Even"" if num%2==0 else ""Odd""",,2023. 8. 28,1,1
2023. 8. 28 오후 3:54:59,임규한,AI,17 - 핸드폰 번호 가리기,"def solution(phone_number):
    return ""*""*(len(phone_number)-4) + phone_number[-4:]",,2023. 8. 28,17,1
2023. 8. 28 오후 4:03:06,임규한,AI,21 - 수박수박수박수박수박수?,"def solution(n):
    if n%2 == 0:
        return ""수박""*(n//2)
    
    else:
        return ""수"" + '박수'*((n-1)//2)",,2023. 8. 28,21,1
2023. 8. 28 오후 4:18:02,김진성,Unity,10 - 정수 내림차순으로 배치하기,"public static long solution(long n) // 조금만 더 배열 관련 함수를 알았더라면.. 이렇게 길어지지 않았겠지?
        {
            int length = n.ToString().Length;
            long[] arr = new long[length];
            for (int i = 0; i < length; i++)
            {
                long j = n % 10;
                n /= 10;
                arr[i] = j;
            } // 매개변수를 배열로 바꾸는 과정

            for (int i = 0; i < length - 1; i++)
            {
                for (int j = i + 1; j < length; j++)
                {
                    if (arr[i] < arr[j])
                    {
                        long temp = arr[i];
                        arr[i]= arr[j];
                        arr[j]= temp;
                    }
                }
            } // 배열의 요소들을 내림차순으로 바꾸는 과정

            long answer = 0;

            for (int i = 1; i <= length; i++)
            {
                answer += arr[i - 1] * (long)Math.Pow(10, length - i);
            } // 각 배열 요소들에 맞게 10의 n제곱 후 answer에 추가

            return answer;
        }",https://github.com/GYALLERHORN/ALGORITHM.git,2023. 8. 28,10,1
2023. 8. 28 오후 4:20:24,임규한,AI,22 - 내적,"def solution(a, b):
    n = len(a)
    answer = 0
    for n in range(n):
        answer += a[n]*b[n]
    return answer",,2023. 8. 28,22,1
2023. 8. 28 오후 4:53:30,박지원,Unity,12 - 두 정수 사이의 합,"public class Solution {
    public long solution(int a, int b) {
        long answer = 0;
        int bigger = a > b ? a : b;
        int smaller = a <= b ? a : b;
        for(int i = smaller; i <= bigger; i++)
            answer += i;
        return answer;
    }
}",https://github.com/jwonp9127/AlgorithmStudy/tree/f8b69724a11bcfee3e62135afa605b3347691a91/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12912.%E2%80%85%EB%91%90%E2%80%85%EC%A0%95%EC%88%98%E2%80%85%EC%82%AC%EC%9D%B4%EC%9D%98%E2%80%85%ED%95%A9,2023. 8. 28,12,1
2023. 8. 28 오후 5:04:40,임규한,AI,23 - 약수의 개수와 덧셈,"def solution(left, right):
    answer = 0
    for i in range(left, right+1):
        cnt = 0
        for a in range(1, i+1):
            if i%a == 0:
                cnt += 1

        if cnt%2 == 0:
            answer += i
        else:
            answer -= i

    return answer",,2023. 8. 28,23,1
2023. 8. 28 오후 5:04:49,김지우,AI,12 - 두 정수 사이의 합,"def solution(a, b):
    answer = 0
    for i in range(a,b+1):
        answer += i
    if a > b:
        for i in range(b,a+1):
            answer += i
    return answer",,2023. 8. 28,12,1
2023. 8. 28 오후 5:11:37,김민상,Unity,39 - 두 개 뽑아서 더하기,"using System;
using System.Collections.Generic;

public class Solution
{
    public int[] solution(int[] numbers)
    {
        List<int> answer = new List<int>();

        for (int i = 0; i < numbers.Length - 1; i++)
        {
            for (int j = i + 1; j < numbers.Length; j++)
            {
                int temp = numbers[i] + numbers[j];

                if (!answer.Contains(temp))
                    answer.Add(temp);
            }
        }
        
        answer.Sort();
        return answer.ToArray();
    }
}",,2023. 8. 28,39,2
2023. 8. 28 오후 5:22:32,임규한,AI,24 - 문자열 내림차순으로 배치하기,"def solution(s):
    return ''.join(sorted(s, reverse = True))",,2023. 8. 28,24,1
2023. 8. 28 오후 5:31:43,임규한,AI,25 - 부족한 금액 계산하기,"def solution(price, money, count):
    total = 0
    for a in range(count+1):
        total += price*a
    if money - total < 0:
        return total - money
    else:
        return 0",,2023. 8. 28,25,1
2023. 8. 28 오후 5:59:37,임규한,AI,26 - 문자열 다루기 기본,"def solution(s):
    if (len(s) == 4 or len(s) == 6) and (s.isdigit() == True):
        return True
    else:
        return False",,2023. 8. 28,26,1
2023. 8. 28 오후 6:14:24,최종민,AI,14 - 서울에서 김서방 찾기,"def solution():
    answer = f'김서방은 {seoul.index(""Kim"")}에 있다'
    return answer",,2023. 8. 28,14,1
2023. 8. 28 오후 6:29:45,최종민,AI,15 - 나누어 떨어지는 숫자,"def solution(arr, divisor):
    answer = []
    arr.sort()
    for i in arr:
        if i % divisor == 0:
            answer.append(i)
    if not answer:
        answer.append(-1)

    return answer
",,2023. 8. 28,15,1
2023. 8. 28 오후 6:44:29,최종민,AI,16 - 음양 더하기,"def solution(absolutes, signs):
    answer = 0

    for i in range(len(absolutes)):
        if signs[i] == 0:
            absolutes[i] = -absolutes[i]
        answer += absolutes[i]
    return answer",,2023. 8. 28,16,1
2023. 8. 28 오후 7:50:22,신선화,AI,2 - 평균 구하기,"def solution(list):
    if len(list) == 0:
        return 0

    else:
        return sum(list) / len(list)",,2023. 8. 28,2,1
2023. 8. 28 오후 8:07:11,이혜리,AI,95 - 쿼드압축 후 개수 세기,"answer = [0, 0]

def solution(arr):
    cnt = 0
    for i in range(len(arr)):
        for j in range(len(arr)):
            if arr[i][j] == arr[0][0]:
                cnt += 1
        
    if cnt == len(arr)**2:
        answer[arr[0][0]] += 1
    else:
        # print('one')
        mid = len(arr)//2
        
        arr1 = [[arr[i][j] for j in range(mid)] for i in range(mid)]
        solution(arr1)
        
        arr2 = [[arr[i][j] for j in range(mid, len(arr))] for i in range(mid)]
        solution(arr2)
        
        arr3 = [[arr[i][j] for j in range(mid)] for i in range(mid, len(arr))]
        solution(arr3)
        
        arr4 = [[arr[i][j] for j in range(mid, len(arr))] for i in range(mid, len(arr))]
        solution(arr4)
    
    return answer",https://github.com/hyeleenotharry/Programmers/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv2/68936.%E2%80%85%EC%BF%BC%EB%93%9C%EC%95%95%EC%B6%95%E2%80%85%ED%9B%84%E2%80%85%EA%B0%9C%EC%88%98%E2%80%85%EC%84%B8%EA%B8%B0,2023. 8. 28,95,4
2023. 8. 28 오후 8:43:00,양덕영,AI,17 - 핸드폰 번호 가리기,"def solution(phone_number):
    hidden_part = '*' * (len(phone_number) - 4) + phone_number[-4:]
    return hidden_part

phone_number = ""01033334444""
print(solution(phone_number))  ",https://github.com/DeokYoung980130/Ai_Project2023-08-07/tree/78b3f76c9da55b4e20a5b54000484b10619afb5b,2023. 8. 28,17,1
2023. 8. 28 오후 9:02:06,이민열,Unity,9 - 정수 제곱근 판별,"public class Solution {
    public long solution(long n) {
        long answer = 0;
        for(long i = 1; i <= n; i++) {
            if(n == i*i) {
                answer = (i+1) * (i+1);
                break;
            } else if(n < i*i) {
                answer = -1;
                break;
            }
            
        }
        
        return answer;
    }
}",https://github.com/LeeMinyeol,2023. 8. 28,9,1
2023. 8. 28 오후 9:28:16,김규승,Unity,131 - 당구 연습,"#include <iostream>
#include <string>
#include <vector>

using namespace std;

struct XY
{
    int x;
    int y;
};

struct NormalizeCoordinate
{
    int   height;
    XY    target;
};

int CalculateDistance(NormalizeCoordinate& coordinate)
{
#define c coordinate.target
#define h coordinate.height
    return c.x * c.x + c.y * c.y + 4 * (h * h - h * c.y);
#undef h
#undef c
}

int MakeCoordinateLeft(int w, int h, const XY& begin, const XY& end)
{
    
    //왼쪽 면에 튕길 경우
    //더 오른쪽에 있는 점을 원점으로 삼습니다.
    const XY* origin{&end};
    const XY* target{&begin};
    if(begin.x > end.x)
    {
        swap(origin, target);
    }
    
    NormalizeCoordinate left{origin->x, {abs(begin.y - end.y),
                                         abs(begin.x - end.x)}};
    
    cout << ""Left distance: "" << CalculateDistance(left) << endl;
    
    return CalculateDistance(left);
    
}

int MakeCoordinateRight(int w, int h, const XY& begin, const XY& end)
{
    
    const XY* origin{&end};
    const XY* target{&begin};
    if(begin.x < end.x)
    {
        swap(origin, target);
    }
    
    NormalizeCoordinate right{w - origin->x, {abs(begin.y - end.y),
                                              abs(begin.x - end.x)}};
    
    cout << ""Right distance: "" << CalculateDistance(right) << endl;
    
    return CalculateDistance(right);
    
}

int MakeCoordinateUp(int w, int h, const XY& begin, const XY& end)
{
    
    const XY* origin{&end};
    const XY* target{&begin};
    if(begin.y < end.y)
    {
        swap(origin, target);
    }
    
    NormalizeCoordinate up{h - origin->y, {abs(begin.x - end.x),
                                           abs(begin.y - end.y)}};
    
    cout << ""Up distance: "" << CalculateDistance(up) << endl;
    
    return CalculateDistance(up);
    
}

int MakeCoordinateDown(int w, int h, const XY& begin, const XY& end)
{
    
    const XY* origin{&end};
    const XY* target{&begin};
    if(begin.y > end.y)
    {
        swap(origin, target);
    }
    
    NormalizeCoordinate down{origin->y, {abs(begin.x - end.x),
                                         abs(begin.y - end.y)}};
    
    cout << ""Down distance: "" << CalculateDistance(down) << endl;
    
    return CalculateDistance(down);
    
}

vector<int> solution(int m, int n, int startX, int startY, vector<vector<int>> balls) {

    vector<int> answer;

    for(int i = 0; i < balls.size(); ++i)
    {
        
        int minDistance{100000000};
        
        XY ball{balls[i][0], balls[i][1]};
        
        //대각선인 경우...를 고려 안해도 되네?
        //우상향
        //좌상향
        
        if(startY == ball.y)
        {
            if(startX < ball.x)
            {
                minDistance = min(MakeCoordinateLeft(m, n, {startX, startY}, ball), minDistance);
            }
            else
            {
                minDistance = min(MakeCoordinateRight(m, n, {startX, startY}, ball), minDistance);
            }
        }
        else
        {
            minDistance = min(MakeCoordinateLeft(m, n, {startX, startY}, ball), minDistance);
            minDistance = min(MakeCoordinateRight(m, n, {startX, startY}, ball), minDistance);
        }
        
        if(startX == ball.x)
        {
            if(startY < ball.y)
            {
                minDistance = min(MakeCoordinateDown(m, n, {startX, startY}, ball), minDistance);
            }
            else
            {
                minDistance = min(MakeCoordinateUp(m, n, {startX, startY}, ball), minDistance);
            }
        }
        else
        {
            minDistance = min(MakeCoordinateUp(m, n, {startX, startY}, ball), minDistance);
            minDistance = min(MakeCoordinateDown(m, n, {startX, startY}, ball), minDistance);
        }
        
        answer.push_back(minDistance);

    }
    
    
    return answer;
    
}",,2023. 8. 28,131,5
2023. 8. 28 오후 9:30:38,김강현,Unity,7 - 자연수 뒤집어 배열로 만들기,"public class Solution {
    public int[] solution(long n) {
        int numLength = 0;
        long temp = n;

        while (temp > 0) {
            temp /= 10;
            numLength++;
        }

        int[] num = new int[numLength];

        for (int i = 0; i < numLength; i++) {
            num[i] = (int) (n % 10);
            n /= 10;
        }

        return num;
    }
}",,2023. 8. 28,7,1
2023. 8. 28 오후 9:47:40,박지원,Unity,13 - 콜라츠 추측,"using System;

public class Solution {
    public int solution(int num) {
        
        int answer;
        long num2 = (long)num;
        
        for(answer = 0; answer < 500; answer++)
        {
            if(num2 == 1)    return answer;
            num2 = (num2 % 2 == 0 ? num2 / 2 : num2 * 3 + 1);
        }
        return -1;
    }
}",https://github.com/jwonp9127/AlgorithmStudy/tree/8673efe20301a62332a8c4b21e15d40e0365fecb/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12943.%E2%80%85%EC%BD%9C%EB%9D%BC%EC%B8%A0%E2%80%85%EC%B6%94%EC%B8%A1,2023. 8. 28,13,1
2023. 8. 28 오후 9:56:00,박지원,Unity,14 - 서울에서 김서방 찾기,"public class Solution {
    public string solution(string[] seoul) {
        string answer = """";
        int x = 0;
        foreach(string name in seoul){
            if(name == ""Kim""){
                return ""김서방은 ""+x.ToString()+""에 있다"";
            }
            x++;
        }
        return answer;
    }
}",https://github.com/jwonp9127/AlgorithmStudy/tree/b67b737b1ef314062eecc8e721bb19275a5c4be2/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12919.%E2%80%85%EC%84%9C%EC%9A%B8%EC%97%90%EC%84%9C%E2%80%85%EA%B9%80%EC%84%9C%EB%B0%A9%E2%80%85%EC%B0%BE%EA%B8%B0,2023. 8. 28,14,1
2023. 8. 28 오후 11:01:14,박지원,Unity,15 - 나누어 떨어지는 숫자,"using System;
using System.Linq;

public class Solution {
    public int[] solution(int[] arr, int divisor) {
        int answerLength = 0;
        foreach(int num in arr){
            if(num % divisor == 0)
                answerLength++;
        }
        int[] answer = new int[answerLength];
        int j = 0;
        for(int i = 0; i < arr.Length; i++){
            if(arr[i] % divisor == 0){
                answer[j] = arr[i];
                j++;
            }
        } 
        Array.Sort(answer);

        return answer.Length > 0 ? answer : new int[]{-1};
    }
}",https://github.com/jwonp9127/AlgorithmStudy/tree/a128753744ae7dd64986f25318064482be643d88/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12910.%E2%80%85%EB%82%98%EB%88%84%EC%96%B4%E2%80%85%EB%96%A8%EC%96%B4%EC%A7%80%EB%8A%94%E2%80%85%EC%88%AB%EC%9E%90%E2%80%85%EB%B0%B0%EC%97%B4,2023. 8. 28,15,1
2023. 8. 28 오후 11:06:01,박지원,Unity,16 - 음양 더하기,"using System;

public class Solution {
    public int solution(int[] absolutes, bool[] signs) {
        int answer = 0;
        for(int i = 0; i < absolutes.Length; i++)
            answer += signs[i] ? absolutes[i] : absolutes[i]*(-1);
        return answer;
    }
}",https://github.com/jwonp9127/AlgorithmStudy/tree/d156f872c271ff002f30169654b7ac1b435c49f4/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/76501.%E2%80%85%EC%9D%8C%EC%96%91%E2%80%85%EB%8D%94%ED%95%98%EA%B8%B0,2023. 8. 28,16,1
2023. 8. 28 오후 11:15:19,박지원,Unity,17 - 핸드폰 번호 가리기,"public class Solution {
    public string solution(string phone_number) {
        int phone_number_L = phone_number.Length;
        phone_number = new string('*', phone_number_L-4) + phone_number.Substring(phone_number_L-4);
        return phone_number;
    }
}",https://github.com/jwonp9127/AlgorithmStudy/tree/fcff2dd3110410db1120325641b74f747c0e3ffc/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12948.%E2%80%85%ED%95%B8%EB%93%9C%ED%8F%B0%E2%80%85%EB%B2%88%ED%98%B8%E2%80%85%EA%B0%80%EB%A6%AC%EA%B8%B0,2023. 8. 28,17,1
2023. 8. 29 오전 12:52:31,임전혁,Unity,114 - 미로 탈출,"using System;
using System.Collections.Generic;

public class Solution {
    private int yLength = 0;
    private int xLength = 0;

    
    public int solution(string[] maps) {
        int answer = 0;
        
        yLength = maps.Length;
        xLength = maps[0].Length;
        
        
        char[,] graph = new char[yLength, xLength];

        
        
        for (int i = 0; i < maps.Length; i++)
        {
            string map = maps[i];
            for (int j = 0; j < map.Length; j++)
                graph[i, j] = map[j];
        }

        int path1 = BFS(graph, 'S', 'L');
        int path2 = BFS(graph, 'L', 'E');

        if (path1 == -1 || path2 == -1)
            answer = -1;
        else
            answer = path1 + path2;
        
        return answer;
    }
    
    
    private int BFS(char[,] graph, char start, char dest)
    {
        Queue<Node> queue = new Queue<Node>();
        bool[,] isVisited = new bool[yLength, xLength];
        
        for (int i = 0; i < graph.GetLength(0); i++)
        {
            for (int j = 0; j < graph.GetLength(1); j++)
            {
                if (graph[i, j] == start)
                {
                    queue.Enqueue(new Node(i, j, 0));
                    isVisited[i, j] = true;
                }
            }
        }
        
        
        int[] deltaY = { 0, 1, -1, 0 };
        int[] deltaX = { 1, 0, 0, -1 };

        while (queue.Count > 0)
        {
            Node nowNode = queue.Dequeue();

            int cost = nowNode.Cost;
            if (graph[nowNode.Y, nowNode.X] ==  dest)
                return cost;

            for (int i = 0; i < 4; i++)
            {
                int nextY = nowNode.Y + deltaY[i];
                int nextX = nowNode.X + deltaX[i];

                if (nextY < 0 || nextY > yLength - 1 || nextX < 0 || nextX > xLength - 1)
                    continue;
                if (isVisited[nextY, nextX])
                    continue;
                if (graph[nextY, nextX] == 'X')
                    continue;

                queue.Enqueue(new Node(nextY, nextX, cost+1));
                isVisited[nextY, nextX] = true;
            }
        }

        return -1;
    }
}

class Node
{
    public int Y { get; set; }
    public int X { get; set; }
    public int Cost { get; set; }

    public Node(int y, int x, int cost)
    {
        Y = y;
        X = x;
        Cost = cost;
    }
}",https://github.com/yarogono/Algorithm_CSharp/blob/master/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/unrated/159993.%E2%80%85%EB%AF%B8%EB%A1%9C%E2%80%85%ED%83%88%EC%B6%9C/%EB%AF%B8%EB%A1%9C%E2%80%85%ED%83%88%EC%B6%9C.cs,2023. 8. 29,114,5
2023. 8. 29 오전 8:22:57,김우진,AI,4 - 약수의 합,"def solution(n):
    answer = 0
    for i in range(1,n+1)  :
        if n % i == 0 :
            answer = answer + i
    return answer

print(solution(12))",,2023. 8. 29,4,1
2023. 8. 29 오전 8:38:40,김규승,Unity,130 - 유사 칸토어 비트열,"#include <string>
#include <vector>
#include <iostream>
#include <math.h>

using namespace std;

struct Cache
{
    long long   baseIndex;      //0베이스 입니다.
    vector<int> cache;
};

int find(int n, long long i, vector<Cache>* cacheVector)
{
    
    //i는 0base 인덱스 입니다.
    
    if(n == 0)
    {
        return 1;
    }

    int div{(int)i / (int)pow(5, n-1)};
    if(div == 2)
    {
        return 0;
    }

    //윗층을 검사합니다.
    //캐쉬를 검사하고 없으면 계속 루프를 돕니다.
    auto& cache{(*cacheVector)[n - 1]};
    if(cache.cache[i / 5 - cache.baseIndex] == -1)
    {
        cache.cache[i / 5 - cache.baseIndex] = find(n - 1, i / 5, cacheVector);
    }
    
    //캐쉬에 1이 있다면 11011순서로 리턴되야 합니다.
    if(cache.cache[i / 5 - cache.baseIndex] == 1 &&
       i % 5 != 2) 
    {
        return 1;
    }
    else
    {
        return 0;
    }
    
}

int solution(int n, long long l, long long r) {
    int answer = 0;
    //1
    //11011
    //1101111011000001101111011
    
    //가운데 0의 개수 5^(n - 1)
    //왼쪽의 숫자의 수 5^(n - 1) * 2
    //오른쪽의 숫자의 수 5^(n - 1) * 2
    
    //캐시공간을 만듭니다.
    vector<Cache> cacheVector{};   //0~n-1층 까지를 기억합니다. n층은 기억하지 않습니다.
                                   //n층: 맞춰야 하는 정답로 재사용 하지 않습니다.
    cacheVector.resize(n);
    long long base{l - 1};         //0베이스로 변환
    long long size{r - l + 1};
    for(int i = n - 1; i >= 0; --i)
    {
        base /= 5;
        size /= 5;
        cacheVector[i].baseIndex = base;
        cacheVector[i].cache.resize(size + 2, -1);
        //cout << ""base: "" << base << "", size: "" << size + 2 << endl;
    }
    
    for(long long i = l; i <= r; ++i)
    {
        if(find(n, i - 1LL, &cacheVector) == 1)
        {
            ++answer;
        }
        //cout << find(n, i - 1LL, &cacheVector) << "", "";
    }
    //cout << endl;
    
    /*
    for(int y = 0; y < n; ++y)
    {
        for(auto i : cacheVector[y].cache)
        {
            cout << i, "", "";
        }
        cout << endl;
    }
    */
    
    
    return answer;
    
}",,2023. 8. 29,130,5
2023. 8. 29 오전 8:58:17,이세진,Unity,10 - 정수 내림차순으로 배치하기,"using System;
public class Solution {
    public long solution(long n) {
        long answer = 0;
        char[] array = n.ToString().ToCharArray();
        Array.Sort(array);
        Array.Reverse(array);
        answer = Convert.ToInt64(new string(array));
        return answer;
    }
}",,2023. 8. 29,10,1
2023. 8. 29 오전 9:01:21,지민규,Unity,17 - 핸드폰 번호 가리기,"using System.Linq;
using System;

public class Solution {
    public string solution(string phone_number) {
        char[] numArray = phone_number.ToCharArray();
        int cnt = phone_number.Length;
        string answer = string.Join("""", Enumerable.Repeat(""*"", cnt - 4)) + phone_number.Substring(cnt-4); 
        
        return answer;
    }
}",,2023. 8. 29,17,1
2023. 8. 29 오전 9:03:47,김형중,Unity,8 - 문자열을 정수로 바꾸기,"using System;

public class Solution {
    public int solution(string s) {
        int answer = 0;
        
        answer = Convert.ToInt32(s);
        
        return answer;
    }
}",,2023. 8. 29,8,1
2023. 8. 29 오전 9:04:58,김경환,Unity,15 - 나누어 떨어지는 숫자,"using System;
using System.Collections;

public class Solution {
    public int[] solution(int[] arr, int divisor) {
        ArrayList list = new ArrayList();
        
        for(int i = 0; i < arr.Length; i++)
        {
            if(arr[i] % divisor == 0)
            {
                list.Add(arr[i]);
            }
        }
        
        list.Sort();
        
        if(list.Count == 0)
            return new int[]{-1};
        
        return (int[])list.ToArray(typeof( int ));
    }
}",https://github.com/kkh9700,2023. 8. 29,15,1
2023. 8. 29 오전 9:05:49,조영오,Unity,26 - 문자열 다루기 기본,"public class Solution {
    public bool solution(string s) {
        bool answer = false;
        
        bool isCurrectLength = false;
        bool isOnlyNumber = true;
        
        if(s.Length == 4 || s.Length == 6){isCurrectLength = true;}
        
        foreach(char c in s){
            if(c < 48 || c > 57) {isOnlyNumber = false; break;}
        }
        
        if(isCurrectLength && isOnlyNumber){answer = true;}
        
        
        return answer;
    }
}",,2023. 8. 29,26,1
2023. 8. 29 오전 9:06:30,김경환,Unity,16 - 음양 더하기,"using System;

public class Solution {
    public int solution(int[] absolutes, bool[] signs) {
        int answer = 0;
        
        for(int i = 0; i < signs.Length; i++)
        {
            if(signs[i])
            {
                answer += absolutes[i];
            }
            else {
                answer -= absolutes[i];
            }
        }
        
        return answer;
    }
}",https://github.com/kkh9700,2023. 8. 29,16,1
2023. 8. 29 오전 9:06:38,김경원,Unity,6 - x만큼 간격이 있는 n개의 숫자,"public class Solution {
    public long[] solution(int x, int n) {
        long[] answer = new long[n];
        
        for (int i = 0; i < n; i++) {
            answer[i] = (long)x + x * i;
        }
        
        return answer;
    }
}",,2023. 8. 29,6,1
2023. 8. 29 오전 9:06:56,김예준,Unity,18 - 없는 숫자 더하기,"#include <vector>
#include <map>

using namespace std;

int solution(vector<int> numbers) {
    int answer = 0;
    
    map<int, bool> m;
    
    for (int i = 1; i <= 9; i++)
    {
        m[i] = false;
    }
    
    for (int i = 0; i < numbers.size(); i++)
    {
        m[numbers[i]] = true;
    }
    
    for (int i = 0; i < m.size(); i++)
    {
        if (!m[i]) answer += i;
    }
    
    return answer;
}",,2023. 8. 29,18,1
2023. 8. 29 오전 9:07:20,김민태,Unity,29 - 최대공약수와 최소공배수,"using System;
public class Solution {
    public int[] solution(int n, int m) {
        int[] answer = new int[2];
        int min;
        int max;
        
        min = gcd(n, m);
        max = (n * m) / min;
        
        answer[0] = min;
        answer[1] = max;
        return answer;
    }
    public int gcd(int n, int m)
    {
        if(m==0) return n;
        else return gcd(m, n%m);
    }
}",https://github.com/rlaalsxo/CodingTest,2023. 8. 29,29,1
2023. 8. 29 오전 9:07:34,김진규,Unity,20 - 가운데 글자 가져오기,"public class Solution {
    public string solution(string s) {
        string answer = """";
        if(s.Length % 2 != 0)
            answer = s.Substring(s.Length / 2,1);
        else
            answer = s.Substring(s.Length /2-1, 2);
        return answer;
    }
}",,2023. 8. 29,20,1
2023. 8. 29 오전 9:07:34,지민규,Unity,18 - 없는 숫자 더하기,"using System;

public class Solution {
    public int solution(int[] numbers) {
        int answer = 0;
        for (int i = 0; i < 10; i++)
        {
            answer +=  ((Array.IndexOf(numbers, i) == -1)) ? i : 0;
        }
        return answer;
    }
}",,2023. 8. 29,18,1
2023. 8. 29 오전 9:08:24,이선재,Unity,27 - 행렬의 덧셈,"#include <string>
#include <vector>

using namespace std;

vector<vector<int>> solution(vector<vector<int>> arr1, vector<vector<int>> arr2) {
    vector<vector<int>> answer;
    
    for(int i = 0; i < arr1.size(); i++){
        vector<int> temp;
        
        for(int j = 0; j < arr1[0].size(); j++){
            temp.push_back(arr1[i][j] + arr2[i][j]);
        }
        
        answer.push_back(temp);
    }
    
    return answer;
}",https://github.com/Lyrwhitt/Algorithm/blob/main/Programmers/LEVEL1/%ED%96%89%EB%A0%AC%EC%9D%98%20%EB%8D%A7%EC%83%98,2023. 8. 29,27,1
2023. 8. 29 오전 9:08:26,김경원,AI,7 - 자연수 뒤집어 배열로 만들기,"public class Solution {
    public int[] solution(long n) {
        string strN = n.ToString();
        int[] answer = new int[strN.Length];

        for (int i = 0; i < strN.Length; i++) {
            answer[i] = int.Parse(strN[strN.Length - 1 - i].ToString());
        }

        return answer;
    }
}",,2023. 8. 29,7,1
2023. 8. 29 오전 9:08:31,차요한,Unity,21 - 수박수박수박수박수박수?,"public class Solution {
    public string solution(int n) {
        string su = ""수"";
        string back =""박"";
        string answer = """";
        for(int i =0;i<n;i++)
        {
            if(i%2==0)
            {
                answer+=su;
            }
            else
            {
                answer+=back;
            }
        }
        return answer;
    }
}",https://github.com/HOHOJO/Algorithm_test,2023. 8. 29,21,1
2023. 8. 29 오전 9:09:41,박민호,Unity,20 - 가운데 글자 가져오기,"public class Solution {
    public string solution(string s) {
        char[] arr = s.ToCharArray();
        string answer = """";
        int evenOdd=arr.Length/2;
        if(arr.Length%2==0){
            answer= (arr[evenOdd-1]).ToString()+(arr[evenOdd]).ToString();
        }
        else{
            answer=(arr[evenOdd]).ToString();
        }
        return answer;
    }
}",,2023. 8. 29,20,1
2023. 8. 29 오전 9:09:41,김경환,Unity,17 - 핸드폰 번호 가리기,"using System.Text;

public class Solution {
    public string solution(string phone_number) {
        StringBuilder sb = new StringBuilder();
        
        for(int i = 0; i < phone_number.Length; i++)
        {
            if(i < phone_number.Length - 4)
            {
                sb.Append('*');
            }
            else {
                sb.Append(phone_number[i]);
            }
        }
        
        return sb.ToString();
    }
}",https://github.com/kkh9700,2023. 8. 29,17,1
2023. 8. 29 오전 9:10:10,김민석,Unity,8 - 문자열을 정수로 바꾸기,"public class Solution {
    public int solution(string s) 
    {
        int answer = int.Parse(s);

        return answer;
    }
}",https://github.com/ms0753/codekata/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12925.%E2%80%85%EB%AC%B8%EC%9E%90%EC%97%B4%EC%9D%84%E2%80%85%EC%A0%95%EC%88%98%EB%A1%9C%E2%80%85%EB%B0%94%EA%BE%B8%EA%B8%B0,2023. 8. 29,8,1
2023. 8. 29 오전 9:10:17,정재훈,Unity,6 - x만큼 간격이 있는 n개의 숫자,"public class Solution
    {
       public long[] solution(int x, int n)
        {
            long[] answer = new long[n];
            int i = 0;
            int plus = x;
            long y = x;
            while (answer[n-1] ==0)
            {
                if(x==0){
                    break;
                }
                
                answer[i] = y;
                y += plus;
                i++;

            }
            return answer;
        }
    }",https://github.com/toadsam/Algorithm,2023. 8. 29,6,1
2023. 8. 29 오전 9:10:32,권선영,Unity,5 - 나머지가 1이 되는 수 찾기,"using System;

public class Solution {
    public int solution(int n) {
        
        int l = 2;
        while (true)
        {
            if (n % l  == 1) 
            return l;
            l = l + 1;
        } 
       return 0;
    }
}",https://github.com/Tealss,2023. 8. 29,5,1
2023. 8. 29 오전 9:10:33,한병권,Unity,37 - 문자열 내 마음대로 정렬하기,"using System.Linq;
using System.Collections.Generic;

public class Solution {
    public string[] solution(string[] strings, int n) {
        List<string> list = strings.ToList();
        list = list.OrderBy(i=>i).ToList();
        list = list.OrderBy(i=>i.Substring(n,1)).ToList();
        string[] answer = list.ToArray();
        return answer;
    }
}",https://github.com/hbg9212/AlgorithmCodekata,2023. 8. 29,37,2
2023. 8. 29 오전 9:10:40,배인호,Unity,30 - 3진법 뒤집기,"using System;

public class Solution
{
    public int solution(int n)
    {
        int answer = 0;
        int length;
        string ternary = """";

        while (n != 0)
        {
            ternary += n % 3;
            n /= 3;
        }

        ternary.ToCharArray();

        length = ternary.Length;

        for (int i = 0; i < length; i++)
        {
            answer += (ternary[length - 1 - i] - 48) * (int)Math.Pow(3, i);
        }

        return answer;
    }
}
",https://github.com/cutlake2000/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/68935.%E2%80%853%EC%A7%84%EB%B2%95%E2%80%85%EB%92%A4%EC%A7%91%EA%B8%B0,2023. 8. 29,30,1
2023. 8. 29 오전 9:10:44,차요한,Unity,22 - 내적,"using System;

public class Solution {
    public int solution(int[] a, int[] b) {
        int answer = 0;
        for(int i =0; i<a.Length;i++)
        {
            answer+=a[i]*b[i];
        }
        return answer;
    }
}",https://github.com/HOHOJO/Algorithm_test,2023. 8. 29,22,1
2023. 8. 29 오전 9:11:24,신현,Unity,13 - 콜라츠 추측,"public class Solution {
    public int solution(int num) {
        long n = num;
        int answer = 0;
        int count = 0;
        for (int i = 0; i <= 500 ; i++){
            if( n == 1){
                break;
            }
            if( count == 500){
                return answer = -1;
            }
            if( n % 2 == 0){
                n = n / 2;
                count ++;
            }else{
                n = (n * 3) + 1;
                count++;
            }
            
        }
        return answer = count;
    }
}",https://github.com/Shyunju/codTaka.git,2023. 8. 29,13,1
2023. 8. 29 오전 9:11:26,김하늘,Unity,12 - 두 정수 사이의 합,"public class Solution 
{
    public long solution(int a, int b) 
    {
        if (a == b) return a;
        else if (a > b)
        {
            int temp = a;
            a = b;
            b = temp;
        }

        long answer = 0;

        for (int i = a; i <= b; i++)
        {
            answer += i;
        }
        return answer;
    }
}",,2023. 8. 29,12,1
2023. 8. 29 오전 9:11:42,김경환,Unity,18 - 없는 숫자 더하기,"using System;

public class Solution {
    public int solution(int[] numbers) {
        int answer = 0;
        bool[] flag = new bool[10];
        
        for(int i = 0; i < numbers.Length; i++)
        {
            flag[numbers[i]] = true;
        }
        
        for(int i = 0; i < 10; i++)
        {
            if(!flag[i])
                answer += i;
        }
        
        return answer;
    }
}",https://github.com/kkh9700,2023. 8. 29,18,1
2023. 8. 29 오전 9:11:57,김도현B,Unity,20 - 가운데 글자 가져오기,"public class Solution {
    public string solution(string s) {
        return s.Length % 2 == 0 ? s.Substring(s.Length/2 - 1,2) : s.Substring(s.Length/2,1);
    }
}",https://github.com/subscriptioncat/Algorithm,2023. 8. 29,20,1
2023. 8. 29 오전 9:12:02,임전혁,Unity,32 - 삼총사,"using System;

public class Solution {
    public int solution(int[] number) {
        int answer = 0;
        
        int numberLength = number.Length;
        for(int i = 0; i < numberLength - 2; i++) {
            for(int j = i + 1; j < numberLength - 1; j++) {
                for(int k = j + 1; k < numberLength; k++) {
                    if(number[i] + number[j] + number[k] == 0) answer++;
                }
            }
        }
        return answer;
    }
}",https://github.com/yarogono/Algorithm_CSharp/blob/master/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/131705.%E2%80%85%EC%82%BC%EC%B4%9D%EC%82%AC/%EC%82%BC%EC%B4%9D%EC%82%AC.cs,2023. 8. 29,32,2
2023. 8. 29 오전 9:12:21,최수용,Unity,11 - 하샤드 수,"
public class Solution {
    public bool solution(int x) {
        bool answer = true;
        int a=0;
        int b=x;
        while(b >= 1){
                a += b%10;
                b=b/10;
        }
        if (x%a != 0 ) { answer = false; }
        return answer;
    }
}",,2023. 8. 29,11,1
2023. 8. 29 오전 9:13:12,조영오,Unity,27 - 행렬의 덧셈,"public class Solution {
    public int[,] solution(int[,] arr1, int[,] arr2) {
        int[,] answer = new int[arr1.GetLength(0),arr1.GetLength(1)];
        
        for(int i = 0 ; i < arr1.GetLength(0) ; i++){
            for(int j = 0 ; j < arr1.GetLength(1) ; j++){
                answer[i,j] = arr1[i,j] + arr2[i,j];
            }
        }
                                            
        
        return answer;
    }
}",,2023. 8. 29,27,1
2023. 8. 29 오전 9:13:16,이홍준,Unity,18 - 없는 숫자 더하기,"using System;

public class Solution {
    public int solution(int[] numbers) {
        int answer = -1;
        int sum = 0;
        
        for (int i = 0; i < numbers.Length; i++)
        {
            sum += numbers[i];
        }
        
        answer = 45 - sum;
        
        return answer;
    }
}",https://github.com/dlghdwns97/Study/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/86051.%E2%80%85%EC%97%86%EB%8A%94%E2%80%85%EC%88%AB%EC%9E%90%E2%80%85%EB%8D%94%ED%95%98%EA%B8%B0,2023. 8. 29,18,1
2023. 8. 29 오전 9:14:05,장성림,Unity,19 - 제일 작은 수 제거하기,"using System;
using System.Collections.Generic;
public class Solution {
    public int[] solution(int[] arr) {
        int[] answer;
        int min = Int32.MaxValue;
        int minLocation = 0;
        for (int i = 1; i < arr.Length; i++){
            if (arr[i] < min){
                min = arr[i];
                minLocation = i;
            }
        }
        List<int> intArr = new List<int>();
        for (int i = 0; i < arr.Length; i++){
            if (i == minLocation){
                continue;
            }else{
                intArr.Add(arr[i]);
            }
        }
        answer = (intArr.Count == 0)? new int [1]{-1} : intArr.ToArray();
        return answer;
    }
}",https://github.com/hoobhoob,2023. 8. 29,19,1
2023. 8. 29 오전 9:14:10,이주연,Unity,33 - 크기가 작은 부분,"#include <string>
#include <vector>

using namespace std;

int solution(string t, string p) {
    int answer = 0;
    
    int pSize = p.size();
    long long pNum = stoll(p);
    for(int i = 0; i <= t.size()-pSize; i++)
    {
        string str = t.substr(i, pSize);
        long long inputNum = stoll(str);
        
        if(inputNum <= pNum)
            answer += 1;
    }
    
    return answer;
}",,2023. 8. 29,33,2
2023. 8. 29 오전 9:14:20,신우석,Unity,35 - 시저 암호,"using System;
using System.Text;

public class Solution {
    public string solution(string s, int n) {
        StringBuilder answer = new StringBuilder();
        
        foreach (char c in s)
            if (c == ' ')
                answer.Append(c);
            else if ((c >= 'a' && c <= 'z' - n) ||  (c >= 'A' && c <= 'Z' - n))
                answer.Append(Convert.ToChar(c + n));
            else
                answer.Append(Convert.ToChar(c + n - 1 + 'a' - 'z'));
        
        return answer.ToString();
    }
}",https://github.com/seoksii/AlgorithmCodeKata/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12926.%E2%80%85%EC%8B%9C%EC%A0%80%E2%80%85%EC%95%94%ED%98%B8,2023. 8. 29,35,2
2023. 8. 29 오전 9:14:22,김명식,Unity,10 - 정수 내림차순으로 배치하기,"using System;
using System.Linq;

public class Solution {
    public long solution(long n) {
        long answer = 0;
        
        char[] chr = n.ToString().ToCharArray();
        Array.Sort(chr);
        Array.Reverse(chr);
        answer = Convert.ToInt64(new string(chr));
        
        return answer;
    }
}",https://github.com/D0ryeon/Algorithm-Code-Kata,2023. 8. 29,10,1
2023. 8. 29 오전 9:15:00,김형중,Unity,12 - 두 정수 사이의 합,"public class Solution {
    public long solution(int a, int b) {
        long answer = 0;
        
        if(a - b > 0)
        {
            for (int i = b ; i < a+1; i++)
            {
                answer += i;
            }
        }
        else if (a - b < 0)
        {
            for (int i = a; i < b+1; i++)
            {
                answer += i;
            }
        }
        else
        {
            answer = a;
        }
        
        return answer;
    }
}",,2023. 8. 29,12,1
2023. 8. 29 오전 9:15:17,박종수,Unity,5 - 나머지가 1이 되는 수 찾기,"using System;

public class Solution {
    public int solution(int n) {
        for(int x = 2;x<=n;x++)
        {
            if(n%x==1)
            {
                return x;
            }
        }
        return n;
    }
}",https://github.com/pjayas/AlgorithmCodeKata,2023. 8. 29,5,1
2023. 8. 29 오전 9:15:21,김도현B,Unity,21 - 수박수박수박수박수박수?,"public class Solution {
    public string solution(int n) {
        string answer = """";
        for(int i = 0; i < n; i++){
            answer += i % 2 == 0 ? ""수"" : ""박"";
        }
        return answer;
    }
}",https://github.com/subscriptioncat/Algorithm,2023. 8. 29,21,1
2023. 8. 29 오전 9:15:21,김예준,Unity,19 - 제일 작은 수 제거하기,"#include <vector>

using namespace std;

vector<int> solution(vector<int> arr) {
    vector<int> answer;
    int min = 2147483647;
    int index = 0;
    
    for (int i = 0; i < arr.size(); i++)
    {
        if (arr[i] < min) 
        {
            min = arr[i];
            index = i;
        }
    }
    
    arr.erase(arr.begin() + index);
    
    if (arr.size() != 0) answer = arr;
    else answer.push_back(-1);
    
    return answer;
}",,2023. 8. 29,19,1
2023. 8. 29 오전 9:15:36,최장범,Unity,13 - 콜라츠 추측,"public class Solution {
    public int solution(int num) 
    {
        long temp = num;
        int answer = 0;
        //숫자가 1이 될때까지 반복
        while(temp !=1)
        {
            ++answer;
            //조건 연산자, 숫자가 짝수면 나누기 2, 홀수면 3곱하고 1 더함
            temp = temp % 2 == 0 ? temp /2 : temp *3 +1;
            
            if(answer >500)
            {
                return -1;
            }
        }
        return answer;
    }
}",,2023. 8. 29,13,1
2023. 8. 29 오전 9:16:15,김진규,Unity,21 - 수박수박수박수박수박수?,"using System.Text;

public class Solution {
    public string solution(int n) {
        StringBuilder answer = new StringBuilder();
        char su = '수';
        char bak = '박';
        for(int i =0; i< n; i++)
        {
           char currentChar = (i % 2 == 0) ? su : bak;
           answer.Append(currentChar);
        }
        return answer.ToString();
    }
}",,2023. 8. 29,21,1
2023. 8. 29 오전 9:16:22,이주연,Unity,34 - 최소직사각형,"#include <string>
#include <vector>

using namespace std;

int solution(vector<vector<int>> sizes) {
    int answer = 0;
    int w = 0;
    int h = 0;
    //가로/세로 최대한 짧게. 긴 것 중 긴거 * 짧은 것 중 긴거
    for(int i = 0; i < sizes.size(); i++)
    {
        w = max(w, max(sizes[i][0], sizes[i][1]));
        h = max(h, min(sizes[i][0], sizes[i][1]));
    }
    answer = w*h;
    return answer;
}",,2023. 8. 29,34,2
2023. 8. 29 오전 9:16:25,이정환,Unity,14 - 서울에서 김서방 찾기,"using System;
using System.Collections.Generic;

public class Solution {
    public string solution(string[] seoul) {
        int index_Find= Array.IndexOf(seoul,""Kim"");
        string answer = $""김서방은 {index_Find}에 있다"";
        return answer;
    }
}",,2023. 8. 29,14,1
2023. 8. 29 오전 9:16:30,신현주,Unity,14 - 서울에서 김서방 찾기,"public class Solution {
    public string solution(string[] seoul) {
        string answer = """";
        int kim = 0;
        for(int i =0; i < seoul.Length ; i++){
            if(seoul[i] == ""Kim""){
                kim = i;
            }
        }
        return answer = ""김서방은 ""+ kim.ToString() + ""에 있다"";
    }
}",https://github.com/Shyunju/codTaka.git,2023. 8. 29,14,1
2023. 8. 29 오전 9:16:42,송유섭,Unity,4 - 약수의 합,"public class Solution 
{
    public int solution(int n) 
    {
        int answer = 0;
        
        for(int i = 1; i <= n; i++)
        {
            if (n % i == 0) answer += i;
        }
        return answer;
    }
}",https://github.com/SongJinx3512/codeKata/blob/main/codeKata%20lv%201%20%234%20%EC%95%BD%EC%88%98%EC%9D%98%20%ED%95%A9,2023. 8. 29,4,1
2023. 8. 29 오전 9:16:55,김진환,Unity,32 - 삼총사,"public int solution(int[] number)
        {
            int answer = 0;
            // 3중 for문
            for(int x = 0; x < number.Length;x++)
            {
                for (int y = x + 1; y < number.Length; y++)
                {
                    for (int z = y + 1; z < number.Length; z++)
                    {
                        if(number[x] + number[y] + number[z] == 0 )
                        {
                            answer++;
                        }
                    }
                }
            }

            return answer;
        }",https://github.com/NewRound/AlgorithmKata,2023. 8. 29,32,2
2023. 8. 29 오전 9:17:16,조영오,Unity,28 - 직사각형 별찍기,"using System;

public class Example
{
    public static void Main()
    {
        String[] s;

        Console.Clear();
        s = Console.ReadLine().Split(' ');

        int a = Int32.Parse(s[0]);
        int b = Int32.Parse(s[1]);

        string msg = """";
        
        for(int i = 0 ; i < a; i ++){
            msg += ""*"";
        }
        
        for(int j = 0 ; j < b; j++){
            Console.WriteLine(msg);
        }
        
        
    }
}",,2023. 8. 29,28,1
2023. 8. 29 오전 9:17:16,이선재,Unity,28 - 직사각형 별찍기,"#include <iostream>

using namespace std;

int main(void) {
    int a;
    int b;
    cin >> a >> b;
    
    for(int i = 0; i < b; i++){
        for(int j = 0; j < a; j++){
            cout << ""*"";
        }
        cout << endl;
    }
    
    return 0;
}",https://github.com/Lyrwhitt/Algorithm/blob/main/Programmers/LEVEL1/%EC%A7%81%EC%82%AC%EA%B0%81%ED%98%95%20%EB%B3%84%EC%B0%8D%EA%B8%B0,2023. 8. 29,28,1
2023. 8. 29 오전 9:17:32,박민호,Unity,21 - 수박수박수박수박수박수?,"
public class Solution {
    public string solution(int n) {
        char[] arr = new char[n];
        for(int i=0;i<n;i++){
            if(i==0){
                arr[i]='수';
            }
            else if (i%2==0){
                arr[i]='수';
            }
            else{
                arr[i]='박';
            }
        }
        string answer = new string(arr);
        return answer;
    }
}",,2023. 8. 29,21,1
2023. 8. 29 오전 9:17:37,김경환,Unity,19 - 제일 작은 수 제거하기,"using System.Collections;

public class Solution {
    public int[] solution(int[] arr) {
        if(arr.Length == 1)
            return new int[]{ -1 };
        
        ArrayList list = new ArrayList(arr);
        
        list.Sort();
        
        int[] answer = new int[arr.Length-1];
        int min = (int)list[0];
        int idx = 0;
        
        for(int i = 0; i < arr.Length; i++)
        {
            if(arr[i] != min)
                answer[idx++] = arr[i];
        }
        
        return answer;
    }
}",https://github.com/kkh9700,2023. 8. 29,19,1
2023. 8. 29 오전 9:17:54,장현교,Unity,11 - 하샤드 수,"public class Solution
{
    public bool solution(int x)
    {
        int a = 0;
        bool answer = true;
        for ( int i = x; i > 0; i /= 10)
        {
            a += i % 10;
        }
        if ( x % a != 0)
        {
            answer = false;
        }
        return answer;
    }
}",,2023. 8. 29,11,1
2023. 8. 29 오전 9:18:14,안소정,Unity,7 - 자연수 뒤집어 배열로 만들기,"public class Solution {
    public int[] solution(long n) {
        string a = n.ToString();        
        int[] answer = new int[a.Length];
        int i = 0;
        
         while (n != 0)
        {
            answer[i] = (int)(n % 10);
            n /= 10;
            i++;
        }
        return answer;
    }
}",,2023. 8. 29,7,1
2023. 8. 29 오전 9:18:21,최성원,Unity,3 - 자릿수 더하기,"#include <stdio.h>
#include <stdbool.h>
#include <stdlib.h>

int solution(int n) {
    int answer = 0;

while (n > 0)
{
    answer += n % 10;  // 마지막 자릿수를 더한다.
    n /= 10;  // 마지막 자릿수를 제거한다.
}


    return answer;
}",,2023. 8. 29,3,1
2023. 8. 29 오전 9:18:33,김진규,Unity,22 - 내적,"using System;

public class Solution {
    public int solution(int[] a, int[] b) {
        int answer = 0;
        for(int i =0; i< a.Length; i++)
        {
            answer += a[i] * b[i];
        }
        return answer;
    }
}",,2023. 8. 29,22,1
2023. 8. 29 오전 9:18:44,지민규,Unity,20 - 가운데 글자 가져오기,"public class Solution {
    public string solution(string s) {
        string answer = """";
        answer = (s.Length % 2 == 1)? s[(s.Length - 1) / 2].ToString() : s[(s.Length / 2) - 1].ToString() + s[s.Length / 2].ToString();
        return answer;
    }
}",,2023. 8. 29,20,1
2023. 8. 29 오전 9:19:45,김광수,Unity,56 - 대충 만든 자판,"using System;

public class Solution {
    //keymap에 따라서
    //targets 문자열을 만들기위해서 키를 최소몇번씩 눌러야하는지 순서대로 return
    // 만들수 없는 경우 -1
    string[] _keymap;
    string[] _targets;
    
    public int[] solution(string[] keymap, string[] targets) 
    {
        
        _keymap = keymap;
        _targets = targets;
        int[] answer = new int[_targets.Length];
        
        for(int i =0; i< _targets.Length; i++)
        {
            int count = 0;
            foreach(char c in _targets[i])
            {
                if (KeyCheck(c) != -1)
                {
                    count += KeyCheck(c);
                }
                else
                {
                    count = -1;
                    break;
                }
            }
            answer[i] = count;
        }
        
        return answer;
    }
    
    // 키하나를 체크
    public int KeyCheck(char checkKey)
    {
        // keymap을 확인하려는 key로 split했을때
        // return되는 문자열이 하나면 key가없음
        // 두개면 앞의 문자열의 길이가 index?
        // 이러면 근데 제일 앞과 제일뒤에 당첨됬을때 인식 x -> if 문 추가
        int min = int.MaxValue;
        foreach(string key in _keymap)
        {
            string[] temp = key.Split(checkKey);
            
            if(temp.Length > 1)
            {
                // 중간 어딘가.
                 min = Math.Min(temp[0].Length+1, min);
            }
            // 1보다 큰 경우를 먼저 체크해줘야됨 
            else if (key.Substring(0, key.Length-1) == temp[0])
            {
                // 제일 마지막 키일 때
                min = key.Length;
            }
            else if (key.Substring(1, key.Length-1) == temp[0])
            {
                // 제일 첫 키일 때  
                min = 1;
            }
            
        }
        
        return min == int.MaxValue ? -1 : min;
    }
}",https://github.com/kksoo0131/Study/commit/fd659e19346d4eca8277b320310000a8fba38cc6,2023. 8. 29,56,3
2023. 8. 29 오전 9:19:45,장성림,Unity,20 - 가운데 글자 가져오기,"using System;
public class Solution {
    public string solution(string s) {
        string answer = """";
        if (s.Length % 2 == 0)
            answer = s.Substring(s.Length/2 - 1, 2);
        else
            answer = s.Substring(s.Length/2, 1);
        return answer;
    }
}",https://github.com/hoobhoob,2023. 8. 29,20,1
2023. 8. 29 오전 9:19:53,노재우,Unity,10 - 정수 내림차순으로 배치하기,"public class Solution
{
    public long solution(long n)
    {
        long answer = 0;
        char[] intarr = n.ToString().ToCharArray();

        Array.Sort(intarr);
        Array.Reverse(intarr);

        answer = long.Parse(new string(intarr));
        return answer;
    }
}",,2023. 8. 29,10,1
2023. 8. 29 오전 9:19:54,김도현B,Unity,22 - 내적,"using System;

public class Solution {
    public int solution(int[] a, int[] b) {
        int answer = 0;
        for(int i = 0; i < a.Length;i++){
            answer += a[i] * b[i];
        }
        return answer;
    }
}",https://github.com/subscriptioncat/Algorithm,2023. 8. 29,22,1
2023. 8. 29 오전 9:20:01,곽민규,Unity,4 - 약수의 합,"public class Solution {
    public int solution(int n) {
        int answer = 0;
        for (int i = 1; i < n + 1; i++) {
            if (n % i == 0) {
                answer += i;
            }
        }
        return answer;
    }
}",https://github.com/kwakminkyu,2023. 8. 29,4,1
2023. 8. 29 오전 9:20:03,김민태,Unity,30 - 3진법 뒤집기,"using System;

public class Solution {
    public int solution(int n) {
        int answer=0;
        while(n>0){
            answer*=3;
            answer+=n%3;
            n/=3;
        }
        return answer;
    }
}",https://github.com/rlaalsxo/CodingTest,2023. 8. 29,30,1
2023. 8. 29 오전 9:20:20,박민호,Unity,22 - 내적,"using System;

public class Solution {
    public int solution(int[] a, int[] b) {
        int length = a.Length;
        int answer = 0;
        for(int i=0;i<length;i++){
            answer += a[i]*b[i];
        }
        return answer;
    }
}",,2023. 8. 29,22,1
2023. 8. 29 오전 9:20:27,유채연,Unity,19 - 제일 작은 수 제거하기,"public class Solution {
    public int[] solution(int[] arr) {
        int min=System.Int32.MaxValue;
        int[] answer;
        foreach(int i in arr)
        {
            if(i<min) {
                min=i;
            }
        }
        answer = System.Array.FindAll(arr, num => num != min);
        if(answer.Length==0) answer = new int[1] {-1};
        
        return answer;
    }
}",https://github.com/ychy0006/AlgorithmCodeKata,2023. 8. 29,19,1
2023. 8. 29 오전 9:20:41,김경환,Unity,20 - 가운데 글자 가져오기,"using System.Text;

public class Solution {
    public string solution(string s) {
        StringBuilder sb = new StringBuilder();
        int length = s.Length;
        
        if(length % 2 == 0)
        {
            sb.Append(s[length/2 - 1]);
            sb.Append(s[length/2]);
        }
        else
        {
            sb.Append(s[length/2]);
        }
        
        return sb.ToString();
    }
}",https://github.com/kkh9700,2023. 8. 29,20,1
2023. 8. 29 오전 9:20:48,신우석,Unity,36 - 숫자 문자열과 영단어,"using System;
using System.Text;

public class Solution {
    public int solution(string s) {
        string[] strToNum = new string[10] {""zero"", ""one"", ""two"", ""three"", ""four"", ""five"", ""six"", ""seven"", ""eight"", ""nine""};
        StringBuilder answer = new StringBuilder(s);
        for (int i = 0; i < 10; ++i)
            answer.Replace(strToNum[i], i.ToString());
        
        return Convert.ToInt32(answer.ToString());
    }
}",https://github.com/seoksii/AlgorithmCodeKata/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/81301.%E2%80%85%EC%88%AB%EC%9E%90%E2%80%85%EB%AC%B8%EC%9E%90%EC%97%B4%EA%B3%BC%E2%80%85%EC%98%81%EB%8B%A8%EC%96%B4,2023. 8. 29,36,2
2023. 8. 29 오전 9:20:57,이소이,Unity,27 - 행렬의 덧셈,"public class Solution {
    public int[,] solution(int[,] arr1, int[,] arr2) {
        int size1 = arr1.GetLength(0);
        int size2 = arr1.GetLength(1);
        int[,] answer = new int[size1, size2];
        for (int i = 0; i < size1; i++)
        {
            for (int j = 0; j < size2; j++)
                answer[i,j] = arr1[i,j] + arr2[i,j];
        }
        return answer;
    }
}",https://github.com/leesy015599/AlgorithmCodeKata/blob/master/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12950.%E2%80%85%ED%96%89%EB%A0%AC%EC%9D%98%E2%80%85%EB%8D%A7%EC%85%88/%ED%96%89%EB%A0%AC%EC%9D%98%E2%80%85%EB%8D%A7%EC%85%88.cs,2023. 8. 29,27,1
2023. 8. 29 오전 9:21:33,신우석,Unity,37 - 문자열 내 마음대로 정렬하기,"using System;

public class Solution {
    public string[] solution(string[] strings, int n)
    {
        Array.Sort(strings, (a, b) => {
            if (a[n] < b[n]) return -1;
            else if (a[n] > b[n]) return 1;
            else
                if (String.Compare(a, b) < 0) return -1;
                else if (String.Compare(a, b) > 0) return 1;
                else return 0;
        });

        return strings;
    }
}",https://github.com/seoksii/AlgorithmCodeKata/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12915.%E2%80%85%EB%AC%B8%EC%9E%90%EC%97%B4%E2%80%85%EB%82%B4%E2%80%85%EB%A7%88%EC%9D%8C%EB%8C%80%EB%A1%9C%E2%80%85%EC%A0%95%EB%A0%AC%ED%95%98%EA%B8%B0,2023. 8. 29,37,2
2023. 8. 29 오전 9:22:24,김경환,Unity,21 - 수박수박수박수박수박수?,"using System.Text;

public class Solution {
    public string solution(int n) {
        StringBuilder sb = new StringBuilder();
        
        for(int i = 0; i < n; i++)
        {
            if(i % 2 == 0)
                sb.Append('수');
            else
                sb.Append('박');
        }
        
        return sb.ToString();
    }
}",https://github.com/kkh9700,2023. 8. 29,21,1
2023. 8. 29 오전 9:22:56,박민혁,Unity,19 - 제일 작은 수 제거하기,"using System.Collections.Generic;
using System;
using System.Linq;
public class Solution {
    public int[] solution(int[] arr) {
        int[] answer;
        List<int> check= new List<int>(arr);
        int min=arr.Min();
        if(arr.Length==1)
        {
            arr[0]=-1;
            return arr;
        }
        else
        {
           check.Remove(min);
            answer=check.ToArray();
        }
            return answer;
    }
}",,2023. 8. 29,19,1
2023. 8. 29 오전 9:23:09,김경원,Unity,8 - 문자열을 정수로 바꾸기,"public class Solution {
    public int solution(string s) {
        int answer = int.Parse(s);
        return answer;
    }
}",,2023. 8. 29,8,1
2023. 8. 29 오전 9:23:13,이소이,Unity,28 - 직사각형 별찍기,"using System;

public class Example
{
    public static void Main()
    {
        String[] s;

        Console.Clear();
        s = Console.ReadLine().Split(' ');

        int a = Int32.Parse(s[0]);
        int b = Int32.Parse(s[1]);

        for (int i = 0; i < b; i++)
        {
            for (int j = 0; j < a; j++)
                Console.Write(""*"");
            Console.WriteLine();
        }
    }
}",https://github.com/leesy015599/AlgorithmCodeKata/blob/master/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12969.%E2%80%85%EC%A7%81%EC%82%AC%EA%B0%81%ED%98%95%E2%80%85%EB%B3%84%EC%B0%8D%EA%B8%B0/%EC%A7%81%EC%82%AC%EA%B0%81%ED%98%95%E2%80%85%EB%B3%84%EC%B0%8D%EA%B8%B0.cs,2023. 8. 29,28,1
2023. 8. 29 오전 9:23:13,최수용,Unity,12 - 두 정수 사이의 합,"public class Solution {
    public long solution(int a, int b) {
        long answer = 0;
        
        if(a>=b) answer = (long)(a+b)*(a-b+1)/2;
        else answer = (long)(b+a)*(b-a+1)/2;
        return answer;
    }
}",,2023. 8. 29,12,1
2023. 8. 29 오전 9:23:16,장성림,Unity,21 - 수박수박수박수박수박수?,"public class Solution {
    public string solution(int n) {
        string answer = """";
        int count = n/2;
        for (int i = 0; i < count; i++)
            answer += ""수박"";
        if (n % 2 == 1)
            answer += ""수"";
        return answer;
    }
}",https://github.com/hoobhoob,2023. 8. 29,21,1
2023. 8. 29 오전 9:23:34,김경환,Unity,22 - 내적,"using System;

public class Solution {
    public int solution(int[] a, int[] b) {
        int answer = 0;
        
        for(int i = 0; i < a.Length; i++)
        {
            answer += (a[i] * b[i]);
        }
        
        return answer;
    }
}",https://github.com/kkh9700,2023. 8. 29,22,1
2023. 8. 29 오전 9:23:39,우민규,Unity,13 - 콜라츠 추측,"public class Solution {
    public int solution(int num) {
         
        //각 변수의 long int 정의에서 조금 실수가 있었다.
        long num2 = num ;
        int answer = 0;
        
        while(num2 != 1)
        {
            ++answer;
            
            if(num2 % 2 == 0)
                num2 = num2 / 2;
            else
                num2 = num2 * 3 + 1 ;
            
            
            
            if (answer >= 500)
                return -1; // 500번 이상 반복하면 -1을 반환
        }

        
        return answer;
    }
}",https://github.com/Woomingyu/Programmers.git,2023. 8. 29,13,1
2023. 8. 29 오전 9:23:56,임전혁,Unity,33 - 크기가 작은 부분,"using System;

public class Solution {
    public int solution(string t, string p) {
        int answer = 0;
        
        int tLength = t.Length;
        int pLength = p.Length;
        int length = t.Length - p.Length + 1;
        
        long pNum = long.Parse(p);
        
        for (int i = 0; i < length; i++)
        {
            long tempNum = long.Parse(t.Substring(i, pLength));
            
            if (tempNum <= pNum)
                answer++;
        }
        return answer;
    }
}",https://github.com/yarogono/Algorithm_CSharp/blob/master/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/unrated/147355.%E2%80%85%ED%81%AC%EA%B8%B0%EA%B0%80%E2%80%85%EC%9E%91%EC%9D%80%E2%80%85%EB%B6%80%EB%B6%84%EB%AC%B8%EC%9E%90%EC%97%B4/%ED%81%AC%EA%B8%B0%EA%B0%80%E2%80%85%EC%9E%91%EC%9D%80%E2%80%85%EB%B6%80%EB%B6%84%EB%AC%B8%EC%9E%90%EC%97%B4.cs,2023. 8. 29,33,2
2023. 8. 29 오전 9:23:56,이정환,Unity,15 - 나누어 떨어지는 숫자,"using System.Collections.Generic;
using System;

public class Solution {
    public int[] solution(int[] arr, int divisor) {
        int[] answer = Array.FindAll(arr,num=>num%divisor==0);
        Array.Sort(answer);
        if(answer.Length==0){
            int[] answer2={-1};
             return answer2;
        }

        return answer;
    }
}",,2023. 8. 29,15,1
2023. 8. 29 오전 9:24:07,장현교,Unity,12 - 두 정수 사이의 합,"public class Solution
{
    public int solution(int a, int b)
    {
        int answer = 0;
        if (a > b)
        {
            int c = a;
            a = b;
            b = c;
        }
        for (int i = a; i <= b; i++)
        {
            answer += i;
        }
        return answer;
    }
}",,2023. 8. 29,12,1
2023. 8. 29 오전 9:24:08,김어진,Unity,10 - 정수 내림차순으로 배치하기,"using System;
public class Solution {
    public long solution(long n) {
        long answer = 0;
        char[] m = n.ToString().ToCharArray();
        Array.Sort(m);
        Array.Reverse(m);
        answer = long.Parse(m);
        return answer;
    }
}",https://github.com/KimEoJin24/ProgrammersCodingTests/commit/4d83eb68e46dc437d6197be4d938e579f2e2036c,2023. 8. 29,10,1
2023. 8. 29 오전 9:24:10,지민규,Unity,21 - 수박수박수박수박수박수?,"public class Solution {
    public string solution(int n) {
        string answer = """";
        for (int i = 0; i < n / 2; i++)
        {
            answer += ""수박"";
        }
        answer += (n % 2 == 1) ? ""수"":"""";
        return answer;
    }
}",,2023. 8. 29,21,1
2023. 8. 29 오전 9:25:06,김호연,Unity,16 - 음양 더하기,"using System;

public class Solution 
{
    public int solution(int[] absolutes, bool[] signs) 
    {
        int answer = 0;

        for (int i = 0; i < absolutes.Length; i++)
        {
            if (signs[i] == true)
            {
                answer += absolutes[i];
            }
            else
            {
                answer -= absolutes[i];
            }
        }

        return answer;
    }
}",,2023. 8. 29,16,1
2023. 8. 29 오전 9:25:11,최장범,Unity,14 - 서울에서 김서방 찾기,"using System;
public class Solution {
    public string solution(string[] seoul) 
    {
        //Array.Indexof(매개변수1, 매개변수2)사용, 1에는 탐색할배열 2에는 찾는 문자열
        return new string($""김서방은 {Array.IndexOf(seoul, ""Kim"")}에 있다"");
    }
}",,2023. 8. 29,14,1
2023. 8. 29 오전 9:25:27,손병의,Unity,11 - 하샤드 수,"using System;

public class Solution 
{
    public bool solution(int x) 
    {
        bool answer = true;
        
        string str = x.ToString();
        int sum =0;
        for(int i = 0; i < str.Length; i++)
        {
            sum += int.Parse(str[i].ToString());
        }
        if(x % sum == 0)
        {
            answer = true;
        }
        else
        {
            answer = false;
        }
        
        
        return answer;
    }
}",https://github.com/Son-BE/CodeKata1,2023. 8. 29,11,1
2023. 8. 29 오전 9:25:41,박민호,Unity,23 - 약수의 개수와 덧셈,"using System;

public class Solution {
    public int solution(int left, int right) {
        int answer = 0;
        for (int i=left;i<=right;i++){
            int count=0;
            for(int j=1;j<=i;j++){
                if(i%j==0){
                    count++;
                }
            }
            if (count%2==0){
                answer+=i;
            }
            else{
                answer-=i;
            }
        }
        return answer;
    }
}",,2023. 8. 29,23,1
2023. 8. 29 오전 9:25:52,김경환,Unity,23 - 약수의 개수와 덧셈,"using System;

public class Solution {
    public int solution(int left, int right) {
        int answer = 0;
        
        for(int i = left; i <= right; i++)
        {
            int num = 0;
            
            for(int j = 1; j <= i; j++)
            {
                if(i % j == 0)
                    num++;
            }
            
            if(num % 2 == 0)
                answer += i;
            else
                answer -= i;
        }
        
        return answer;
    }
}",https://github.com/kkh9700,2023. 8. 29,23,1
2023. 8. 29 오전 9:25:59,김진규,Unity,23 - 약수의 개수와 덧셈,"using System;

public class Solution {
    public int solution(int left, int right) {
        int answer = 0;
        for(int i =left; i<=right; i++)
            if(Math.Pow((int)Math.Sqrt(i), 2) == i) {
                answer -= i;
            } else {
                answer += i;
            }
        return answer;
    }
}",,2023. 8. 29,23,1
2023. 8. 29 오전 9:25:59,김예준,Unity,20 - 가운데 글자 가져오기,"#include <string>
#include <vector>

using namespace std;

string solution(string s) {
    string answer = """";
    
    int len = s.size();
    
    if (len % 2 == 1)
    {
        answer = s[len / 2];
    }
    else
    {
        answer = s.substr(len / 2 - 1, 2);
    }
    
    return answer;
}",,2023. 8. 29,20,1
2023. 8. 29 오전 9:26:11,어하림,Unity,3 - 자릿수 더하기,"int solution(int n)
{
int answer = 0;
while(n>0)
{
 n +=n%10;
n = n/10;
}
return answer;
}",,2028. 8. 29,3,1
2023. 8. 29 오전 9:26:23,장성림,Unity,22 - 내적,"using System;

public class Solution {
    public int solution(int[] a, int[] b) {
        int answer = 1234567890;
        long sum = 0;
        for (int i = 0; i < a.Length; i++)
            sum += (a[i] * b[i]);
        return answer = (int)sum;
    }
}",https://github.com/hoobhoob,2023. 8. 29,22,1
2023. 8. 29 오전 9:26:24,차요한,Unity,23 - 약수의 개수와 덧셈,"using System;

public class Solution {
    public int solution(int left, int right) {
        int answer = 0;
        int count =0;
        
        for(int i=left ;i <=right; i++)
        {
            for(int j = 1 ; j <= i ; j++)
            {
                if((i%j)==0)
                {
                    count++;
                }
            }
            
            if(count%2==0)
            {
                answer+=i;
            }
            else
            {
                answer-=i;
            }
            count=0;
        }
        return answer;
    }
}",https://github.com/HOHOJO/Algorithm_test,2023. 8. 29,23,1
2023. 8. 29 오전 9:26:35,이도현,Unity,5 - 나머지가 1이 되는 수 찾기,"using System;

public class Solution {
    public int solution(int n) {
        int num = n-1;
        for(int i=2; i<num; ++i)
            if(num%i==0)
                return i;
        return answer;
    }
}",,2023. 8. 29,5,1
2023. 8. 29 오전 9:26:45,한병권,Unity,38 - K번째수정렬,"using System;
using System.Linq;
using System.Collections.Generic;

public class Solution {
    public int[] solution(int[] array, int[,] commands) {
        int[] answer = new int[commands.GetLength(0)];
        
        for (int i = 0; i < commands.GetLength(0); i++)
        {
            int n = commands[i,0];
            int m = commands[i,1];
            int l = commands[i,2];
            
            List<int> temp = new List<int>();
            for (int j = 0; j < m; j++)
            {
                if(j+1 >= n)
                {
                    temp.Add(array[j]);
                }
            }
            temp = temp.OrderBy(k=>k).ToList();
            answer[i] = temp[l-1];
        }
        return answer;
    }
}",https://github.com/hbg9212/AlgorithmCodekata,2023. 8. 29,38,2
2023. 8. 29 오전 9:26:57,이현지,Unity,19 - 제일 작은 수 제거하기,"using System.Collections.Generic;

public class Solution 
{
    public int[] solution(int[] arr) 
    {
        int[] answer;
        List<int> nums = new List<int>();
        for (int i = 0; i < arr.Length; i++)
        {
            int count = 0;
            for (int j = 0; j < arr.Length; j++)
            {
                if (i == j) continue;
                if (arr[i] > arr[j]) ++count;
            }
            if (count != 0) nums.Add(arr[i]);
        }
        
        if(arr.Length == 1) answer = new int[] {-1};
        else answer = nums.ToArray();
        return answer;
    }
}",https://github.com/szlovelee/Programmers-Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1,2023. 8. 29,19,1
2023. 8. 29 오전 9:28:08,신현,Unity,15 - 나누어 떨어지는 숫자,"using System.Collections.Generic;
public class Solution {
    public int[] solution(int[] arr, int divisor) {
        List<int> div = new List<int>();
        
        foreach( var item in arr){
            if( item % divisor == 0){
                div.Add(item);
            }
        }
        if( div.Count == 0){
            div.Add(-1);
        }else{
            div.Sort();
        }
        return div.ToArray();
    }
}",https://github.com/Shyunju/codTaka.git,2023. 8. 29,15,1
2023. 8. 29 오전 9:28:24,김하늘,Unity,13 - 콜라츠 추측,"public class Solution 
{
    public int solution(long num) 
    {
        int answer = 0;
        while (num != 1 && answer < 500)
        {
            if (num % 2 == 0) num /= 2;
            else num = num * 3 + 1;

            answer++;
        }
        if (answer >= 500) return -1;
        return answer;
    }
}",,2023. 8. 29,13,1
2023. 8. 29 오전 9:28:28,박민호,Unity,24 - 문자열 내림차순으로 배치하기,"using System;
public class Solution {
    public string solution(string s) {
        char[] arr = s.ToCharArray();
        Array.Sort(arr);
        Array.Reverse(arr);
        string answer = new string(arr);
        return answer;
    }
}",,2023. 8. 29,24,1
2023. 8. 29 오전 9:28:46,김경원,Unity,9 - 정수 제곱근 판별,"using System;

public class Solution {
    public long solution(long n) {
        long sqrt = (long)Math.Sqrt(n);

        if (sqrt * sqrt == n) {
            return (sqrt + 1) * (sqrt + 1);
        } else {
            return -1;
        }
    }
}",,2023. 8. 29,9,1
2023. 8. 29 오전 9:29:05,김경환,Unity,24 - 문자열 내림차순으로 배치하기,"using System.Linq;

public class Solution {
    public string solution(string s) {
        return string.Concat(s.OrderByDescending(ch => ch));
    }
}",https://github.com/kkh9700,2023. 8. 29,24,1
2023. 8. 29 오전 9:29:11,김해찬,Unity,79 - 할인 행사,"using System;
using System.Collections;
using System.Collections.Generic;

public class Solution {
    public int solution(string[] want, int[] number, string[] discount) {
        int answer = 0;
        Dictionary<string, int> dic = new Dictionary<string, int>();
        
        for(int i = 0; i < want.Length; i++)
        {
            dic.Add(want[i], number[i]);
        }
        
        for(int i = 0; i <= discount.Length - 10; i++)
        {
            Dictionary<string, int> temp = new Dictionary<string, int>();
            
            for(int j = 0; j < 10; j++)
            {
                string discnt = discount[i + j];
                
                int cnt = temp.GetValueOrDefault(discnt);
                cnt++;
                temp[discnt] = cnt;
            }
            
            bool trigger = true;
        
            foreach(KeyValuePair<string, int> element in dic)
            {
                int wantCnt = element.Value;
                int disCnt = temp.GetValueOrDefault(element.Key);
                
                if(wantCnt > disCnt)
                {
                    trigger = false;
                    break;
                }
            }
            
            if(trigger == true)
            {
                answer++;
            }
        }
        
        return answer;
    }
}",,2023. 8. 29,79,3
2023. 8. 29 오전 9:29:19,이성,Unity,4 - 약수의 합,"public class Solution {
    public int solution(int n) {
        int answer = 0;
        
        //1부터 n까지 반복하여 n을 i로 나눈 나머지가 0이면
        //n의 약수이다.
        for(int i = 1; i<=n; i++)
        {
            if(n%i==0) answer += i;
        }
        return answer;
    }
}",https://github.com/,2023. 8. 29,4,1
2023. 8. 29 오전 9:29:23,김예준,Unity,21 - 수박수박수박수박수박수?,"#include <string>

using namespace std;

string solution(int n) {
    string answer = """";
    
    for (int i = 0; i < n; i++)
    {
        if (i % 2 == 0) answer += ""수"";
        else answer += ""박"";
    }
    
    return answer;
}",,2023. 8. 29,21,1
2023. 8. 29 오전 9:29:45,김형중,Unity,13 - 콜라츠 추측,"public class Solution {
    public int solution(int num) {
        int answer = 0;
        long temp = num;
        for(int i = 0; i <= 500; i++)
        {
            if(temp == 1)
            {
                return i;
            }
            temp = temp % 2 == 0 ? temp / 2 : temp * 3 + 1;
        }
        answer = -1;
        return answer;
    }
}",,2023. 8. 29,13,1
2023. 8. 29 오전 9:29:51,유채연,Unity,20 - 가운데 글자 가져오기,"        char[] arr = s.ToCharArray();
        char[] ansarr;
        if(arr.Length%2==0){
            ansarr = new char[2];
            ansarr[0]=arr[arr.Length/2-1];
            ansarr[1]=arr[arr.Length/2];
        }
        else{
            ansarr = new char[1] {arr[(arr.Length-1)/2]};
        }
        arr = ansarr; 
        string answer = new string(arr);
        return answer;",https://github.com/ychy0006/AlgorithmCodeKata,2023. 8. 29,20,1
2023. 8. 29 오전 9:30:06,이경현,Unity,11 - 하샤드 수,"public static bool solution(int x)
{
    int _x = x;
    int sum = 0;

    for(int i = 0; i < _x.ToString().Length; i++)
    {
        sum += x % 10;
        x /= 10;
    }

    if (_x % sum == 0) return true;
    return false;


}",https://github.com/516lkh/Algorithm,2023. 8. 29,11,1
2023. 8. 29 오전 9:30:08,지민규,Unity,22 - 내적,"using System;
using System.Linq;

public class Solution {
    public int solution(int[] a, int[] b) {
        return a.Select((t, idx) => b[idx] * t).Sum();
    }
}",,2023. 8. 29,22,1
2023. 8. 29 오전 9:30:31,이경현,Unity,12 - 두 정수 사이의 합,"public static long solution(int a, int b)
{
    long answer = a;
    while (a != b)
    {
        a = a > b ? a - 1 : a + 1;
        answer += a;
    }
    return answer;
}",https://github.com/516lkh/Algorithm,2023. 8. 29,12,1
2023. 8. 29 오전 9:30:35,노재우,Unity,11 - 하샤드 수,"public class Solution
{
    public bool solution(int x)
    {
        bool answer = false;
        string intArr = x.ToString();
        int sum = 0;

        foreach (var item in intArr)
        {
            sum += int.Parse(item.ToString());
        }
        if (x%sum ==0)
        {
            answer = true;
            return answer;
        }

        return answer;
    }
}
",,2023. 8. 29,11,1
2023. 8. 29 오전 9:30:35,장성림,Unity,23 - 약수의 개수와 덧셈,"using System;

public class Solution {
    public int solution(int left, int right) {
        int answer = 0;
        for (int i = left; i <= right; i++){
            int count = 0;
            for (int j = 1; j <= i; j++){
                if(i % j == 0)
                    count++;
            }
            if (count % 2 == 0)
                answer += i;
            else
                answer -= i;
        }
        return answer;
    }
}",https://github.com/hoobhoob,2023. 8. 29,23,1
2023. 8. 29 오전 9:30:36,송유섭,Unity,5 - 나머지가 1이 되는 수 찾기,"using System;

public class Solution 
{
    public int solution(int n)
    {
        for(int i = 1; i < n; i++)
        {
            if (n % i == 1)
                return i;
        }
        return -1;
    }
}",https://github.com/SongJinx3512/codeKata/blob/main/codeKata%20lv%201%20%235%20%EB%82%98%EB%A8%B8%EC%A7%80%EA%B0%80%201%EC%9D%B4%20%EB%90%98%EB%8A%94%20%EC%88%98%20%EC%B0%BE%EA%B8%B0,2023. 8. 29,5,1
2023. 8. 29 오전 9:30:42,이형빈,Unity,7 - 자연수 뒤집어 배열로 만들기,"public class Solution {
    public int[] solution(long n) 
    {
        string num = n.ToString();
        int[] answer = new int[num.Length] ;
        
        for(int i = 0; i<num.Length; i++)
        {
            answer[i] = num[num.Length-1-i]-48;
            
        }
        
        return answer;
    }
}",,2023. 8. 29,7,1
2023. 8. 29 오전 9:30:55,이경현,Unity,13 - 콜라츠 추측,"public static int solution(int num)
{
    for(int i=0; i < 500; i++)
    {
        if (num == 1) return i;
        num = (num % 2 == 0) ? num / 2 : num * 3 + 1;
    }

    return -1;
}",https://github.com/516lkh/Algorithm,2023. 8. 29,13,1
2023. 8. 29 오전 9:30:57,김경환,Unity,25 - 부족한 금액 계산하기,"using System;

class Solution
{
    public long solution(int price, int money, int count)
    {
        long total = 0;
        
        for(int i = 1; i <= count; i++)
        {
            total += price * i;
        }
        
        return total > money ? total - money : 0;
    }
}",https://github.com/kkh9700,2023. 8. 29,25,1
2023. 8. 29 오전 9:30:58,양수홍,AI,31 - 이상한 문자 만들기,"def solution(s):
    answer = []
    words=s.split(' ')
    for word in words:
        modified_word = """"
        for i in range(len(word)):
            if i%2==0:
                modified_word+=f""{word[i].upper()}""
            else :
                modified_word += f""{word[i].lower()}""
        answer.append(modified_word)
    return (' '.join(answer))",,2023. 8. 29,31,2
2023. 8. 29 오전 9:31:26,김명식,Unity,11 - 하샤드 수,"using System;

public class Solution {
    public bool solution(int x) {
        bool answer = false;
        int sum=0;
        char[] chr= x.ToString().ToCharArray();
        for(int i =0; i<chr.Length; i++){
            sum += Int32.Parse(chr[i].ToString());
        }
        if(x%sum==0){
            answer= true;
        }
        return answer;
    }
}",https://github.com/D0ryeon/Algorithm-Code-Kata/tree/main,2023. 8. 29,11,1
2023. 8. 29 오전 9:31:30,배인호,Unity,31 - 이상한 문자 만들기,"using System;

public class Solution
{
    public string solution(string s)
    {
        string answer = """";
        char[] array = s.ToCharArray();
        int index = 0;

        int length = array.Length;

        for (int i = 0; i < length; i++)
        {
            if (array[i] != ' ')
            {
                if (index % 2 == 0)
                {
                    array[i] = Char.ToUpper(array[i]);
                }
                else
                {
                    array[i] = Char.ToLower(array[i]);
                }
                index++;
            }
            else
            {
                index = 0;
            }
        }

        answer = new string(array);

        return answer;
    }
}
",https://github.com/cutlake2000/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12930.%E2%80%85%EC%9D%B4%EC%83%81%ED%95%9C%E2%80%85%EB%AC%B8%EC%9E%90%E2%80%85%EB%A7%8C%EB%93%A4%EA%B8%B0,2023. 8. 29,31,2
2023. 8. 29 오전 9:31:31,이정환,Unity,16 - 음양 더하기,"using System;

public class Solution {
    public int solution(int[] absolutes, bool[] signs) {
         int sum=0;
        for(int i=0; i<signs.Length;i++){
            int num=absolutes[i];

            if(!signs[i]){
               num *= -1;
            }
            sum += num;            
        }

        int answer =sum;
        return answer;
    ",,2023. 8. 29,16,1
2023. 8. 29 오전 9:31:42,이선재,Unity,29 - 최대공약수와 최소공배수,"#include <string>
#include <vector>

using namespace std;

vector<int> solution(int n, int m) {
    // 유클리드 알고리즘 풀이
    
    vector<int> answer;
    
    int a = n;
    int b = m;
    int c = 0;
    
    while(b != 0){
        c = a % b;
        a = b;
        b = c;
    }
    
    answer.push_back(a);
    answer.push_back(n*m / a);
    
    return answer;
}",https://github.com/Lyrwhitt/Algorithm/blob/main/Programmers/LEVEL1/%EC%B5%9C%EB%8C%80%EA%B3%B5%EC%95%BD%EC%88%98%EC%99%80%20%EC%B5%9C%EC%86%8C%EA%B3%B5%EB%B0%B0%EC%88%98,2023. 8. 29,29,1
2023. 8. 29 오전 9:32:10,차요한,Unity,24 - 문자열 내림차순으로 배치하기,"using System;
using System.Linq;
public class Solution {
    public string solution(string s) {
        string answer = """";
        answer=string.Concat(s.OrderByDescending(x => x));
        return answer;
    }
}",https://github.com/HOHOJO/Algorithm_test,2023. 8. 29,24,1
2023. 8. 29 오전 9:32:59,신현주,Unity,16 - 음양 더하기,"using System;

public class Solution {
    public int solution(int[] absolutes, bool[] signs) {
        int answer = 0;
        for(int i =0 ; i < signs.Length; i++){
            if(signs[i]){
                answer += absolutes[i];
            }else{
                answer += absolutes[i] * -1;
            }
        }
        return answer;
    }
}",https://github.com/Shyunju/codTaka.git,2023. 8. 29,16,1
2023. 8. 29 오전 9:33:17,손,Unity,12 - 두 정수 사이의 합,"public class Solution 
{
    public long solution(int a, int b) 
    {
        long answer = 0;
        if (a==b)
        {
            answer = b;
            return answer;
        }
        
        int first = 0;
        int last  = 0;
        
        if(a>b)
        {
            first = b;
            last = a;
        }
        else
        {
            first = a;
            last = b;
        }
        for(int i = first; i <= last; i++)
        {
            answer += i;
        }
        
        return answer;
    }
}",https://github.com/Son-BE/CodeKata1,2023. 8. 29,12,1
2023. 8. 29 오전 9:33:33,정재훈,Unity,7 - 자연수 뒤집어 배열로 만들기,"using System;
using System.Linq;


public class Solution {
    public int[] solution(long n) {
       string number = n.ToString();
        
        int numberlength = number.Length;
        
        int[] answer = new int[numberlength];
        
        for(int i = 0; i < numberlength; i++)
        {
            answer[i] = int.Parse(number.Substring(i, 1));
        }
        Array.Reverse(answer);
        return answer;



    }
}",https://github.com/toadsam/Algorithm,2023. 8. 29,7,1
2023. 8. 29 오전 9:33:56,기현빈,Unity,21 - 수박수박수박수박수박수?,"public class Solution {
    public string solution(int n) {
        char[] charArray = new char[n];
        
        for(int i = 0; i < n; i++) {
            if(i % 2 == 0) charArray[i] = '수';
            else charArray[i] = '박';
        }
        
        return new string(charArray);
    }
}",,2023. 8. 29,21,1
2023. 8. 29 오전 9:34:12,이현지,Unity,20 - 가운데 글자 가져오기,"public class Solution 
{
    public string solution(string s) 
    {
        string answer = """";
        if(s.Length % 2 == 0)
        {
            answer = string.Format($""{s[s.Length / 2 - 1]}{s[s.Length / 2]}"");
        }
        else 
        {
            answer = s[(s.Length - 1) / 2].ToString();
        }
        
        return answer;
    }
}",https://github.com/szlovelee/Programmers-Algorithm,2023. 8. 29,20,1
2023. 8. 29 오전 9:34:22,장성림,Unity,24 - 문자열 내림차순으로 배치하기,"using System;
public class Solution {
    public string solution(string s) {
        string answer = """";
        Char[] tmp = s.ToCharArray();
        Array.Sort(tmp);
        Array.Reverse(tmp);
        answer += new string(tmp);
        return answer;
    }
}",https://github.com/hoobhoob,2023. 8. 29,24,1
2023. 8. 29 오전 9:34:47,이선재,Unity,30 - 3진법 뒤집기,"#include <string>
#include <vector>
#include <cmath>

using namespace std;

int solution(int n) {
    int answer = 0;
    
    vector<int>samzin;
    
    while(n > 0)
    {
        samzin.push_back(n % 3);
        n /= 3;
    }
    
    for(int i = 0; i < samzin.size(); i++)
    {   
        answer += samzin[(samzin.size()-1) - i] * pow(3, i);
    }
    
    return answer;
}",https://github.com/Lyrwhitt/Algorithm/blob/main/Programmers/LEVEL1/3%EC%A7%84%EB%B2%95%20%EB%92%A4%EC%A7%91%EA%B8%B0,2023. 8. 29,30,1
2023. 8. 29 오전 9:35:13,김명식,Unity,12 - 두 정수 사이의 합,"public class Solution {
    public long solution(int a, int b) {
        long answer = 0;
        if(a<b){
            for(int i=a; i<=b; i++){
                answer+= i;
            }
        }else{
            for(int i=b; i<=a; i++){
                answer+= i;
            }
        }
        
        return answer;
    }
}",https://github.com/D0ryeon/Algorithm-Code-Kata/tree/main,2023. 8. 29,12,1
2023. 8. 29 오전 9:35:50,최수용,Unity,13 - 콜라츠 추측,"public class Solution {
    public int solution(int num) {

        int count = 0;
        long temp = (long)num;
        while (count < 500){
            if (temp == 1) break;
            count++;
            if(temp%2 == 0){
                temp /= 2;
            }else{
                temp = temp*3 +1;
            }
        }
        if ( count == 500) return -1;       
        return count;
    }
}",,2023. 8. 29,13,1
2023. 8. 29 오전 9:35:54,김경환,Unity,26 - 문자열 다루기 기본,"using System;

public class Solution {
    public bool solution(string s) {
        if(!(s.Length == 4 || s.Length == 6))
            return false;
        
        foreach(char ch in s)
        {
            if(ch < '0' || ch > '9')
                return false;
        }
        
        return true;
    }
}",https://github.com/kkh9700,2023. 8. 29,26,1
2023. 8. 29 오전 9:36:24,김강현,Unity,8 - 문자열을 정수로 바꾸기,https://school.programmers.co.kr/learn/courses/30/lessons/12925,,2023. 8. 29,8,1
2023. 8. 29 오전 9:36:43,노재우,Unity,12 - 두 정수 사이의 합,"public class Solution
{
    public long solution(int a, int b)
    {
        if (a == b)
            return a;

        long answer = 0;

        if (a > b)
        {
            answer +=a;
            for (int i = 0; i < a-b; i++)
            {
                answer += b + i;
            }
        }
        else if (a < b) 
        {
            answer += +b;
            for (int i = 0; i < b - a; i++)
            {
                answer += a + i;
            }
        }

        return answer;
    }
}",,2023. 8. 29,12,1
2023. 8. 29 오전 9:37:06,김예준,Unity,22 - 내적,"#include <vector>

using namespace std;

int solution(vector<int> a, vector<int> b) {
    int answer = 0;
    
    for (int i = 0; i < a.size(); i++)
    {
        answer += a[i] * b[i];
    }
    
    return answer;
}",,2023. 8. 29,22,1
2023. 8. 29 오전 9:37:11,이세진,Unity,12 - 두 정수 사이의 합,"public class Solution {
    public long solution(int a, int b) {
        long answer = 0;
        
        if(a < b)
        { 
            for(int i = a ; i <= b ; i++)
            {
                answer +=i;
            }
        }
        else if(a > b)
        { 
            for(int i = b ; i <= a ; i++)
            {
                answer +=i;
            }
        }
        else
        {
            answer = a;
        }
        
        
        return answer;
    }
}",,2023. 8. 29,12,1
2023. 8. 29 오전 9:37:23,기현반,Unity,22 - 내적,"public class Solution {
    public int solution(int[] a, int[] b) {
        int answer = 0;
        for(int i = 0; i < a.Length; i++) {
            answer += a[i] * b[i];
        }
        return answer;
    }
}",,2023. 8. 29,22,1
2023. 8. 29 오전 9:37:28,김진규,Unity,24 - 문자열 내림차순으로 배치하기,"using System;
public class Solution {
    public string solution(string s) {
        char[] charArray = s.ToCharArray();
        Array.Sort(charArray);
        Array.Reverse(charArray);
        string answer = new string(charArray);
        return answer;
    }
}",,2023. 8. 29,24,1
2023. 8. 29 오전 9:37:45,김호연,Unity,17 - 핸드폰 번호 가리기,"public class Solution {
    public string solution(string phone_number) {
         
        string answer = phone_number.Substring(phone_number.Length - 4).PadLeft(phone_number.Length, '*');
        return answer;
    }
}",,2023. 8. 29,17,1
2023. 8. 29 오전 9:38:01,안소정,Unity,12 - 두 정수 사이의 합,"public class Solution {
    public long solution(int a, int b) {
        long answer = 0;
        //작은 값
        int min = (a < b) ? a : b;
        //큰값
        int max = (a < b) ? b : a;
        
        for (int i = min; i <= max; i ++)
            answer += i;
        return answer;
    }
}",,2023. 8. 29,12,1
2023. 8. 29 오전 9:38:03,우민규,Unity,14 - 서울에서 김서방 찾기,"public class Solution {
    public string solution(string[] seoul) {
        string answer = """";
        
        for(int i = 0; i < seoul.Length; i++)
        {
            if(seoul[i] == ""Kim"")
            {
                return $""김서방은 {i}에 있다"";
            }
        }
        
        return """";
    }
}",https://github.com/Woomingyu/Programmers.git,2023. 8. 29,14,1
2023. 8. 29 오전 9:38:14,김어진,Unity,11 - 하샤드 수,"using System;
public class Solution {
    public bool solution(int x) {
        bool answer = true;
        char[] y = x.ToString().ToCharArray();
        int sum = 0;
        for (int i=0; i<y.Length; i++){
            sum += (int)Char.GetNumericValue(y[i]);
        }
        if(x%sum==0){
            answer = true;
        }
        else{
            answer = false;
        }
        return answer;
    }
}",https://github.com/KimEoJin24/ProgrammersCodingTests/commit/e54b79e14cc5452cb9498daf74ee9d28220156c5,2023. 8. 29,11,1
2023. 8. 29 오전 9:38:18,이경현,Unity,14 - 서울에서 김서방 찾기,"public string solution(string[] seoul)
{
    for(int i = 0;i < seoul.Length; i++)
    {
        if (seoul[i] == ""Kim"") return ""김서방은 "" + i.ToString() + ""에 있다"";
    }

    return """";
}",https://github.com/516lkh/Algorithm,2023. 8. 29,14,1
2023. 8. 29 오전 9:38:25,박민혁,Unity,20 - 가운데 글자 가져오기,"public class Solution {
    public string solution(string s) {
        string answer = """";
        if(s.Length%2==0)
        {
            answer=s.Substring(s.Length/2-1,2);
        }
        else
        {
            answer=s.Substring(s.Length/2,1);
        }

        return answer;
    }
}",,2023. 8. 29,20,1
2023. 8. 29 오전 9:38:48,박민호,Unity,25 - 부족한 금액 계산하기,"using System;

class Solution
{
    public long solution(int price, long money, int count)
    {
        for(int i=1;i<=count;i++){
            money -= price*i;
        }
        long notEnough = 0;
        if(money<0){
            notEnough = money*(-1);
        }

        return notEnough;
    }
}",,2023. 8. 29,25,1
2023. 8. 29 오전 9:39:45,이현지,Unity,21 - 수박수박수박수박수박수?,"using System.Text;

public class Solution 
{
    public string solution(int n) 
    {
        string answer = """";
        StringBuilder temp = new StringBuilder();
        for (int i = 0; i < n; i++)
        {
            if(i % 2 == 0) temp.Append(""수"");
            else temp.Append(""박"");
        }
        
        answer = temp.ToString();
        return answer;
    }
}",https://github.com/szlovelee/Programmers-Algorithm,2023. 8. 29,21,1
2023. 8. 29 오전 9:39:50,김하늘,Unity,14 - 서울에서 김서방 찾기,"public class Solution 
{
    public string solution(string[] seoul) 
    {
        string answer = """";
        for (int i = 0; i < seoul.Length; i++)
            if (seoul[i] == ""Kim"") answer = $""김서방은 {i}에 있다"";

        return answer;
    }
}",,2023. 8. 29,14,1
2023. 8. 29 오전 9:39:51,한병권,Unity,39 - 두 개 뽑아서 더하기,"using System;
using System.Linq;
using System.Collections.Generic;

public class Solution {
    public int[] solution(int[] numbers) {
        List<int> answerList = new List<int>();
        for(int i = 0; i < numbers.Length; i++)
        {
            for(int j = i+1; j < numbers.Length; j++)   
            {
                answerList.Add(numbers[i]+numbers[j]);
            }
        }
        answerList = answerList.Distinct().ToList();
        answerList = answerList.OrderBy(i=>i).ToList();
        int[] answer = answerList.ToArray();
        return answer;
    }
}",https://github.com/hbg9212/AlgorithmCodekata,2023. 8. 29,39,2
2023. 8. 29 오전 9:39:56,서재민,Unity,4 - 약수의 합,"public class Solution
    {
        public int solution(int n)
        {
            int answer = 0;
            
            for (int i = 1; i <= n/2; i++)
            {
                if (n % i == 0)
                {
                    answer += i;
                }
            }
            return answer + n;
        }
    }",https://github.com/SeoJaeMin619/algorithm,2023. 8. 29,4,1
2023. 8. 29 오전 9:41:03,박민혁,Unity,21 - 수박수박수박수박수박수?,"public class Solution {
    public string solution(int n) {
        string answer = """";
        for(int i=0;i<n/2;++i)
        {
            answer+=""수박"";
        }
        if(n%2==1)
        {
         answer+=""수"" ;  
        }
        return answer;
    }
}",,2023. 8. 29,21,1
2023. 8. 29 오전 9:41:03,김광수,Unity,57 - 둘만의 암호,"using System;

public class Solution {
    // 입력받은 문자열 s의 각 자리를 index 만큼 뒤로 밀어줌
    // skip에 있는 알파벳은 제외
    
    public string Skip {get;set;}
    
    public string solution(string s, string skip, int index) {
        Skip = skip;
        string answer = """";
        
        foreach(char c in s)
        {
            answer += PushAlphabet(c,index);
        }
        return answer;
    }
    // 소문자 아스키 코드 범위는 97~122, 123부터는 -26
    public char PushAlphabet(char target,int count)
    {
        int temp = (int)target;
        while(count-- > 0)
        {
            temp++;
            if(temp >= 123)
            {
                temp -= 26;    
            }
            while(Skip.Contains((char)temp))
            {
                temp++;
                if(temp >= 123)
                {
                    temp -= 26;    
                }              
            }

            
        }

        return (char)temp;
    }
}",https://github.com/kksoo0131/Study/commit/359d2c626b21f8f43fc1b2a3ca2ca5622467f4e5,2023. 8. 29,57,3
2023. 8. 29 오전 9:41:14,신해준,Unity,9 - 정수 제곱근 판별,"using System;

public class Solution
{
    public long solution(long n)
    {
        long sqrtN = (long)Math.Sqrt(n);

        if (sqrtN * sqrtN == n)
        {
            return (sqrtN + 1) * (sqrtN + 1);
        }
        else
        {
            return -1;
        }
    }
}
",,2023. 8. 29,9,1
2023. 8. 29 오전 9:41:38,이홍준,Unity,19 - 제일 작은 수 제거하기,"using System;
using System.Linq;
using System.Collections.Generic;

public class Solution {
    public int[] solution(int[] arr) {
        List<int> arr_list = new List<int>(arr);
        int min = arr.Min();
        arr_list.RemoveAll(num => num == min);
        
        if(arr_list.Count ==0)
        {
            arr_list.Add(-1);
        }
        
        return arr_list.ToArray();
    }
}",https://github.com/dlghdwns97/Study/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12935.%E2%80%85%EC%A0%9C%EC%9D%BC%E2%80%85%EC%9E%91%EC%9D%80%E2%80%85%EC%88%98%E2%80%85%EC%A0%9C%EA%B1%B0%ED%95%98%EA%B8%B0,2023. 8. 29,19,1
2023. 8. 29 오전 9:41:42,김경환,Unity,27 - 행렬의 덧셈,"public class Solution {
    public int[,] solution(int[,] arr1, int[,] arr2) {
        int l1 = arr1.GetLength(0), l2 = arr1.GetLength(1);
        int[,] answer = new int[l1, l2];

        for(int i = 0 ; i < l1; i++)
        {
            for(int j = 0; j < l2; j++)
            {
                answer[i, j] = arr1[i, j] + arr2[i, j];
            }
        }
        
        return answer;
    }
}",https://github.com/kkh9700,2023. 8. 29,27,1
2023. 8. 29 오전 9:41:54,김나운,Unity,13 - 콜라츠 추측,"public class Solution {
    public int solution(long num)
    {
        int count = 0;
        while (num != 1)
        {
            if (count == 500)
            {
                count = -1;
                break;
            }

            num = num % 2 == 0 ? num / 2 : num * 3 + 1;
            count++;
        }
        return count;
    }
}",,2023. 8. 29,13,1
2023. 8. 29 오전 9:41:55,손병의,Unity,8 - 문자열을 정수로 바꾸기,"public class Solution
{
    public int solution(string s)
    {
        
        
        
       
        return int.Parse(s);
    }
}",https://github.com/Son-BE/CodeKata1,2023. 8. 29,8,1
2023. 8. 29 오전 9:43:09,손병의,Unity,12 - 두 정수 사이의 합,"public class Solution 
{
    public long solution(int a, int b) 
    {
        long answer = 0;
        if (a==b)
        {
            answer = b;
            return answer;
        }
        
        int first = 0;
        int last  = 0;
        
        if(a>b)
        {
            first = b;
            last = a;
        }
        else
        {
            first = a;
            last = b;
        }
        for(int i = first; i <= last; i++)
        {
            answer += i;
        }
        
        return answer;
    }
}",https://github.com/Son-BE/CodeKata1,2023. 8. 29,12,1
2023. 8. 29 오전 9:43:20,신현,Unity,17 - 핸드폰 번호 가리기,"public class Solution {
    public string solution(string phone_number) {
        char[] charArray = phone_number.ToCharArray();
        for(int i = 0; i< charArray.Length-4; i++){
            charArray[i] ='*';
        }
        string result = new string(charArray);
        return result;
    }
}",https://github.com/Shyunju/codTaka.git,2023. 8. 29,17,1
2023. 8. 29 오전 9:43:24,최장범,Unity,15 - 나누어 떨어지는 숫자,"using System.Collections.Generic;

public class Solution {

    public int[] solution(int[] arr, int divisor) 
    {
    
    	
        List<int> answer = new List<int>();
        
       
        for(int i=0; i<arr.Length; i++)
        {
        	// arr의 원소 중 divisor로 나누어 떨어지면 answer의 리스트로 추가
            if(arr[i]%divisor == 0)
            {
            	
                answer.Add(arr[i]);
            }
        }
        
        // 만약 나눠떨어진게 없어서 리스트가 0개라면 -1을 출력
        if (answer.Count == 0)
            return new int[] { -1 };
            
        // 오름차순으로 정렬
        answer.Sort();
        
        // ToArray()를 써서 배열로 리턴
        return answer.ToArray();
    }
}",,2023. 8. 29,15,1
2023. 8. 29 오전 9:43:26,김형중,Unity,15 - 나누어 떨어지는 숫자,"using System.Collections.Generic;

public class Solution {
    public int[] solution(int[] arr, int divisor) {
        List<int> result = new List<int>();
        
        for(int i = 0; i < arr.Length; i++)
        {
            if(arr[i] % divisor == 0)
            {
                result.Add(arr[i]);
            }
        }
        
        if(result.Count == 0)
        {
            return new int[] { -1 };
        }
        result.Sort();
        
        return result.ToArray();
    }
}",,2023. 8. 29,15,1
2023. 8. 29 오전 9:43:31,박민혁,Unity,22 - 내적,"using System;

public class Solution {
    public int solution(int[] a, int[] b) {
        int answer = 0;
        for(int i=0;i<a.Length;++i)
        {
            answer+=a[i]*b[i];
        }
        return answer;
    }
}",,2023. 8. 29,22,1
2023. 8. 29 오전 9:43:49,차요한,Unity,25 - 부족한 금액 계산하기,"using System;

class Solution
{
    public long solution(int price, int money, int count)
    {
        long n =0;
        long x=0;
        
        for(int i =1; i<=count ;i++ )
        {
            n+=i*price;
        }
        
        if(money<n)
        {
            x=n-money;
        }
        
        return x;
    }
}",https://github.com/HOHOJO/Algorithm_test,2023. 8. 29,25,1
2023. 8. 29 오전 9:43:53,김경환,Unity,28 - 직사각형 별찍기,"using System;

public class Example
{
    public static void Main()
    {
        String[] s;

        Console.Clear();
        s = Console.ReadLine().Split(' ');

        int a = Int32.Parse(s[0]);
        int b = Int32.Parse(s[1]);
        
        for(int i = 0; i < b; i++)
        {
            for(int j = 0; j < a; j++)
            {
                Console.Write(""*"");
            }
            Console.WriteLine();
        }
    }
}",https://github.com/kkh9700,2023. 8. 29,28,1
2023. 8. 29 오전 9:43:56,이선재,Unity,31 - 이상한 문자 만들기,"#include <string>
#include <vector>

using namespace std;

string solution(string s) {
    string answer = s;
    bool temp = true;
    
    for(int i = 0; i < s.length(); i++){
        if(s[i] == ' '){
            temp = true;
            continue;
        }
        
        if(temp){
            answer[i] = toupper(s[i]);
            temp = false;
        }
        else{
            answer[i] = tolower(s[i]);
            temp = true;
        }
    }
    
    return answer;
}",https://github.com/Lyrwhitt/Algorithm/blob/main/Programmers/LEVEL1/%EC%9D%B4%EC%83%81%ED%95%9C%20%EB%AC%B8%EC%9E%90%20%EB%A7%8C%EB%93%A4%EA%B8%B0,2023. 8. 29,31,2
2023. 8. 29 오전 9:44:02,양수홍,AI,32 - 삼총사,"import itertools
def solution(number):
    answer = 0
    combs=list(itertools.combinations((number),3))
    for comb in combs:
        if sum(comb)==0:
            answer+=1
    return answer",,2023. 8. 29,32,2
2023. 8. 29 오전 9:44:02,이주연,Unity,35 - 시저 암호,"#include <string>
#include <vector>

using namespace std;

string solution(string s, int n) {
    string answer = """";

    for(int i = 0; i < s.size(); i++)
    {
        int c;
        
        if(s[i] >= 'a' & s[i] <= 'z')
        {
            c = s[i] + n;
            if(c > 'z') 
                c -= 26;
            s[i] = (char)c;
        }
        else if(s[i] >= 'A' && s[i] <= 'Z')
        {
            c = s[i] + n;
            if(c > 'Z')
                c -= 26;
            s[i] = (char)c;
        }
    }
    answer = s;
    return answer;
}",,2023. 8. 29,35,2
2023. 8. 29 오전 9:44:15,이현지,Unity,22 - 내적,"using System;

public class Solution {
    public int solution(int[] a, int[] b) {
        int answer = 0;
        for (int i = 0; i < a.Length; i++)
        {
            answer += a[i] * b[i];
        }
        return answer;
    }
}",https://github.com/szlovelee/Programmers-Algorithm,2023. 8. 29,22,1
2023. 8. 29 오전 9:44:28,박준규,Unity,13 - 콜라츠 추측,"public class Solution 
{
    public int solution(int num) 
    {
        int answer = 0;
        int count = 0;
        if(num==1){
            count = 0;
        }
        while(num > 1){
            if(num%2==0){
                num = num/2;
            }else{
                num = num*3+1;
            }
            count++;
        }        
        if(count >= 500 || num < 0){
            answer = -1;
        }else{
            answer = count;
        }
        return answer;
    }
}",,2023. 8. 29,13,1
2023. 8. 29 오전 9:44:33,이정환,Unity,17 - 핸드폰 번호 가리기,"using System;
using System.Collections.Generic;

public class Solution {
    public string solution(string phone_number) {
        List<char> numbers=new List<char>(phone_number);
        int length=numbers.Count;
        for(int i=0; i< length-4;i++){
            numbers.RemoveAt(i);
            numbers.Insert(i,'*');
        }
        string answer =string.Join("""", numbers);

        return answer;
    }
}",,2023. 8. 29,17,1
2023. 8. 29 오전 9:44:41,정재훈,Unity,8 - 문자열을 정수로 바꾸기,"public class Solution {
    public int solution(string s) {
        bool isMinus = false;
        if(string.Equals(s[0], ""-"")){
            isMinus = true;
        }
        int answer = int.Parse(s);
        if (isMinus)
        {
            answer *= -1;
        }
        return answer;
    }
}",https://github.com/toadsam/Algorithm,2023. 8. 29,8,1
2023. 8. 29 오전 9:45:05,장현웅,AI,7 - 자연수 뒤집어 배열로 만들기,"def solution(n):
    answer = []
    
    for i in str(n):
        answer.append(int(i))
        
    answer.reverse()
    # answer = list(reversed(answer))
    # answer = answer[::-1]
    return answer",https://github.com/HyeonwoongJang/Algorithm.git,2023. 8. 28,7,1
2023. 8. 29 오전 9:45:06,정재호,Unity,37 - 문자열 내 마음대로 정렬하기,"using System;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
public class Solution
{
    public string[] solution(string[] strings, int n)
    {
        int lenght = strings.Length;
        string[] answer = new string[lenght];

        //각 문자열의 n번째 글자를 앞으로 더한 문자열을 저장
        for (int i = 0; i < lenght; i++)
        {
            answer[i] = (strings[i][n]) + strings[i];
            //usun, ebed, acar
        }

        //오름차순 정렬
        Array.Sort(answer);
        //acar, ebed, usun

        //정렬된 문자열에 더했던 n번째 글자를 Substring(1)으로 제거
        for (int j = 0; j < len; j++)
        {
            answer[j] = answer[j].Substring(1);
        }

        return answer;
    }
}",,2023. 8. 29,37,2
2023. 8. 29 오전 9:45:08,이선재,Unity,32 - 삼총사,"#include <string>
#include <vector>

using namespace std;

int solution(vector<int> number) {
    int answer = 0;
    
    for(int i = 0; i < number.size() - 2; i++)
    {
        for(int j = i+1; j < number.size() - 1; j++)
        {
            for(int z = j+1; z < number.size(); z++)
            {
                if((number[i] + number[j] + number[z]) == 0)
                    answer += 1;
            }
        }
    }
    
    return answer;
}",https://github.com/Lyrwhitt/Algorithm/blob/main/Programmers/LEVEL1/%EC%82%BC%EC%B4%9D%EC%82%AC,2023. 8. 29,32,2
2023. 8. 29 오전 9:45:26,박민호,Unity,26 - 문자열 다루기 기본,"public class Solution {
    public bool solution(string s) {
        char[] arr = s.ToCharArray();
        bool answer = true;
        if(arr.Length==4 || arr.Length==6){
            answer = int.TryParse(arr, out _);
        }
        else{
            answer=false;
        }
        return answer;
    }
}",,2023. 8. 29,26,1
2023. 8. 29 오전 9:45:43,임전혁,Unity,34 - 최소직사각형,"using System;

public class Solution {
    public int solution(int[,] sizes) {
        int xMaxNum = int.MinValue;
        int yMaxNum = int.MinValue;
        for (int i = 0; i < sizes.GetLength(0); i++)
        {
            if (sizes[i, 0] < sizes[i, 1])
            {
                int tempNum = sizes[i, 0];
                sizes[i,0] = sizes[i, 1];
                sizes[i, 1] = tempNum;
            }
            
            if (xMaxNum < sizes[i, 0])
                xMaxNum = sizes[i, 0];
            if (yMaxNum < sizes[i, 1])
                yMaxNum = sizes[i, 1];
        }
        return xMaxNum * yMaxNum;
    }
}",https://github.com/yarogono/Algorithm_CSharp/blob/master/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/86491.%E2%80%85%EC%B5%9C%EC%86%8C%EC%A7%81%EC%82%AC%EA%B0%81%ED%98%95/%EC%B5%9C%EC%86%8C%EC%A7%81%EC%82%AC%EA%B0%81%ED%98%95.cs,2023. 8. 29,34,2
2023. 8. 29 오전 9:46:22,지민규,Unity,22 - 내적,"using System;

public class Solution {
    public int solution(int left, int right) {
        int answer = 0;
        for (int i = left; i < right+1; i++)
        {
            int check = 0;
            for (int j = 1; j < i + 1; j++)
            {
                check += (i % j == 0) ? 1 : 0;
            }
            answer += ((check % 2) == 0) ? i : -i;
        }
        return answer;
    }
}",,2023. 8. 29,22,1
2023. 8. 29 오전 9:46:41,김예준,Unity,23 - 약수의 개수와 덧셈,"#include <vector>

using namespace std;

int get_cnt(int num)
{
    int cnt = 0;
    
    for (int i = 1; i * i <= num; i++)
    {
        if (num % i == 0)
        {
            cnt++;
            if (i * i < num) cnt++;
        }
    }
    
    return cnt;
}

int solution(int left, int right) {
    int answer = 0;
    
    for (int i = left; i <= right; i++)
    {
        if(get_cnt(i) % 2 == 0) answer += i;
        else answer -= i;
    }
    
    return answer;
}",,2023. 8. 29,23,1
2023. 8. 29 오전 9:46:53,지민규,Unity,23 - 약수의 개수와 덧셈,"using System;

public class Solution {
    public int solution(int left, int right) {
        int answer = 0;
        for (int i = left; i < right+1; i++)
        {
            int check = 0;
            for (int j = 1; j < i + 1; j++)
            {
                check += (i % j == 0) ? 1 : 0;
            }
            answer += ((check % 2) == 0) ? i : -i;
        }
        return answer;
    }
}",,2023. 8. 29,23,1
2023. 8. 29 오전 9:47:43,김진규,Unity,25 - 부족한 금액 계산하기,"using System;
class Solution
{
    public long solution(int price, int money, int count)
    {
        long cost = 0;
        for(int i =1; i <= count;i++)
        {
            cost += (price * i);
        }
        long neededMoney = cost - money;
        
        if (neededMoney < 0)
            return 0;
        else
            return neededMoney;
    }
}",,2023. 8. 29,25,1
2023. 8. 29 오전 9:47:57,김호연,Unity,18 - 없는 숫자 더하기,"using System;

public class Solution {
    public int solution(int[] numbers) {
        // 1~9를 다 더한 수에서 나머지를 빼면 되는거 아닌가?
        // 1~9 전부 더한 수 = 45
        int sum = 0;
        int answer = -1;
        foreach(int num in numbers)
        {
            sum += num;
        }
        
        return answer = 45 - sum;
    }
}",,2023. 8. 29,18,1
2023. 8. 29 오전 9:48:24,이선재,Unity,33 - 크기가 작은 부분,"#include <string>
#include <vector>

using namespace std;

int solution(string t, string p) {
    int answer = 0;
    int idx = 0;
    unsigned long long ullP = stoull(p);
    
    while(idx <= (t.length() - p.length()))
    {
        unsigned long long tt = stoull(t.substr(idx, p.length()));
        
        if(tt <= ullP)
        {
            answer += 1;
        }
        
        idx += 1;
    }
    
    return answer;
}",https://github.com/Lyrwhitt/Algorithm/blob/main/Programmers/LEVEL1/%ED%81%AC%EA%B8%B0%EA%B0%80%20%EC%9E%91%EC%9D%80%20%EB%B6%80%EB%B6%84%EB%AC%B8%EC%9E%90%EC%97%B4,2023. 8. 29,33,2
2023. 8. 29 오전 9:49:27,장성림,Unity,25 - 부족한 금액 계산하기,"using System;

class Solution
{
    public long solution(int price, int money, int count)
    {
        long total = 0;
        long answer = 0;
        for(int i = 1; i <= count; i++)
            total += i;
        total *= (long)price;
        answer = (total >= (long)money)? (total - (long)money) : 0;
        return answer;
    }
}",https://github.com/hoobhoob,2023. 8. 29,25,1
2023. 8. 29 오전 9:49:42,양수홍,AI,33 - 크기가 작은 부분,"def solution(t, p):
    answer = 0
    for i in range(len(t)-len(p)+1):
        number=""""
        for j in range(len(p)):
            number+=t[i+j]
        if int(number)<=int(p):
            answer+=1
    return answer",,2023. 8. 29,33,2
2023. 8. 29 오전 9:49:51,김경환,Unity,29 - 최대공약수와 최소공배수,"public class Solution {
    public int[] solution(int n, int m) {
        int gcd = GCD(n,m);
        return new int[] {gcd, n *  m / gcd};
    }
    
    public int GCD(int a, int b)
    {
        while(a != 0)
        {
            int n = b % a;
            b = a;
            a = n;
        }
        
        return b;
    }
}",https://github.com/kkh9700,2023. 8. 29,29,1
2023. 8. 29 오전 9:49:53,강상찬,AI,26 - 문자열 다루기 기본,"def solution(s):
    for i in s:
        if (len(s) != 4):
            if (len(s) != 6):
                return False
        if (ord(i) > 57):
            return False
    return True",,2023. 8. 29,26,1
2023. 8. 29 오전 9:49:56,신현주,Unity,18 - 없는 숫자 더하기,"using System;

public class Solution {
    public int solution(int[] numbers) {
        int answer = 0;
        for( int i = 0; i < numbers.Length; i++){
            answer += numbers[i];
        }
        return 45- answer;
    }
}",https://github.com/Shyunju/codTaka.git,2023. 8. 29,18,1
2023. 8. 29 오전 9:50:01,김연우,Unity,3 - 자릿수 더하기,"#include <stdio.h>

int solution(int N) {
    int digit_sum = 0;
    
    while (N > 0) {
        int last_digit = N % 10;
        digit_sum += last_digit;
        N /= 10;
    }
    
    return digit_sum;
}

int main() {
    int N = 123;
    printf(""%d\n"", solution(N)); // 출력: 6
    
    return 0;
}
",,2023. 8. 29,3,1
2023. 8. 29 오전 9:50:38,신우석,Unity,38 - K번째수정렬,"using System;
using System.Collections.Generic;
using System.Linq;

public class Solution {
    public int[] solution(int[] array, int[,] commands) {
        List<int> sliced = new List<int>();
        List<int> answer = new List<int> {};
        for (int i = 0; i < commands.GetLength(0); ++i) {
            sliced.Clear();
            sliced.AddRange(array.Skip(commands[i,0] - 1).Take(commands[i,1] - commands[i,0] + 1));
            sliced.Sort();
            answer.Add(sliced[commands[i,2] - 1]);
        }
        
        return answer.ToArray();
    }
}",https://github.com/seoksii/AlgorithmCodeKata/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/42748.%E2%80%85K%EB%B2%88%EC%A7%B8%EC%88%98,2023. 8. 29,38,2
2023. 8. 29 오전 9:51:17,김종훈,Unity,8 - 문자열을 정수로 바꾸기,"public class Solution {
    public int solution(string s) {
        int answer = int.Parse(s);;
        return answer;
    }
}",,2023. 8. 29,8,1
2023. 8. 29 오전 9:51:32,김예준,Unity,25 - 부족한 금액 계산하기,"using namespace std;

long long solution(int price, int money, int count)
{
    long long answer = -1;
    
    long long sum = 0;
    
    for (int i = 1; i <= count; i++)
    {
        sum += price * i;
    }
    
    answer = sum - money > 0 ? sum - money : 0;

    return answer;
}",,2023. 8. 29,25,1
2023. 8. 29 오전 9:51:40,박민호,Unity,27 - 행렬의 덧셈,"public class Solution {
    public int[,] solution(int[,] arr1, int[,] arr2) {
        int[,] answer = new int[arr1.GetLength(0),arr1.GetLength(1)];
        for (int i = 0; i < arr1.GetLength(0); i++)
            {
                for (int j = 0; j < arr1.GetLength(1); j++)
                {
                    answer[i, j] = arr1[i, j] + arr2[i, j];
                }
            }
        return answer;
    }
}",,2023. 8. 29,27,1
2023. 8. 29 오전 9:51:51,김종훈,Unity,9 - 정수 제곱근 판별,"public class Solution {
    public long solution(long n) {
        long answer = 0;
        for(long i=1; i<=n; i++)
        {
            if(i*i==n)
            {
                answer =(i+1)*(i+1);
                break;
            }
            else if(i*i>=n)
            {
                break;
            }
        }
        if(answer ==0)
        {
            answer =-1;
        }
        return answer;
    }
}",,2023. 8. 29,9,1
2023. 8. 29 오전 9:52:19,이정환,Unity,18 - 없는 숫자 더하기,"using System;

public class Solution {
    public int solution(int[] numbers) {
        int sum=0;
        foreach(int num in numbers){
            sum+=num;
        }

        int answer = 45-sum;
        return answer;
    }
}",,2023. 8. 29,18,1
2023. 8. 29 오전 9:52:25,배인호,Unity,32 - 삼총사,"using System;

public class Solution
{
    public int solution(int[] number)
    {
        int answer = 0;
        int length = number.Length;

        for (int i = 0; i < length - 2; i++)
        {
            for (int j = i + 1; j < length - 1; j++)
            {
                for (int k = j + 1; k < length; k++)
                {
                    if ((number[i] + number[j] + number[k]) == 0)
                    {
                        answer++;
                    }
                }
            }
        }
        return answer;
    }
}
",https://github.com/cutlake2000/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/131705.%E2%80%85%EC%82%BC%EC%B4%9D%EC%82%AC,2023. 8. 29,32,2
2023. 8. 29 오전 9:52:32,노재우,Unity,13 - 콜라츠 추측,"public class Solution
{
    int answer = 0;

    public int solution(int num)
    {
        if (num == 1)
            return 0;

        answer++;
        if (num % 2 == 0)
        {
            num /= 2;
        }
        else if (num % 2 == 1)
        {
            num = num * 3 + 1;
        }

        if (num == 1)
            return answer;
        if (answer == 500)
            return -1;

        return solution(num);
    }
}",,2023. 8. 29,13,1
2023. 8. 29 오전 9:52:43,이형빈,Unity,8 - 문자열을 정수로 바꾸기,"public class Solution {
    public int solution(string s) {

        int answer = 0;
        answer = int.Parse(s);
        
        return answer;
    }
}",,2023. 8. 29,8,1
2023. 8. 29 오전 9:52:43,김종훈,Unity,10 - 정수 내림차순으로 배치하기,"public class Solution {
    public long solution(long n) {
        long answer = 0;
        char[] a = n.ToString().ToCharArray();
        System.Array.Sort(a);
        System.Array.Reverse(a);
        answer = System.Convert.ToInt64(new string(a));
        return answer;
    }
}",,2023. 8. 29,10,1
2023. 8. 29 오전 9:53:10,최수용,Unity,14 - 서울에서 김서방 찾기,"public class Solution {
    public string solution(string[] seoul) {
        
        for (int i=0; i < seoul.Length; i++){
            if(seoul[i] == ""Kim""){
                return $""김서방은 {i}에 있다""; }
        }
        return ""김서방 없다."";
    }
}",,2023. 8. 29,14,1
2023. 8. 29 오전 9:53:13,김도현B,Unity,23 - 약수의 개수와 덧셈,"using System;

public class Solution {
    public int solution(int left, int right) {
        int answer = 0;
        for (int i = left; i <= right; i++)
        {
            int count = 0;
            for (int j = 1; j <= i; j++)
                count = i % j == 0 ? count + 1 : count + 0;
            answer = count % 2 == 0 ? answer + i : answer - i;
        }
        return answer;
    }
}",https://github.com/subscriptioncat/Algorithm,2023. 8. 29,23,1
2023. 8. 29 오전 9:53:16,김종훈,Unity,11 - 하샤드 수,"public class Solution {
    public bool solution(int x) {
         string temp = x.ToString();
           
            int sum = 0;
            for (int i = 0; i < temp.Length; i++)
            {
                sum += (int)System.Char.GetNumericValue(temp[i]);
            }
          
            bool answer = x % sum==0 ? true:false;
            return answer;
    }
}",,2023. 8. 29,11,1
2023. 8. 29 오전 9:53:25,김진규,Unity,26 - 문자열 다루기 기본,"public class Solution {
    public bool solution(string s) {
        bool answer = true;
        if (s.Length != 4 && s.Length != 6)
            return false;
        answer = int.TryParse(s, out _);
        return answer;
    }
}",,2023. 8. 29,26,1
2023. 8. 29 오전 9:53:34,이현지,Unity,23 - 약수의 개수와 덧셈,"using System;

public class Solution 
{
    public int solution(int left, int right) 
    {
        int answer = 0;
        for (int i = left; i < right + 1; i++)
        {
            int count = 0;
            for (int j = 1; j < i + 1; j++)
            {
                if ((float)i % j == 0) ++count;
            }
            
            if (count % 2 == 0)  answer += i;
            else answer -= i;
        }
        return answer;
    }
}",https://github.com/szlovelee/Programmers-Algorithm,2023. 8. 29,23,1
2023. 8. 29 오전 9:53:45,함영주,Unity,9 - 정수 제곱근 판별,"public class Solution {
    public long solution(long n) {
        long answer = 0;
        for(long i=1; i<=n; i++)
        {
            if(i*i==n)
            {
                answer =(i+1)*(i+1);
                break;
            }
            else if(i*i>=n)
            {
                break;
            }
        }
        if(answer ==0)
        {
            answer =-1;
        }
        return answer;
    }
}",,2023. 8. 29,9,1
2023. 8. 29 오전 9:54:16,정재훈,Unity,9 - 정수 제곱근 판별,"using System;

public class Solution {
    public long solution(long n)
    {
        double answer = Math.Sqrt(n);
        
        return answer % 1 == 0 ? (long)((answer+1)*(answer+1)) : -1;
    }
}",https://github.com/toadsam/Algorithm,2023. 8. 29,9,1
2023. 8. 29 오전 9:54:18,김종훈,Unity,12 - 두 정수 사이의 합,"public class Solution {
    public long solution(int a, int b) {
        long answer = 0;
        if( a < b)
        {
            for(int i=a; i<=b; i++)
            {
                answer += i;
            }    
        }
        
        else
        {
            for(int i=a; i>=b; i--)
            {
                answer += i;
            }    
        }
        
        return answer;
    }
}",,2023. 8. 29,12,1
2023. 8. 29 오전 9:54:27,장성림,Unity,26 - 문자열 다루기 기본,"using System;
public class Solution {
    public bool solution(string s) {
        bool answer = false;
        if (Int32.TryParse(s, out int a))
            if(s.Length == 4 || s.Length == 6)
                answer = true;
        return answer;
    }
}",https://github.com/hoobhoob,2023. 8. 29,26,1
2023. 8. 29 오전 9:54:40,김민태,Unity,31 - 이상한 문자 만들기,"using System;

public class Solution {
    public string solution(string s) {
        string answer = """";
        string[] words = s.Split();
        for(int i = 0; i<words.Length; i++)
        {
            for(int j = 0; j< words[i].Length; j++)
            {
                if(j%2 == 0)
                {
                    answer += Char.ToUpper(words[i][j]);
                }
                else
                {
                    answer += Char.ToLower(words[i][j]);
                }
            }
            if (i != words.Length-1)
            {
                answer += "" "";
            }
        }
        return answer;
    }
}",https://github.com/rlaalsxo/CodingTest,2023. 8. 29,31,2
2023. 8. 29 오전 9:54:46,김진규,Unity,27 - 행렬의 덧셈,"public class Solution {
    public int[,] solution(int[,] arr1, int[,] arr2) {
        int rows = arr1.GetLength(0);
        int cols = arr1.GetLength(1);
        
        int[,] answer = new int[rows, cols];
        
        for (int i = 0; i < rows; i++) {
            for (int j = 0; j < cols; j++) {
                answer[i, j] = arr1[i, j] + arr2[i, j];
            }
        }
        
        return answer;
    }
}",,2023. 8. 29,27,1
2023. 8. 29 오전 9:55:13,한병권,Unity,40 - 가장 가까운 같은 글자,"using System;

public class Solution {
    public int[] solution(string s) {
        int[] answer = new int[s.Length];
        char[] cArray = s.ToCharArray();
        for(int i = 0; i < s.Length; i++)
        {
            int temp = -1;
            for(int j = i-1; j >= 0; j--)
            {
                if(cArray[j] == cArray[i])
                {
                    temp = i - j;
                    break;
                }
            }
            answer[i] = temp;
        }
        return answer;
    }
}",https://github.com/hbg9212/AlgorithmCodekata,2023. 8. 29,40,2
2023. 8. 29 오전 9:55:27,문현우,Unity,10 - 정수 내림차순으로 배치하기,"using System;
public class Solution {
    public long solution(long n) {
        long answer = 0;
        char[] arrayN = n.ToString().ToCharArray();
        Array.Sort(arrayN);
        Array.Reverse(arrayN);
        answer = long.Parse(arrayN);
        return answer;
    }
}",https://github.com/Munch310/Algorithm-Csharp/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12933.%E2%80%85%EC%A0%95%EC%88%98%E2%80%85%EB%82%B4%EB%A6%BC%EC%B0%A8%EC%88%9C%EC%9C%BC%EB%A1%9C%E2%80%85%EB%B0%B0%EC%B9%98%ED%95%98%EA%B8%B0,2023. 8. 29,10,1
2023. 8. 29 오전 9:55:44,김경환,Unity,30 - 3진법 뒤집기,"using System;
using System.Text;

public class Solution {
    public int solution(int n) {
        return Ternary(Ternary(n));
    }
    
    public string Ternary(int n)
    {
        StringBuilder sb = new StringBuilder();
        
        while(n != 0)
        {
            sb.Append(n % 3);
            n /= 3;
        }
        
        return sb.ToString();
    }
    
    public int Ternary(string s)
    {
        int num = 0;
        
        for(int i = 0; i < s.Length; i++)
        {
            num += (int)Math.Pow(3, i) * (s[s.Length - i- 1] - '0');
        }
        
        return num;
    }
}",https://github.com/kkh9700/algorithm,2023. 8. 29,30,1
2023. 8. 29 오전 9:55:49,이선재,Unity,34 - 최소직사각형,"#include <string>
#include <vector>
#include <algorithm>

using namespace std;

int solution(vector<vector<int>> sizes) {
    int w = 0;
    int h = 0;
    
    for(int i = 0; i < sizes.size(); i++){
        if(sizes[i][0] < sizes[i][1]){
            swap(sizes[i][0], sizes[i][1]);
        }
        
        w = max(w, sizes[i][0]);
        h = max(h, sizes[i][1]);
    }
    
    return w * h;
}",https://github.com/Lyrwhitt/Algorithm/blob/main/Programmers/LEVEL1/%EC%B5%9C%EC%86%8C%EC%A7%81%EC%82%AC%EA%B0%81%ED%98%95,2023. 8. 29,34,2
2023. 8. 29 오전 9:56:31,김민석,Unity,9 - 정수 제곱근 판별,"using System;

public class Solution {
	public long Solution(long n) {
    	long x = (long)Math.Sqrt(n);
        return (x*x == n) ? (x+1)*(x+1) : -1;
    }
}",https://github.com/ms0753/codekata/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12934.%E2%80%85%EC%A0%95%EC%88%98%E2%80%85%EC%A0%9C%EA%B3%B1%EA%B7%BC%E2%80%85%ED%8C%90%EB%B3%84,2023. 8. 29,9,1
2023. 8. 29 오전 9:56:44,이홍준,Unity,20 - 가운데 글자 가져오기,"public class Solution {
    public string solution(string s) {
        string answer = """";
        int len = s.Length;
        
        if (len % 2 == 1)
        {
            int middle = len / 2;
            string s2 = s.Substring(middle, 1);
            answer = s2;
        }
        else
        {
            int middle = (len / 2) - 1;
            string s2 = s.Substring(middle, 2);
            answer = s2;
        }
        
        return answer;
    }
}",https://github.com/dlghdwns97/Study/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12903.%E2%80%85%EA%B0%80%EC%9A%B4%EB%8D%B0%E2%80%85%EA%B8%80%EC%9E%90%E2%80%85%EA%B0%80%EC%A0%B8%EC%98%A4%EA%B8%B0,2023. 8. 29,20,1
2023. 8. 29 오전 9:57:09,김하늘,Unity,15 - 나누어 떨어지는 숫자,"using System;
using System.Linq;

public class Solution 
{
    public int[] solution(int[] arr, int divisor)
    {
        int[] answer = new int[] { };
        for (int i = 0; i < arr.Length; i++)
        {
            if (arr[i] % divisor == 0)
            {
                Array.Resize(ref answer, answer.Length + 1);
                answer[answer.Length - 1] = arr[i];
            }
        }
        Array.Sort(answer);
        if (answer.Length == 0)
        {
            Array.Resize(ref answer, 1);
            answer[0] = -1;
        }

        return answer;
    }
}",,2023. 8. 29,15,1
2023. 8. 29 오전 9:57:23,김민태,Unity,32 - 삼총사,"public class Solution {
    public int solution(int[] number) {
        int answer = 0;
          
        for(int i = 0; i < number.Length; i++)
        {
            for(int j = i + 1; j < number.Length; j++)
            {
                for(int k = j + 1; k < number.Length; k++)
                {
                    if(number[i] + number[j] + number[k] == 0)
                    {
                        answer++;
                    }
                }
            }
        }
        return answer;
    }
}",https://github.com/rlaalsxo/CodingTest,2023. 8. 29,32,2
2023. 8. 29 오전 9:57:38,김진규,Unity,28 - 직사각형 별찍기,"using System;

public class Example
{
    public static void Main()
    {
        String[] s;

        Console.Clear();
        s = Console.ReadLine().Split(' ');

        int a = Int32.Parse(s[0]);
        int b = Int32.Parse(s[1]);

        for(int i = 0; i < b; i++)
        {
            for(int j = 0; j < a; j++)
            {
                Console.Write(""*"");
            }
            Console.WriteLine();
        }
    }
}",,2023. 8. 29,28,1
2023. 8. 29 오전 9:57:39,김강현,Unity,9 - 정수 제곱근 판별,"using System;
public class Solution 
{
    public long solution(long n) 
    {
        long x = (long)Math.Sqrt(n);
          long answer = 0;
        if(x*x == n)
        {
            
            x += 1;
            answer = x*x ;
        }
      else {answer = -1;}
        return answer;
    }
}",,2023. 8. 29,9,1
2023. 8. 29 오전 9:57:56,최장범,Unity,16 - 음양 더하기,"using System;

public class Solution {
    public int solution(int[] absolutes, bool[] signs)
    {
        int answer = 0;
        
        for(int i =0; i< absolutes.Length; i++)
        {
            answer += absolutes[i] = signs[i] ? absolutes[i] : absolutes[i]*-1;
        }
        return answer;
    }
}",,2023. 8. 29,16,1
2023. 8. 29 오전 9:57:57,박민혁,Unity,23 - 약수의 개수와 덧셈,"using System;

public class Solution {
    public int solution(int left, int right) {
        int answer = 0;
        for(int i=left;i<right+1;++i)
        {
            answer+=i;
            if(Math.Pow((int)Math.Sqrt(i), 2) == i)
            {
                answer-=i*2;
            }
        }
        return answer;
    }
}",,2023. 8. 29,23,1
2023. 8. 29 오전 9:58:00,박희원,Unity,15 - 나누어 떨어지는 숫자,"using System.Collections.Generic;
public class Solution {
  public List<int> solution(int[] arr, int divisor)
            {
                List<int> answer = new List<int>();

                for(int i = 0; i<arr.Length; i++)
                {
                    if (arr[i] % divisor == 0)
                        answer.Add(arr[i]);
                }

                if (answer.Count == 0)
                {
                    answer.Add(-1); 
                    return answer;
                }
                else
                {
                    answer.Sort(); 
                    return answer;
                }
                   
            }
}",,2023. 8. 29,15,1
2023. 8. 29 오전 9:58:07,안소정,Unity,14 - 서울에서 김서방 찾기,"public class Solution {
    public string solution(string[] seoul) {
        string answer = """";
        for(int i = 0; i < seoul.Length; i++)
        {
            if(seoul[i] == ""Kim"")
            {
                return $""김서방은 {i}에 있다"";
            }
        }
        return answer;
    }
}",,2023. 8. 29,14,1
2023. 8. 29 오전 9:58:20,박희원,Unity,16 - 음양 더하기,"using System;

public class Solution {
   public int solution(int[] absolutes, bool[] signs)
            {
                int answer = 0;

                for(int i = 0; i<absolutes.Length; i++)
                {
                    if (signs[i] == true)
                        answer += absolutes[i];
                    else 
                        answer -= absolutes[i];
                }

                return answer;
            }
    }
",,2023. 8. 29,16,1
2023. 8. 29 오전 9:58:33,김광수,Unity,58 - 햄버거 만들기,"using System;
using System.Collections.Generic;

public class Solution {
    // stack 문제인가?
    
    // stack을 계속해서 채우다가
    // 스택의 마지막 4개를 확인해서 pop
    
    // 빵 1, 야채 2, 고기 3 => pop했을때 1 3 2 1이 나와야함
    Stack<int> hamburger = new Stack<int>();
    int answer = 0;
    public int solution(int[] ingredient) 
    {    
        foreach(int i in ingredient)
        {
            
            // 햄버거의 길이가 3이상이고 이번 i가 1이라면 햄버거 체크 시작
            // 321이 나오면 햄버거니까 i를 넣지않고 
            if(hamburger.Count >= 3 && i == 1 && CheckBurger())
            {
                answer++;
            }
            else
            {
                hamburger.Push(i);    
            }
            
        }
        
        return answer;
    }
    
    public bool CheckBurger()
    {
        int count =3;
        Stack<int> temp = new Stack<int>();
        
        while(count > 0)
        {
            int pop = hamburger.Pop();
            
            if (pop == count)
            {
                count--;
                temp.Push(pop);
            }
            else
            {
                hamburger.Push(pop);
                count = 0;
                while (temp.Count > 0)
                {
                    hamburger.Push(temp.Pop());
                }
                return false;
            }
        }
        
        return true;    
    }
}",https://github.com/kksoo0131/Study/commit/c3c8afb63a4199b59f88c81906754ad0e2fd02ac,2023. 8. 29,58,3
2023. 8. 29 오전 9:58:43,김명식,Unity,13 - 콜라츠 추측,"public class Solution {
    public int solution(long num) {
        int answer = 0;
        while(num!=1){
            if(num%2==0){
                num=num/2;
            }else{
                num=num*3+1;
            }
            answer++;
            if(answer>500){
                return -1;
            }
        }
        return answer;
    }
}",https://github.com/D0ryeon/Algorithm-Code-Kata/tree/main,2023. 8. 29,13,1
2023. 8. 29 오전 9:58:47,신우석,Unity,39 - 두 개 뽑아서 더하기,"using System;
using System.Collections.Generic;

public class Solution {
    public int[] solution(int[] numbers) {
        bool[] availableSums = new bool[201];
        for (int i = 0; i < numbers.Length - 1; ++i)
            for (int j = i + 1; j < numbers.Length; ++j)
                availableSums[numbers[i] + numbers[j]] = true;
        
        List<int> answer = new List<int>();
        for (int i = 0; i <= 200; ++i)
            if (availableSums[i] == true) answer.Add(i);
        return answer.ToArray();
    }
}",https://github.com/seoksii/AlgorithmCodeKata/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/68644.%E2%80%85%EB%91%90%E2%80%85%EA%B0%9C%E2%80%85%EB%BD%91%EC%95%84%EC%84%9C%E2%80%85%EB%8D%94%ED%95%98%EA%B8%B0,2023. 8. 29,39,2
2023. 8. 29 오전 9:58:57,김형중,Unity,16 - 음양 더하기,"using System;

public class Solution {
    public int solution(int[] absolutes, bool[] signs) {
        int answer = 0;
        
        for(int i = 0; i < absolutes.Length; i ++)
        {
            answer += absolutes[i] = signs[i] ? absolutes[i] : absolutes[i] * -1;
        }
        
        return answer;
    }
}",,2023. 8. 29,16,1
2023. 8. 29 오전 9:58:57,김해찬,Unity,80 - 의상,"using System;
using System.Collections;
using System.Collections.Generic;

public class Solution {
    public int solution(string[,] clothes) {
        int answer = 1;
        Dictionary<string, int> dic = new Dictionary<string, int>();
        
        for(int i = 0; i < clothes.GetLength(0); i++)
        {
            if(dic.ContainsKey(clothes[i, 1]) == true)
            {
                dic[clothes[i, 1]]++;
            }
            else
            {                
                dic.Add(clothes[i, 1], 1);
            }
        }
        
        foreach(KeyValuePair<string, int> element in dic)
        {
            answer *= (element.Value + 1);
        }
        
        answer--;
        
        return answer;
    }
}",,2023. 8. 29,80,3
2023. 8. 29 오전 9:59:01,박희원,Unity,17 - 핸드폰 번호 가리기,"public class Solution {
   public string solution(string phone_number)
            {
                string answer;
                char[] phoneArray = phone_number.ToCharArray();

                for(int i = 0; i<phoneArray.Length-4; i++)
                {
                    phoneArray[i] = '*';
                }

                phone_number = new string(phoneArray);
                
                return answer = phone_number;
            }
}",,2023. 8. 29,17,1
2023. 8. 29 오전 9:59:01,김도현B,Unity,24 - 문자열 내림차순으로 배치하기,"using System.Linq;
public class Solution {
    public string solution(string s) {
        return new string(s.OrderByDescending(x => x).ToArray());
    }
}",https://github.com/subscriptioncat/Algorithm,2023. 8. 29,24,1
2023. 8. 29 오전 9:59:41,김정민,Unity,36 - 숫자 문자열과 영단어,"public class Solution
        {
            public int solution(string s)
            {
                int answer = 0;
                List<string> numList = new List<string> { ""zero"", ""one"", ""two"", ""three"", ""four""
                    , ""five"", ""six"", ""seven"", ""eight"", ""nine"" };

                string resultStr = """";
                string curStr = """";
                for (int i = 0; i < s.Length; i++)
                {
                    if (s[i] >= '0' && s[i] <= '9')
                    {
                        resultStr += s[i];
                        continue;
                    }

                    curStr += s[i];
                    if (numList.Contains(curStr))
                    {
                        resultStr += numList.IndexOf(curStr);
                        curStr = """";
                    }
                }

                answer = int.Parse(resultStr);
                return answer;
            }
        }",https://github.com/j-miiin/Algorithm_Study/blob/main/SPARTA_ALGORITHM_2023/Level2/36_NumStrAndWords.cs,2023. 8. 29,36,2
2023. 8. 29 오전 10:00:10,김정민,Unity,37 - 문자열 내 마음대로 정렬하기,"public class Solution
        {
            public string[] solution(string[] strings, int n)
            {
                Array.Sort(strings);
                string[] answer = strings.OrderBy(x => x[n]).ToArray();

                return answer;
            }
        }",https://github.com/j-miiin/Algorithm_Study/blob/main/SPARTA_ALGORITHM_2023/Level2/37_StrOrderByMe.cs,2023. 8. 29,37,2
2023. 8. 29 오전 10:00:36,박희원,Unity,18 - 없는 숫자 더하기,"using System;
using System.Linq; 

public class Solution {
    public int solution(int[] numbers)
            {
                int answer = 0;

                for (int i = 0; i < 10; i++)
                {
                    answer += i; 
                }
                answer -= numbers.Sum(); 
                return answer;
            }
}",,2023. 8. 29,18,1
2023. 8. 29 오전 10:00:38,김정민,Unity,38 - K번째수정렬,"public class Solution
        {
            public int[] solution(int[] array, int[,] commands)
            {
                int[] answer = new int[commands.GetLength(0)];

                for (int i = 0; i < commands.GetLength(0); i++)
                {
                    int start = commands[i, 0];
                    int end = commands[i, 1];
                    int k = commands[i, 2];

                    int length = end - start + 1;
                    int[] subArr = new int[length];
                    Array.Copy(array, start - 1, subArr, 0, length);
                    Array.Sort(subArr);
                    answer[i] = subArr[k - 1];
                }
                return answer;
            }
        }",https://github.com/j-miiin/Algorithm_Study/blob/main/SPARTA_ALGORITHM_2023/Level2/38_K-th_Num.cs,2023. 8. 29,38,2
2023. 8. 29 오전 10:00:39,송유섭,Unity,6 - x만큼 간격이 있는 n개의 숫자,"public class Solution 
{
      public long[] solution(int x, int n)
            {
                long[] answer = new long[n] ;
 
                for (long i = 0; i < n; i++)
                {
                    answer[i] = x*(i+1); 
                }
                return answer;
            }
}",https://github.com/SongJinx3512/codeKata/blob/main/codeKata%20lv%201%20%236%20x%EB%A7%8C%ED%81%BC%20%EA%B0%84%EA%B2%A9%EC%9D%B4%20%EC%9E%88%EB%8A%94%20n%EA%B0%9C%EC%9D%98%20%EC%88%AB%EC%9E%90,2023. 8. 29,6,1
2023. 8. 29 오전 10:00:57,장성림,Unity,27 - 행렬의 덧셈,"using System;
public class Solution {
    public int[,] solution(int[,] arr1, int[,] arr2) {
        int[,] answer = new int[arr1.GetLength(0) , arr1.GetLength(1)];
        for (int i = 0; i < arr1.GetLength(0); i++){
            for(int j = 0; j < arr1.GetLength(1); j++){
                answer[i,j] = arr1[i,j] + arr2[i,j];
            }
        }
        return answer;
    }
}",https://github.com/hoobhoob,2023. 8. 29,27,1
2023. 8. 29 오전 10:01:07,김정민,Unity,39 - 두 개 뽑아서 더하기,"public class Solution
        {
            static int[] nums;
            static bool[] visited;
            static HashSet<int> numSet;

            public int[] solution(int[] numbers)
            {
                nums = numbers;
                visited = new bool[numbers.Length];
                numSet = new HashSet<int>();

                dfs(0, 0, 0);
                int[] answer = numSet.ToArray();
                Array.Sort(answer);
                return answer;
            }

            static void dfs(int start, int depth, int sum)
            {
                if (depth == 2)
                {
                    numSet.Add(sum);
                    return;
                }

                for (int i = start; i < nums.Length; i++)
                {
                    if (!visited[i])
                    {
                        visited[i] = true;
                        dfs(start + 1, depth + 1, sum + nums[i]);
                        visited[i] = false;
                    }
                }
            }
        }",https://github.com/j-miiin/Algorithm_Study/blob/main/SPARTA_ALGORITHM_2023/Level2/39_PickTwoNum.cs,2023. 8. 29,39,2
2023. 8. 29 오전 10:01:17,이정환,Unity,19 - 제일 작은 수 제거하기,"using System.Collections.Generic;
using System;

public class Solution {
    public int[] solution(int[] arr) {

        int min= int.MaxValue;
        for(int i=0;i<arr.Length;i++)
        {
            if(arr[i]<min){
                min=arr[i];
            }
        }

        int[] answer = Array.FindAll(arr, num=> num>min);
        if(answer.Length==0){
            int[] a={-1};
            return a;

        }

        return answer;
    }
}",,2023. 8. 29,19,1
2023. 8. 29 오전 10:01:35,송명헌,AI,3 - 자릿수 더하기," 

def solution(n):
    answer = 0

      for i in str(n):
       answer += int(i)

    return answer",,2023. 8. 29,3,1
2023. 8. 29 오전 10:01:51,강성호,Unity,38 - K번째수정렬,"using System;
using System.Collections.Generic;
using System.Linq;

public class Solution {
    public int[] solution(int[] array, int[,] commands) {
        int[] a = new int[] { };
			int[] answer = new int[commands.GetLength(0)];
			for (int i = 0; i < commands.GetLength(0); i++)
			{
				var seg = new ArraySegment<int>(array, commands[i,0] - 1, Math.Abs(commands[i,0] - commands[i,1]) + 1).OrderBy(s => s);
				a = seg.ToArray();
				
				answer[i] = a[commands[i, 2] - 1];
			}
			return answer;
    }
}",,2023. 8. 29,38,2
2023. 8. 29 오전 10:01:57,김형수,Unity,4 - 약수의 합,"public class Solution {
    public int solution(int n) {

        int divisorSum = 0;

        for(int divisor = 1; divisor <= n; divisor++)
        {
            if (n % divisor == 0)
            {
                divisorSum += divisor;
            }
        }

        return divisorSum;
        
        
        //int answer = 0;
        //return answer;
    }
}",https://github.com/Kim-H-S/Programmers/blob/main/%EC%95%BD%EC%88%98%EC%9D%98%20%ED%95%A9.cs,2023. 8. 29,4,1
2023. 8. 29 오전 10:02:40,정범수,AI,36 - 숫자 문자열과 영단어,"def solution(s):
    word_to_num = {
        'zero': 0,
        'one': 1,
        'two': 2,
        'three': 3,
        'four': 4,
        'five': 5,
        'six': 6,
        'seven': 7,
        'eight': 8,
        'nine': 9,
    }
    result = 0
    temp = []
    for i in range(len(s)):
        if len(temp) >= 3:
            word = ''.join(temp)
            if word in word_to_num:
                result = result*10 + word_to_num[word]
                temp = []
        if s[i].isnumeric():
            result = result*10 + int(s[i])
        else:
            temp.append(s[i])
    if temp:
        word = ''.join(temp)
        if word in word_to_num:
            result = result*10 + word_to_num[word]
        
    return result",https://github.com/sudog1/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/81301.%E2%80%85%EC%88%AB%EC%9E%90%E2%80%85%EB%AC%B8%EC%9E%90%EC%97%B4%EA%B3%BC%E2%80%85%EC%98%81%EB%8B%A8%EC%96%B4,2023. 8. 29,36,2
2023. 8. 29 오전 10:03:14,김준범,Unity,5 - 나머지가 1이 되는 수 찾기,"using System;

public class Solution {
    public int solution(int n) 
    {
        int answer = 0;
        
        for (int i = 1; i++ < n - 1;)
            if (n % i == 1)
            {
                answer = i;
                break;
            }
        if (answer == 0) answer = n - 1;
        
        return answer;
    }
}",,2023. 8. 29,5,1
2023. 8. 29 오전 10:03:17,김규승,Unity,129 - 택배 배달과 수거하기,"#include <iostream>
#include <string>
#include <vector>

using namespace std;

long long solution(int cap, int n, vector<int> deliveries, vector<int> pickups) {
    
    long long answer = 0;
    
    //가는 길에 회수하는것은 고려할 필요가 없다. 어차피 돌아가야 하기에.
    //가는길에 회수한다고 더 회수할 수 있는 것도, 더 배달할 수 있는 것도 아니다
        
    //마찬가지로 오는길에 배달하는것도 고려할 필요가 없다.
    //오는길에 배달한다고 배달양이 늘지도. 회수의 양이 늘지도 않는다. 가는길에 배달하는거와 똑같다.
        
    //i번째 집에 배달을 완료하기 위한 최고 효율을 계산
    //배달, 회수중 어느것이 더 중요한가?
    //상관 없다.
    //효율의 관건은 거리.
    //거리가 곧 비용이기 때문에 먼거리를 최소한으로 해야한다.
    //따라서 먼거리 부터 순차적으로 배달, 회수하면 된다.
    int i{n - 1};
    int c{cap};
    while(i >= 0)
    {
        
        if(deliveries[i] == 0 &&
           pickups[i] == 0)
        {
            --i;
            continue;
        }
        
        //해당 인덱스에서 가능한 배달, 회수 횟수를 계산합니다.
        //현 인덱스에서 배달, 회수 횟수가 각각 cap보다 작으면 이전 인덱스를 사용합니다.
        c = cap;
        for(int j = i; j >= 0; --j)
        {
            if(c > deliveries[j])
            {
                c               -= deliveries[j];
                deliveries[j]    = 0;
            }
            else
            {
                deliveries[j]   -= c;
                c                = 0;
                break;
            }
        }
        
        c = cap;
        for(int j = i; j >= 0; --j)
        {
            if(c > pickups[j])
            {
                c           -= pickups[j];
                pickups[j]   = 0;
            }
            else
            {
                pickups[j] -= c;
                c           = 0;
                break;
            }
        }
        
        //왕복 거리를 적용합니다.
        answer += (i + 1) * 2;
        //cout << ""answer: "" << answer << endl;
        
        /*
        for(int j = 0; j < n; ++j)
        {
            cout << ""("" << deliveries[j] << "", "" << pickups[j] << ""), "";
        }
        cout << endl;
        */
        
    }
    
    return answer;
    
}",,2023. 8. 29,129,5
2023. 8. 29 오전 10:04:13,양수홍,AI,34 - 최소직사각형,"def solution(sizes):
    M_lst,m_lst=[],[]
    for w,h in sizes:
        M_lst.append(max(w,h))
        m_lst.append(min(w,h))
        
    return max(M_lst)*max(m_lst)",,2023. 8. 29,34,2
2023. 8. 29 오전 10:04:14,이세진,Unity,13 - 콜라츠 추측,"public class Solution {
    public long solution(long num) {
        int answer = 0;
        
        while(num != 1 && answer < 500)
        {
            if(num % 2 == 0)
            {
                num /= 2;
            }
            else
            {
                num *= 3;
                num += 1;
            }
            answer++;
        }  
        if(answer == 500)
        {
            answer = -1;
        }
        
        
        return answer;
    }
}",,2023. 8. 29,13,1
2023. 8. 29 오전 10:04:34,이솔,AI,10 - 정수 내림차순으로 배치하기,"def solution(n):    
    return int("""".join(sorted(list(str(n)), reverse=True)))",,2023. 8. 28,10,1
2023. 8. 29 오전 10:05:25,이하택,Unity,10 - 정수 내림차순으로 배치하기,"public class Solution 
{
    public long solution(long n) 
    {
        long answer = 0;
        int count = HowManyDigit(n);
        int[] downArray = new int[count];
        long temp;
        int empty;
        int sub;
        for(int i = 0;i < count; i++)
        {
            temp = n % 10;
            downArray[i] = (int)temp;
            n /= 10;
        }
        for(int i = 0; i < count; i++)
        {
            for(int j = 0; j < count; j++)
            {
                empty = downArray[i];
                if(empty < downArray[j])
                {
                    sub = downArray[j];
                    downArray[j] = empty;
                    empty = sub;
                    downArray[i] = empty;
                }
            }
        }
        temp = 1;
        for(int k = 0; k < count; k++)
        {
            answer = (long)(downArray[count -1 -k] * temp);
            temp *= 10;
        }
        return answer;
    }
    public int HowManyDigit(long n)
    {
        int count = 0;
        while(n > 10)
        {
            n /= 10;
            count ++;
        }
        count++;
        return count;
    }
}",https://github.com/LeeHataeg/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12933.%E2%80%85%EC%A0%95%EC%88%98%E2%80%85%EB%82%B4%EB%A6%BC%EC%B0%A8%EC%88%9C%EC%9C%BC%EB%A1%9C%E2%80%85%EB%B0%B0%EC%B9%98%ED%95%98%EA%B8%B0,2023. 8. 29,10,1
2023. 8. 29 오전 10:05:29,송승훈,Unity,15 - 나누어 떨어지는 숫자,"using System;
using System.Collections.Generic;
public class Solution {
    public int[] solution(int[] arr, int divisor) {
        List<int> resultList = new List<int>();

        foreach (int num in arr)
        {
            if (num % divisor == 0)
            {
                resultList.Add(num);
            }
        }

        if (resultList.Count == 0)
        {
            return new int[] { -1 };
        }

        resultList.Sort();
        return resultList.ToArray();
    }
}

",https://github.com/DoDokang318/CodeKata.git,2023. 8. 29,15,1
2023. 8. 29 오전 10:05:34,채이환,Unity,23 - 약수의 개수와 덧셈,"using System;
using System.Collections.Generic;

public class Solution {
    public int solution(int left, int right) {
        int answer = 0;
        
        for (int num = left; num <= right; ++num)
        {
            Dictionary<int,int> divisors = GetDivi(num);
            int divisorCount = 1;
            foreach(int divi in divisors.Values)
            {
                divisorCount = divisorCount * (divi + 1);
            }
            if (divisorCount % 2 == 0)
                answer += num;
            else
                answer -= num;
        }
        
        return answer;
    }
    
    public Dictionary<int,int> GetDivi(int num)
    {
        Dictionary<int,int> divisor = new Dictionary<int,int>();
        while (num > 1)
        {
            int divi = 2;
            while (true)
            {
                if (num % divi == 0)
                {
                    num /= divi;
                    if (divisor.ContainsKey(divi))
                        divisor[divi]++;
                    else
                        divisor.Add(divi, 1);
                    break;
                }
                ++divi;
            }
        }
        return divisor;
    }
}",,2023. 8. 29,23,1
2023. 8. 29 오전 10:05:57,채이환,Unity,24 - 문자열 내림차순으로 배치하기,"using System;
using System.Linq;

public class Solution {
    public string solution(string s) {
        string answer = """";
        char[] charArray = s.ToCharArray();
        Array.Sort(charArray, (x,y) => { 
            if(x>y) return-1;
            else return 1; });
        answer = string.Concat(charArray);
        return answer;
    }
}",,2023. 8. 29,24,1
2023. 8. 29 오전 10:06:16,양덕영,AI,18 - 없는 숫자 더하기,"def solution(numbers):
    missing_numbers = [0] * 10
    
    for num in numbers:
        missing_numbers[num] = 1
    
    total_missing_sum = sum(i for i, present in enumerate(missing_numbers) if not present)
    
    return total_missing_sum

numbers = [0, 1, 3, 5, 6, 8]

print(solution(numbers))",https://github.com/DeokYoung980130/Ai_Project2023-08-07/tree/e059a9b33ceb02b65d2d71e2af7fd4baca3e7e05,2023. 8. 29,18,1
2023. 8. 29 오전 10:06:23,채이환,Unity,25 - 부족한 금액 계산하기,"using System;

class Solution {
    public long solution(int price, int money, int count) {
        long longMoney = money;
        for (int i=1; i<=count; ++i)
        {
            longMoney -= price * i;
        }
        if (longMoney < 0)
            return Math.Abs(longMoney);
        else
            return 0;
    }
}",,2029. 8. 29,25,1
2023. 8. 29 오전 10:06:38,최지연,AI,14 - 서울에서 김서방 찾기,"def solution(seoul):
    count = 0
    for i in range(len(seoul)):
        if seoul[i] == 'Kim':
            count = i
    return f'김서방은 {count}에 있다'",https://github.com/jiyeonCoder/algorithmPractice/blob/main/14.%20%EC%84%9C%EC%9A%B8%EC%97%90%EC%84%9C%20%EA%B9%80%EC%84%9C%EB%B0%A9%20%EC%B0%BE%EA%B8%B0.py,2023. 8. 29,14,1
2023. 8. 29 오전 10:06:42,차명경,AI,6 - x만큼 간격이 있는 n개의 숫자,"def solution(x, n):
    answer=[]
    result = 0
    for i in range(n):
        result+=x
        answer.append(result)
    return answer
        ",,2023. 8. 29,6,1
2023. 8. 29 오전 10:06:48,김대민,Unity,59 - 성격 유형 검사하기,"#include <string>
#include <vector>

using namespace std;

string solution(vector<string> survey, vector<int> choices) {
    string answer = """";
    int Score[26] = {}; 
    vector<int> words = {'R' - 'A', 'T' - 'A',
                         'C' - 'A', 'F' - 'A',
                         'J' - 'A', 'M' - 'A',
                         'A' - 'A', 'N' - 'A'};
    for(int i = 0; i < choices.size(); ++i)
    {
        int c = choices[i] - 4;
        if(c < 0)
        {
            Score[survey[i][0] - 'A'] += -c;
        }
        else
        {
            Score[survey[i][1] - 'A'] += c;
        }
    }
    
    for(int i = 0; i < words.size() ; i += 2)
    {
        if (Score[words[i]] >= Score[words[i + 1]])
        {
            answer += char(words[i] + 'A');
        }
        else
        {
            answer += char(words[i + 1] + 'A');
        }
    }
    return answer;
}",https://github.com/KimDaeMins/CodingTest/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/118666.%E2%80%85%EC%84%B1%EA%B2%A9%E2%80%85%EC%9C%A0%ED%98%95%E2%80%85%EA%B2%80%EC%82%AC%ED%95%98%EA%B8%B0/%EC%84%B1%EA%B2%A9%E2%80%85%EC%9C%A0%ED%98%95%E2%80%85%EA%B2%80%EC%82%AC%ED%95%98%EA%B8%B0.cpp,2023. 8. 29,59,3
2023. 8. 29 오전 10:06:51,이솔,AI,11 - 하샤드 수,"def solution(x):
    
    num = 0
    num_str = list(str(x))
    for i in num_str:
        num += int(i)
    
    return False if x%num else True",,2023. 8. 28,11,1
2023. 8. 29 오전 10:07:11,김대민,Unity,58 - 햄버거 만들기,"#include <string>
#include <vector>
#include <stack>
using namespace std;

int solution(vector<int> ingredient) {
    int answer = 0;
    stack<int> st;
    stack<int> pst;

    for (int i : ingredient)
    {
        st.push(i);

        if (st.size() >= 4 && st.top() == 1)
        {
            pst.push(st.top());
            st.pop();
            if (st.top() == 3)
            {
                pst.push(st.top());
                st.pop();
                if (st.top() == 2)
                {
                    pst.push(st.top());
                    st.pop();
                    if (st.top() == 1)
                    {
                        stack<int> t;
                        pst.swap(t);
                        st.pop();
                        ++answer;
                    }
                }
            }

            while (!pst.empty())
            {
                st.push(pst.top());
                pst.pop();
            }
        }

    }

    return answer;
}",https://github.com/KimDaeMins/CodingTest/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/unrated/133502.%E2%80%85%ED%96%84%EB%B2%84%EA%B1%B0%E2%80%85%EB%A7%8C%EB%93%A4%EA%B8%B0/%ED%96%84%EB%B2%84%EA%B1%B0%E2%80%85%EB%A7%8C%EB%93%A4%EA%B8%B0.cpp,2023. 8. 29,58,3
2023. 8. 29 오전 10:07:33,김대민,Unity,55 - 문자열 나누기,"#include <string>
#include <vector>

using namespace std;

int solution(string s) {
    int answer = 0;
    
    char firstWord = s[0];
    int WordCount = 1;
    int index = 1;
    while(index != s.size())
    {
        if(firstWord == s[index])
            ++WordCount;
        else
            --WordCount;
        
        if(WordCount == 0)
        {
            ++answer;
            
            if(index + 1 == s.size())
                return answer;
            firstWord = s[++index];
            WordCount = 1;
        }
        ++index;
    }
     ++answer;
    return answer;
}",https://github.com/KimDaeMins/CodingTest/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/unrated/140108.%E2%80%85%EB%AC%B8%EC%9E%90%EC%97%B4%E2%80%85%EB%82%98%EB%88%84%EA%B8%B0/%EB%AC%B8%EC%9E%90%EC%97%B4%E2%80%85%EB%82%98%EB%88%84%EA%B8%B0.cpp,2023. 8. 29,55,3
2023. 8. 29 오전 10:07:46,명세인,AI,15 - 나누어 떨어지는 숫자,"def solution(arr, divisor):
    answer = []
    for a in arr:
        if a % divisor == 0:
            answer.append(a)
            
    answer.sort()       
    if len(answer) == 0:
        answer.append(-1)
    return answer",https://github.com/playersein/Coding_Test/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12910.%E2%80%85%EB%82%98%EB%88%84%EC%96%B4%E2%80%85%EB%96%A8%EC%96%B4%EC%A7%80%EB%8A%94%E2%80%85%EC%88%AB%EC%9E%90%E2%80%85%EB%B0%B0%EC%97%B4,2023. 8. 29,15,1
2023. 8. 29 오전 10:07:55,김대민,Unity,61 - 개인정보 수집 유효기간,"#include <string>
#include <vector>
#include <unordered_map>
using namespace std;

vector<int> solution(string today, vector<string> terms, vector<string> privacies) {
    vector<int> answer;
    vector<int> dayCheck;
    unordered_map<char, int> map;
    for(string a : terms)
    {
        map.emplace(a[0], stoi(a.substr(2)));
    }
    for(string a : privacies)
    {
        int y = stoi(a.substr(0, 4));
        int m = stoi(a.substr(5, 2));
        int d = stoi(a.substr(8, 2));
        char t = a[11];
        dayCheck.push_back((y - 2000) * 12 * 28 + m * 28 + d + map[t] * 28 - 1);
    }
    int y = stoi(today.substr(0, 4));
    int m = stoi(today.substr(5, 2));
    int d = stoi(today.substr(8, 2));
    int now = (y - 2000) * 12 * 28 + m * 28 + d;
    
    for(int i = 0; i < dayCheck.size(); ++i)
    {
        if(dayCheck[i] < now)
        {
            answer.push_back(i + 1);
        }
    }
    return answer;
}",https://github.com/KimDaeMins/CodingTest/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/unrated/150370.%E2%80%85%EA%B0%9C%EC%9D%B8%EC%A0%95%EB%B3%B4%E2%80%85%EC%88%98%EC%A7%91%E2%80%85%EC%9C%A0%ED%9A%A8%EA%B8%B0%EA%B0%84/%EA%B0%9C%EC%9D%B8%EC%A0%95%EB%B3%B4%E2%80%85%EC%88%98%EC%A7%91%E2%80%85%EC%9C%A0%ED%9A%A8%EA%B8%B0%EA%B0%84.cpp,2023. 8. 29,61,3
2023. 8. 29 오전 10:08:08,곽정원,AI,4 - 약수의 합,"def solution(n):
    sumdivisor = 0
    for i in range(1, n+1):
        if n % i == 0: sumdivisor += i
    return sumdivisor

n = int(input(""정수를 입력하시오>""))
solution(n)",https://github.com/Team-Kawa/nbc/blob/master/code_KATA/4th.py,2023. 8. 29,4,1
2023. 8. 29 오전 10:08:15,김대민,Unity,57 - 둘만의 암호,"#include <string>
#include <vector>

using namespace std;

string solution(string s, string skip, int index) {
    string answer = """";
    bool skips[26] = {};
    for(char c : skip) 
        skips[c - 'a'] = true;
    
    for(char c : s)
    {
        int idx = index;
        while(idx)
        {
            do
            {
                ++c;
             if(c > 'z')
                 c -= 26;
            }while(skips[c - 'a']);
            --idx;
        }
        answer += c;
    }
    return answer;
}",https://github.com/KimDaeMins/CodingTest/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/unrated/155652.%E2%80%85%EB%91%98%EB%A7%8C%EC%9D%98%E2%80%85%EC%95%94%ED%98%B8/%EB%91%98%EB%A7%8C%EC%9D%98%E2%80%85%EC%95%94%ED%98%B8.cpp,2023. 8. 29,57,3
2023. 8. 29 오전 10:08:18,이형빈,Unity,9 - 정수 제곱근 판별,"using System;
public class Solution {
    public long solution(long n) {
        long answer = 0;
        long square = (long)Math.Sqrt(n);
        
        if(n == square * square)
        {
            answer = (square + 1) * (square + 1);          
        }
        else
        {
            answer = -1;
            
        }
        return answer;
    }
}",,2023. 8. 29,9,1
2023. 8. 29 오전 10:08:21,지민규,Unity,19 - 제일 작은 수 제거하기,"using System;
using System.Collections.Generic;
using System.Linq;

public class Solution {
    public int[] solution(int[] arr) {
        List<int> copyList = arr.ToList();
        Array.Sort(arr);
        Array.Reverse(arr);
        int minNum = arr[arr.Length - 1];
        if (arr.Length > 1)
        {
            copyList = copyList.Where(num => num != minNum).ToList();
            return copyList.ToArray();
        }
        else
        {
            int[] answer = new int[1] {-1};
            return answer;
        }
    }
}",,2023. 8. 29,19,1
2023. 8. 29 오전 10:08:27,송승훈,Unity,16 - 음양 더하기,"using System;

public class Solution {
    public int solution(int[] absolutes, bool[] signs) {
        int answer = 0;
        for(int i = 0 ; i<absolutes.Length;i++)
        {
            if(!signs[i])
            {
                absolutes[i] =absolutes[i] - (absolutes[i]*2);
            }
            
            answer +=absolutes[i];
        }
        
        return answer;
    }
}",https://github.com/DoDokang318/CodeKata.git,2023. 8. 29,16,1
2023. 8. 29 오전 10:08:37,김대민,Unity,56 - 대충 만든 자판,"#include <string>
#include <vector>
#include <cmath>
#include <algorithm>

using namespace std;

vector<int> solution(vector<string> keymap, vector<string> targets) {
    vector<int> answer;
    int arr[26] = {};
    std::fill(arr, arr + 26, 9999);
    int Input = 0;
    int secondInput = 0;
    for (string a : keymap)
    {
        for (int i = 0; i < a.size(); ++i)
        {
            arr[a[i] - 'A'] = min(arr[a[i] - 'A'], i + 1);
        }
    }
    for (string a : targets)
    {
        for (int i = 0; i < a.size(); ++i)
        {
            Input += arr[a[i] - 'A'];
            if (arr[a[i] - 'A'] == 9999)
            {
                Input = -1;
                break;
            }
        }
        answer.push_back(Input);
        Input = 0;
    }
    return answer;
}",https://docs.google.com/forms/d/e/1FAIpQLSf24FbTyD7MTN1tVPCRV1-qzqBJvzIxaoX9QmfJlw0HTu-P0A/viewform?fbzx=-2236331642489120757,2023. 8. 29,56,3
2023. 8. 29 오전 10:08:51,노동균,Unity,15 - 나누어 떨어지는 숫자,"using System.Collections.Generic;

public class Solution {
    public int[] solution(int[] arr, int divisor) {
        List<int> answer = new List<int>(arr.Length);
        
        for(int i=0;i<arr.Length;++i)
        {
            if(arr[i]%divisor == 0)
                answer.Add(arr[i]);
        }
        
        if(answer.Count == 0)
            answer.Add(-1);
        
        answer.Sort();
        
        return answer.ToArray();    
    }
}",https://github.com/shehdrbs123/Sparta/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12910.%E2%80%85%EB%82%98%EB%88%84%EC%96%B4%E2%80%85%EB%96%A8%EC%96%B4%EC%A7%80%EB%8A%94%E2%80%85%EC%88%AB%EC%9E%90%E2%80%85%EB%B0%B0%EC%97%B4,2023. 8. 28,15,1
2023. 8. 29 오전 10:08:56,김대민,Unity,60 - 바탕화면 정리,"#include <string>
#include <vector>
#include <cmath>
using namespace std;

vector<int> solution(vector<string> wallpaper) {
    vector<int> answer;
    
    //i중 가장 작은값은 0에
    //i중 가장 큰 값은 2에
    //j중 가장 작은값은 1에
    //j중 가장 큰값은 3에
    answer.push_back(100);
        answer.push_back(100);
        answer.push_back(0);
        answer.push_back(0);
    for(int i = 0; i < wallpaper.size() ; ++i)
    {
        bool isshap = false;
        for(int j = 0; j < wallpaper[i].size(); ++j)
        {
            if(wallpaper[i][j] == '#')
            {
                isshap = true;
                answer[1] = min(answer[1], j);
                answer[3] = max(answer[3], j + 1);
            }
        }
        if(isshap)
        {
            answer[0] = min(answer[0], i);
            answer[2] = i + 1;
        }
        
    }
    return answer;
}",https://github.com/KimDaeMins/CodingTest/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/unrated/161990.%E2%80%85%EB%B0%94%ED%83%95%ED%99%94%EB%A9%B4%E2%80%85%EC%A0%95%EB%A6%AC/%EB%B0%94%ED%83%95%ED%99%94%EB%A9%B4%E2%80%85%EC%A0%95%EB%A6%AC.cpp,2023. 8. 29,60,3
2023. 8. 29 오전 10:08:56,송승훈,Unity,17 - 핸드폰 번호 가리기,"public class Solution {
    public string solution(string phone_number) {
        string answer = """";       
        char[] Charnum = phone_number.ToCharArray();
        
        for(int i = 0 ; i <=Charnum.Length;i++ )
        {
            if(i>4)
            {
            Charnum[Charnum.Length-i] = '*';
            }
           
                
        }
       return new string(Charnum);
        
        //문자 배열을 문자열로 변환하려면 new string(Charnum)을 사용해야한다 
    }
}",https://github.com/DoDokang318/CodeKata.git,2023. 8. 29,17,1
2023. 8. 29 오전 10:09:19,김대민,Unity,63 - 공원 산책,"#include <string>
#include <vector>
#include <queue>
using namespace std;
int moveY[4] = {-1, 0, 1, 0};
int moveX[4] = {0, 1, 0, -1};
enum Dir {상, 우, 하, 좌};
vector<int> solution(vector<string> park, vector<string> routes) {
    vector<int> answer;
    vector<vector<char>> Xs;
    Xs.resize(park.size());
    queue<pair<Dir, int>> moves;
    pair<int, int> dog;
    for(int i = 0; i < park.size(); ++i)
    {
        for(int j = 0; j < park[i].size(); ++j)
        {
            Xs[i].push_back(park[i][j]);
            
            if(park[i][j] == 'S')
                dog = pair<int,int>(i, j);
        }
    }
    
    for(int i = 0; i < routes.size(); ++i)
    {
        if(routes[i][0] == 'N')
            moves.push(pair<Dir,int>(상, stoi(routes[i].substr(2))));
        else if(routes[i][0] == 'E')
            moves.push(pair<Dir,int>(우, stoi(routes[i].substr(2))));
        else if(routes[i][0] == 'S')
            moves.push(pair<Dir,int>(하, stoi(routes[i].substr(2))));
        else if(routes[i][0] == 'W')
            moves.push(pair<Dir,int>(좌, stoi(routes[i].substr(2))));
    }
    
    while(!moves.empty())
    {
        pair<Dir, int> p = moves.front();
        moves.pop();
        pair<int, int> shadowDog = dog;
        bool move = true;
        
        int endPosX = shadowDog.first + moveY[p.first] * p.second;
        int endPosY = shadowDog.second + moveX[p.first] * p.second;
        if(endPosX < 0 || endPosX >= Xs.size()
          ||endPosY < 0 || endPosY >= Xs[0].size())
            continue;
        
        for(int i = 0; i < p.second; ++i)
        {
            shadowDog.first += moveY[p.first];
            shadowDog.second += moveX[p.first];
            
            if(Xs[shadowDog.first][shadowDog.second] == 'X')
            {
                move = false;
                break;
            }
        }
        
        if(move == true)
        {
            dog = shadowDog;
        }
    }
    answer.push_back(dog.first);
        answer.push_back(dog.second);
    return answer;
}",https://github.com/KimDaeMins/CodingTest/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/unrated/172928.%E2%80%85%EA%B3%B5%EC%9B%90%E2%80%85%EC%82%B0%EC%B1%85/%EA%B3%B5%EC%9B%90%E2%80%85%EC%82%B0%EC%B1%85.cpp,2023. 8. 29,63,3
2023. 8. 29 오전 10:09:21,노동균,Unity,16 - 음양 더하기,"using System;

public class Solution {
    public int solution(int[] absolutes, bool[] signs) {
        int answer = 0;
        
        for(int i=0;i<absolutes.Length;++i)
        {
            if(!signs[i])
                absolutes[i] *= -1;
            answer+= absolutes[i];
        }
        
        return answer;
    }
}",https://github.com/shehdrbs123/Sparta/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/76501.%E2%80%85%EC%9D%8C%EC%96%91%E2%80%85%EB%8D%94%ED%95%98%EA%B8%B0,2023. 8. 28,16,1
2023. 8. 29 오전 10:09:42,김대민,Unity,62 - 달리기 경주,"#include <string>
#include <vector>
#include <algorithm>
#include <unordered_map>
using namespace std;

vector<string> solution(vector<string> players, vector<string> callings) {
    vector<string> answer;
    answer.resize(players.size());
    unordered_map<string, int> m;
    for(int i = 0; i < players.size(); ++i)
    {
        m.emplace(players[i], i);
    }
    
    for(int i = 0; i < callings.size(); ++i)
    {
        //인덱스추출
        int index = m[callings[i]];
        int index2 = index - 1;
        
        //player에서 순위바꾸고
        string temp = players[index];
        players[index] = players[index2];
        players[index2] = temp;
        
        //map에 적용
        m[players[index2]]--;
        m[players[index]]++;
    }
    for(auto p : m)
    {
        answer[p.second] = p.first;
    }
    return answer;
}",https://github.com/KimDaeMins/CodingTest/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/unrated/178871.%E2%80%85%EB%8B%AC%EB%A6%AC%EA%B8%B0%E2%80%85%EA%B2%BD%EC%A3%BC/%EB%8B%AC%EB%A6%AC%EA%B8%B0%E2%80%85%EA%B2%BD%EC%A3%BC.cpp,2023. 8. 29,62,3
2023. 8. 29 오전 10:10:32,노동균,Unity,18 - 없는 숫자 더하기,"using System;

public class Solution {
    public int solution(int[] numbers) {
        int answer = 0;
        int currentCheckNum=0;
        int i=0;
        Array.Sort(numbers);
        
        while(currentCheckNum <= 9)
        {
            if(currentCheckNum != numbers[i])
            {
                answer += currentCheckNum;
            }else
            {
                i = Math.Clamp(i+1,0,numbers.Length-1);
            }
            ++currentCheckNum;
        }
        
        return answer;
    }
}",https://github.com/shehdrbs123/Sparta/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/86051.%E2%80%85%EC%97%86%EB%8A%94%E2%80%85%EC%88%AB%EC%9E%90%E2%80%85%EB%8D%94%ED%95%98%EA%B8%B0,2023. 8. 28,18,1
2023. 8. 29 오전 10:10:38,김주형,Unity,11 - 하샤드 수,"public class Solution
{
    public bool solution(int x) 
    {
        int a = 0;
        int b = x;
        bool answer;

        while (b>0)
        {
            a += b % 10;
            b /= 10;
        }
        if (x%a ==0)
        {
            answer = true;
        }
        else answer = false;


        return answer;
    }
}",https://github.com/kjuhyung/Algorithm.git,2023. 8. 29,11,1
2023. 8. 29 오전 10:10:59,신우석,Unity,40 - 가장 가까운 같은 글자,"using System;
using System.Collections.Generic;

public class Solution {
    public int[] solution(string s) {
        int?[] positions = new int?[26];
        List<int> answer = new List<int>();
        
        for (int i = 0; i < s.Length; ++i) {
            if (positions[s[i] - 'a'] == null)
                answer.Add(-1);
            else
                answer.Add(i - (int)positions[s[i] - 'a']);
            positions[s[i] - 'a'] = (int?)i;
        }
        
        return answer.ToArray();
    }
}",https://github.com/seoksii/AlgorithmCodeKata/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/unrated/142086.%E2%80%85%EA%B0%80%EC%9E%A5%E2%80%85%EA%B0%80%EA%B9%8C%EC%9A%B4%E2%80%85%EA%B0%99%EC%9D%80%E2%80%85%EA%B8%80%EC%9E%90,2023. 8. 29,40,2
2023. 8. 29 오전 10:11:02,노동균,Unity,19 - 제일 작은 수 제거하기,"using System.Collections.Generic;
public class Solution {
    public int[] solution(int[] arr) {
        List<int> answer = new List<int>(arr.Length-1);
        int minIdx = 0;
        for(int i=1;i<arr.Length;++i)
        {
            if(arr[minIdx] > arr[i])
                minIdx = i;
        }
        
        
        for(int i=0;i<arr.Length;++i)
        {
            if(minIdx == i)
                continue;
            answer.Add(arr[i]);
        }
        
        if(answer.Count == 0)
            answer.Add(-1);
        
        return answer.ToArray();
    }
}",https://github.com/shehdrbs123/Sparta/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12935.%E2%80%85%EC%A0%9C%EC%9D%BC%E2%80%85%EC%9E%91%EC%9D%80%E2%80%85%EC%88%98%E2%80%85%EC%A0%9C%EA%B1%B0%ED%95%98%EA%B8%B0,2023. 8. 28,19,1
2023. 8. 29 오전 10:11:36,노동균,Unity,20 - 가운데 글자 가져오기,"public class Solution {
    public string solution(string s) {
        string answer = """";
        int halfPos = (int)(s.Length*0.5f);
        
        if(s.Length % 2 == 1)
            answer = s.Substring(halfPos,1);
        else
            answer = s.Substring(halfPos-1,2);
        
        
        return answer;
    }
}",https://github.com/shehdrbs123/Sparta/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12903.%E2%80%85%EA%B0%80%EC%9A%B4%EB%8D%B0%E2%80%85%EA%B8%80%EC%9E%90%E2%80%85%EA%B0%80%EC%A0%B8%EC%98%A4%EA%B8%B0,2023. 8. 28,20,1
2023. 8. 29 오전 10:12:14,장현웅,AI,8 - 문자열을 정수로 바꾸기,"def solution(s):
    answer = 0
    
    if s[0] == str:
        answer = s[0] + int(s[1:])
    else:
        answer = int(s)
        
    return answer",https://github.com/HyeonwoongJang/Algorithm.git,2023. 8. 29,8,1
2023. 8. 29 오전 10:12:22,이기호,AI,4 - 약수의 합,"def solution(n):
    sum=0
    for i in range(1, n+1):
        if n % i == 0:
            sum += i
    return(sum)",,2023. 8. 25,4,1
2023. 8. 29 오전 10:12:29,노동균,Unity,22 - 내적,"using System;

public class Solution {
    public int solution(int[] a, int[] b) {
        int answer = 0;
        
        for(int i=0;i<a.Length;++i)
        {
            answer += a[i]*b[i];
        }
        return answer;
    }
}",https://github.com/shehdrbs123/Sparta/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/70128.%E2%80%85%EB%82%B4%EC%A0%81,2023. 8. 28,22,1
2023. 8. 29 오전 10:12:55,노동균,Unity,23 - 약수의 개수와 덧셈,"using System;

public class Solution {
    public int solution(int left, int right) {
        int answer = 0;
        
        for(int i = left; i<=right;++i)
        {
            int count = GetDivisorCount(i);
            if(count %2 == 0)
                answer += i;
            else
                answer -= i;
        }
        return answer;
    }
    
    public int GetDivisorCount(int target)
    {
        int sqrtTarget = (int)Math.Sqrt(target);
        int count=0;
        for(int i=1;i<=sqrtTarget;++i)
        {
            if(target % i == 0)
            {
                if(i != target/i)
                    ++count;
                ++count;
            }
        }
        
        return count;
    }
}",https://github.com/shehdrbs123/Sparta/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/77884.%E2%80%85%EC%95%BD%EC%88%98%EC%9D%98%E2%80%85%EA%B0%9C%EC%88%98%EC%99%80%E2%80%85%EB%8D%A7%EC%85%88,2023. 8. 28,23,1
2023. 8. 29 오전 10:13:22,노동균,Unity,17 - 핸드폰 번호 가리기,"using System;
using System.Text;
public class Solution {
    public string solution(string phone_number) {
        StringBuilder sb = new StringBuilder(phone_number.Length);
        string prefixSubstring;
        string suffixSubstring;
        
        suffixSubstring = phone_number.Substring(phone_number.Length-4,4);
        prefixSubstring = phone_number.Substring(0,phone_number.Length-4);
          
        for(int i=0;i<prefixSubstring.Length;++i)
        {
            sb.Append(""*"");
        }
        sb.Append(suffixSubstring);
        return sb.ToString();
    }
}",https://github.com/shehdrbs123/Sparta/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12948.%E2%80%85%ED%95%B8%EB%93%9C%ED%8F%B0%E2%80%85%EB%B2%88%ED%98%B8%E2%80%85%EA%B0%80%EB%A6%AC%EA%B8%B0,2023. 8. 29,17,1
2023. 8. 29 오전 10:13:35,이솔,AI,12 - 두 정수 사이의 합,"def solution(a, b):
    answer = 0
    if a == b:
        return a
    elif a < b:
        x,y = a,b
    else:
        x,y = b,a
    
    for i in range(x,y+1):
        answer += i
    
    return answer",,2023. 8. 28,12,1
2023. 8. 29 오전 10:13:43,공혜진,AI,7 - 자연수 뒤집어 배열로 만들기,"def solution(n):
    answer = list(map(int, str(n)))
    answer.reverse()
    return answer",,2023. 8. 29,7,1
2023. 8. 29 오전 10:13:53,노동균,Unity,21 - 수박수박수박수박수박수?,"using System.Text;
public class Solution {
    public string solution(int n) {
        StringBuilder sb = new StringBuilder(n);
        char added = '수';

        for(int i=0;i<n;++i)
        {
            sb.Append(added);
            if(added == '수')
                added = '박';
            else
                added = '수';
        }

        return sb.ToString();
    }
}",https://github.com/shehdrbs123/Sparta/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12922.%E2%80%85%EC%88%98%EB%B0%95%EC%88%98%EB%B0%95%EC%88%98%EB%B0%95%EC%88%98%EB%B0%95%EC%88%98%EB%B0%95%EC%88%98%EF%BC%9F,2023. 8. 29,21,1
2023. 8. 29 오전 10:14:03,이진범,AI,11 - 하샤드 수,"def solution(x):
    a_sum = sum(int(digit) for digit in str(x))
    
    if x % a_sum == 0:
        return True
    else:
        return False

print(solution(18))  # True
print(solution(19))  # False
",,2023. 8. 29,11,1
2023. 8. 29 오전 10:14:41,조성훈,Unity,8 - 문자열을 정수로 바꾸기,"public class Solution 
{
    public int solution(string s) 
    {
        int answer = int.Parse(s);
        return answer;
    }
}
",,2023. 8. 29,8,1
2023. 8. 29 오전 10:14:43,조장원,AI,5 - 나머지가 1이 되는 수 찾기,"def solution(n):
    
    for i in range(2,n):
        
        if (n % i == 1):
            
            return i",https://github.com/jangwonne/code_test/commit/c37148aa52da2041a3aafe0292f8c2db18d5e508,2023. 8. 29,5,1
2023. 8. 29 오전 10:14:52,노동균,Unity,24 - 문자열 내림차순으로 배치하기,"using System;
public class Solution {
    public string solution(string s) {
        string answer = """";
        char[] charArr = s.ToCharArray();
        
        Array.Sort(charArr, (x,y) => y.CompareTo(x));
        
        answer = new string(charArr);
        return answer;
    }
}",https://github.com/shehdrbs123/Sparta/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12917.%E2%80%85%EB%AC%B8%EC%9E%90%EC%97%B4%E2%80%85%EB%82%B4%EB%A6%BC%EC%B0%A8%EC%88%9C%EC%9C%BC%EB%A1%9C%E2%80%85%EB%B0%B0%EC%B9%98%ED%95%98%EA%B8%B0,2023. 8. 29,24,1
2023. 8. 29 오전 10:15:07,조성훈,Unity,9 - 정수 제곱근 판별,"public class Solution {
    public long solution(long n) {
        long answer = 0;
        for(long i=1; i<=n; i++)
        {
            if(i*i==n)
            {
                answer =(i+1)*(i+1);
                break;
            }
            else if(i*i>=n)
            {
                answer= -1;
                break;
            }
        }
        return answer;
    }
}",,2023. 8. 29,9,1
2023. 8. 29 오전 10:15:22,노동균,Unity,25 - 부족한 금액 계산하기,"using System;

class Solution
{
    public long solution(int price, int money, int count)
    {
        long result=0;
        long needMoney=0;
        
        for(int i=1;i<=count;++i)
        {
            needMoney += price*i;
        }
        
        result = money-needMoney;
        if(result < 0)
            result *= -1;
        else
            result = 0;
        return result;
    }
}",https://github.com/shehdrbs123/Sparta/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/82612.%E2%80%85%EB%B6%80%EC%A1%B1%ED%95%9C%E2%80%85%EA%B8%88%EC%95%A1%E2%80%85%EA%B3%84%EC%82%B0%ED%95%98%EA%B8%B0,2023. 8. 29,25,1
2023. 8. 29 오전 10:16:03,노동균,Unity,26 - 문자열 다루기 기본,"using System;
using System.Text.RegularExpressions;

public class Solution {
    public bool solution(string s) {
        return solve2(s);
    }
    
    public bool solve2(string s)
    {
        Regex reg = new Regex(@""^[0-9]{4}$|^[0-9]{6}$"");
        bool result;
        
        result = reg.IsMatch(s);
        
        return result;
    }
    
    public bool solve1(string s)
    {
        char[] c = s.ToCharArray();
        if(s.Length == 4 || s.Length == 6)
        {
            foreach(char a in c)
            {   
                if( a <'0' || a >'9')
                    return false;
            }
            return true;
        }        
        return false;
    }
}",https://github.com/shehdrbs123/Sparta/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12918.%E2%80%85%EB%AC%B8%EC%9E%90%EC%97%B4%E2%80%85%EB%8B%A4%EB%A3%A8%EA%B8%B0%E2%80%85%EA%B8%B0%EB%B3%B8,2023. 8. 29,26,1
2023. 8. 29 오전 10:16:33,정범수,AI,37 - 문자열 내 마음대로 정렬하기,"from functools import cmp_to_key

def solution(strings, n):
    def comp(a, b):
        if a[n] < b[n]:
            return -1
        elif a[n] > b[n]:
            return 1
        else:
            if a < b:
                return -1
            else:
                return 1
    return sorted(strings, key=cmp_to_key(comp))",https://github.com/sudog1/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12915.%E2%80%85%EB%AC%B8%EC%9E%90%EC%97%B4%E2%80%85%EB%82%B4%E2%80%85%EB%A7%88%EC%9D%8C%EB%8C%80%EB%A1%9C%E2%80%85%EC%A0%95%EB%A0%AC%ED%95%98%EA%B8%B0,2023. 8. 29,37,2
2023. 8. 29 오전 10:16:49,김진환,Unity,33 - 크기가 작은 부분,"public static int solution(string t, string p)
        {
            int answer = 0;
            bool same = true;
            for (int i = 0; i < t.Length - p.Length + 1; i++)
            {
                same = true;
                // 조건 앞자리가 작으면 무조건 작다.
                for (int j = 0; j < p.Length; j++)
                {
                    if (t[i+j] < p[j])
                    {
                        break;
                    }
                    else if(t[i + j] > p[j])
                    {
                        same = false;
                        break;
                    }
                }
                if(same)
                    answer++;
            }
            return answer;
        }",https://github.com/NewRound/AlgorithmKata.git,2023. 8. 29,33,2
2023. 8. 29 오전 10:17:01,노동균,Unity,28 - 직사각형 별찍기,"using System;

public class Example
{
    public static void Main()
    {
        String[] s;

        s = Console.ReadLine().Split(' ');

        int a = Int32.Parse(s[0]);
        int b = Int32.Parse(s[1]);

        for(int i=0;i<b;++i)
        {
            for(int j=1;j<a;++j)
            {
                Console.Write(""*"");
            }
            Console.WriteLine(""*"");
        }
    }
}",https://github.com/shehdrbs123/Sparta/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12969.%E2%80%85%EC%A7%81%EC%82%AC%EA%B0%81%ED%98%95%E2%80%85%EB%B3%84%EC%B0%8D%EA%B8%B0,2023. 8. 29,28,1
2023. 8. 29 오전 10:17:09,김호찬,AI,11 - 하샤드 수,"def solution(x):
    x_sum = 0

    for i in str(x):
        x_sum += int(i)
    if x % x_sum == 0:
        return True

    return False",https://github.com/hckim1/Coding-Practice/blob/main/Programmers%EB%AC%B8%EC%A0%9C/Q11.py,2023. 8. 29,11,1
2023. 8. 29 오전 10:17:45,노동균,Unity,27 - 행렬의 덧셈,"public class Solution {
    public int[,] solution(int[,] arr1, int[,] arr2) {
        int[,] answer;
        int y = arr1.GetLength(0);
        int x = arr1.GetLength(1);
        
        answer = new int[y,x];
        
        for(int i=0;i<y;i++)
        {
            for(int j=0;j<x;j++)
            {
                answer[i,j] = arr1[i,j] + arr2[i,j];
            }
        }
        return answer;
    }
}",https://github.com/shehdrbs123/Sparta/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12950.%E2%80%85%ED%96%89%EB%A0%AC%EC%9D%98%E2%80%85%EB%8D%A7%EC%85%88,2023. 8. 29,27,1
2023. 8. 29 오전 10:18:14,노동균,Unity,29 - 최대공약수와 최소공배수,"public class Solution {
    public int[] solution(int n, int m) {
        int[] answer = new int[2];
        int tmpM = m;
        int tmpN = n;
        
        while(true)
        {
            int rest = tmpM%tmpN;
            if(rest == 0)
                break;
            tmpM = tmpN;
            tmpN = rest;
        }
        
        answer[0] = tmpN;
        
        
        tmpM = m;
        tmpN = n;
        
        answer[1] = tmpM*tmpN/answer[0];
        
        return answer;
    }
}",https://github.com/shehdrbs123/Sparta/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12940.%E2%80%85%EC%B5%9C%EB%8C%80%EA%B3%B5%EC%95%BD%EC%88%98%EC%99%80%E2%80%85%EC%B5%9C%EC%86%8C%EA%B3%B5%EB%B0%B0%EC%88%98,2023. 8. 29,29,1
2023. 8. 29 오전 10:18:48,정주찬,Unity,30 - 3진법 뒤집기,"using System;

public class Solution {
    public int solution(int n) {
        string answer = """";
        while(n > 0) 
        {
            answer += (n % 3);
            n /= 3;
        }

        int sum = 0;
        int j = 1;
        for(int i = answer.Length - 1; i >= 0; i--)
        {
            if (answer[i] != '0')
            {
                int a = answer[i] - '0';
                sum += a * j;
            }

            j *= 3;
        }
        
        return sum;
}}",https://github.com/JeongJuChan/Algorithm/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/68935.%E2%80%853%EC%A7%84%EB%B2%95%E2%80%85%EB%92%A4%EC%A7%91%EA%B8%B0/3%EC%A7%84%EB%B2%95%E2%80%85%EB%92%A4%EC%A7%91%EA%B8%B0.cs,2023. 8. 29,30,1
2023. 8. 29 오전 10:19:12,김도현B,Unity,25 - 부족한 금액 계산하기,"using System;

class Solution
{
    public long solution(int price, int money, int count)
    {
        long sum = 0;
        for(int i = 1; i <= count; i++){
            sum += price * i;
        }
        return sum - money > 0 ? sum - money : 0;
    }
}",https://github.com/subscriptioncat/Algorithm,2023. 8. 29,25,1
2023. 8. 29 오전 10:19:23,정주찬,Unity,31 - 이상한 문자 만들기,"using System;
using System.Text;
public class Solution {
    public string solution(string s) {
        string[] sArr = s.Split();
StringBuilder stringBuilder = new StringBuilder();
for (int i = 0; i < sArr.Length; i++)
{
    char[] cArr = sArr[i].ToCharArray();
    for (int j = 0; j < cArr.Length; j++)
    {
        cArr[j] = j % 2 == 0 ? char.ToUpper(cArr[j]) : char.ToLower(cArr[j]);
    }

    stringBuilder.Append(new string(cArr));
    if (i != sArr.Length - 1)
    {
        stringBuilder.Append("" "");
    }
}

return stringBuilder.ToString();
    }
}",https://github.com/JeongJuChan/Algorithm/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12930.%E2%80%85%EC%9D%B4%EC%83%81%ED%95%9C%E2%80%85%EB%AC%B8%EC%9E%90%E2%80%85%EB%A7%8C%EB%93%A4%EA%B8%B0/%EC%9D%B4%EC%83%81%ED%95%9C%E2%80%85%EB%AC%B8%EC%9E%90%E2%80%85%EB%A7%8C%EB%93%A4%EA%B8%B0.cs,2023. 8. 29,31,2
2023. 8. 29 오전 10:19:28,남의서,AI,31 - 이상한 문자 만들기,"def solution(s):
    answer = ''
    s = s.split(' ')
    
    for i in s:
        cou = 1
        for k in i:
            if cou == 1:
                answer += k.upper()
            else:
                answer += k.lower()
            cou *= -1
        answer += ' '
    return answer[:-1]",,2023. 8. 29,31,2
2023. 8. 29 오전 10:19:36,이진범,AI,12 - 두 정수 사이의 합,"def solution(a, b):
    start = min(a, b)
    end = max(a, b)

    total_sum = sum(range(start, end + 1))

    return total_sum


print(solution(3, 5))
print(solution(5, 3))
print(solution(-3, 3))
print(solution(0, 0))",,2023. 8. 29,12,1
2023. 8. 29 오전 10:19:47,정주찬,Unity,32 - 삼총사,"using System;

public class Solution {
    public int solution(int[] number) {
        int answer = 0;
        for (int i = 0; i < number.Length - 2; i++)
        {
            for(int j = i + 1; j < number.Length - 1; j++)
            {
                for (int k = j + 1; k < number.Length; k++)
                {
                    if (number[i] + number[j] + number[k] == 0)
                    {
                        answer++;
                    }
                }
            }
        }
        return answer;
    }
}",https://github.com/JeongJuChan/Algorithm/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/131705.%E2%80%85%EC%82%BC%EC%B4%9D%EC%82%AC/%EC%82%BC%EC%B4%9D%EC%82%AC.cs,2023. 8. 29,32,2
2023. 8. 29 오전 10:20:03,송명근,Unity,10 - 정수 내림차순으로 배치하기,"using System;
public class Solution {
    public long solution(long n) {
        string nString = n.ToString();
        char[] nArr = nString.ToCharArray();
        Array.Sort(nArr);
        Array.Reverse(nArr);
        string ans = new string(nArr);
        long answer = long.Parse(ans);
        return answer;
    }
}",https://github.com/audrms6494/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12933.%E2%80%85%EC%A0%95%EC%88%98%E2%80%85%EB%82%B4%EB%A6%BC%EC%B0%A8%EC%88%9C%EC%9C%BC%EB%A1%9C%E2%80%85%EB%B0%B0%EC%B9%98%ED%95%98%EA%B8%B0,2023. 8. 29,10,1
2023. 8. 29 오전 10:20:12,정주찬,Unity,33 - 크기가 작은 부분,"using System;

public class Solution {
    public int solution(string t, string p) {
        int count = 0;
        for (int i = 0; i <= t.Length - p.Length; i++)
        {
            string tempStr = t.Substring(i, p.Length);
            if (tempStr.CompareTo(p) <= 0)
            {
                count++;
            }
}
        return count;
    }
}",https://github.com/JeongJuChan/Algorithm/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/unrated/147355.%E2%80%85%ED%81%AC%EA%B8%B0%EA%B0%80%E2%80%85%EC%9E%91%EC%9D%80%E2%80%85%EB%B6%80%EB%B6%84%EB%AC%B8%EC%9E%90%EC%97%B4/%ED%81%AC%EA%B8%B0%EA%B0%80%E2%80%85%EC%9E%91%EC%9D%80%E2%80%85%EB%B6%80%EB%B6%84%EB%AC%B8%EC%9E%90%EC%97%B4.cs,2023. 8. 29,33,2
2023. 8. 29 오전 10:20:32,조영오,Unity,29 - 최대공약수와 최소공배수,"using System;
using System.Collections.Generic;

public class Solution {
    public int mod(int min, int max){
        if(max == 0){return min;}
        return mod(max, min % max);
    }
    
    public int[] solution(int n, int m) {
        
        
        
        int[] answer = new int[2];
        
        int n1 = n;
        int m1 = m;
        //최대공약수 : 서로의 약수들 중에서 같은 값을 가지는 가장 큰 수
        //최소공배수 : 서로의 배수 중에서 같은 값을 가지는 가장 작은 수
        
        int maxDiv = 1;
        int minMul = 1;
        
        
        
        maxDiv = mod(n, m);
        
        minMul = (n1*m1)/maxDiv;
             
        answer[0] = maxDiv;
        answer[1] = minMul;
        
        return answer;
    }
}",,2023. 8. 29,29,1
2023. 8. 29 오전 10:20:33,정주찬,Unity,34 - 최소직사각형,"using System;

public class Solution {
    public int solution(int[,] sizes) {
       int max = int.MinValue;
int maxIndex1 = -1;
int maxIndex2 = -1;

for (int i = 0; i < sizes.GetLength(0); i++)
{
    for (int j = 0; j < sizes.GetLength(1); j++)
    {
        if (max < sizes[i, j])
        {
            max = sizes[i, j];
            maxIndex1 = i;
            maxIndex2 = j;
        }
    }
}

int max2 = int.MinValue;
for (int i = 0; i < sizes.GetLength(0); i++)
{
    if (maxIndex2 == 0)
    {
        if (sizes[i, 0] < sizes[i, 1])
        {
            int temp = sizes[i, 0];
            sizes[i, 0] = sizes[i, 1];
            sizes[i, 1] = temp;
        }

        if (max2 < sizes[i, 1])
        {
            max2 = sizes[i, 1];
        }
    }
    else
    {
        if (sizes[i, 1] < sizes[i, 0])
        {
            int temp = sizes[i, 1];
            sizes[i, 1] = sizes[i, 0];
            sizes[i, 0] = temp;
        }

        if (max2 < sizes[i, 0])
        {
            max2 = sizes[i, 0];
        }
    }
}
        return max * max2;
    }
}",https://github.com/JeongJuChan/Algorithm/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/86491.%E2%80%85%EC%B5%9C%EC%86%8C%EC%A7%81%EC%82%AC%EA%B0%81%ED%98%95/%EC%B5%9C%EC%86%8C%EC%A7%81%EC%82%AC%EA%B0%81%ED%98%95.cs,2023. 8. 29,34,2
2023. 8. 29 오전 10:20:46,조성훈,Unity,10 - 정수 내림차순으로 배치하기,"using System;

public class Solution 
{
    public long solution(long n) 
    {
        long answer = 0;
        string digitNumber = """";
        
        string number = n.ToString();
        char[] digit = number.ToCharArray();
        
        Array.Sort(digit);
        Array.Reverse(digit);
        
        for(int i = 0; i < digit.Length; i++)
        {
            digitNumber += digit[i];
        }
        answer = long.Parse(digitNumber);
        
        
        return answer;
    }
}",,2023. 8. 29,10,1
2023. 8. 29 오전 10:21:03,송명근,Unity,11 - 하샤드 수,"public class Solution {
    public bool solution(int x) {
        int sum = 0;
        int temp = x;
        while (temp > 0)
        {
            sum += temp % 10;
            temp /= 10;
        }
        bool answer = (x%sum == 0);
        return answer;
    }
}",https://github.com/audrms6494/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12947.%E2%80%85%ED%95%98%EC%83%A4%EB%93%9C%E2%80%85%EC%88%98,2023. 8. 29,11,1
2023. 8. 29 오전 10:21:28,명세인,AI,16 - 음양 더하기,"def solution(absolutes, signs):
    answer = 0
    for a in range(len(signs)):
        if signs[a] is True:
            answer += absolutes[a]
        else:
            answer -= absolutes[a]                
    return answer",https://github.com/playersein/Coding_Test/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/76501.%E2%80%85%EC%9D%8C%EC%96%91%E2%80%85%EB%8D%94%ED%95%98%EA%B8%B0,2023. 8. 29,16,1
2023. 8. 29 오전 10:21:36,이기호,AI,5 - 나머지가 1이 되는 수 찾기,"def solution(n):
    answer = 0

    for x in range(1, n+1):
        if n % x == 1:
            return (x)
    return (answer)",,2023. 8. 29,5,1
2023. 8. 29 오전 10:22:21,남의서,AI,25 - 부족한 금액 계산하기,"def solution(price, money, count):
    so = price * count * (count + 1) / 2 - money
    if so > 0:
        return so
    else: 
        return 0",,2023. 8. 29,25,1
2023. 8. 29 오전 10:22:56,정범수,AI,38 - K번째수정렬,"def solution(array, commands):
    answer = []
    for i, j, k in commands:
        answer.append(sorted(array[i-1:j])[k-1])
    return answer",https://github.com/sudog1/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/42748.%E2%80%85K%EB%B2%88%EC%A7%B8%EC%88%98,2023. 8. 29,38,2
2023. 8. 29 오전 10:23:32,김지수,AI,11 - 하샤드 수,"def solution(n):
    if n%sum([int(c) for c in str(n)]) == 0:
        answer = True
    else:
        answer = False
    return answer",,2023. 8. 29,11,1
2023. 8. 29 오전 10:24:02,최지연,AI,15 - 나누어 떨어지는 숫자,"def solution(arr, divisor):
    answer = []
    for i in arr:
        if i % divisor == 0:
            answer.append(i)
        answer.sort()
    if len(answer) == 0:
        answer.append(-1)
    return answer",https://github.com/jiyeonCoder/algorithmPractice/blob/main/15.%20%EB%82%98%EB%88%84%EC%96%B4%20%EB%96%A8%EC%96%B4%EC%A7%80%EB%8A%94%20%EC%88%AB%EC%9E%90%20%EB%B0%B0%EC%97%B4.py,2023. 8. 29,15,1
2023. 8. 29 오전 10:24:39,이솔,AI,13 - 콜라츠 추측,"def solution(num):
    answer = 0
    count = 0
    while count < 500:
        if num == 1:
            return count
        count += 1        
        if not num % 2:
            num = num / 2
        else:
            num = num * 3 +1 
    count = -1
    return count",,2023. 8. 29,13,1
2023. 8. 29 오전 10:25:58,김호찬,AI,12 - 두 정수 사이의 합,"def solution(a, b):
    start = min(a, b)
    end = max(a, b)

    total_sum = sum(range(start, end + 1))

    return total_sum",https://github.com/hckim1/Coding-Practice/blob/main/Programmers%EB%AC%B8%EC%A0%9C/Q12.py,2023. 8. 29,12,1
2023. 8. 29 오전 10:26:24,최수용,Unity,15 - 나누어 떨어지는 숫자,"using System.Collections.Generic;

public class Solution 
{
    public int[] solution(int[] arr, int divisor)
    {
        List<int> temp = new List<int>();
        for (int i=0; i < arr.Length; i++)
        {
            if(arr[i]%divisor==0){temp.Add(arr[i]);}
        }
        temp.Sort();
        if(temp.Count == 0) return new int[]{-1};
        int[] answer = new int[temp.Count];
    
        for (int i=0; i < temp.Count ; i++)
        {
            answer[i] = temp[i];
        }
        
        return answer;
    }
}",,2023. 8. 29,15,1
2023. 8. 29 오전 10:26:27,양수홍,AI,35 - 시저 암호,"def solution(s, n):
    answer = ''
    for i in range(len(s)):
        if s[i]=="" "":
            answer+=f""{s[i]}""
        elif s[i].isupper():
            if ord(s[i])+n>90:
                answer += f""{chr((ord(s[i])+n-26))}""
            else:
                answer += f""{chr((ord(s[i]) + n))}""
        elif s[i].islower():
            if ord(s[i])+n>122:
                answer += f""{chr((ord(s[i])+n-26))}""
            else:
                answer += f""{chr((ord(s[i]) + n))}""
    return answer",,2023. 8. 29,35,2
2023. 8. 29 오전 10:26:36,조호진,AI,17 - 핸드폰 번호 가리기,"def solution(phone_number):
    answer = []
    for i in phone_number[0:-4]:
        i = ""*""
        answer.append(i)
    for j in phone_number[-4:]:
        answer.append(j)
    a = """".join(answer)

    return a",https://github.com/bm4706/Algorithm_practice/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12948.%E2%80%85%ED%95%B8%EB%93%9C%ED%8F%B0%E2%80%85%EB%B2%88%ED%98%B8%E2%80%85%EA%B0%80%EB%A6%AC%EA%B8%B0,2023. 8. 29,17,1
2023. 8. 29 오전 10:27:33,이솔,AI,14 - 서울에서 김서방 찾기,"def solution(seoul):
    answer = seoul.index(""Kim"")
        
    return f'김서방은 {answer}에 있다'",,2023. 8. 29,14,1
2023. 8. 29 오전 10:28:05,명세인,AI,17 - 핸드폰 번호 가리기,"def solution(phone_number):
    return phone_number.replace(phone_number[:-4],'*'*len(phone_number[:-4]))",https://github.com/playersein/Coding_Test/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12948.%E2%80%85%ED%95%B8%EB%93%9C%ED%8F%B0%E2%80%85%EB%B2%88%ED%98%B8%E2%80%85%EA%B0%80%EB%A6%AC%EA%B8%B0,2023. 8. 29,17,1
2023. 8. 29 오전 10:28:44,양덕영,AI,19 - 제일 작은 수 제거하기,"def solution(arr):
    if len(arr) <= 1:
        return [-1]
    
    min_index = arr.index(min(arr))
    
    return arr[:min_index] + arr[min_index + 1:]

arr1 = [4, 3, 2, 1]
print(solution(arr1))

arr2 = [10]
print(solution(arr2))",https://github.com/DeokYoung980130/Ai_Project2023-08-07/tree/e059a9b33ceb02b65d2d71e2af7fd4baca3e7e05,2023. 8. 29,19,1
2023. 8. 29 오전 10:29:15,이소이,Unity,29 - 최대공약수와 최소공배수,"using System.Collections.Generic;
using System;

public class Solution {
    public int[] solution(int n, int m) {
        int maxDiv = 1;
        int minMul = 1;
        
        List<int> nFactors = new List<int>();
        List<int> mFactors = new List<int>();
        
        while (n != 1 || m != 1)
        {
            for (int i = 1; i <= n; i++)
            {
                if (n % i == 0)
                {
                    nFactors.Add(i);
                    n /= i;
                    if (i != 1)
                        break ;
                }
            }
            for (int j = 1; j <= m; j++)
            {
                if (m % j == 0)
                {
                    mFactors.Add(j);
                    m /= j;
                    if (j != 1)
                        break ;
                }
            }
        }
        
        int nIndex = nFactors.Count - 1;
        int mIndex = mFactors.Count - 1;
        nFactors.Sort();
        mFactors.Sort();
        
        while (nIndex >= 0 || mIndex >= 0)
        {
            if (nFactors[nIndex] == mFactors[mIndex])
            {
                maxDiv *= nFactors[nIndex];
                minMul *= nFactors[nIndex];
                nIndex--;
                mIndex--;
            }
            else if (nFactors[nIndex] > mFactors[mIndex])
            {
                minMul *= nFactors[nIndex];
                nIndex--;
            }
            else // nF[nI] < mF[mI]
            {
                minMul *= mFactors[mIndex];
                mIndex--;
            }
        }        
        
        int[] answer = new int[2] {maxDiv, minMul};
        return answer;
    }
}",https://github.com/leesy015599/AlgorithmCodeKata/blob/master/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12940.%E2%80%85%EC%B5%9C%EB%8C%80%EA%B3%B5%EC%95%BD%EC%88%98%EC%99%80%E2%80%85%EC%B5%9C%EC%86%8C%EA%B3%B5%EB%B0%B0%EC%88%98/%EC%B5%9C%EB%8C%80%EA%B3%B5%EC%95%BD%EC%88%98%EC%99%80%E2%80%85%EC%B5%9C%EC%86%8C%EA%B3%B5%EB%B0%B0%EC%88%98.cs,2023. 8. 29,29,1
2023. 8. 29 오전 10:29:30,이솔,AI,15 - 나누어 떨어지는 숫자,"def solution(arr, divisor):
    answer = []
    count = 0
    for i in arr:
        if not i % divisor:
            answer.append(i)
            count += 1
            
    if not count:
        answer.append(-1)
        
    answer.sort()
    return answer",,2023. 8. 29,15,1
2023. 8. 29 오전 10:31:02,정범수,AI,39 - 두 개 뽑아서 더하기,"def solution(numbers):
    answer = set()
    for i in range(len(numbers)-1):
        for j in range(i+1, len(numbers)):
            answer.add(numbers[i]+numbers[j])
    return sorted(list(answer))",https://github.com/sudog1/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/68644.%E2%80%85%EB%91%90%E2%80%85%EA%B0%9C%E2%80%85%EB%BD%91%EC%95%84%EC%84%9C%E2%80%85%EB%8D%94%ED%95%98%EA%B8%B0,2023. 8. 29,39,2
2023. 8. 29 오전 10:32:21,최수용,Unity,16 - 음양 더하기,"using System;

public class Solution {
    public int solution(int[] absolutes, bool[] signs) {
        int answer = 0;
        for( int i=0; i < signs.Length; i++){
            answer += signs[i]?absolutes[i]:-absolutes[i];
        }
        return answer;
    }
}",,2023. 8. 29,16,1
2023. 8. 29 오전 10:32:25,강희건,Unity,3 - 자릿수 더하기,"using System;

class Program
{
    static int Solution(int N)
    {
        int sum = 0;
        
        foreach (char digitChar in N.ToString())
        {
            int digit = int.Parse(digitChar.ToString());
            sum += digit;
        }
        
        return sum;
    }
    
    static void Main(string[] args)
    {
        int N = 123;
        Console.WriteLine(Solution(N)); 
    }
}",https://github.com/bo9us,2023. 8. 29,3,1
2023. 8. 29 오전 10:33:57,이진범,AI,13 - 콜라츠 추측,"def solution(num):
    count = 0

    while num != 1:
        if count >= 500:
            return -1

        if num % 2 == 0:
            num /= 2
        else:
            num = num * 3 + 1

        count += 1

    return count


print(solution(6))
print(solution(16))
print(solution(626331))",,2023. 8. 29,13,1
2023. 8. 29 오전 10:34:48,남의서,AI,26 - 문자열 다루기 기본,"def solution(s):
    return s.isdigit() and (len(s) == 4 or len(s) == 6)",,2023. 8. 29,26,1
2023. 8. 29 오전 10:35:11,권수민,AI,8 - 문자열을 정수로 바꾸기,"def solution(s):
    answer = 0
    if 0 < len(s) and len(s) < 6:
        if s[0] == 0:
            return        
        s = int(s)
    return s",https://github.com/Stella-Kwon/git-github.com-Stella-Kwon-algorithm_prac/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12925.%E2%80%85%EB%AC%B8%EC%9E%90%EC%97%B4%EC%9D%84%E2%80%85%EC%A0%95%EC%88%98%EB%A1%9C%E2%80%85%EB%B0%94%EA%BE%B8%EA%B8%B0/%EB%AC%B8%EC%9E%90%EC%97%B4%EC%9D%84%E2%80%85%EC%A0%95%EC%88%98%EB%A1%9C%E2%80%85%EB%B0%94%EA%BE%B8%EA%B8%B0.py,2023. 8. 29,8,1
2023. 8. 29 오전 10:35:38,강상찬,AI,27 - 행렬의 덧셈,"def solution(arr1, arr2):
    answer = []
    for a, b in zip(arr1,arr2):
        a1 = []
        for i, j in zip(a,b):
            a1.append(i+j)
        answer.append(a1)
    return answer",,2023. 8. 29,27,1
2023. 8. 29 오전 10:36:04,정범수,AI,40 - 가장 가까운 같은 글자,"def solution(s):
    near_idx = {}
    answer = []
    for i, c in enumerate(s):
        if c in near_idx:
            answer.append(i - near_idx[c])
        else:
            answer.append(-1)
        near_idx[c] = i
    return answer",https://github.com/sudog1/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/unrated/142086.%E2%80%85%EA%B0%80%EC%9E%A5%E2%80%85%EA%B0%80%EA%B9%8C%EC%9A%B4%E2%80%85%EA%B0%99%EC%9D%80%E2%80%85%EA%B8%80%EC%9E%90,2023. 8. 29,40,2
2023. 8. 29 오전 10:36:51,이기호,AI,6 - x만큼 간격이 있는 n개의 숫자,"def solution(x, n):
    answer = []

    for i in range(1, n+1):
        answer.append(x*i)
    return answer",,2023. 8. 29,6,1
2023. 8. 29 오전 10:38:02,김호찬,AI,13 - 콜라츠 추측,"def solution(num):
    if num == 1:
        return 0

    for i in range(500):

        if num % 2 == 0:
            num = num / 2

        else:
            num = num * 3 + 1

        if num == 1:
            return i + 1

    return -1",https://github.com/hckim1/Coding-Practice/blob/main/Programmers%EB%AC%B8%EC%A0%9C/Q13.py,2023. 8. 29,13,1
2023. 8. 29 오전 10:38:30,신선화,AI,3 - 자릿수 더하기,"def solution(number):
    return sum([int(i) for i in str(number)])",,2023. 8. 29,3,1
2023. 8. 29 오전 10:38:32,양수홍,AI,36 - 숫자 문자열과 영단어,"def solution(s):
    answer=""""
    cmd=""""
    num_dict={
        ""zero"":0,
        ""one"":1,
        ""two"":2,
        ""three"":3,
        ""four"":4,
        ""five"":5,
        ""six"":6,
        ""seven"":7,
        ""eight"":8,
        ""nine"":9
    }
    for c in s:
        if c.isdigit():
            answer+=f""{c}""
        else:
            cmd+=f""{c}""
            if cmd in num_dict.keys():
                answer+=f""{num_dict[cmd]}""
                cmd=""""
    return int(answer)
        ",,2023. 8. 29,36,2
2023. 8. 29 오전 10:39:08,양덕영,AI,20 - 가운데 글자 가져오기,"def solution(s):
    length = len(s)
    middle = length // 2
    
    if length % 2 == 1:
        return s[middle]
    else:
        return s[middle - 1 : middle + 1]

word1 = ""abcde""
print(solution(word1))

word2 = ""qwer""
print(solution(word2))",https://github.com/DeokYoung980130/Ai_Project2023-08-07/tree/0cc3b9899d4d04d87ce3a5ce3ff3fb18aa102139,2023. 8. 29,20,1
2023. 8. 29 오전 10:40:07,김우진,AI,5 - 나머지가 1이 되는 수 찾기,"def solution(n):
    answer = 0
    x = 3
    while True:
        if n % x == 1:
            return answer
            break
        else:
            x = x + 1


print(solution(5))",,2023. 8. 29,5,1
2023. 8. 29 오전 10:40:27,최수용,Unity,17 - 핸드폰 번호 가리기,"public class Solution {
    public string solution(string phone_number) {
        int length = phone_number.Length;
        string answer = """";
        for (int i=0; i < length; i++){
            
            answer += (i>=length-4)?phone_number[i]:'*';
        }
        return answer;
    }
}",,2023. 8. 29,17,1
2023. 8. 29 오전 10:41:04,차명경,AI,7 - 자연수 뒤집어 배열로 만들기,"def solution(n):
    a = list(str(n))
    a.reverse()
    return [int(i)for i in a]


print(solution(12345))
",,2023. 8. 29,7,1
2023. 8. 29 오전 10:42:06,이재윤,AI,7 - 자연수 뒤집어 배열로 만들기,"def solution(n):
    s = str(n)
    answer = []
    index = len(s) - 1
    while True:
        if index >= 0:
            answer.append(int(s[index]))
            index -= 1
        else:
            break
    return answer

print(solution(12345))",https://github.com/JaeYoonAI/coding_test/blob/ab34540cd1c28e932a0178be4678b5f95257a7bb/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12932.%E2%80%85%EC%9E%90%EC%97%B0%EC%88%98%E2%80%85%EB%92%A4%EC%A7%91%EC%96%B4%E2%80%85%EB%B0%B0%EC%97%B4%EB%A1%9C%E2%80%85%EB%A7%8C%EB%93%A4%EA%B8%B0/%EC%9E%90%EC%97%B0%EC%88%98%E2%80%85%EB%92%A4%EC%A7%91%EC%96%B4%E2%80%85%EB%B0%B0%EC%97%B4%EB%A1%9C%E2%80%85%EB%A7%8C%EB%93%A4%EA%B8%B0.py,2023. 8. 29,7,1
2023. 8. 29 오전 10:43:44,조호진,AI,18 - 없는 숫자 더하기,"def solution(numbers):
    answer = 0
    for i in range(10):
        if i not in numbers:
            answer += i
    return answer

",https://github.com/bm4706/Algorithm_practice/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/86051.%E2%80%85%EC%97%86%EB%8A%94%E2%80%85%EC%88%AB%EC%9E%90%E2%80%85%EB%8D%94%ED%95%98%EA%B8%B0,2023. 8. 29,18,1
2023. 8. 29 오전 10:44:05,정범수,AI,41 - 푸드 파이트 대회,"def solution(food):
    answer = []
    for i in range(len(food)):
        for j in range(food[i]//2):
            answer.append(str(i))
    return ''.join([*answer, str(0), *reversed(answer)])",https://github.com/sudog1/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/unrated/134240.%E2%80%85%ED%91%B8%EB%93%9C%E2%80%85%ED%8C%8C%EC%9D%B4%ED%8A%B8%E2%80%85%EB%8C%80%ED%9A%8C,2023. 8. 29,41,2
2023. 8. 29 오전 10:45:05,남의서,AI,27 - 행렬의 덧셈,"def solution(arr1, arr2):
    return [[c + d for c, d in zip(a, b)] for a, b in zip(arr1,arr2)]",,2023. 8. 29,27,1
2023. 8. 29 오전 10:46:26,이재윤,AI,8 - 문자열을 정수로 바꾸기,"def solution(s):
    answer = int(s)
    return answer",https://github.com/JaeYoonAI/coding_test/blob/0f0aed860059e1715b3bfd0e5b1eae70eb9602e0/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12925.%E2%80%85%EB%AC%B8%EC%9E%90%EC%97%B4%EC%9D%84%E2%80%85%EC%A0%95%EC%88%98%EB%A1%9C%E2%80%85%EB%B0%94%EA%BE%B8%EA%B8%B0/%EB%AC%B8%EC%9E%90%EC%97%B4%EC%9D%84%E2%80%85%EC%A0%95%EC%88%98%EB%A1%9C%E2%80%85%EB%B0%94%EA%BE%B8%EA%B8%B0.py,2023. 8. 29,8,1
2023. 8. 29 오전 10:47:22,공혜진,AI,10 - 정수 내림차순으로 배치하기,"def solution(n):
    answer = """"
    n = list(map(int, str(n)))
    n.sort(reverse=True)
    for i in n:
        answer += str(i)
    return int(answer)",,2023. 8. 29,10,1
2023. 8. 29 오전 10:47:33,최수용,Unity,18 - 없는 숫자 더하기,"using System;

public class Solution {
    public int solution(int[] numbers) {
        int answer = 45;
        for (int i=0; i < numbers.Length; i++){
            answer -= numbers[i];
        }
        return answer;
    }
}",,2023. 8. 29,18,1
2023. 8. 29 오전 10:47:39,김정규,AI,11 - 하샤드 수,"def solution(x):
    answer = list(str(x))
    h = 0
    for i in answer:
        h += int(i)
    if x % h == 0:
        return True
    return False",https://github.com/JungGyu00/algorithm,2023. 8. 29,11,1
2023. 8. 29 오전 10:47:55,정범수,AI,42 - 콜라 문제,"def solution(a, b, n):
    answer = 0
    while n >= a:
        res = (n//a) * b
        answer += res
        n = n % a + res
    return answer",https://github.com/sudog1/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/unrated/132267.%E2%80%85%EC%BD%9C%EB%9D%BC%E2%80%85%EB%AC%B8%EC%A0%9C,2023. 8. 29,42,2
2023. 8. 29 오전 10:49:12,양수홍,AI,37 - 문자열 내 마음대로 정렬하기,"def solution(strings, n):
    return sorted(sorted(strings), key=lambda x: x[n])",,2023. 8. 29,37,2
2023. 8. 29 오전 10:49:17,이기호,AI,7 - 자연수 뒤집어 배열로 만들기,"def solution(n):
    answer = []
    a=str(n)[::-1]
    for i in a:
        answer.append(int(i))
    
    return answer

print(solution(12345))",,2023. 8. 29,7,1
2023. 8. 29 오전 10:50:39,명세인,AI,18 - 없는 숫자 더하기,"def solution(numbers):
    a = [b for b in range(0,10)]
    for i in range(0, len(numbers)):
        if numbers[i] in a:
            a.remove(numbers[i])
            
    return sum(a)",https://github.com/playersein/Coding_Test/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/86051.%E2%80%85%EC%97%86%EB%8A%94%E2%80%85%EC%88%AB%EC%9E%90%E2%80%85%EB%8D%94%ED%95%98%EA%B8%B0,2023. 8. 29,18,1
2023. 8. 29 오전 10:51:20,김호찬,AI,14 - 서울에서 김서방 찾기,"def findKim(seoul):
    return ""김서방은 {}에 있다"".format(seoul.index('Kim'))

print(findKim([""Kim""]))  ",https://github.com/hckim1/Coding-Practice/blob/main/Programmers%EB%AC%B8%EC%A0%9C/Q14.py,2023. 8. 29,14,1
2023. 8. 29 오전 10:52:21,이기호,AI,8 - 문자열을 정수로 바꾸기,"def solution(s):
    answer = int(s)
    
    return answer",,2023. 8. 29,8,1
2023. 8. 29 오전 10:52:41,심명희,AI,15 - 나누어 떨어지는 숫자,"def solution(arr, divisor):
    answer = []
    
    for i in arr:
        if i % divisor == 0:
            answer.append(i)
            answer.sort()

    if len(answer) == 0:
        return[-1]
            
    return answer
",,2023. 8. 29,15,1
2023. 8. 29 오전 10:54:05,양수홍,AI,38 - K번째수정렬,"def solution(array, commands):
    answer = []
    for command in commands:
        arr=array[command[0]-1:command[1]]
        arr.sort()
        answer.append(arr[command[2]-1])
    return answer",,2023. 8. 29,38,2
2023. 8. 29 오전 10:54:32,김정규,AI,12 - 두 정수 사이의 합,"def solution(a, b):
    if a < b:
        return sum(i for i in range(a, b+1))
    else:
        return sum(i for i in range(b, a+1))",https://github.com/JungGyu00/algorithm,2023. 8. 29,12,1
2023. 8. 29 오전 10:56:18,최종민,AI,17 - 핸드폰 번호 가리기,"def solution(phone_number):
    answer = ''
    for i in phone_number[0:len(phone_number)-4] :
        answer += '*'
    answer += phone_number[-4:]
    return answer",,2023. 8. 29,17,1
2023. 8. 29 오전 10:57:26,양덕영,AI,21 - 수박수박수박수박수박수?,"def solution(n):
    pattern = ""수박""
    return pattern * (n // 2) + pattern[:n % 2]

print(solution(4))
print(solution(3))",https://github.com/DeokYoung980130/Ai_Project2023-08-07/tree/b3f7c2bfc721fee848194d919e86b218804c6bca,2023. 8. 29,21,1
2023. 8. 29 오전 10:58:26,정범수,AI,43 - 명예의 전당 (1),"import heapq

def solution(k, score):
    answer = []
    heap_list = []
    for i, s in enumerate(score):
        heapq.heappush(heap_list, s)
        if i >= k:
            heapq.heappop(heap_list)
        answer.append(heap_list[0])
    return answer",https://github.com/sudog1/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/unrated/138477.%E2%80%85%EB%AA%85%EC%98%88%EC%9D%98%E2%80%85%EC%A0%84%EB%8B%B9%E2%80%85%EF%BC%881%EF%BC%89,2023. 8. 29,43,2
2023. 8. 29 오전 11:00:16,공혜진,AI,11 - 하샤드 수,"def solution(x):
    answer = True
    s = sum([int(i) for i in str(x)])
    if x % s == 0:
        answer = True
    elif x % s != 0:
        answer = False
    return answer

",,2023. 8. 29,11,1
2023. 8. 29 오전 11:01:24,양수홍,AI,39 - 두 개 뽑아서 더하기,"from itertools import combinations
def solution(numbers):
    answer = []
    combs=combinations(numbers,2)
    for comb in combs:
        answer.append(sum(comb))
    return sorted(set(answer))",,2023. 8. 29,39,2
2023. 8. 29 오전 11:01:50,김현우,AI,44 - 2016년,"function solution(a, b) {
    return [""SUN"", ""MON"", ""TUE"", ""WED"", ""THU"", ""FRI"", ""SAT""][new Date(2016, a - 1, b).getDay()];
}",,2023. 8. 29,44,2
2023. 8. 29 오전 11:08:29,김지수,AI,13 - 콜라츠 추측,"def solution(num):
    for i in range(500):
        num = num /2 if num%2 == 0 else num*3+1
        if num == 1:
            return i + 1
    return -1",,2023. 8. 29,13,1
2023. 8. 29 오전 11:10:02,조호진,AI,19 - 제일 작은 수 제거하기,"def solution(arr):
    answer = []
    a = 0
    if len(arr) == 1:
        answer = [-1]
        return answer
    arr.remove(min(arr))
    return arr
    ",https://github.com/bm4706/Algorithm_practice/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12935.%E2%80%85%EC%A0%9C%EC%9D%BC%E2%80%85%EC%9E%91%EC%9D%80%E2%80%85%EC%88%98%E2%80%85%EC%A0%9C%EA%B1%B0%ED%95%98%EA%B8%B0,2023. 8. 29,19,1
2023. 8. 29 오전 11:11:02,최하나,Unity,3 - 자릿수 더하기,"using System;

public class Solution {
     public int solution(int n) {
        int answer = 0;
 
        char[] arr = n.ToString().ToCharArray();
        

        foreach(char a in arr)
        {
            answer += System.Convert.ToInt32(a.ToString());
        }
        return answer;
    }
}",https://github.com/coco0715/AlgorithmsKata,2023. 8. 29,3,1
2023. 8. 29 오전 11:12:01,최수용,Unity,19 - 제일 작은 수 제거하기,"public class Solution 
{
    public int[] solution(int[] arr) 
    {
        if(arr.Length==1) return new int[]{-1};
        int[] answer = new int[arr.Length-1];
        int min = int.MaxValue;
        int index = 0;
        for (int i=0; i < arr.Length ;i++)
        {
            if (min>arr[i])
            {
                index = i;
                min = arr[i];
            }
        }
        for (int i=0; i < arr.Length; i++)
        {
            if (i < index) {answer[i] = arr[i];}
            if (i > index) {answer[i-1] = arr[i];}
        }
        return answer;
    }
}",,2023. 8. 29,19,1
2023. 8. 29 오전 11:13:34,양수홍,AI,40 - 가장 가까운 같은 글자,"def solution(s):
    answer = []
    alphabet_set=[-1]*26
    for i,c in enumerate(s):
        if alphabet_set[ord(c)-ord('a')]==-1:
            answer.append(-1)
            alphabet_set[ord(c)-ord('a')]=i
        else :
            answer.append(i-alphabet_set[ord(c)-ord('a')])
            alphabet_set[ord(c)-ord('a')]=i
    return answer",,2023. 8. 29,40,2
2023. 8. 29 오전 11:13:43,장현웅,AI,9 - 정수 제곱근 판별,"def solution(n):
    answer = 0
    
    x = n**(1/2)
    
    if x % 1 == 0:
        answer = (x + 1)**2
    else: 
        answer = -1

    return answer",https://github.com/HyeonwoongJang/Algorithm.git,2023. 8. 29,9,1
2023. 8. 29 오전 11:14:36,최종민,AI,18 - 없는 숫자 더하기,"def solution(numbers):
    answer = 45
    for i in numbers:
        answer -= i
    return answer
",,2023. 8. 29,18,1
2023. 8. 29 오전 11:18:25,강상찬,AI,28 - 직사각형 별찍기,"n, m = map(int, input().strip().split(' '))
s = '*'*n
rod_col = ''
cnt = 0
while (cnt < m):
    rod_col = rod_col+s+'\n'
    cnt += 1
print(rod_col)",,2023. 8. 29,28,1
2023. 8. 29 오전 11:20:57,남의서,AI,28 - 직사각형 별찍기,"a, b = map(int, input().strip().split(' '))
for i in range(b):
    print('*' * a)",,2023. 8. 29,28,1
2023. 8. 29 오전 11:21:22,최지연,AI,16 - 음양 더하기,"def solution(absolutes, signs):
    result_val = []
    for i in range(len(signs)):
        if signs[i] == True:
            result_val.append(absolutes[i])
        else:
            result_val.append(absolutes[i] * -1)
    answer = sum(result_val)
    return answer",https://github.com/jiyeonCoder/algorithmPractice/blob/main/16.%20%EC%9D%8C%EC%96%91%20%EB%8D%94%ED%95%98%EA%B8%B0.py,2023. 8. 29,16,1
2023. 8. 29 오전 11:22:18,최수용,Unity,20 - 가운데 글자 가져오기,"public class Solution {
    public string solution(string s) {
        string answer = """";
        if(s.Length%2==0) answer += s[s.Length/2-1];
        answer += s[s.Length/2];
        return answer;
    }
}",,2023. 8. 29,20,1
2023. 8. 29 오전 11:23:27,김정규,AI,13 - 콜라츠 추측,"def solution(num):
    answer = 0
    while num != 1:
        if answer >= 500:
            return -1
        if num % 2 == 0:
            num /= 2
            answer += 1
            continue
        if num % 2 == 1:
            num = num * 3 + 1
            answer += 1

    return answer",https://github.com/JungGyu00/algorithm,2023. 8. 29,13,1
2023. 8. 29 오전 11:25:20,강상찬,AI,29 - 최대공약수와 최소공배수,"def solution(n, m):
    cnt = 1
    while (cnt <= min(n,m)):
        if (n%cnt == 0 and m%cnt == 0):
            gcd = cnt
        cnt += 1
    return [gcd, n*m/gcd]",,2023. 8. 29,29,1
2023. 8. 29 오전 11:29:58,남의서,AI,29 - 최대공약수와 최소공배수,"from math import gcd
def solution(n, m):
    gcd_num = gcd(n, m)
    lcm_num = n*m // gcd(n,m)
    answer = [gcd_num, lcm_num]
    return answer",,2023. 8. 29,29,1
2023. 8. 29 오전 11:30:10,장현웅,AI,10 - 정수 내림차순으로 배치하기,"def solution(n):
    answer = 0
    
    arr = []
    
    for i in str(n):
        arr.append(i)
        arr.sort(reverse=True)
        answer = int(''.join(arr))
    
    return answer",https://github.com/HyeonwoongJang/Algorithm.git,2023. 8. 29,10,1
2023. 8. 29 오전 11:30:52,최수용,Unity,21 - 수박수박수박수박수박수?,"public class Solution {
    public string solution(int n) {
        string answer = """";
        bool isOdd = true;
        while(n>0){
            n--;
            answer += isOdd?'수':'박';
            isOdd = !isOdd;
        }
        return answer;
    }
}",,2023. 8. 29,21,1
2023. 8. 29 오전 11:35:27,이재윤,AI,9 - 정수 제곱근 판별,"def solution(n):
    answer = 0
    num = n**0.5

    if num == int(num):
        answer = (num + 1) ** 2
    else:
        answer = -1
    return answer


print(solution(121))
print(solution(3))",https://github.com/JaeYoonAI/coding_test/blob/8d4a7822b7937f293da2614fccd32f85dfedf2cd/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12934.%E2%80%85%EC%A0%95%EC%88%98%E2%80%85%EC%A0%9C%EA%B3%B1%EA%B7%BC%E2%80%85%ED%8C%90%EB%B3%84/%EC%A0%95%EC%88%98%E2%80%85%EC%A0%9C%EA%B3%B1%EA%B7%BC%E2%80%85%ED%8C%90%EB%B3%84.py,2023. 8. 29,9,1
2023. 8. 29 오전 11:39:01,강성호,Unity,39 - 두 개 뽑아서 더하기,"using System;
using System.Collections.Generic;
using System.Linq;

public class Solution {
    public int[] solution(int[] numbers) {
       int[] answer = new int[] { };
			List<int> result = new List<int>();

			for (int i = 0; i < numbers.Length; i++)
			{
				for(int j = i + 1; j < numbers.Length; j++)
				{
					if (!result.Contains(numbers[i] + numbers[j]))
					result.Add(numbers[i] + numbers[j]);
				}
			}
			result.Sort();
			answer = result.ToArray();
			return answer;
    }
}",,2023. 8. 29,39,2
2023. 8. 29 오전 11:46:32,김진성,Unity,11 - 하샤드 수,"using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Algorithm_004
{
    public class Solution
    {
        public bool solution(int x)
        {
            int y = x;
            int remainderSum = 0;
            while (true)
            {
                remainderSum += x % 10;
                Console.WriteLine(remainderSum);
                if (x < 10)
                {
                    break;
                }
                x /= 10;
            }

            bool answer = false;
            if (y % remainderSum == 0)
            {
                answer = true;
            }
            Console.WriteLine(y);
            Console.WriteLine(remainderSum);
            return answer;
        }
    }
}
",https://github.com/GYALLERHORN/ALGORITHM,2023. 8. 29,11,1
2023. 8. 29 오전 11:50:19,이승연,Unity,9 - 정수 제곱근 판별,"using System;

public class Solution {
    public long solution(long n) {
        double sqrt = Math.Sqrt(n);
        if (sqrt == (int)sqrt) {
            return (long)Math.Pow(sqrt + 1, 2);
        } else {
            return -1;
        }
    }
}",,2023. 8. 29,9,1
2023. 8. 29 오후 12:07:41,최수용,Unity,22 - 내적,"
using System;

public class Solution {
    public int solution(int[] a, int[] b) {
        int answer = 0;
    for( int i=0; i< a.Length; i++){
        answer += a[i]*b[i];
    }
        return answer;
    }
}",,2023. 8. 29,22,1
2023. 8. 29 오후 12:37:55,최수용,Unity,23 - 약수의 개수와 덧셈,"using System;

public class Solution 
{
    public int solution(int left, int right) 
    {
        int answer = 0;
        for (int i=left; i < right+1; i++)
        {
            var sqrt = Math.Sqrt(i);
            if (i == (int)sqrt*(int)sqrt) { answer -= i;}
            else { answer += i;}
        }        
        return answer;
    }
}",,2023. 8. 29,23,1
2023. 8. 29 오후 12:40:22,최종민,AI,19 - 제일 작은 수 제거하기,"def solution(arr):
    if min(arr) == max(arr):
        arr = [-1]
    else:
        del arr[arr.index(min(arr))]
    return arr",,2023. 8. 29,19,1
2023. 8. 29 오후 12:51:26,최수용,Unity,24 - 문자열 내림차순으로 배치하기,"using System.Linq;

public class Solution
    {
        public string solution(string s)
        {
            char[] temp = s.ToCharArray();
            temp = temp.OrderBy(c => c).ToArray();
            temp = temp.Reverse().ToArray();
            return new string(temp);
        }
    }",,2023. 8. 29,24,1
2023. 8. 29 오후 12:55:38,신현,Unity,10 - 정수 내림차순으로 배치하기,"using System;

public class Solution {
    public long solution(long n) {
        char[] cArr = n.ToString().ToCharArray();
        Array.Sort(cArr);
        Array.Reverse(cArr);
        long answer = long.Parse(new string(cArr));
        return answer;
    }
}",https://github.com/Shyunju/codTaka.git,2023. 8. 29,10,1
2023. 8. 29 오후 12:56:57,신현주,Unity,13 - 콜라츠 추측,"public class Solution {
    public int solution(int num) {
        long n = num;
        int answer = 0;
        int count = 0;
        for (int i = 0; i <= 500 ; i++){
            if( n == 1){
                break;
            }
            if( count == 500){
                return answer = -1;
            }
            if( n % 2 == 0){
                n = n / 2;
                count ++;
            }else{
                n = (n * 3) + 1;
                count++;
            }
            
        }
        return answer = count;
    }
}",https://github.com/Shyunju/codeKata,2023. 8. 29,13,1
2023. 8. 29 오후 12:57:54,신현주,Unity,15 - 나누어 떨어지는 숫자,"using System.Collections.Generic;
public class Solution {
    public int[] solution(int[] arr, int divisor) {
        List<int> div = new List<int>();
        
        foreach( var item in arr){
            if( item % divisor == 0){
                div.Add(item);
            }
        }
        if( div.Count == 0){
            div.Add(-1);
        }else{
            div.Sort();
        }
        return div.ToArray();
    }
}",https://github.com/Shyunju/codeKata,2023. 8. 29,15,1
2023. 8. 29 오후 1:02:37,최수용,Unity,25 - 부족한 금액 계산하기,"
using System;

class Solution
{
    public long solution(int price, int money, int count)
    {
        long priceSum = (long)price*(count*(count+1))/2;
        return priceSum>money?priceSum-money:0;
    }
}",,2023. 8. 29,25,1
2023. 8. 29 오후 1:04:37,최종민,AI,20 - 가운데 글자 가져오기,"def solution(s):
    x = int(len(s)/2)

    if int(len(s)) % 2 != 0:
        answer = s[x]
    else:
        answer = s[x-1:x+1]

    return answer",,2023. 8. 29,20,1
2023. 8. 29 오후 1:10:56,최종민,AI,21 - 수박수박수박수박수박수?,"def solution(n):
    answer = ''

    for i in range(n):
        if i % 2 == 0:
            answer += '수'
        else:
            answer += '박'
            
    return answer",,2023. 8. 29,21,1
2023. 8. 29 오후 1:21:14,최수용,Unity,26 - 문자열 다루기 기본,"public class Solution {
    public bool solution(string s) {
        if( s.Length != 4 && s.Length!=6) return false;
        for(int i=0; i < s.Length; i++)
        {
            if(s[i]>'9' || s[i]<'0') return false;
        }
        return true;
    }
}",,2023. 8. 29,26,1
2023. 8. 29 오후 1:30:10,최수용,Unity,27 - 행렬의 덧셈,"using System;
public class Solution {
    public int[,] solution(int[,] arr1, int[,] arr2) {
        int[,] answer = (int[,])arr1.Clone();
        for(int i = 0; i < arr1.GetLength(0); i++){
            for(int j = 0; j < arr1.GetLength(1); j++){
                answer[i, j] += arr2[i, j];
            }
        }
        return answer;
    }
}",,2023. 8. 29,27,1
2023. 8. 29 오후 1:35:30,최수용,Unity,28 - 직사각형 별찍기,"using System;

public class Example
{
    public static void Main()
    {
        String[] s;
        Console.Clear();
        s = Console.ReadLine().Split(' ');

        int a = Int32.Parse(s[0]);
        int b = Int32.Parse(s[1]);

        for (int i=0; i<b; i++)
        {
            for (int j=0; j<a; j++)
            {
                Console.Write(""*"");    
            }
            Console.WriteLine();       
        }
    }
}",,2023. 8. 29,28,1
2023. 8. 29 오후 1:53:30,최수용,Unity,29 - 최대공약수와 최소공배수,"public class Solution {
    public int[] solution(int n, int m) {
        int[] answer = new int[2];
        int b = n>m?n:m;
        for (int i=b; i >= 1 ;i--)
        {
            if(n%i == 0 && m%i == 0)
            {
                answer[0] = i;
                break;
            }
        }
        for (int i=b; i <= m*n; i++)
        {
            if(i%m==0 && i%n==0)
            {
                answer[1] = i;
                break;
            }   
        }
        return answer;
    }
}",,2023. 8. 29,29,1
2023. 8. 29 오후 2:12:30,최수용,Unity,30 - 3진법 뒤집기,"using System;
using System.Collections.Generic;

public class Solution {
    public int solution(int n) {
        int answer = 0;
        List<int> num3 = new List<int>();
        while(n != 0)
        {
            num3.Add(n%3);
            n=n/3;
        }
        for(int i=0;i<num3.Count;i++)
        {
            answer = answer*3 + num3[i];   
        }
        return answer;
    }
}",,2023. 8. 29,30,1
2023. 8. 29 오후 2:21:48,임전혁,Unity,35 - 시저 암호,"using System;
using System.Text;

public class Solution {
    public string solution(string s, int n) {
        string answer = """";

        StringBuilder sb = new StringBuilder();
        
        for (int i = 0; i < s.Length; i++)
        {
            char tempChar = s[i];
            if (tempChar == 32)
            {
                sb.Append(tempChar);
                continue;
            }
            
            int tempNum = (int)s[i];
            for (int j = 0; j < n; j++)
            {
                if (tempNum == 90)
                    tempNum = 65;
                else if (tempNum == 122)
                    tempNum = 97;
                else if (65 <= tempNum && tempNum <= 90)
                    tempNum++;
                else if (97 <= tempNum && tempNum <= 122)
                    tempNum++;
                    
            }

            sb.Append((char)tempNum);
        }
        
        return sb.ToString();
    }
}",https://github.com/yarogono/Algorithm_CSharp/blob/master/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12926.%E2%80%85%EC%8B%9C%EC%A0%80%E2%80%85%EC%95%94%ED%98%B8/%EC%8B%9C%EC%A0%80%E2%80%85%EC%95%94%ED%98%B8.cs,2023. 8. 29,35,2
2023. 8. 29 오후 2:33:47,권수민,AI,9 - 정수 제곱근 판별,"def solution(n):
   sqrt = n ** (1/2)
   if sqrt % 1 == 0:        
        return (sqrt + 1) ** 2
   return -1
",https://github.com/Stella-Kwon/git-github.com-Stella-Kwon-algorithm_prac/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12934.%E2%80%85%EC%A0%95%EC%88%98%E2%80%85%EC%A0%9C%EA%B3%B1%EA%B7%BC%E2%80%85%ED%8C%90%EB%B3%84/%EC%A0%95%EC%88%98%E2%80%85%EC%A0%9C%EA%B3%B1%EA%B7%BC%E2%80%85%ED%8C%90%EB%B3%84.py,2023. 8. 29,9,1
2023. 8. 29 오후 3:10:42,최석준,Unity,6 - x만큼 간격이 있는 n개의 숫자,"#include <string>
#include <vector>

using namespace std;

vector<long long> solution(int x, int n) {
    vector<long long> answer(n, x);

    for (int i = 1; i < n; i++)
        answer[i] = answer[i - 1] + x;

    return answer;
}",,2023. 8. 29,6,1
2023. 8. 29 오후 4:04:17,정재호,Unity,38 - K번째수정렬,"using System;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Linq;

public class Solution
{
    public int[] solution(int[] array, int[,] commands)
    {
        List<int> answer = new List<int>();


        for (int i = 0; i < commands.GetLength(0); i++)
        {
            List<int> list = new List<int>();

            int a = commands[i, 0];
            int b = commands[i, 1];
            int c = commands[i, 2];

            int[] newArray = new int[b - a + 1];

            newArray = array.Skip(a - 1).Take(b - a + 1).ToArray();

            newArray = newArray.OrderBy(x => x).ToArray();

            for (int j = 0; j < newArray.Length; j++)
            {
                list.Add(newArray[j]);
            }

            for (int k = list.Count - 1; k >= 0; k--)
            {
                if (k != c - 1)
                {
                    list.RemoveAt(k);
                }
                else if (k == c - 1)
                {
                    continue;
                }
            }

            answer.Add(list[0]);


        }
        return answer.ToArray();
    }
}",,2023. 8. 29,38,2
2023. 8. 29 오후 4:31:33,김민재,AI,7 - 자연수 뒤집어 배열로 만들기,"def solution(n):
    answer = []

    for x in str(n):
        answer.append(int(x))
    answer.reverse()
    return answer",https://github.com/Kim-Minjae9872/Code_Kata,2023. 8. 29,7,1
2023. 8. 29 오후 6:49:13,임규한,AI,28 - 직사각형 별찍기,"a, b = map(int, input().strip().split(' '))

print(('*'*a + '\n')*b)",,2023. 8. 29,28,1
2023. 8. 29 오후 7:30:10,임규한,AI,27 - 행렬의 덧셈,"def solution(arr1, arr2):
    answer = arr1

    for i in range(len(arr1)):
        for j in range(len(arr1[i])):
            answer[i][j] = arr1[i][j] + arr2[i][j]

    return answer",,2023. 8. 29,27,1
2023. 8. 29 오후 7:39:28,정재호,Unity,39 - 두 개 뽑아서 더하기,"using System;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Linq;

public class Solution
{
    public int[] solution(int[] numbers)
    {
        List<int> result = new List<int>();
        List<int> list = new List<int>();
        list = numbers.ToList();

        for (int i = list.Count - 1; i >= 0; i--)
        {
            int last = list[i];
            list.Remove(last);
            foreach (int n in list)
            {
                result.Add(n + last);
            }
        }

        result = result.Distinct().OrderBy(x => x).ToList();

        return result.ToArray();
    }
}",,2023. 8. 29,39,2
2023. 8. 29 오후 7:42:34,김경환,Unity,38 - K번째수정렬,"using System;

public class Solution {
    public int[] solution(int[] array, int[,] commands) {
        int length = commands.GetLength(0);
        int[] answer = new int[length];
        
        for(int i = 0; i < length; i++)
        {
            int start = commands[i, 0] - 1, end = commands[i, 1] - 1;
            int[] copy = new int[end - start + 1];
            
            for(int j = start; j <= end; j++)
            {
                copy[j-start] = array[j];
            }
            
            Array.Sort(copy);
            
            answer[i] = copy[commands[i, 2] - 1];
        }
        return answer;
    }
}",https://github.com/kkh9700/algorithm,2023. 8. 29,38,2
2023. 8. 29 오후 8:03:22,임규한,AI,29 - 최대공약수와 최소공배수,"def solution(n, m):
    for i in range(min(n, m), 0, -1):
        if n%i == 0 and m%i == 0:
            a = i
            break
    for j in range(max(n,m),(n*m)+1):
        if j%n == 0 and j%m == 0:
            b = j
            break
    return [a, b]",,2023. 8. 29,29,1
2023. 8. 29 오후 8:17:24,정재호,Unity,40 - 가장 가까운 같은 글자,"using System;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Linq;

public class Solution
{
    public int[] solution(string s)
    {
        List<int> answer = new List<int>();

        List<char> chars = s.ToCharArray().ToList();

        List<char> list = new List<char>();

        for (int i = chars.Count - 1; i >= 0; i--)
        {
            bool isThere = false;
            list.Add(chars[i]);

            for (int j = i - 1; j >= 0; j--)
            {
                if (chars[j] == list[0])
                {
                    answer.Add(i - j);
                    chars.RemoveAt(i);
                    list.Clear();
                    isThere = true;
                    break;
                }
            }
            if (!isThere)
            {
                chars.RemoveAt(i);
                list.Clear();
                answer.Add(-1);
            }
        }

        answer.Reverse();

        return answer.ToArray();
    }
}",,2023. 8. 29,40,2
2023. 8. 30 오전 7:42:06,최종민,AI,22 - 내적,"def solution(a, b):
    answer = 0
    for i in range(len(a)):
        answer += a[i] * b[i]
    return answer",,2023. 8. 30,22,1
2023. 8. 30 오전 8:12:52,김대열,Unity,78 - 행렬의 곱셈,"#include <string>
#include <vector>

using namespace std;

vector<vector<int>> solution(vector<vector<int>> arr1, vector<vector<int>> arr2) {
    vector<vector<int>> answer;
    for(int row = 0 ; row < arr1.size(); row ++ ){
        vector<int> rows;
        
        for ( int col = 0 ; col < arr2[0].size(); col++){
            int sum = 0;
            for(int k = 0 ; k < arr1[0].size(); k++){
                sum = sum + arr1[row][k] * arr2[k][col];
            }
            rows.push_back(sum);           
        }
        answer.push_back(rows);
    }
    return answer;
}",,2023. 8. 30,78,3
2023. 8. 30 오전 8:57:04,김진규,Unity,29 - 최대공약수와 최소공배수,"public class Solution {
    public int[] solution(int n, int m) {
        int[] answer = new int[2];
        int min = gcd(n,m);
        int max = (n * m) / min;
        answer[0] = min;
        answer[1] = max;
        return answer;
    }
    
    public int gcd(int n, int m)
    {
        if(m == 0) return n;
        else return gcd(m, n % m);
    }
}",,2023. 8. 30,29,1
2023. 8. 30 오전 9:01:39,차요한,Unity,26 - 문자열 다루기 기본,"public class Solution {
    public bool solution(string s) {
            bool answer = false;

            if (s.Length == 4 || s.Length == 6)
            {	
                answer = int.TryParse(s, out int temp);
            }

            return answer;
    }
}",https://github.com/HOHOJO/Algorithm_test,2023. 8. 30,26,1
2023. 8. 30 오전 9:03:42,한병권,Unity,41 - 푸드 파이트 대회,"using System;

public class Solution {
    public string solution(int[] food) {
        string answer = ""0"";
        
        for(int i = food.Length-1; i >0 ;i--)
        {
            for(int j = 0; j < food[i]/2; j++)
            {
                answer = i + answer + i;
            }
        }
        
        if(answer.Length < 3) answer = """";
        
        return answer;
    }
}",https://github.com/hbg9212/AlgorithmCodekata,2023. 8. 30,41,2
2023. 8. 30 오전 9:04:00,문준권,Unity,5 - 나머지가 1이 되는 수 찾기,"using System;

public class Solution {
    public int solution(int n) {
        int answer = 1;
        while (n % answer != 1){
            answer++;
        }
        return answer;
    }
}",,2023. 8. 30,5,1
2023. 8. 30 오전 9:06:44,박민호,Unity,28 - 직사각형 별찍기,"using System;

public class Example
{
    public static void Main()
    {
        String[] s;

        Console.Clear();
        s = Console.ReadLine().Split(' ');

        int a = Int32.Parse(s[0]);
        int b = Int32.Parse(s[1]);
        for (int i=0;i<b;i++){
            for(int j=0;j<a;j++){
                Console.Write('*');
            }
            Console.Write(""\n"");
        }
    }
}",,2023. 8. 30,28,1
2023. 8. 30 오전 9:06:59,김경원,Unity,10 - 정수 내림차순으로 배치하기,"using System;
using System.Linq;

public class Solution {
    
   
public long solution(long n) {
        char[] digits = n.ToString().ToCharArray();
        Array.Sort(digits);
        Array.Reverse(digits);
        
        


       
string sortedNumberStr = new string(digits);
        long answer = long.Parse(sortedNumberStr);
        
        
        
return answer;
    }
}
",,2023. 8. 30,10,1
2023. 8. 30 오전 9:08:01,김예준,Unity,26 - 문자열 다루기 기본,"#include <string>

using namespace std;

bool solution(string s) {
    auto it = s.begin();
    
    while(it != s.end() && isdigit(*it))
    {
        it++;
    }
    return !s.empty() && it == s.end() && (s.size() == 4 || s.size() == 6);
}",,2023. 8. 30,26,1
2023. 8. 30 오전 9:08:13,조범준,Unity,23 - 약수의 개수와 덧셈,"using System;

public class Solution {
    public int solution(int left, int right) {
        int answer = 0;
        for(int i = left; i <= right; i++){
            int num = 0;
            for(int j = 1; j <= i; j++){
                if(i % j == 0){
                    num++;
                }
            }
            if(num % 2 == 0){
                answer += i;
            }else{
                answer -= i;
            }
        }
        return answer;
    }
}",https://github.com/KimMaYa1/BaekJoonEx/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1,2023. 8. 30,23,1
2023. 8. 30 오전 9:08:42,기현빈,Unity,23 - 약수의 개수와 덧셈,"using System;

public class Solution {
    public int solution(int left, int right) {
        int answer = 0;
        
        for(int i = left; i <= right; i++) {
            int cnt = 0;
            for(int j = 1; j <= i; j++) {
                if(i % j == 0) cnt++;
            }
            if(cnt % 2 == 0) answer += i;
            else answer -= i;
        }
        
        return answer;
    }
}",,2023. 8. 30,23,1
2023. 8. 30 오전 9:08:43,차요한,Unity,27 - 행렬의 덧셈,"public class Solution {
    public int[,] solution(int[,] arr1, int[,] arr2) {
            int[,] answer = new int[arr1.GetLength(0),arr1.GetLength(1)];
        
            for (int i = 0; i < arr1.GetLength(0); i++)
            {
                for (int j = 0; j < arr1.GetLength(1); j++)
                {
                    answer[i, j] = arr1[i, j] + arr2[i, j];
                }
            }
            return answer;
    }
}",https://github.com/HOHOJO/Algorithm_test,2023. 8. 30,27,1
2023. 8. 30 오전 9:09:21,양덕영,AI,22 - 내적,"def solution(a, b):
    n = len(a)
    
    dot_product = 0
    
    for i in range(n):
        dot_product += a[i] * b[i]
    
    return dot_product",https://github.com/DeokYoung980130/Ai_Project2023-08-07/tree/b3f7c2bfc721fee848194d919e86b218804c6bca,2023. 8. 30,22,1
2023. 8. 30 오전 9:10:35,김진규,Unity,30 - 3진법 뒤집기,"using System;

public class Solution {
    public int solution(int n) {
        int answer = 0;
        while(n>0)
        {
            answer *=3;
            answer +=n%3;
            n/=3;
        }
        return answer;
    }
}",,2023. 8. 30,30,1
2023. 8. 30 오전 9:10:48,최장범,Unity,17 - 핸드폰 번호 가리기,"public class Solution {
    public string solution(string phone_number)
    {        
        string answer = """";
        for(int i=0; i<phone_number.Length; i++)
        {
            if(i<phone_number.Length-4)
            {
                answer += ""*"";
            }
            else
            {
                answer += phone_number[i];
            }
        }
        return answer;
    }
}",,2023. 8. 30,17,1
2023. 8. 30 오전 9:11:12,노재우,Unity,14 - 서울에서 김서방 찾기,"public class Solution
{
    public string solution(string[] seoul)
    {
        string answer = ""김서방은 "";
        for (int i = 0; i < seoul.Length; i++)
        {
            if (seoul[i] == ""Kim"")
            {
                answer += $""{i}에 있다"";
                break;
            }
        }
        return answer;
    }
}",,2023. 8. 30,14,1
2023. 8. 30 오전 9:11:17,김경환,Unity,31 - 이상한 문자 만들기,"using System.Text;
using System.Globalization;

public class Solution {
    public string solution(string s) {
        StringBuilder sb = new StringBuilder();
        string[] words = s.Split("" "");

        for(int j = 0; j < words.Length; j++)
        {
            string word = words[j];
            
            for(int i = 0; i < word.Length; i++)
            {
                if(i % 2 == 0)
                {
                    sb.Append(char.ToUpper(word[i]));
                }
                else
                {
                    sb.Append(char.ToLower(word[i]));
                }
            }
            
            if(j != words.Length-1)
                sb.Append("" "");
        }
        
        return sb.ToString();
    }
}",https://github.com/kkh9700/algorithm,2023. 8. 30,31,2
2023. 8. 30 오전 9:11:40,이기호,AI,9 - 정수 제곱근 판별,"def solution(n):
    if n<1:
        return -1
    
    x=1
    while x*x < n:
        x += 1
        
    if x*x == n:
        return int((x+1)*(x+1))
    else:
        return -1",,2023. 8. 30,9,1
2023. 8. 30 오전 9:11:44,지민규,Unity,24 - 문자열 내림차순으로 배치하기,"using System.Linq;

public class Solution {
    public string solution(string s) {
        string answer = string.Join("""",s.ToCharArray().OrderByDescending(a => a));
        return answer;
    }
}",,2023. 8. 30,24,1
2023. 8. 30 오전 9:11:55,한병권,Unity,42 - 콜라 문제,"using System;

public class Solution {
    public int solution(int a, int b, int n) {
        int answer = 0;
        
        while(n >= a)
        {
            answer += ( n / a ) * b;
            n = ( n / a ) * b + ( n % a );         
        }
                
        return answer;
    }
}",https://github.com/hbg9212/AlgorithmCodekata,2023. 8. 30,42,2
2023. 8. 30 오전 9:11:58,김예준,Unity,27 - 행렬의 덧셈,"#include <vector>

using namespace std;

vector<vector<int>> solution(vector<vector<int>> arr1, vector<vector<int>> arr2) {
    vector<vector<int>> answer;
    
    for (int i = 0; i < arr1.size(); i++)
    {
        vector<int> v;
        
        for (int j = 0; j < arr1[i].size(); j++)
        {
            v.push_back(arr1[i][j] + arr2[i][j]);
        }
        answer.push_back(v);
    }
    
    return answer;
}",,2023. 8. 30,27,1
2023. 8. 30 오전 9:12:47,이홍준,Unity,21 - 수박수박수박수박수박수?,"public class Solution {
    public string solution(int n) {
        string answer = """";
        
        for (int i = 0; i < n; i++)
        {
            if (i % 2 == 0)
            {
                answer += ""수"";
            }
            else
            {
                answer += ""박"";
            }
        }
        
        return answer;
    }
}",https://github.com/dlghdwns97/Study/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12922.%E2%80%85%EC%88%98%EB%B0%95%EC%88%98%EB%B0%95%EC%88%98%EB%B0%95%EC%88%98%EB%B0%95%EC%88%98%EB%B0%95%EC%88%98%EF%BC%9F,2023. 8. 30,21,1
2023. 8. 30 오전 9:12:55,권선영,Unity,6 - x만큼 간격이 있는 n개의 숫자,"public class Solution {
    public long[] solution(int x, int n) {
        long[] answer = new long[n];

        for (int i = 1; i <= n; i++)
        {
            answer[i - 1] = (long)x * i;
        }

        return answer;
    }
}",https://github.com/Tealss,2023. 8. 30,6,1
2023. 8. 30 오전 9:12:56,김형중,Unity,17 - 핸드폰 번호 가리기,"public class Solution {
    public string solution(string phone_number) {
        string answer = """";
        
        for(int i = 0; i < phone_number.Length; i++)
        {
            if(i < phone_number.Length-4)
            {
                answer += ""*"";
            }
            
            else
            {
                answer += phone_number[i];
            }
        }
        
        return answer;
    }
}",,2023. 8. 30,17,1
2023. 8. 30 오전 9:13:22,조병우,Unity,7 - 자연수 뒤집어 배열로 만들기,"#include <stdio.h>
#include <stdbool.h>
#include <stdlib.h>

int* solution(long long n) {
    // 리턴할 값은 메모리를 동적 할당해주세요.
    int* answer = (int*)malloc(sizeof (int)*100);
    int i = 0;
    while (n) {
    	answer[i] = n % 10;
        n /= 10;
        i++;
    }
    return answer;
}",,2023. 8. 30,7,1
2023. 8. 30 오전 9:13:43,김예준,Unity,28 - 직사각형 별찍기,"#include <iostream>

using namespace std;

int main(void) {
    int a;
    int b;
    cin >> a >> b;

    for (int i = 0; i < b; i++)
    {
        for (int j = 0; j < a; j++)
        {
            cout << '*';
        }
        cout << '\n';
    }
    
    return 0;
}",,2023. 8. 30,28,1
2023. 8. 30 오전 9:14:02,김명식,Unity,14 - 서울에서 김서방 찾기,"using System;

public class Solution {
    public string solution(string[] seoul) {
        string answer = """";
        int index = Array.FindIndex(seoul,element => element == ""Kim""); 
        answer =$""김서방은 {index}에 있다"";
        
        return answer;
    }
}",https://github.com/D0ryeon/Algorithm-Code-Kata,2023. 8. 30,14,1
2023. 8. 30 오전 9:14:11,우민규,Unity,15 - 나누어 떨어지는 숫자,"using System;
using System.Collections.Generic;

public class Solution {
    public int[] solution(int[] arr, int divisor) {        
        //답변의 배열은 동적 확장이 필요
        List<int> answer = new List<int>();
        
        for(int i = 0; i < arr.Length; i++)
        {
            
            if(arr[i] % divisor == 0)
                answer.Add(arr[i]);                              
        }
        
        //위의 for문을 다 돌고도 리스트가 비었다면
        if (answer.Count == 0) 
            answer.Add(-1);
        
        //오름차순 정렬
        answer.Sort();
        //list -> array
        return answer.ToArray();
    }
}",https://github.com/Woomingyu/Programmers.git,2023. 8. 30,15,1
2023. 8. 30 오전 9:14:35,김도현B,Unity,26 - 문자열 다루기 기본,"public class Solution {
    public bool solution(string s) {
        if (s.Length == 4 || s.Length == 6) 
        {
            return int.TryParse(s, out int result);
        }
        return false;
    }
}",https://github.com/subscriptioncat/Algorithm,2023. 8. 30,26,1
2023. 8. 30 오전 9:14:41,이경현,Unity,16 - 음양 더하기,"        public static int solution(int[] absolutes, bool[] signs)
        {
            int answer=0;
            for (int i = 0; i < absolutes.Length; i++)
            {
                answer = signs[i] ? answer + absolutes[i] : answer - absolutes[i];
            }
            return answer;
        }",https://github.com/516lkh/Algorithm,2023. 8. 30,16,1
2023. 8. 30 오전 9:15:34,이정환,Unity,20 - 가운데 글자 가져오기,"public class Solution {
    public string solution(string s) {
        int length = s.Length;
        int mid = length / 2;

        if (length % 2 == 0) {
            return s.Substring(mid - 1, 2);
        } else {
            return s.Substring(mid, 1);
        }
    }
}",,2023. 8. 30,20,1
2023. 8. 30 오전 9:15:40,이홍준,Unity,22 - 내적,"using System;

public class Solution {
    public int solution(int[] a, int[] b) {
        int answer = 0;
        
        for (int i = 0; i < a.Length; i++)
        {
            answer += a[i] * b[i];
        }
        
        return answer;
    }
}",https://github.com/dlghdwns97/Study/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/70128.%E2%80%85%EB%82%B4%EC%A0%81,2023. 8. 30,22,1
2023. 8. 30 오전 9:15:52,이경현,Unity,15 - 나누어 떨어지는 숫자,"        public static int[] solution(int[] arr, int divisor)
        {
            Array.Sort(arr);
            List<int> list = new List<int>();

            for (int i = 0; i < arr.Length; i++)
            {
                if (arr[i] % divisor == 0)
                {
                    list.Add(arr[i]);
                }
            }

            int[] answer = new int[list.Count];

            for(int i = 0; i<list.Count; i++)
            {
                answer[i] = list[i];
            }

            return answer;
        }",https://github.com/516lkh/Algorithm,2023. 8. 30,15,1
2023. 8. 30 오전 9:15:57,김경환,Unity,32 - 삼총사,"using System;

public class Solution {
    public int solution(int[] number) {
        int answer = 0, sum = 0, length = number.Length;
        
        
        for(int i = 0; i < length - 2; i++)
        {
            sum += number[i];
            
            for(int j = i + 1; j < length - 1; j++)
            {
                sum += number[j];
                
                for(int k = j + 1; k < length; k++)
                {
                    sum += number[k];
                    
                    if(sum == 0)
                        answer++;
                    
                    sum -= number[k];
                }
                
                sum -= number[j];
            }
            
            sum -= number[i];
        }
        
        
        
        return answer;
    }
}",https://github.com/kkh9700/algorithm,2023. 8. 30,32,2
2023. 8. 30 오전 9:16:21,장성림,Unity,28 - 직사각형 별찍기,"using System;

public class Example
{
    public static void Main()
    {
        String[] s;

        Console.Clear();
        s = Console.ReadLine().Split(' ');

        int a = Int32.Parse(s[0]);
        int b = Int32.Parse(s[1]);
        
        string star = """";
        for(int i = 0; i < a; i++)
            star += ""*"";
        
        star += ""\n"";
        string starLine = star;
        
        for(int i = 1; i < b; i++)
            star += starLine;
        
        Console.WriteLine(star);
    }
}",https://github.com/hoobhoob,2023. 8. 30,28,1
2023. 8. 30 오전 9:16:45,김형중,Unity,18 - 없는 숫자 더하기,"public class Solution {
    public int solution(int[] numbers) {
        int answer = 0;
        
        for(int i = 0; i < numbers.Length; i++)
        {
            answer += numbers[i];
        }
        return 45 - answer;
    }
}",,2023. 8. 30,18,1
2023. 8. 30 오전 9:16:50,이세진,Unity,14 - 서울에서 김서방 찾기,"public class Solution {
    public string solution(string[] seoul) {
        string answer = """";
        
        for(int i = 0 ; i < seoul.Length;i++)
        {
            if(seoul[i]== ""Kim""){
                answer = ""김서방은 "" + i + ""에 있다"";
            }
        }
        return answer;
    }
}",,2023. 8. 30,14,1
2023. 8. 30 오전 9:16:58,기현빈,Unity,24 - 문자열 내림차순으로 배치하기,"using System;

public class Solution {
    public string solution(string s) {
        char[] charArray = s.ToCharArray();
        
        Array.Sort(charArray);
        Array.Reverse(charArray);
    
        return new string(charArray);
    }
}",,2023. 8. 30,24,1
2023. 8. 30 오전 9:16:59,조장원,AI,6 - x만큼 간격이 있는 n개의 숫자,"def solution(x, n):

    result = [x*i for i in range(1,n+1)]
    
    return result",https://github.com/jangwonne/code_test/commit/fcb2bb256b1ad260e849910d177f914015b49b3a,2023. 8. 30,6,1
2023. 8. 30 오전 9:17:05,김정규,AI,14 - 서울에서 김서방 찾기,"def solution(seoul):
    answer = ''
    for i in range(len(seoul)):
        if seoul[i] == 'Kim':
            answer = f'김서방은 {i}에 있다'
            return answer",https://github.com/JungGyu00/algorithm,2023. 8. 30,14,1
2023. 8. 30 오전 9:17:17,조범준,Unity,24 - 문자열 내림차순으로 배치하기,"using System;
public class Solution {
    public string solution(string s) {
        char[] answer = s.ToCharArray();
        Array.Sort(answer);
        Array.Reverse(answer);
        s = new string(answer);
        return s;
    }
}",https://github.com/KimMaYa1/BaekJoonEx/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1,2023. 8. 30,24,1
2023. 8. 30 오전 9:17:23,곽민규,Unity,5 - 나머지가 1이 되는 수 찾기,"using System;

public class Solution {
    public int solution(int n) {
        for (int i = 2; i < n; i++) {
            if (n % i == 1) {
                return i;
            }
        }
        return -1;
    }
}",,2023. 8. 30,5,1
2023. 8. 30 오전 9:17:27,이현지,Unity,24 - 문자열 내림차순으로 배치하기,"using System;
using System.Linq;

public class Solution 
{
    public string solution(string s) 
    {
        char[] letters = s.ToCharArray();
        letters = letters.OrderBy(i => Char.IsUpper(i)).ThenByDescending(i => i).ToArray();
        
        string answer = """";        
        foreach (char c in letters)
        {
            answer += c;
        }
        return answer;
    }
}",https://github.com/szlovelee/Programmers-Algorithm,2023. 8. 30,24,1
2023. 8. 30 오전 9:17:34,차요한,Unity,28 - 직사각형 별찍기,"using System;

public class Example
{
    public static void Main()
    {
        String[] s;

        Console.Clear();
        s = Console.ReadLine().Split(' ');

        int a = Int32.Parse(s[0]);
        int b = Int32.Parse(s[1]);
        
        for(int i=0; i<b; i++)
        {
            for(int j=0; j < a; j++)
            {
                Console.Write(""*"");
            }
            Console.WriteLine();
        }
    }
}",https://github.com/HOHOJO/Algorithm_test,2023. 8. 30,28,1
2023. 8. 30 오전 9:18:09,이소이,Unity,30 - 3진법 뒤집기,"using System;
using System.Collections.Generic;

public class Solution {
    public int solution(int n) {
        List<int> list = new List<int>();
        while (n != 0)
        {
            list.Add(n % 3);
            n /= 3;
        }
        int answer = 0;
        for (int i = list.Count - 1; i >= 0; i--)
            answer += list[i] * (int)Math.Pow(3, list.Count - 1 - i);
        return answer;
    }
}",https://github.com/leesy015599/AlgorithmCodeKata/blob/master/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/68935.%E2%80%853%EC%A7%84%EB%B2%95%E2%80%85%EB%92%A4%EC%A7%91%EA%B8%B0/3%EC%A7%84%EB%B2%95%E2%80%85%EB%92%A4%EC%A7%91%EA%B8%B0.cs,2023. 8. 30,30,1
2023. 8. 30 오전 9:18:22,이형빈,Unity,10 - 정수 내림차순으로 배치하기,"using System;
public class Solution {
    public long solution(long n) 
    {
      char[] charN = n.ToString().ToCharArray();
        
        Array.Sort(charN);    //오름차순정렬    
        Array.Reverse(charN);//역순으로 뒤집기
        
        string str = new string(charN);
        long answer = long.Parse(str);
        
        return answer;
    }
}",,2023. 8. 30,10,1
2023. 8. 30 오전 9:18:23,박준규,Unity,14 - 서울에서 김서방 찾기,"using System; 

public class Solution 
{
    public string solution(string[] seoul) 
    {
        string answer = """";
        string index = ""Kim"";
        int position = Array.IndexOf(seoul, index);
        answer = $""김서방은 {position}에 있다"";
        return answer;
    }
}",,2023. 8. 30,14,1
2023. 8. 30 오전 9:18:53,지민규,Unity,25 - 부족한 금액 계산하기,"using System;

class Solution
{
    public long solution(int price, int money, int count)
    {
        long amount = 0;
        for (int i = 1; i <= count; i++)
        {
            amount += price*i;
        }
        long result = (amount - (long)money > 0)? amount - (long)money : 0;
        return result;
    }
}",,2023. 8. 30,25,1
2023. 8. 30 오전 9:19:16,이진형,AI,24 - 문자열 내림차순으로 배치하기,"def solution(s):
    a=[ord(s[i:i+1]) for i in range(len(s))]
    a.sort(reverse=True)
    b="""".join([chr(i) for i in a])
    return b",,2023. 8. 30,24,1
2023. 8. 30 오전 9:19:21,최장범,Unity,18 - 없는 숫자 더하기,"using System;
using System.Linq;

public class Solution {
    public int solution(int[] numbers) {
        int answer = 0;
        for (int i=0; i<10; i++)
        {
            answer+= i;
        }
        answer -= numbers.Sum();
        
        return answer;
    }
}",,2023. 8. 30,18,1
2023. 8. 30 오전 9:19:33,김예준,Unity,29 - 최대공약수와 최소공배수,"#include <vector>

using namespace std;

int GCD(int a, int b)
{
    int n;
    
    while (b != 0)
    {
        n = a % b;
        a = b;
        b = n;
    }
    
    return a;
}

vector<int> solution(int n, int m) {
    vector<int> answer;
    
    if (n > m)
    {
        answer.push_back(GCD(n, m));
        answer.push_back(n * m / GCD(n, m));
    }
    else
    {
        answer.push_back(GCD(m, n));
        answer.push_back(n * m / GCD(m, n));
    }
    
    return answer;
}",,2023. 8. 30,29,1
2023. 8. 30 오전 9:20:03,이도현,Unity,6 - x만큼 간격이 있는 n개의 숫자,"public class Solution {
    public long[] solution(int x, int n) {
        long[] answer = new long[n];
        
        answer[0]=x;
        for(int i=1; i<n; ++i)
        {
            answer[i]=answer[i-1]+x;
        }
            
        return answer;
    }
}",,2023. 8. 30,6,1
2023. 8. 30 오전 9:20:51,이홍준,Unity,23 - 약수의 개수와 덧셈,"using System;

public class Solution {
    public int solution(int left, int right) {
        int answer = 0;
        
        for (int i = left; i < right + 1; i++)
        {
            if (Math.Sqrt(i) % 1 == 0)
            {
                answer -= i;
            }
            else
            {
                answer += i;
            }
        }
        
        return answer;
    }
}",https://github.com/dlghdwns97/Study/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/77884.%E2%80%85%EC%95%BD%EC%88%98%EC%9D%98%E2%80%85%EA%B0%9C%EC%88%98%EC%99%80%E2%80%85%EB%8D%A7%EC%85%88,2023. 8. 30,23,1
2023. 8. 30 오전 9:21:22,김주형,Unity,12 - 두 정수 사이의 합,"public class Solution
{
    public long solution(int a, int b)
    {
        long answer = 0;
        if(a == b)
            return a;
        else if(a < b)
        {
            for (int i = a; i <=b; i++)
            {
                answer +=i;
            }
        }
        else if (a > b)
        {
            for (int i =b; i <=a; i++)
            {
                answer += i;
            }
        }
        return answer;
    }
}",https://github.com/kjuhyung/Algorithm.git,2023. 8. 30,12,1
2023. 8. 30 오전 9:21:39,김도현B,Unity,28 - 직사각형 별찍기,"using System;

public class Example
{
    public static void Main()
    {
        String[] s;

        Console.Clear();
        s = Console.ReadLine().Split(' ');

        int a = Int32.Parse(s[0]);
        int b = Int32.Parse(s[1]);
        for(int i = 0; i < b; i++){
            for(int j = 0; j < a; j++){
                Console.Write(""*"");
            }
            Console.Write(""\n"");
        }
    }
}",https://github.com/subscriptioncat/Algorithm,2023. 8. 30,28,1
2023. 8. 30 오전 9:22:26,신현주,Unity,19 - 제일 작은 수 제거하기,"using System;
using System.Linq;
public class Solution {
    public int[] solution(int[] arr) {
        int v = arr.Min();
        int[] answer = arr.Where(x => x != v).ToArray();
        if (arr.Length == 1)
        {
            answer = new int[] { -1 };
        }
        return answer;
    }
}",https://github.com/Shyunju/codeKata,2023. 8. 30,19,1
2023. 8. 30 오전 9:22:48,양덕영,AI,23 - 약수의 개수와 덧셈,"def count_divisors(num):
    count = 0
    for i in range(1, int(num**0.5) + 1):
        if num % i == 0:
            if i * i == num:
                count += 1
            else:
                count += 2
    return count

def solution(left, right):
    answer = 0
    for num in range(left, right + 1):
        divisors_count = count_divisors(num)
        if divisors_count % 2 == 0:
            answer += num
        else:
            answer -= num
    return answer",https://github.com/DeokYoung980130/Ai_Project2023-08-07/tree/f72261783472244f9bf81b5b0c1a7f2371f97bf3,2023. 8. 30,23,1
2023. 8. 30 오전 9:22:53,조범준,Unity,25 - 부족한 금액 계산하기,"using System;

class Solution
{
    public long solution(int price, long money, int count)
    {
        long answer = 0;
        for(int i = 1; i <= count; i++){
            answer += price * i;
        }
        money -= answer;
        if(money > 0){
            return 0;
        }
        money *= -1;
        return money;
    }
}",https://github.com/KimMaYa1/BaekJoonEx/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1,2023. 8. 30,25,1
2023. 8. 30 오전 9:23:30,이정환,Unity,21 - 수박수박수박수박수박수?,"public class Solution {
    public string solution(int n) {
        int i= n%2;
        int j= n/2;
        string answer = """";
        string snap=""수박"";
      //if even
        if(i==0)
        {
          while(j>0)
          {
             answer=string.Concat(answer,snap);
             j--;
          }
        }
        else
        {
             while(j>0)
          {
             answer=string.Concat(answer,snap);
             j--;
          }
              answer=string.Concat(answer,""수"");
        }

        return answer;
    }
}",,2023. 8. 30,21,1
2023. 8. 30 오전 9:23:35,김지수,AI,14 - 서울에서 김서방 찾기,"def solution(seoul):
    for i in range(len(seoul)):
        if seoul[i] == ""Kim"":
            answer = i
    return '김서방은 ' + str(answer) + '에 있다'",,2023. 8. 30,14,1
2023. 8. 30 오전 9:24:15,곽정원,AI,5 - 나머지가 1이 되는 수 찾기,"def solution(n):
    answer = 2

    while n % answer != 1:
        answer += 1

    return answer


print(solution(10))
print(solution(12))",,2023. 8. 30,5,1
2023. 8. 30 오전 9:24:21,이진형,AI,25 - 부족한 금액 계산하기,"def solution(price, money, count):
    x=-1*(count*(count+1))/2*price+money
    if x>=0:
        return 0
    
    else:
        return -1*x",,2023. 8. 30,25,1
2023. 8. 30 오전 9:24:58,조호진,AI,20 - 가운데 글자 가져오기,"def solution(s):
    answer = ''
    a = len(s)//2
    if len(s)%2 ==0:
        b = s[a-1:a+1]
    elif len(s)%2 ==1:
        b = s[a]
        
    return b",https://github.com/bm4706/Algorithm_practice/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12903.%E2%80%85%EA%B0%80%EC%9A%B4%EB%8D%B0%E2%80%85%EA%B8%80%EC%9E%90%E2%80%85%EA%B0%80%EC%A0%B8%EC%98%A4%EA%B8%B0,2023. 8. 30,20,1
2023. 8. 30 오전 9:25:13,이현지`,Unity,25 - 부족한 금액 계산하기,"using System;

class Solution
{
    public long solution(long price, long money, int count)
    {
        long totalPrice = 0;
        for (int i = 1; i < count + 1; i ++)
        {
            totalPrice += price * i;
        }
        
        return (totalPrice - money > 0)? totalPrice - money : 0;
    }
}",https://github.com/szlovelee/Programmers-Algorithm,2023. 8. 30,25,1
2023. 8. 30 오전 9:25:14,김예준,Unity,30 - 3진법 뒤집기,"#include <vector>

using namespace std;

int solution(int n) {
    int answer = 0;
    vector<int> v;
    
    while (n != 0)
    {
        v.push_back(n % 3);
        n /= 3;
    }
    
    int tmp = 1;
    
    for (int i = v.size() - 1; i >= 0; i--)
    {
        answer += v[i] * tmp;
        tmp *= 3;
    }
    
    return answer;
}",,2023. 8. 30,30,1
2023. 8. 30 오전 9:25:17,기현빈,Unity,25 - 부족한 금액 계산하기,"using System;

class Solution
{
    public long solution(int price, int money, int count)
    {
        long res = price * (1 + count);
        res *= count;
        res /= 2;
        res -= money;
        
        return (res > 0) ? res : 0;
    }
}",,2023. 8. 30,25,1
2023. 8. 30 오전 9:25:19,정재훈,Unity,10 - 정수 내림차순으로 배치하기,"using System;
public class Solution {
    public long solution(long n) {
        long answer = 0;
        char[] a = n.ToString().ToCharArray();
        Array.Sort(a);
        Array.Reverse(a);
        answer = Convert.ToInt64(new string(a));
        return answer;
    }
}
",https://github.com/toadsam/Algorithm,2023. 8. 30,10,1
2023. 8. 30 오전 9:25:52,박민호,Unity,29 - 최대공약수와 최소공배수,"
public class Solution {
    public int[] solution(int n, int m) {
        int _gcd = gcd(n, m);
        int[] answer = new int[] {_gcd, n * m / _gcd};

        return answer;
    }

    int gcd(int a, int b)
    {
        return (a % b == 0 ? b : gcd(b, a % b));
    }
}",,2023. 8. 30,29,1
2023. 8. 30 오전 9:27:00,김윤경,Unity,5 - 나머지가 1이 되는 수 찾기,"
using System;

public class Solution {
    public int solution(int n) 
    {
        int answer = 0;
        for(int i = 2; i < n; i++)
        {
            if(n % i == 1)
            {
                answer = i;
                break;
            }
        }
        return answer;
    }
}
",,2023. 8. 30,5,1
2023. 8. 30 오전 9:27:41,차요한,Unity,29 - 최대공약수와 최소공배수,"public class Solution {
    public int[] solution(int n, int m) {
        int[] answer = new int[2];
        answer[0] = gcd(n,m);
        answer[1] = n*m/answer[0];
        return answer;
    }
    
    // 재귀함수
    public int gcd(int n, int m)
    {
        if(m==0) return n;
        else return gcd(m, n%m);
    }
}",https://github.com/HOHOJO/Algorithm_test,2023. 8. 30,29,1
2023. 8. 30 오전 9:27:47,신현주,Unity,20 - 가운데 글자 가져오기,"public class Solution {
    public string solution(string s) {
        int idx = s.Length /2;
        string answer = """";
        if( s.Length % 2 == 0){
            answer += s[idx -1];
            answer += s[idx];
        }else{
            answer += s[idx];
        }
        return answer;
    }
}",https://github.com/Shyunju/codeKata,2023. 8. 30,20,1
2023. 8. 30 오전 9:28:10,이경현,Unity,17 - 핸드폰 번호 가리기,"public static string solution(string phone_number)
{
    char[] answer = phone_number.ToCharArray();

    for (int i = 0; i < answer.Length - 4; i++)
    {
        answer[i] = '*';
    }

    return new string(answer);
}",https://github.com/516lkh/Algorithm,2023. 8. 30,17,1
2023. 8. 30 오전 9:28:33,이홍준,Unity,24 - 문자열 내림차순으로 배치하기,"using System;

public class Solution {
    public string solution(string s) {
        string answer = """";
        char[] temp = s.ToCharArray();
        
        Array.Sort(temp);
        Array.Reverse(temp);
        answer = new string(temp);
        
        return answer;
    }
}",https://github.com/dlghdwns97/Study/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12917.%E2%80%85%EB%AC%B8%EC%9E%90%EC%97%B4%E2%80%85%EB%82%B4%EB%A6%BC%EC%B0%A8%EC%88%9C%EC%9C%BC%EB%A1%9C%E2%80%85%EB%B0%B0%EC%B9%98%ED%95%98%EA%B8%B0,2023. 8. 30,24,1
2023. 8. 30 오전 9:28:40,신우석,Unity,41 - 푸드 파이트 대회,"using System;
using System.Text;

public class Solution {
    public string solution(int[] food) {
        StringBuilder answer = new StringBuilder();

        for (int i = 1; i < food.Length; i++)
            for (int j = 0; j < food[i] / 2; j++)
                answer.Insert(answer.Length / 2, i.ToString() + i.ToString());
        
        answer.Insert(answer.Length / 2, 0.ToString());
        
        return answer.ToString();
    }
}",https://github.com/seoksii/AlgorithmCodeKata/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/unrated/134240.%E2%80%85%ED%91%B8%EB%93%9C%E2%80%85%ED%8C%8C%EC%9D%B4%ED%8A%B8%E2%80%85%EB%8C%80%ED%9A%8C,2023. 8. 30,41,2
2023. 8. 30 오전 9:28:54,김현우,AI,40 - 가장 가까운 같은 글자,"function solution(s) {
    var answer = [];
    const stack = [];
    
    for(let i=0; i<s.length; i++) {
        if(!stack.includes(s[i])) {
            answer.push(-1);
            stack.push(s[i])
        } else {
            answer.push(i - stack.lastIndexOf(s[i]));
            stack.push(s[i])
        }
    }
    return answer;
}",,2023. 8. 30,40,2
2023. 8. 30 오전 9:29:13,이정환,Unity,22 - 내적,"using System;

public class Solution {
    public int solution(int[] a, int[] b) {
        int answer = 0;
        for(int n=0;n<a.Length;n++)
        {
           answer += a[n]*b[n];
        }
        return answer;
    }
}",,2023. 8. 30,22,1
2023. 8. 30 오전 9:29:37,김진규,Unity,31 - 이상한 문자 만들기,"using System.Text;
public class Solution {
    public string solution(string s) {
        StringBuilder answer = new StringBuilder();
        int wordIndex = 0;
       for (int i = 0; i < s.Length; i++) {
            char c = s[i];
           
           if (c == ' ') {
                answer.Append(c);
                wordIndex = 0;
             } else {
                answer.Append(wordIndex % 2 == 0 ? char.ToUpper(c) : char.ToLower(c));
                wordIndex++;
            }
       }
        return answer.ToString();;
    }
}",,2023. 8. 30,31,2
2023. 8. 30 오전 9:29:40,이선재,Unity,35 - 시저 암호,"#include <string>
#include <vector>

using namespace std;

string solution(string s, int n) { 
    for(int i = 0; i < s.length(); i++){
        if(s[i] == ' ')
            continue;
        
        if(s[i] >= 'A' && s[i] <= 'Z'){
            if(s[i] + n > 'Z')
                s[i] = s[i] + n - 1 - 'Z' + 'A';
            else
                s[i] += n;
        }
            
        else if(s[i] >= 'a' && s[i] <= 'z'){            
            if(s[i] + n > 'z')
                s[i] = s[i] + n - 1 - 'z' + 'a';
            else
                s[i] += n;
        }
    }
    
    return s;
}",https://github.com/Lyrwhitt/Algorithm/blob/main/Programmers/LEVEL1/%EC%8B%9C%EC%A0%80%20%EC%95%94%ED%98%B8,2023. 8. 30,35,2
2023. 8. 30 오전 9:30:10,지민규,Unity,26 - 문자열 다루기 기본,"using System;

public class Solution {
    public bool solution(string s) {
        bool answer = false;
        try
        {
            int.Parse(s);
            answer = (s.Length == 4 || s.Length == 6) ? true : false;
            return answer;
        }
        catch (Exception ex)
        {   
            return false;
        }
    }
}",,2023. 8. 30,26,1
2023. 8. 30 오전 9:30:25,이현지,Unity,26 - 문자열 다루기 기본,"public class Solution {
    public bool solution(string s) {
        bool answer = false;
        if(s.Length == 4 || s.Length == 6)
        {
            answer = int.TryParse(s, out int num);
        }
        
        return answer;
    }
}",https://github.com/szlovelee/Programmers-Algorithm,2023. 8. 30,26,1
2023. 8. 30 오전 9:31:19,김민태,Unity,33 - 크기가 작은 부분,"using System;

public class Solution {
    public int solution(string t, string p) {
        int answer = 0;
        long pp = long.Parse(p);
        for(int i = 0; i<t.Length - p.Length + 1; i++){
            long temp = long.Parse(t.Substring(i, p.Length));
            if(temp <= pp) answer++;
        }
        return answer;
    }
}",https://github.com/KimMaYa1/SPT-B12,2023. 8. 30,33,2
2023. 8. 30 오전 9:31:25,김하늘,Unity,16 - 음양 더하기,"using System;

public class Solution 
{
    public int solution(int[] absolutes, bool[] signs) 
    {
        int answer = 0;
        for (int i = 0; i < absolutes.Length; i++)
        {
            if (signs[i]) answer += absolutes[i];
            else answer -= absolutes[i];
        }
        return answer;
    }
}ㅍ",,2023. 8. 30,16,1
2023. 8. 30 오전 9:31:28,김해찬,Unity,81 - 기능개발,"using System;
using System.Collections;
using System.Collections.Generic;

public class ProgressTask
{
    public int progress;
    public int speed;
}

public class Solution
{
    public int[] solution(int[] progresses, int[] speeds)
    {
        List<ProgressTask> taskList = new List<ProgressTask>();
        
        for(int i = 0; i < progresses.Length; i++)
        {
            ProgressTask newTask = new ProgressTask();
            newTask.progress = progresses[i];
            newTask.speed = speeds[i];
            
            taskList.Add(newTask);
        }
        
        List<int> completeList = new List<int>();
        
        int idx = 0;
        
        while(true)
        {            
            int completedTask = 0;
            
            for(int i = idx; i < taskList.Count; i++)
            {                
                taskList[i].progress += taskList[i].speed;
            }
            
            for(int i = idx; i < taskList.Count; i++)
            {
                if(taskList[i].progress < 100)
                {
                    break;
                }
                
                if(taskList[i].progress >= 100)
                {
                    idx++;
                    completedTask++;
                }
            }
            
            if(completedTask != 0)
            {
                completeList.Add(completedTask);
            }
            
            if(idx == taskList.Count)
            {
                break;
            }
        }
        
        int[] answer = new int[completeList.Count];
        
        for(int i = 0; i < completeList.Count; i++)
        {
            answer[i] = completeList[i];
        }
        
        return answer;
    }
}",,2023. 8. 30,81,3
2023. 8. 30 오전 9:31:35,이현지,Unity,25 - 부족한 금액 계산하기,"using System;

class Solution
{
    public long solution(long price, long money, int count)
    {
        long totalPrice = 0;
        for (int i = 1; i < count + 1; i ++)
        {
            totalPrice += price * i;
        }
        
        return (totalPrice - money > 0)? totalPrice - money : 0;
    }
}",https://github.com/szlovelee/Programmers-Algorithm,2023. 8. 30,25,1
2023. 8. 30 오전 9:31:47,공혜진,AI,12 - 두 정수 사이의 합,"def solution(a, b):
    answer = 0
    if a == b:
        return a
    elif b > a:
       for i in range(a, b + 1):
            answer += i
    elif a > b:
       for i in range(b, a+1):
            answer += i 
    return answer",,2023. 8. 30,12,1
2023. 8. 30 오전 9:33:08,양덕영,AI,24 - 문자열 내림차순으로 배치하기,"def solution(s):
    sorted_string = ''.join(sorted(s, reverse=True))
    return sorted_string",https://github.com/DeokYoung980130/Ai_Project2023-08-07/tree/43324e977ca3d93aa6664ac161dc6fe60390b612,2023. 8. 30,24,1
2023. 8. 30 오전 9:33:53,김정규,AI,15 - 나누어 떨어지는 숫자,"def solution(arr, divisor):
    answer = []
    for i in range(len(arr)):
        if arr[i] % divisor == 0:
            answer.append(arr[i])
        if i == len(arr)-1 and answer == []:
            answer.append(-1)
    return sorted(answer)",https://github.com/JungGyu00/algorithm,2023. 8. 30,15,1
2023. 8. 30 오전 9:34:01,신우석,Unity,42 - 콜라 문제,"using System;

public class Solution {
    public int solution(int a, int b, int n) {
        int answer = 0;
        while (n >= a) {
            answer += n / a * b;
            n = n / a * b + n % a;
        }
        return answer;
    }
}",https://github.com/seoksii/AlgorithmCodeKata/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/unrated/132267.%E2%80%85%EC%BD%9C%EB%9D%BC%E2%80%85%EB%AC%B8%EC%A0%9C,2023. 8. 30,42,2
2023. 8. 30 오전 9:34:10,김경환,Unity,33 - 크기가 작은 부분,"using System;

public class Solution {
    public int solution(string t, string p) {
        int answer = 0, length = p.Length;
        long pnum = Convert.ToInt64(p);
        
        for(int i = 0; i < t.Length - length + 1; i++)
        {
            long tnum = 0;
            
            for(int j = 0; j < length; j++)
            {
                tnum *= 10;
                tnum += t[i+j]-'0';
            }
            
            
            if(pnum >= tnum)
                answer++;
        }
        
        return answer;
    }
}",https://github.com/kkh9700/algorithm,2023. 8. 30,33,2
2023. 8. 30 오전 9:34:12,손병의,Unity,13 - 콜라츠 추측,"public class Solution 
{
    public int solution(long num) 
{
        int answer = 0;
                
        if(num==1) 
        {
            return 0;
        }
               
        for(int i=0; i<500; i++)
        {           
            answer++;
                     
            if(num%2==0) 
            {
                num = num / 2;
            }
            else 
            {
                num = num * 3 + 1;
            }
          
            if(num==1) 
            {
                return answer;
            }
        }
      
        return -1;
    }
}",https://github.com/Son-BE/CodeKata1,2023. 8. 30,13,1
2023. 8. 30 오전 9:34:24,양수홍,AI,41 - 푸드 파이트 대회,"def solution(food):
    answer = '0'
    l=len(food)
    for num in food[::-1]:
        n=num//2
        answer=str(l-1)*n+answer+str(l-1)*n
        l-=1
    return answer",,2023. 8. 30,41,2
2023. 8. 30 오전 9:34:29,신현주,Unity,21 - 수박수박수박수박수박수?,"public class Solution {
    public string solution(int n) {
        string answer = """";
        for(int i = 1; i <= n /2; i++){
            answer += ""수박"";
        }
        if(n % 2 == 1){
            answer += ""수"";
        }
        return answer;
    }
}",https://github.com/Shyunju/codeKata,2023. 8. 30,21,1
2023. 8. 30 오전 9:35:06,이홍준,Unity,25 - 부족한 금액 계산하기,"using System;

class Solution
{
    public long solution(int price, int money, int count)
    {
        long n = 0;
        for (int i = 0; i < count + 1; i++)
        {
            n += i;
        }
        long sum = price * n;
        if (money - sum < 0)
        {
            return (sum - money);
        }
        else return 0;
    }
}",https://github.com/dlghdwns97/Study/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/82612.%E2%80%85%EB%B6%80%EC%A1%B1%ED%95%9C%E2%80%85%EA%B8%88%EC%95%A1%E2%80%85%EA%B3%84%EC%82%B0%ED%95%98%EA%B8%B0,2023. 8. 30,25,1
2023. 8. 30 오전 9:35:08,김경원,Unity,12 - 두 정수 사이의 합,"public class Solution {
    public long solution(int a, int b) {
        
       
long answer = 0;

        if (a > b) {
            int temp = a;
            a = b;
            b = temp;
        }

        

for (int i = a; i <= b; i++) {
            answer += i;
        }

  

           
return answer;
    }
}",,2023. 8. 30,12,1
2023. 8. 30 오전 9:36:02,정재훈,Unity,11 - 하샤드 수,"public class Solution {
    public bool solution(int x) {
         bool answer = false;
        int sum = 0;
        int n = x;
        while(x>0){
            sum += x%10;
            x/=10;
        }
        if(n%sum == 0){
            answer = true;
        }
        
        
        return answer;
    }
}",https://github.com/toadsam/Algorithm,2023. 8. 30,11,1
2023. 8. 30 오전 9:36:25,김진환,Unity,34 - 최소직사각형,"public static int solution(int[,] sizes)
        {
            int answer = 0;
            int[] rets = new int[2] { 0,0 };
            // out of range => 이유 : 2차원 배열의 길이는 GetLength쓰자.
            for(int i = 0; i < sizes.GetLength(0);i++)
            {
                if (sizes[i,0] > sizes[i,1])
                {
                    // 숫자 바꾸기 익숙하다고 넘어갔다 오류남.
                    int temp = sizes[i,0];
                    sizes[i,0] = sizes[i,1];
                    sizes[i,1] = temp;
                }
                if (rets[0] < sizes[i,0])
                {
                    rets[0] = sizes[i,0];
                }
                if (rets[1] < sizes[i,1])
                {
                    rets[1] = sizes[i,1];
                }
                Console.WriteLine($""{rets[0]}, {rets[1]}"");
            }
            answer = rets[0] * rets[1];
            return answer;
        }",https://github.com/NewRound/AlgorithmKata.git,2023. 8. 30,34,2
2023. 8. 30 오전 9:36:28,이주연,Unity,36 - 숫자 문자열과 영단어,"#include <string>
#include <vector>

using namespace std;

int solution(string s) {
    int answer = 0;
    string number[10] = { ""zero"", ""one"", ""two"", ""three"", ""four"", ""five"", ""six"", ""seven"", ""eight"", ""nine"" };
    string res = """";
    for (int i = 0; i < s.length(); i++)
    {
        if (s[i] >= '0' && s[i] <= '9') 
            res += s[i];
        else
        {
            for (int j = 0; j < 10; j++)
            {
                bool flag = false; 
                for (int k = 0; k < number[j].length(); k++)
                {
                    if (i + k < s.length() && s[i + k] != number[j][k])
                        break; 

                    if (k == number[j].length() - 1) 
                        flag = true;
                }

                if (flag == true) 
                {
                    res += to_string(j);
                    i += number[j].length() - 1;
                    break;
                }
            }


        }

    }

    answer = stoi(res); 

    return answer;
}",,2023. 8. 30,36,2
2023. 8. 30 오전 9:36:28,이진형,AI,26 - 문자열 다루기 기본,"def solution(s):
    if len(s)==6 or len(s)==4:
        return s.isdigit()
    else:
        return False",,2023. 8. 30,26,1
2023. 8. 30 오전 9:36:47,장성림,Unity,29 - 최대공약수와 최소공배수,"public class Solution {
    public int[] solution(int n, int m) {
        int min = 0;
        int max = 0;
        int tmp = n;
        if (n > m){
            n = m;
            m = tmp;
        }

        for (int i = n; i > 0; i--){
            if (n % i == 0 && m % i == 0){
                max = i;
                break;
            }
        }

        min = (n / max) * (m / max) * (max);
        int[] answer = new int[] {max, min};
        return answer;
    }
}",https://github.com/hoobhoob,2023. 8. 30,29,1
2023. 8. 30 오전 9:37:35,노재우,Unity,15 - 나누어 떨어지는 숫자,"using System.Collections.Generic;

public class Solution
{
    public int[] solution(int[] arr, int divisor)
    {
        List<int> list = new List<int>();
        int[] answer = new int[] { -1};
        foreach (var item in arr)
        {
            if (item%divisor ==0)
            {
                sort(list, item);
            }
        }
        if (list.Count !=0)
        {
            answer = list.ToArray();
        }
        return answer;
    }

    void sort(List<int> ints, int a)
    {
        if (ints.Count ==0)
        {
            ints.Add(a);
            return;
        }

        for (int i = 0; i < ints.Count; i++)
        {
            if (ints[i]>a)
            {
                ints.Insert(i, a);
                return;
            }
            else if (i == ints.Count-1) 
            {
                ints.Add(a);
                return;
            }
        }
    }
}",,2023. 8. 30,15,1
2023. 8. 30 오전 9:37:54,김준범,Unity,6 - x만큼 간격이 있는 n개의 숫자,"public class Solution {
    public long[] solution(int x, int n) 
    {
        long[] answer = new long[n];

        for(int i=0; i<n; i++)
        {

            if(i!=0)
                answer[i] += answer[i-1] + x;
            else
                answer[i] = x;
        }
        
        return answer;
    }
}",,2023. 8. 30,6,1
2023. 8. 30 오전 9:37:54,김경환,Unity,34 - 최소직사각형,"using System;

public class Solution {
    public int solution(int[,] sizes) {
        int width = 0, height = 0;
        
        for(int i = 0; i < sizes.GetLength(0); i++)
        {
            if(sizes[i,  0] < sizes[i, 1])
            {
                int temp = sizes[i, 0];
                sizes[i, 0] = sizes[i, 1];
                sizes[i, 1] = temp;
            }
            
            if(width < sizes[i, 0])
                width = sizes[i, 0];
            
            if(height < sizes[i, 1])
                height = sizes[i, 1];
        }
        
        return width * height;
    }
}",https://github.com/kkh9700/algorithm,2023. 8. 30,34,2
2023. 8. 30 오전 9:38:10,강성호,Unity,40 - 가장 가까운 같은 글자,"using System;
using System.Collections.Generic;
using System.Linq;

public class Solution {
    public int[] solution(string s) {
        int[] answer = new int[s.Length];
			int cnt = 0;
			Stack<char> stack = new Stack<char>();
			Stack<char> tmp = new Stack<char>();
			for (int i = 0; i < s.Length; i++)
			{
				if (!stack.Contains(s[i]))
				{
					stack.Push(s[i]);
					answer[i] = -1;
				}
				else
				{
					while (true)
					{
						char val = stack.Pop();
						cnt++;
						if(val == s[i])
						{
							answer[i] = cnt;
							cnt = 0;
							tmp.Push(val);
							break;
						}
						tmp.Push(val);
					}
					while (tmp.Any())
					{
						stack.Push(tmp.Pop());
					}
					stack.Push(s[i]);
				}
			}
			return answer;
    }
}",,2023. 8. 30,40,2
2023. 8. 30 오전 9:38:21,이경현,Unity,18 - 없는 숫자 더하기,"public int solution(int[] numbers)
{
    int answer = 45;

    for (int i = 0; i < numbers.Length; i++)
    {
        answer -= numbers[i];
    }
    
    return answer;
}",https://github.com/516lkh/Algorithm,2023. 8. 30,18,1
2023. 8. 30 오전 9:38:28,명세인,AI,20 - 가운데 글자 가져오기,"def solution(s):
    if len(s) % 2 == 1:
        answer = s[int(len(s)/2)]
    else:
        answer = s[int(len(s)/2)-1]+s[int(len(s)/2)]
    return answer",https://github.com/playersein/Coding_Test/commit/f7d1249c0bf78b819a857ba6fc208d3d8d6a796d,2023. 8. 30,20,1
2023. 8. 30 오전 9:38:49,박민혁,Unity,24 - 문자열 내림차순으로 배치하기,"using System;
using System.Collections.Generic;
public class Solution {
    public string solution(string s) {
        char[] arr = s.ToCharArray();
        Array.Sort(arr);
        Array.Reverse(arr);
        string answer=new string(arr);
        

        return answer;
    }
}",,2023. 8. 30,24,1
2023. 8. 30 오전 9:38:54,이기호,AI,10 - 정수 내림차순으로 배치하기,"def solution(n):
    x = list(str(n))
    y = []
    for i in x:
        y.append(i)
    y.sort(reverse=True)

    z = int("""".join(y))
    return(z)",,2023. 8. 30,10,1
2023. 8. 30 오전 9:40:36,신현주,Unity,22 - 내적,"using System;

public class Solution {
    public int solution(int[] a, int[] b) {
        int answer = 0;
        for( int i =0; i < a.Length; i++){
            answer += a[i] * b[i];
        }
        return answer;
    }
}",https://github.com/Shyunju/codeKata,2023. 8. 30,22,1
2023. 8. 30 오전 9:41:31,강희건,Unity,4 - 약수의 합,"namespace divisor
{
    public class Solution
    {
        public int SumofDivisors(int n)
        {
            int sum = 0;
           
            for(int i = 1; i <= n; i++)
            {
                   if(n % i == 0)
                {
                    sum += i;
                }
            }

            return sum;
        }
        
            
        
    }

    class Program { 
    static void Main(string[] args)
    {
        Solution solution = new Solution();

        Console.Write(""정수 n을 입력하시오: "");
        int n = int.Parse(Console.ReadLine());

        int result = solution.SumofDivisors(n);
        Console.WriteLine($""정수 {n}의 약수를 모두 더한 값: {result}"");
            }
    }
}
",https://github.com/bo9us,2023. 8. 30,4,1
2023. 8. 30 오전 9:42:11,이진형,AI,27 - 행렬의 덧셈,"def solution(arr1, arr2):
    answer=[]
    for i in range(len(arr1)):
        answer.append([arr1[i][j]+arr2[i][j] for j in range(len(arr1[i]))])
    return answer",,2023. 8. 30,27,1
2023. 8. 30 오전 9:42:32,어하림,Unity,5 - 나머지가 1이 되는 수 찾기,"using System;

public class Solution {
    public int solution(int n) {
int answer=0;
for(int x=2; x<=n; x++){
if(n % x==1)
 return x;
break;
}
return answer;
}
}
",,2023. 8. 30,5,1
2023. 8. 30 오전 9:42:42,명세인,AI,21 - 수박수박수박수박수박수?,"def solution(n):
    answer = ''
    for i in range(1,n+1):
        if i % 2 ==1:
            answer += '수'
        else:
            answer += '박'
    return answer",https://github.com/playersein/Coding_Test/commit/e471bbd4ba298da4eaf8f72e6e20db472576c8e4,2023. 8. 30,21,1
2023. 8. 30 오전 9:42:51,김하늘,Unity,17 - 핸드폰 번호 가리기,"public class Solution 
{
    public string solution(string phone_number) 
    {
        string answer = """";
        for (int i = 0; i < phone_number.Length; i++)
        {
            if (i < phone_number.Length - 4) answer += ""*"";
            else answer += phone_number[i];
        }
        return answer;
    }
}",,2023. 8. 30,17,1
2023. 8. 30 오전 9:43:11,심명희,AI,17 - 핸드폰 번호 가리기,"def solution(phone_number):    
    return '*'*(len(phone_number)-4)+phone_number[-4:]",,2023. 8. 30,17,1
2023. 8. 30 오전 9:43:16,김어진,Unity,12 - 두 정수 사이의 합,"public class Solution {
    public long solution(int a, int b) {
        long answer = 0;
        int min = 0;
        int max = 0;
        if(a <= b){
            min = a;
            max = b;
        }
        else {
            min = b;
            max = a;
        }
        
        for (int i=min; i<=max; i++){
            answer += i;
        }
        return answer;
    }
}",https://github.com/KimEoJin24/ProgrammersCodingTests/commit/ecfce78ba0046f8b9e5a6a1f9357d5d12c483cb7,2023. 8. 30,12,1
2023. 8. 30 오전 9:43:17,최성원,Unity,4 - 약수의 합,"public class Solution
{
    public int solution(int n) 
    {
        int answer = 0;
        for (int i = 1; i <= n; i++)  // 범위를 1부터 n까지로 수정
        {
            if (n % i == 0)
            {
                answer += i;  // 약수를 직접 더함
            }
        }
        return answer;  // 답을 반환
    }
}
",,2023. 8. 30,4,1
2023. 8. 30 오전 9:43:45,이정환,Unity,23 - 약수의 개수와 덧셈,"using System;

public class Solution {
    public int solution(int left, int right) {
       
        int start=left;
        int last = right;
        int sum=0;
        while(start<=last){
            sum += start;
            start++;
        }
      
        int n=1;
        int m;
        while(n<31)
        {
            m = n*n;
            if(m>right)
            {
                break;
            }
            if(m>=left && m<=right)
            {
                sum -= m*2;
            }
            n++;
        }
          
        return  sum;
    }
}",,2023. 8. 30,23,1
2023. 8. 30 오전 9:43:50,김경환,Unity,35 - 시저 암호,"using System.Text;

public class Solution {
    public string solution(string s, int n) {
        StringBuilder sb = new StringBuilder();
        
        for(int i = 0; i < s.Length; i++)
        {
            char ch = s[i];
            
            if(ch == ' ');
            else if(ch < 'a')
            {
                ch = (char)(ch + n);
                
                if(ch > 'Z')
                    ch = (char)(ch - 26);
            } else {
                ch = (char)(ch + n);
                
                if(ch > 'z')
                    ch = (char)(ch - 26);
            }
            
            sb.Append(ch);
        }
        
        return sb.ToString();
    }
}",https://github.com/kkh9700/algorithm,2023. 8. 30,35,2
2023. 8. 30 오전 9:43:51,윤지연,Unity,8 - 문자열을 정수로 바꾸기,"public int solution(string s)
      {
          int answer = 0;
          int flag = 1;
          int idx = 1;

          for (int i = 0; i < s.Length - 1; i++)
          {
              idx *= 10;
          }

          foreach (char c in s)
          {
              if (c == '-')
              {
                  flag = -1;
              }
              else if (c != '+')
              {
                  if (c == '0')
                  {
                      answer /= 10;
                      answer *= 10;
                  }
                  else
                  {
                      answer += (int)(c - '0') * idx;
                  }
              }
              idx /= 10;
          }

          if (answer == 0)
          {
              return 0;
          }
          else
          {
              return answer * flag;
          }
      }",https://github.com/jungbosong/Codekata/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12925.%E2%80%85%EB%AC%B8%EC%9E%90%EC%97%B4%EC%9D%84%E2%80%85%EC%A0%95%EC%88%98%EB%A1%9C%E2%80%85%EB%B0%94%EA%BE%B8%EA%B8%B0,2023. 8. 30,8,1
2023. 8. 30 오전 9:43:57,문현우,Unity,11 - 하샤드 수,"public class Solution {
    public bool solution(int x) {
        int originX = x;
        int sum = 0;
        bool answer = false;
        do{
            sum += x % 10;
            x /= 10; 
        }while(x>0);
        if(originX % sum == 0)
            answer = true;
        return answer;
    }
}",https://github.com/Munch310/Algorithm-Csharp/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12947.%E2%80%85%ED%95%98%EC%83%A4%EB%93%9C%E2%80%85%EC%88%98,2023. 8. 30,11,1
2023. 8. 30 오전 9:43:58,노재우,Unity,16 - 음양 더하기,"using System;

public class Solution
{
    public int solution(int[] absolutes, bool[] signs)
    {
        int answer=0;
        for (int i = 0; i < absolutes.Length; i++)
        {
            if (signs[i] == true)
            {
                answer += absolutes[i];
                continue;
            }
            else if (signs[i] == false)
            {
                answer -= absolutes[i];
            }
        }
        return answer;
    }
}
",,2023. 8. 30,16,1
2023. 8. 30 오전 9:44:07,이진형,AI,28 - 직사각형 별찍기,"a, b = map(int, input().strip().split(' '))
for _ in range(b):
    print('*'*a)",,2023. 8. 30,28,1
2023. 8. 30 오전 9:45:10,이장원,Unity,4 - 약수의 합,"public class Solution 
{
    int solution(int n) 
{
    int answer = 0;
    
    for(int i = 1; i <= n; i++)
        if(n % i == 0) 
            answer += i;
    
    return answer;
}
}",,2023. 8. 30,4,1
2023. 8. 30 오전 9:45:12,김진성,Unity,12 - 두 정수 사이의 합,"public class Solution1
    {
        public long solution(int a, int b)
        {
            if (a == b)
            {
                return a;
            }
            int fixeda = a;

            long answer = 0;
            int i = 0;
            long sum = 0;
            while (i <= Math.Abs(fixeda - b))
            {
                sum += a;

                if (a != b)
                {
                    if (a - b < 0)
                    {
                        a += (a - b) / (a - b); // 틀렸음
                    }
                    else
                    {
                        a -= (a - b) / (a - b);
                    }
                }

                i++;
            }

            answer = sum;

            return answer;
        }
    }",https://github.com/GYALLERHORN/ALGORITHM,2023. 8. 30,12,1
2023. 8. 30 오전 9:45:13,양수홍,AI,42 - 콜라 문제,"def solution(a, b, n):
    answer = 0
    remain=0
    while n>=a:
        answer+=(n//a)*b
        n=n-(n//a)*(a-b)
    return answer",,2023. 8. 30,42,2
2023. 8. 30 오전 9:45:31,심우진,Unity,7 - 자연수 뒤집어 배열로 만들기,"    ///자연수 뒤집어 배열로 만들기
    using System;
using System.Collections.Generic;

public class Solution
    {
        public int[] solution(long n)
        {
            List<int> answer = new List<int>();

            while (n > 0)
            {
                answer.Add((int)(n % 10));
                n /= 10;
            }

            return answer.ToArray();
        }
    }",https://github.com/agasa0624/at,2023. 8. 30,7,1
2023. 8. 30 오전 9:46:06,이현지,Unity,27 - 행렬의 덧셈,"public class Solution {
    public int[,] solution(int[,] arr1, int[,] arr2) {
        int len = arr1.GetLength(0);
        int len2 = arr1.GetLength(1);
        int[,] answer = new int[len, len2];
        
        for (int i = 0; i < len; i++)
        {
            for (int j = 0; j < len2; j++)
            {
                answer[i, j] = arr1[i,j] + arr2[i,j];
            }
        }
        return answer;
    }
}",https://github.com/szlovelee/Programmers-Algorithm,2023. 8. 30,27,1
2023. 8. 30 오전 9:46:10,김명식,Unity,15 - 나누어 떨어지는 숫자,"using System;
using System.Collections.Generic;
public class Solution {
    public int[] solution(int[] arr, int divisor) {
        
        List<int> answer = new List<int>();
        int count = 0;
        for(int i=0; i<arr.Length; i++){
            if(arr[i]%divisor==0){
                answer.Add(arr[i]);
            }
        }
        if(answer.Count==0){
            return new int[]{-1};
        }
        answer.Sort();
        return answer.ToArray();
    }
}",https://github.com/D0ryeon/Algorithm-Code-Kata,2023. 8. 30,15,1
2023. 8. 30 오전 9:46:13,김형중,Unity,19 - 제일 작은 수 제거하기,"using System.Collections.Generic;
using System;

public class Solution {
    public int[] solution(int[] arr) {
        if(arr.Length == 1)
        {
            arr[0] = -1;
            return arr;
        }
        int temp = arr[0];
        
        for(int i = 0; i < arr.Length; i++)
        {
            if(temp > arr[i]) 
            {
                temp = arr[i]; 
            }
        }
        List<int> list = new List <int>(); 
        list.AddRange(arr); 
        list.Remove(temp); 
        int[] answer = new int[] {}; 
        answer = list.ToArray(); 
        
        return answer;
    }
}",,2023. 8. 30,19,1
2023. 8. 30 오전 9:46:25,김광수,Unity,59 - 성격 유형 검사하기,"using System;
using System.Collections.Generic;

public class Solution
    {
        public string solution(string[] survey, int[] choices)
        {
            // 질문의 유형에 따라서 배점이 정해지고
            // 1~3은 앞문자, 4는 둘다 0점, 5~7 은 뒷문자의 점수를 얻는다.
            // 3 2 1, 1 2 3점
            // 그래서 각 성격유형의 점수를 모두 합쳐서 사전순으로 return한다.

            // 일단 survey를 index 0과 1로 나눔

            // 성격유형을 사전순으로만 생각
            // RT, CF, JM, AN
            // survey를 확인하고 사전순인지 역순인지 확인.

            Dictionary<string, int> dic = new Dictionary<string, int>();
            string[] order = new string[] { ""RT"", ""CF"", ""JM"", ""AN"" };
            string answer = """";
            
            foreach(string s in order)
            {
                dic.Add(s,0);
            }
            
            for (int i = 0; i < survey.Length; i++)
            {
                string s = survey[i];
                int choice = choices[i];
                int[] score = new int[] { 3, 2, 1, 0, -1, -2, -3 };
                
                string key = """";

                // key를 사전순으로 정렬
                if (s[0] - s[1] > 0)
                {
                    key += s[1];
                    key += s[0];
                    Array.Reverse(score);
                }
                else
                {
                    key = s;
                }
                
                dic[key] += score[choice-1];
            }

            foreach (string s in order)
            {
                answer += dic[s] >= 0 ? s[0] : s[1];
            }
            return answer;
        }   
    }",https://github.com/kksoo0131/Study/commit/bcf77db74c8f392053f0507bced6d6c3eb4d5cc8,2023. 8. 30,59,3
2023. 8. 30 오전 9:46:53,지민규,Unity,27 - 행렬의 덧셈,"public class Solution {
    public int[,] solution(int[,] arr1, int[,] arr2) {
        int row = arr1.GetLength(0);
        int col = arr1.GetLength(1);
        int[,] answer = new int[row,col];
        for (int i = 0; i < arr1.GetLength(0); i++)
        {
            for (int j = 0; j < arr1.GetLength(1); j++)
            {
                answer[i, j] = arr1[i, j] + arr2[i, j];
            }
        }
        
        return answer;
    }
}",,2023. 8. 30,27,1
2023. 8. 30 오전 9:47:05,조호진,AI,21 - 수박수박수박수박수박수?,"def solution(n):
    answer = []
    c= []
    for i in range(1,n+1):
        if i % 2 == 0:
            a = ""박""
            answer.append(a)
        elif i % 2 == 1:
            b = ""수""
            answer.append(b)
        c = """".join(answer)
    return c
",https://github.com/bm4706/Algorithm_practice/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12922.%E2%80%85%EC%88%98%EB%B0%95%EC%88%98%EB%B0%95%EC%88%98%EB%B0%95%EC%88%98%EB%B0%95%EC%88%98%EB%B0%95%EC%88%98%EF%BC%9F,2023. 8. 30,21,1
2023. 8. 30 오전 9:47:06,김경원,Unity,14 - 서울에서 김서방 찾기,"public class Solution {
    public string solution(string[] seoul) {
        int index = Array.IndexOf(seoul, ""Kim"");
        string answer = $""김서방은 {index}에 있다"";
        return answer;
    }
}",,2023. 8. 30,14,1
2023. 8. 30 오전 9:47:13,조범준,Unity,26 - 문자열 다루기 기본,"using System;
public class Solution {
    public bool solution(string s) {
        int num = 0;
        if((s.Length != 4 && s.Length != 6) || !int.TryParse(s, out num))
        {
            return false;
        }
        return true;
    }
}",https://github.com/KimMaYa1/BaekJoonEx/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1,2023. 8. 30,26,1
2023. 8. 30 오전 9:47:14,김하늘,Unity,18 - 없는 숫자 더하기,"using System;

public class Solution 
{
    public int solution(int[] numbers) 
    {
        int answer = 45;
        for (int i = 0; i < numbers.Length; i++)
            answer -= numbers[i];
        return answer;
    }
}",,2023. 8. 30,18,1
2023. 8. 30 오전 9:47:30,김현우,AI,41 - 푸드 파이트 대회,"function solution(food) {
    const firstUserFood = [];
    
    const firstUser = food.slice(1, food.length).filter((el, idx) => {
        if(Math.floor(el/2) !== 0) {
            firstUserFood.push(String(idx + 1).repeat(Math.floor(el/2)))
        }
    });
    const seconUserFood = [...firstUserFood].reverse()
    
    const answerFood = firstUserFood.concat(0, ...seconUserFood).join("""")
    
    return answerFood;
}",,2023. 8. 30,41,2
2023. 8. 30 오전 9:47:40,김정규,AI,16 - 음양 더하기,"def solution(absolutes, signs):
    for i in range(len(signs)):
        if signs[i] is False:
            absolutes[i] *= -1
    return sum(absolutes)",https://github.com/JungGyu00/algorithm,2023. 8. 30,16,1
2023. 8. 30 오전 9:47:46,송유섭,Unity,6 - x만큼 간격이 있는 n개의 숫자,"public class Solution 
{
      public long[] solution(int x, int n)
            {
                long[] answer = new long[n] ;
 
                for (long i = 0; i < n; i++)
                {
                    answer[i] = x*(i+1); 
                }
                return answer;
            }
}",https://github.com/SongJinx3512/codeKata/blob/main/codeKata%20lv%201%20%236%20x%EB%A7%8C%ED%81%BC%20%EA%B0%84%EA%B2%A9%EC%9D%B4%20%EC%9E%88%EB%8A%94%20n%EA%B0%9C%EC%9D%98%20%EC%88%AB%EC%9E%90,2023. 8. 30,6,1
2023. 8. 30 오전 9:47:54,박민혁,Unity,25 - 부족한 금액 계산하기,"using System;

class Solution
{
    public long solution(int price, int money, int count)
    {
        long answer=0;
        int pay=price;
        for(int i=0;i<count;++i)
        {
            answer+=pay;
            pay+=price;
        }
        if(money<answer)
        {
            answer=answer-money;
        }
        else
        {
            answer=0;
        }
        return answer;
    }
}",,2023. 8. 30,25,1
2023. 8. 30 오전 9:47:59,이선재,Unity,36 - 숫자 문자열과 영단어,"#include <string>
#include <vector>
#include <map>

using namespace std;

int solution(string s) {
    map<string, string> m;
    
    m[""zero""] = ""0"";
    m[""one""] = ""1"";
    m[""two""] = ""2"";
    m[""three""] = ""3"";
    m[""four""] = ""4"";
    m[""five""] = ""5"";
    m[""six""] = ""6"";
    m[""seven""] = ""7"";
    m[""eight""] = ""8"";
    m[""nine""] = ""9"";
    
    string alpha = """";
    string num = """";
    for(int i = 0; i < s.length(); i++){
        if(s[i] >= 'a' && s[i] <= 'z'){
        
            alpha += s[i];

            if(m.count(alpha) == 0){
                continue;
            }
            else{
                num += m[alpha];
                alpha = """";
            }
        }
        else
            num += s[i];
    }
    
    return stoi(num);
}",https://github.com/Lyrwhitt/Algorithm/blob/main/Programmers/LEVEL1/%EC%88%AB%EC%9E%90%20%EB%AC%B8%EC%9E%90%EC%97%B4%EA%B3%BC%20%EC%98%81%EB%8B%A8%EC%96%B4,2023. 8. 30,36,2
2023. 8. 30 오전 9:48:01,신현주,Unity,23 - 약수의 개수와 덧셈,"using System;

public class Solution {
    public int solution(int left, int right) {
        int answer = 0;
        int count =0;
        for( int i = left ; i <= right ; i++){
            count = 0;
            for(int j = 1; j <= i; j++){
                if( i % j == 0)
                    count ++;
            }
            
            if( count % 2 == 0){
                answer += i;
            }else{
                answer -= i;
            }
        }
        return answer;
    }
}",https://github.com/Shyunju/codeKata,2023. 8. 30,23,1
2023. 8. 30 오전 9:48:03,임전혁,Unity,36 - 숫자 문자열과 영단어,"using System;
using System.Collections.Generic;

public class Solution {
    public int solution(string s) {
        int answer = 0;
        Dictionary<int, string> dict = new Dictionary<int, string>()
        {
            { 0, ""zero"" },
            { 1,  ""one"" },
            { 2, ""two"" },
            { 3, ""three"" },
            { 4, ""four"" },
            { 5, ""five"" },
            { 6, ""six"" },
            { 7, ""seven"" },
            { 8, ""eight"" },
            { 9, ""nine"" }
        };


        for (int i = 0; i < dict.Count; i++)
        {
            if (s.Contains(dict[i]))
                s = s.Replace(dict[i], i.ToString());
        }
        
        return int.Parse(s);
    }
}",https://github.com/yarogono/Algorithm_CSharp/blob/master/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/81301.%E2%80%85%EC%88%AB%EC%9E%90%E2%80%85%EB%AC%B8%EC%9E%90%EC%97%B4%EA%B3%BC%E2%80%85%EC%98%81%EB%8B%A8%EC%96%B4/%EC%88%AB%EC%9E%90%E2%80%85%EB%AC%B8%EC%9E%90%EC%97%B4%EA%B3%BC%E2%80%85%EC%98%81%EB%8B%A8%EC%96%B4.cs,2023. 8. 30,36,2
2023. 8. 30 오전 9:48:17,김경원,Unity,15 - 나누어 떨어지는 숫자,"using System;
using System.Linq;

public class Solution {
    
   
public int[] solution(int[] arr, int divisor) {
        var answer = arr.Where(num => num % divisor == 0).OrderBy(num => num).ToArray();
        
        
        
if (answer.Length == 0) {
            answer = new int[] {-1};
        }
        
        return answer;
    }
}",,2023. 8. 30,15,1
2023. 8. 30 오전 9:48:33,심우진,Unity,8 - 문자열을 정수로 바꾸기,"//문자열을 정수로 바꾸기
public class Solution
{
    public int solution(string s)
    {
        return int.Parse(s);
    }
}
",https://github.com/agasa0624/at,2023. 8. 30,8,1
2023. 8. 30 오전 9:48:34,김경환,Unity,36 - 숫자 문자열과 영단어,"using System;

public class Solution {
    public int solution(string s) {
        string[] number = new string[] {""zero"", ""one"", ""two"", ""three"", ""four"", ""five"", ""six"", ""seven"", ""eight"", ""nine""};
        
        for(int i = 0; i < 10; i++)
        {
            s = s.Replace(number[i].ToString(), i.ToString());
        }
        
        return Convert.ToInt32(s);
    }
}",https://github.com/kkh9700/algorithm,2023. 8. 30,36,2
2023. 8. 30 오전 9:48:49,김민석,Unity,10 - 정수 내림차순으로 배치하기,"using System;

public class Solution {
	public long solution(long n) {
    	long answer = 0;
        char[] temp = n.ToString().ToCharArray();
        
        Array.Sort(temp);
        
        Array.Reverse(temp);
        
        answer = long.Parse(new string(temp));
        
        return answer;
    }
}",https://github.com/ms0753/codekata/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12933.%E2%80%85%EC%A0%95%EC%88%98%E2%80%85%EB%82%B4%EB%A6%BC%EC%B0%A8%EC%88%9C%EC%9C%BC%EB%A1%9C%E2%80%85%EB%B0%B0%EC%B9%98%ED%95%98%EA%B8%B0/%EC%A0%95%EC%88%98%E2%80%85%EB%82%B4%EB%A6%BC%EC%B0%A8%EC%88%9C%EC%9C%BC%EB%A1%9C%E2%80%85%EB%B0%B0%EC%B9%98%ED%95%98%EA%B8%B0.cs,2023. 8. 30,10,1
2023. 8. 30 오전 9:48:57,명세인,AI,22 - 내적,"def solution(a, b):
    answer = 0
    for i in range(len(a)):
        answer += a[i]*b[i]
    return answer",https://github.com/playersein/Coding_Test/commit/c81ef3be04f3c634e8bf5dca09306300a544a86b,2023. 8. 30,22,1
2023. 8. 30 오전 9:49:30,기현빈,Unity,26 - 문자열 다루기 기본,"public class Solution {
    public bool solution(string s) {
        if(s.Length != 4 && s.Length != 6) return false;
        int i;
        
        return int.TryParse(s, out i);;
    }
}",,2023. 8. 30,26,1
2023. 8. 30 오전 9:49:53,손병의,Unity,14 - 서울에서 김서방 찾기,"public class Solution 
{
    public string solution(string[] seoul) 
    {
        string answer ="""";
               
        for(int i =0; i< seoul.Length; i++)
        {
            if(seoul[i] == (""Kim""))
            {
                answer = ""김서방은 "" + i + ""에 있다"";
                break;
            }
        }
        
       
        return answer;
    }
}",https://github.com/Son-BE/CodeKata1,2023. 8. 30,14,1
2023. 8. 30 오전 9:49:55,장현웅,AI,11 - 하샤드 수,"def solution(x):
    answer = True
    
    sum_n = 0
    
    for i in str(x):
        sum_n = sum_n + int(i)
        if x % sum_n == 0:
            answer = True
        else:
            answer = False
    return answer",https://github.com/HyeonwoongJang/Algorithm.git,2023. 8. 30,11,1
2023. 8. 30 오전 9:50:03,이현지,Unity,28 - 직사각형 별찍기,"using System;

public class Example
{
    public static void Main()
    {
        String[] s;

        Console.Clear();
        s = Console.ReadLine().Split(' ');

        int a = Int32.Parse(s[0]);
        int b = Int32.Parse(s[1]);

        for (int i = 0; i < b; i++)
        {
            for (int j = 0; j < a; j++)
            {
                Console.Write(""*"");    
            }
            Console.WriteLine();
        }
    }
}",https://github.com/szlovelee/Programmers-Algorithm,2023. 8. 30,28,1
2023. 8. 30 오전 9:50:16,김명식,Unity,16 - 음양 더하기,"using System;

public class Solution {
    public int solution(int[] absolutes, bool[] signs) {
        int answer = 0;
        for(int i = 0; i<absolutes.Length; i++){
            if(signs[i]==true){
                answer += absolutes[i];
            }else{
                answer -= absolutes[i];
            }
        }
        return answer;
    }
}",https://github.com/D0ryeon/Algorithm-Code-Kata,2023. 8. 30,16,1
2023. 8. 30 오전 9:50:17,김강현,Unity,10 - 정수 내림차순으로 배치하기,"
using System;
public class Solution
{
    public long solution(long n) 
    {
        long temp = n;
        int temp1 = 0;
         int numcount = 0;
        int max = 9;
        while(temp > 0)
        {
            temp /= 10;
            numcount++;
        }
            int[] number = new int[numcount] ;
            for(int i = 0;i < numcount ; i++)
            {
                number[i] = (int)(n%10);
                n /=10;
            }
            
  
            for (int i = 0 ; i < numcount ; i++)
            {
                            for (int j = 0 ; j < numcount ; j++)
                            {
                                if(number[i]>number[j])
                                {
                                    temp1 = number[i];
                                    number[i] = number[j];
                                    number[j] = temp1;
                                }
                            }
                
            }
       string str = string.Join("""",number);
        return long.Parse(str);
    }
}",,2023. 8. 30,10,1
2023. 8. 30 오전 9:50:49,김연우,Unity,4 - 약수의 합,"#include <stdio.h>

int solution(int n) {
    int divisor_sum = 0;

    for (int i = 1; i <= n; i++) {
        if (n % i == 0) {
            divisor_sum += i;
        }
    }

    return divisor_sum;
}

int main() {
    printf(""%d\n"", solution(12));
    printf(""%d\n"", solution(5));

    return 0;
}
",,2023. 8. 30,4,1
2023. 8. 30 오전 9:51:20,이정환,Unity,24 - 문자열 내림차순으로 배치하기,"using System;
using System.Collections.Generic;

public class Solution {
    public string solution(string s) {
        char[] Input = s.ToCharArray();
        Array.Sort(Input);
        Array.Reverse(Input);
        string answer = new string(Input);
        return answer;
    }
}",,2023. 8. 30,24,1
2023. 8. 30 오전 9:51:44,김진규,Unity,32 - 삼총사,"using System;

public class Solution {
    public int solution(int[] number) {
        int answer = 0;
        int n = number.Length;
        for (int i = 0; i < n - 2; i++) {
            for (int j = i + 1; j < n - 1; j++) {
                for (int k = j + 1; k < n; k++) {
                    int sum = number[i] + number[j] + number[k];
                    if(sum ==0)answer++;
                }
            }
        }
        return answer;
    }
}",,2023. 8. 30,32,2
2023. 8. 30 오전 9:52:11,이선재,Unity,37 - 문자열 내 마음대로 정렬하기,"#include <string>
#include <vector>
#include <algorithm>

using namespace std;

int indx = 0;

bool IndexSorting(string a, string b)
{
    if(a[indx] == b[indx])
    {
        return a < b;
    }
    else
    {
        return a[indx] < b[indx];
    }
}

vector<string> solution(vector<string> strings, int n) {
    
    indx = n;
    
    sort(strings.begin(), strings.end(), IndexSorting);
    
    return strings;
}",https://github.com/Lyrwhitt/Algorithm/blob/main/Programmers/LEVEL1/%EB%AC%B8%EC%9E%90%EC%97%B4%20%EB%82%B4%20%EB%A7%88%EC%9D%8C%EB%8C%80%EB%A1%9C%20%EC%A0%95%EB%A0%AC%ED%95%98%EA%B8%B0,2023. 8. 30,37,2
2023. 8. 30 오전 9:52:14,이진형,AI,29 - 최대공약수와 최소공배수,"import math
def solution(n, m):
    a=math.gcd(n,m)
    b=int(n*m/a)
    answer = [a,b]
    return answer",,2023. 8. 30,29,1
2023. 8. 30 오전 9:52:32,한병권,Unity,43 - 명예의 전당 (1),"using System;
using System.Linq;
using System.Collections.Generic;

public class Solution {
    public int[] solution(int k, int[] score) {
        int[] answer = new int[score.Length];
        List<int> temp = new List<int>();
        
        for ( int i = 0; i < score.Length; i++)
        {
            int min = 0;
            if ( i < k ) 
            {
                temp.Add(score[i]);
                temp = temp.OrderByDescending(n=>n).Take(i+1).ToList();
                min = temp[i];
            }
            else
            {
                temp.Add(score[i]);
                temp = temp.OrderByDescending(n=>n).Take(k).ToList();
                min = temp[k-1];
            }
            answer[i] = min;
        }
        
        return answer;
    }
}",https://github.com/hbg9212/AlgorithmCodekata,2023. 8. 30,43,2
2023. 8. 30 오전 9:52:33,강성호,Unity,41 - 푸드 파이트 대회,"using System;
using System.Collections.Generic;
using System.Linq;

public class Solution {
    public string solution(int[] food) {
        string answer = """";
			Stack<char> sk = new Stack<char>();
			for(int i = 1; i < food.Length; i++)
			{
				if (food[i] / 2 > 0)
				{
					for (int j = 0; j < food[i] / 2; j++)
					{
						answer += i;
					}
				}
			}
			for (int i = 0; i < answer.Length; i++)
			{
				sk.Push(answer[i]);
			}
			answer += ""0"";
			while (sk.Any())
			{
				answer += sk.Pop().ToString();
			}
			return answer;
    }
}",,2023. 8. 30,41,2
2023. 8. 30 오전 9:52:41,지민규,Unity,28 - 직사각형 별찍기,"using System;

public class Example
{
    public static void Main()
    {
        String[] s;

        Console.Clear();
        s = Console.ReadLine().Split(' ');

        int a = Int32.Parse(s[0]);
        int b = Int32.Parse(s[1]);
        

        for (int j = 0; j < b; j++)
        {
            for (int i = 0; i < a; i++)
            {
                Console.Write(""*"");
            }
            Console.WriteLine();
        }

        
    }
}",,2023. 8. 30,28,1
2023. 8. 30 오전 9:53:13,장현교,Unity,13 - 콜라츠 추측,"public class Solution
{
    public int solution(int num)
    {
        int answer = 0;
        int number = num;
        while (answer < 500)
        {
            if (number % 2 == 0)
            {
                number /= 2;
            }
            else
            {
                number = number * 3 + 1;
            }
            answer++;
            if (number == 1)
            {
                break;
            }
            if (answer == 500)
            {
                answer = -1;
            }
        }
        return answer;
    }
}",,2023. 8. 30,13,1
2023. 8. 30 오전 9:53:21,김민태,Unity,34 - 최소직사각형,"using System;

public class Solution {
    public int solution(int[,] sizes) {        
        for(var i=0; i< sizes.GetLength(0); i++)
        {
            var tmp = 0;
            if(sizes[i, 0] < sizes[i, 1])
            {
                tmp = sizes[i, 0];
                sizes[i, 0] = sizes[i, 1];
                sizes[i, 1] = tmp;
            }   
        }
        
        int max1 = 0;
        int max2 = 0;

        for (var i = 0; i < sizes.GetLength(0); i++)
        {
            if (max1 < sizes[i, 0]) max1 = sizes[i, 0];
            if (max2 < sizes[i, 1]) max2 = sizes[i, 1];
        }
        
        int answer = max1 * max2;

        return answer;
    }
}",https://github.com/rlaalsxo/CodingTest,2023. 8. 30,34,2
2023. 8. 30 오전 9:53:26,유채연,Unity,21 - 수박수박수박수박수박수?,"    public string solution(int n) {
        string answer = """";
        for(int i=0;i<n;i++){
            if(i%2==0) answer=answer+""수"";
            else answer=answer+""박"";
        }
        return answer;
    }",https://github.com/ychy0006/AlgorithmCodeKata/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1,2023. 8. 30,21,1
2023. 8. 30 오전 9:53:31,이세진,Unity,15 - 나누어 떨어지는 숫자,"using System.Collections.Generic;
using System;

public class Solution {
    public int[] solution(int[] arr, int divisor) {
        int a = 0;
        List<int> answer_ = new List<int>();
        
        for(int i = 0; i < arr.Length ;i++)
        {
            if(arr[i] % divisor == 0)
            {
                answer_.Add(arr[i]);
                a++;
            }
        }
        if(answer_.Count == 0)
        {
            answer_.Add(-1);
        }
        
        int[] answer = answer_.ToArray();
        Array.Sort(answer);
        
        return answer;
    }
}",,2023. 8. 30,15,1
2023. 8. 30 오전 9:53:42,장성림,Unity,30 - 3진법 뒤집기,"using System;
using System.Collections.Generic;
public class Solution {
    public int solution(int n) {
        int answer = 0;
        List<int> intList = new List<int>();
        for (int i = 3; i <= n; n /= 3){
            intList.Add(n%i);
        }
        intList.Add(n);

        int pow = 1;
        for (int i = intList.Count - 1; i >= 0; i--){
            answer += intList[i] * pow;
            pow *= 3;
        }
        return answer;
    }
}",https://github.com/hoobhoob,2023. 8. 30,30,1
2023. 8. 30 오전 9:54:02,양덕영,AI,25 - 부족한 금액 계산하기,"def solution(price, money, count):
    total_price = price * (count * (count + 1)) // 2 
    if total_price <= money:
        return 0
    else:
        return total_price - money",https://github.com/DeokYoung980130/Ai_Project2023-08-07/tree/a523e7ec13d0dec5cb676bcf08034522e42234b2,2023. 8. 30,25,1
2023. 8. 30 오전 9:54:06,조영오,Unity,30 - 3진법 뒤집기,"using System;
using System.Collections.Generic;

public class Solution {
    public int solution(int n) {
        int answer = 0;
        Stack<int> stack = new Stack<int>();
        int div = 3;
        
        while(n > 0){
            stack.Push((n % div));
            n /= div;
            Console.WriteLine(stack.Peek());
        }      
        
        int count = 0;
        
        while(stack.Count > 0){
            answer += stack.Pop()*(int)Math.Pow(div, count);
            count++;
        }
        
        return answer;
    }
}",,2023. 8. 30,30,1
2023. 8. 30 오전 9:54:10,유채연,Unity,22 - 내적,"    public int solution(int[] a, int[] b) {
        long answer = 0;
        for(int i=0;i<a.Length;i++){
            answer+=a[i]*b[i];
        }
        return (int)answer;
    }",https://github.com/ychy0006/AlgorithmCodeKata/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1,2023. 8. 30,22,1
2023. 8. 30 오전 9:54:34,이선재,Unity,38 - K번째수정렬,"#include <string>
#include <vector>
#include <algorithm>

using namespace std;

vector<int> solution(vector<int> array, vector<vector<int>> commands) {
    vector<int> answer;
    
    for(int i = 0; i < commands.size(); i++)
    {
        vector<int> s;
        
        for(int j = (commands[i][0] - 1); j < commands[i][1]; j++)
        {
            s.push_back(array[j]);
        }
        
        sort(s.begin(), s.end());
        
        answer.push_back(s[commands[i][2] - 1]);
    }
    
    return answer;
}",https://github.com/Lyrwhitt/Algorithm/blob/main/Programmers/LEVEL1/K%EB%B2%88%EC%A7%B8%EC%88%98,2023. 8. 30,38,2
2023. 8. 30 오전 9:54:37,유채연,Unity,23 - 약수의 개수와 덧셈,"        int answer = 0;
        for(int i = left;i<=right;i++){
            int count=0;
            for(int j=1;j<=i;j++){
                if(i%j==0) count++;
            }
            if(count%2==0) answer+=i;
            else answer-=i;
        }
        return answer;",https://github.com/ychy0006/AlgorithmCodeKata/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1,2023. 8. 30,23,1
2023. 8. 30 오전 9:54:41,이기호,AI,11 - 하샤드 수,"def solution(n):

    sum = 0
    a = str(n)
    for i in a:
        sum += int(i)

    if n % sum == 0:
        return True
    else:
        return False",,2023. 8. 30,11,1
2023. 8. 30 오전 9:54:51,노재우,Unity,17 - 핸드폰 번호 가리기,"public class Solution
{
    public string solution(string phone_number)
    {
        char[] charArray = phone_number.ToCharArray(); 
        for (int i = 0; i < charArray.Length-4; i++)
        {
            charArray[i] = '*';
        }
        string answer = new string(charArray);
        return answer;
    }
}
",,2023. 8. 30,17,1
2023. 8. 30 오전 9:54:54,조범준,Unity,27 - 행렬의 덧셈,"using System;
public class Solution {
    public int[,] solution(int[,] arr1, int[,] arr2) {
        int[,] answer = new int[arr1.GetLength(0),arr1.GetLength(1)];
        for(int i = 0; i < arr1.GetLength(0); i++){
            for(int j = 0; j < arr1.GetLength(1); j++){
                answer[i,j] = arr1[i,j] + arr2[i,j];
            }
        }
        return answer;
    }
}",https://github.com/KimMaYa1/BaekJoonEx/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1,2023. 8. 30,27,1
2023. 8. 30 오전 9:54:59,김종훈,Unity,13 - 콜라츠 추측,"public class Solution {
    public int solution(int num) {
            long temp = num;
            
            int answer = 0;
         
            while (temp != 1)
            {
                ++answer;

                temp = temp % 2 == 0 ? temp / 2 : temp * 3 + 1;
                
                if (answer > 500)
                {
                    return -1;
                }
            }
            return answer;
    }
}",,2023. 8. 30,13,1
2023. 8. 30 오전 9:55:25,양덕영,AI,26 - 문자열 다루기 기본,"def solution(s):
    if len(s) == 4 or len(s) == 6:
        return s.isdigit()
    return False",https://github.com/DeokYoung980130/Ai_Project2023-08-07/tree/a523e7ec13d0dec5cb676bcf08034522e42234b2,2023. 8. 30,26,1
2023. 8. 30 오전 9:55:30,김종훈,AI,14 - 서울에서 김서방 찾기,"public class Solution {
    public string solution(string[] seoul) {
        return new string($""김서방은 {System.Array.IndexOf(seoul, ""Kim"")}에 있다"");
    }
}",,2023. 8. 30,14,1
2023. 8. 30 오전 9:55:38,김어진,Unity,13 - 콜라츠 추측,"public class Solution {
    public int solution(int num) {
        int answer = 0;
        while(num != 1){
            if(num%2==0){
                num /= 2;
            }
            else if(num%2==1){
                num = (num*3) + 1;
            }
            answer++;
            if(answer==500 && num != 1){
                answer = -1;
                break;
            }
        }
        return answer;
    }
}",https://github.com/KimEoJin24/ProgrammersCodingTests/commit/67e4244f46e849d730a20174a1a84a27e0e006fb,2023. 8. 30,13,1
2023. 8. 30 오전 9:55:44,정재훈,Unity,12 - 두 정수 사이의 합,"public class Solution {
    public long solution(int a, int b) {
        long sum = 0;
        if(a > b){
            int temp;
            temp = b;
            b = a;
            a = temp;
        }
        
        for(int i = a; i <=b; i ++){
            sum+=i;
        }
        return sum;
    }
}",https://github.com/toadsam/Algorithm,2023. 8. 30,12,1
2023. 8. 30 오전 9:56:00,김경환,Unity,37 - 문자열 내 마음대로 정렬하기,"using System;

public class Solution {
    public string[] solution(string[] strings, int n) {
        Array.Sort(strings,
                    new Comparison<string>((s1, s2) => 
                                           s1[n].CompareTo(s2[n]) == 0 ? s1.CompareTo(s2) : s1[n].CompareTo(s2[n])
        ));
        return strings;
    }
}",https://github.com/kkh9700/algorithm,2023. 8. 30,37,2
2023. 8. 30 오전 9:56:17,김나운,Unity,14 - 서울에서 김서방 찾기,"public class Solution {
    public string solution(string[] seoul) {
        string answer = """";
        int num = 0;
        
        for(int i = 0; i<seoul.Length;i++){
            if(seoul[i]==""Kim""){
                num = i;
            }
        }
        
        answer = $""김서방은 {num}에 있다"";
        return answer;
    }
}",,2023. 8. 30,14,1
2023. 8. 30 오전 9:56:39,김종훈,Unity,15 - 나누어 떨어지는 숫자,"using System.Collections.Generic;

public class Solution {
    public int[] solution(int[] arr, int divisor) {
        int[] answer; 
        List<int> list = new List<int>();
        
        
        for(int i=0; i<arr.Length; i++)     
        {
            if(arr[i]%divisor==0) list.Add(arr[i]);
        }
        
        if(list.Count != 0)
        {
            list.Sort();
            answer = list.ToArray();
        }    
        else
        {
            answer = new int[] {-1};
        }
        return answer;
    }
}",,2023. 8. 30,15,1
2023. 8. 30 오전 9:56:51,최하나,Unity,4 - 약수의 합,"public class Solution {
    public int solution(int n) {
        int answer = 0;
        
        for (int i = 1; i <= n; i++) {
            if (n % i == 0) {
                answer += i;
            }
        }
        return answer;
    }
}",https://github.com/coco0715/AlgorithmsKata,2023. 8. 30,4,1
2023. 8. 30 오전 9:56:57,신해준,Unity,11 - 하샤드 수,"public class Solution 
{
    public bool solution(int x) 
    {
     int originalX= x;
     bool answer = true;
     int Hashad = 0;
     
     while(x>0)
     {
        int num  = (int)(x % 10);
        x /= 10;
        Hashad += num;
     }
        if(originalX % Hashad == 0)
        {
        return answer = true;
        }
        else
        {
        return answer = false;
        }
    }
}",,2023. 8. 30,11,1
2023. 8. 30 오전 9:57:14,김종훈,Unity,16 - 음양 더하기,"using System;

public class Solution {
    public int solution(int[] absolutes, bool[] signs) {
        int answer = 0;
            
            for (int i = 0; i < absolutes.Length; i++)
            {
                answer += absolutes[i] = signs[i] ? absolutes[i] : absolutes[i]*-1;
            }
            
            return answer;
    }
}",,2023. 8. 30,16,1
2023. 8. 30 오전 9:57:28,조범준,Unity,28 - 직사각형 별찍기,"using System;

public class Example
{
    public static void Main()
    {
        String[] s;
        s = Console.ReadLine().Split();

        int a = Int32.Parse(s[0]);
        int b = Int32.Parse(s[1]);
        
        for(int i = 0; i < b; i++){
            for(int j = 0; j < a; j++){
                Console.Write(""*"");
            }
            Console.WriteLine();
        }
    }
}",https://github.com/KimMaYa1/BaekJoonEx/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1,2023. 8. 30,28,1
2023. 8. 30 오전 9:57:31,이선재,Unity,39 - 두 개 뽑아서 더하기,"#include <string>
#include <vector>
#include <algorithm>

using namespace std;

vector<int> solution(vector<int> numbers) {
    vector<int> answer;
    
    for(int i = 0; i < numbers.size() - 1; i++)
    {
        for(int j = i + 1; j < numbers.size(); j++)
        {
            answer.push_back(numbers[i] + numbers[j]);
        }
    }
    
    sort(answer.begin(), answer.end());
    answer.erase(unique(answer.begin(), answer.end()), answer.end());
    
    return answer;
}",https://github.com/Lyrwhitt/Algorithm/blob/main/Programmers/LEVEL1/%EB%91%90%20%EA%B0%9C%20%EB%BD%91%EC%95%84%EC%84%9C%20%EB%8D%94%ED%95%98%EA%B8%B0,2023. 8. 30,39,2
2023. 8. 30 오전 9:57:45,박희원,Unity,19 - 제일 작은 수 제거하기,"using System.Collections.Generic; 
using System.Linq; 
public class Solution {
    public List<int> solution(int[] arr)
            {
                List<int> answer = new List<int> ();

                 if (arr.Length == 1)
                {
                    answer.Add(-1);
                }
                else
                {
                    answer.AddRange(arr);
                    answer.Remove(arr.Min(x => x));

                }
                return answer;
            }
}",,2023. 8. 30,19,1
2023. 8. 30 오전 9:57:48,김종훈,Unity,17 - 핸드폰 번호 가리기,"public class Solution {
    public string solution(string phone_number) {
         string answer = """";

            for (int i = 0; i < phone_number.Length; i++)
            {
                if (i < phone_number.Length-4)
                {
                    answer += ""*"";
                }
                else
                {
                    answer += phone_number[i];
                }
            }

            return answer;
    }
}",,2023. 8. 30,17,1
2023. 8. 30 오전 9:58:08,박희원,Unity,20 - 가운데 글자 가져오기,"public class Solution {
   public string solution(string s)
            {
                string answer = """";

                int mid = s.Length/2;
                if (s.Length % 2 != 0)
                    answer = s.Substring(mid, 1);
                else
                    answer = s.Substring(mid - 1, 2); 

                return answer;
            }
}",,2023. 8. 30,20,1
2023. 8. 30 오전 9:58:24,김종훈,Unity,18 - 없는 숫자 더하기,"using System;
using System.Linq;

public class Solution {
    public int solution(int[] numbers) {
        int answer = 0;
        for(int i=0;i<10;i++)
        {
            answer +=i;
        }
        answer -= numbers.Sum();
        return answer;
    }
}",,2023. 8. 30,18,1
2023. 8. 30 오전 9:58:29,박희원,Unity,21 - 수박수박수박수박수박수?,"public class Solution {
    public string solution(int n)
            {
                string answer = """";
                for(int i = 0; i<n; i++)
                {
                    answer += i % 2 == 0 ? ""수"" : ""박""; 
                }
                return answer;
            }
}",,2023. 8. 30,21,1
2023. 8. 30 오전 9:58:50,박희원,Unity,22 - 내적,"using System;
using System.Linq; 
public class Solution {
    public int solution(int[] a, int[] b)
            {
                return a.Zip(b, (t1, t2) => t1 * t2).Sum(); 
            }
}",,2023. 8. 30,22,1
2023. 8. 30 오전 9:58:53,김종훈,Unity,19 - 제일 작은 수 제거하기,"using System;
using System.Collections.Generic;
public class Solution {
    public int[] solution(int[] arr) {
        if(arr.Length==1) {arr[0] = -1; return arr;}
        
        int temp = arr[0];
        
        for(int i=0; i<arr.Length; i++)
        {
            if(temp>arr[i]) temp=arr[i];
        }
        List<int> list = new List<int>();
        list.AddRange(arr);

        list.Remove(temp);
        
        int[] answer = new int[] {};
        answer = list.ToArray();
        return answer;
    }
}",,2023. 8. 30,19,1
2023. 8. 30 오전 9:59:01,김광수,Unity,60 - 바탕화면 정리,"using System;

public class Solution {
    public int[] solution(string[] wallpaper) {
        // 빈칸. 파일이있는칸 #
        //최소한의 드래그로 파일을 모두 선택해서 삭제하려고한다.
        // 결국 파일이 있는 칸의 최소 x,y좌표와 최대 x,y좌표를 통해서
        // maxY - minY + maxX - minX
        int[] answer = new int[] {};
        
        int maxX = int.MinValue;
        int maxY = int.MinValue;
        int minX = int.MaxValue;
        int minY = int.MaxValue;
    
        for(int i =0; i< wallpaper.Length; i++)
        {
            for (int j =0; j<wallpaper[0].Length; j++)
            {
                if(wallpaper[i][j] == '#')
                {
                    minX = Math.Min(minX, i);
                    minY = Math.Min(minY,j);
                    
                    maxX = Math.Max(maxX, i);
                    maxY = Math.Max(maxY, j);
                }
            }
        }
        return new int[]{minX,minY, maxX+1,maxY+1};
        // max만 +1인 이유는 나는 각 칸에는 시작점과 끝점이 존재하고
        // min은 시작점이지만 max는 끝점임 나는 시작점을 구했기 때문에 max에 +1을해서 끝점을 구함
    }
}",https://github.com/kksoo0131/Study/commit/a8217d5c6027a2f281427338184d6a0d9435701e,2023. 8. 30,60,3
2023. 8. 30 오전 9:59:23,함영주,Unity,10 - 정수 내림차순으로 배치하기,"using System;
using System.Linq;

public class Solution {
    public long solution(long n) {
        char[] arr = n.ToString().ToCharArray();
        Array.Sort(arr);
        Array.Reverse(arr);        
        long answer = Convert.ToInt64(new string(arr));

        return answer;
    }
}
",,2023. 8. 30,10,1
2023. 8. 30 오전 9:59:28,김종훈,Unity,20 - 가운데 글자 가져오기,"public class Solution {
    public string solution(string s) {
        string answer = """";
        
        if(s.Length%2==0)
        {
            answer = s[s.Length/2-1].ToString() + s[s.Length/2].ToString();
        }

        else
        {
            answer = s[s.Length/2].ToString();
        }
        
        return answer;
    }
}",,2023. 8. 30,20,1
2023. 8. 30 오전 9:59:29,박희원,Unity,23 - 약수의 개수와 덧셈,"using System;

public class Solution {
    public int solution(int left, int right)
            {
                int answer = 0;
               
                for(int i = left; i<=right; i++)
                {
                    int num = 0;
                    for (int j = 1; j<i; j++)
                    {
                        if (i % j == 0)
                        {
                            num++;
                        }
                    }
                    num += 1;

                    if (num % 2 == 0)
                    {
                        answer += i;
                    }
                    else
                        answer -= i;
                }

                return answer;
            }
}",,2023. 8. 30,23,1
2023. 8. 30 오전 9:59:50,김나운,Unity,15 - 나누어 떨어지는 숫자,"using System.Collections.Generic;

public class Solution {
    public int[] solution(int[] arr, int divisor) {
        List<int> answer = new List<int>();

        foreach (var item in arr)
        {
            if (item % divisor == 0)
                answer.Add(item);
        }

        if (answer.Count == 0)
            answer.Add(-1);
        else
            answer.Sort();

        return answer.ToArray();
    }
}",,2023. 8. 30,15,1
2023. 8. 30 오전 9:59:53,양덕영,AI,27 - 행렬의 덧셈,"def solution(arr1, arr2):
    row = len(arr1)
    col = len(arr1[0])
    
    result = []
    
    for i in range(row):
        temp_row = []
        for j in range(col):
            temp_row.append(arr1[i][j] + arr2[i][j])
        result.append(temp_row)
    
    return result",https://github.com/DeokYoung980130/Ai_Project2023-08-07/tree/65a470b8a1de1e05f4bbd01a663c5066f1d19119,2023. 8. 30,27,1
2023. 8. 30 오전 9:59:54,이선재,Unity,40 - 가장 가까운 같은 글자,"#include <string>
#include <vector>
#include <map>

using namespace std;

vector<int> solution(string s) {
    vector<int> answer;
    map<char, int> sMap;
    int idx = 0;
    
    for(int i = 97; i < 123; i++)
    {
        sMap[(char)i] = -1;
    }
    
    for(char c : s)
    {
        if(sMap[c] == -1)
        {
            answer.push_back(-1);
            sMap[c] = idx;
            idx += 1;
            
            continue;
        }
        
        answer.push_back(idx - sMap[c]);
        sMap[c] = idx;
        idx += 1;
    }
    
    return answer;
}",https://github.com/Lyrwhitt/Algorithm/blob/main/Programmers/LEVEL1/%EA%B0%80%EC%9E%A5%20%EA%B0%80%EA%B9%8C%EC%9A%B4%20%EA%B0%99%EC%9D%80%20%EA%B8%80%EC%9E%90,2023. 8. 30,40,2
2023. 8. 30 오전 9:59:55,박민호,Unity,30 - 3진법 뒤집기,"using System;

public class Solution {
    public string ConvertJ(int n, string str="""")
        {
                int k = n / 3;
                str = (n % 3).ToString() + str;   

                if (k >= 3) return ConvertJ(k, str);   
                else str = k.ToString() + str;
                return str;
            
        }
    public int solution(int n) {
        int answer = 0;   
        if(n<3){
            return n;
        }
        string str = ConvertJ(n);
        char[] arr = str.ToCharArray();
        int[] Aint = Array.ConvertAll(arr, c => (int)Char.GetNumericValue(c));
        for(int i=0;i<arr.Length;i++){
            if(i==0){
                answer += Aint[i];
            }
            else{
                answer+= Aint[i]*(int)Math.Pow(3, i);
            }
        }
        return answer;
    }
}",,2023. 8. 30,30,1
2023. 8. 30 오전 9:59:57,김형중,Unity,20 - 가운데 글자 가져오기,"public class Solution {
    public string solution(string s) {
        string answer = """";
        
        if(s.Length % 2 == 0)
        {
            answer += s[s.Length / 2 - 1];
            answer += s[s.Length / 2];
        }
        else
        {
            answer += s[s.Length / 2];
        }
        return answer;
    }
}",,2023. 8. 30,20,1
2023. 8. 30 오전 10:00:02,김해찬,Unity,82 - 프로세스,"using System;
using System.Collections;
using System.Collections.Generic;

public class Process
{
    public int priority;
    public int location;
}

public class Solution {
    public int solution(int[] priorities, int location) {
        int answer = 0;
        
        Queue<Process> que = new Queue<Process>();
        
        for(int i = 0; i < priorities.Length; i++)
        {
            Process newProcess = new Process();
            newProcess.priority = priorities[i];
            newProcess.location = i;
            
            que.Enqueue(newProcess);
        }
        
        while(que.Count > 0)
        {
            Process front = que.Dequeue();
            
            bool trigger = true;
            
            foreach(Process element in que)
            {
                if(front.priority < element.priority)
                {
                    trigger = false;
                    break;
                }
            }
            
            if(trigger == true)
            {                
                answer++;
                
                if(front.location == location)
                {
                    break;
                }
            }
            else
            {
                que.Enqueue(front);
            }
        }
        
        return answer;
    }
}",,2023. 8. 30,82,3
2023. 8. 30 오전 10:00:03,기현빈,Unity,27 - 행렬의 덧셈,"public class Solution {
    public int[,] solution(int[,] arr1, int[,] arr2) {
        int[,] answer = new int[arr1.GetLength(0), arr1.GetLength(1)];
        
        for(int i = 0; i < arr1.GetLength(0); i++) {
            for(int j = 0; j < arr1.GetLength(1); j++) {
                answer[i, j] = arr1[i, j] + arr2[i, j];
            }
        }
        
        return answer;
    }
}",,2023. 8. 30,27,1
2023. 8. 30 오전 10:00:03,함영주,Unity,12 - 두 정수 사이의 합,"public class Solution {
    public long solution(int a, int b) {
        long answer = 0;


        if (a == b) {
            return  a;
        }

        if (a < b) {
            for ( int i = a; i <= b ; i++){   

                answer += i;
            }   
        }

        else 
            for (int i = b; i <= a ; i++){

                answer += i;

        }


        return answer; 
    }
}",,2023. 8. 30,12,1
2023. 8. 30 오전 10:00:05,조호진,AI,22 - 내적,"def solution(a, b):
    answer = 0
    for i in range(len(a)):
        answer += a[i]*b[i]
        
       
    return answer",https://github.com/bm4706/Algorithm_practice/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/70128.%E2%80%85%EB%82%B4%EC%A0%81,2023. 8. 30,22,1
2023. 8. 30 오전 10:00:14,정주찬,Unity,35 - 시저 암호,"using System;
public class Solution {
    public string solution(string s, int n) {
        char[] cArr = s.ToCharArray();
for (int i = 0; i < cArr.Length; i++)
{
    if (cArr[i] == ' ')
    {
        continue;
    }

    int temp = (int)cArr[i] + n;
    if (cArr[i] <= 90)
    {
        if (temp > 90)
        {
            temp -= 26;
        }
    }
    else
    {
        if (temp > 122)
        {
            temp -= 26;
        }
    }

    cArr[i] = (char)temp;
}

        return new string(cArr);
    }
}",https://github.com/JeongJuChan/Algorithm/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12926.%E2%80%85%EC%8B%9C%EC%A0%80%E2%80%85%EC%95%94%ED%98%B8/%EC%8B%9C%EC%A0%80%E2%80%85%EC%95%94%ED%98%B8.cs,2023. 8. 30,35,2
2023. 8. 30 오전 10:00:30,김지수,AI,15 - 나누어 떨어지는 숫자,"def solution(arr, divisor):
    a = []
    num = 0
    for i in arr:
        if i%divisor == 0:
            a.append(i)
            answer = a
    if len(a) == 0: 
        answer = [-1]
    return list(sorted(answer))",,2023. 8. 30,15,1
2023. 8. 30 오전 10:00:38,이기호,AI,12 - 두 정수 사이의 합,"def solution(a, b):

    answer = 0
    if a <= b:
        for i in range(a, b+1):
            answer += i
        return (answer)
    else:
        for i in range(b, a+1):
            answer += i
        return (answer)",,2023. 8. 30,12,1
2023. 8. 30 오전 10:00:45,정주찬,Unity,36 - 숫자 문자열과 영단어,"using System;
using System.Collections.Generic;
using System.Text;

public class Solution {
    public int solution(string s) {
        Dictionary<string, string> numberDict = new Dictionary<string, string>() { 
    { ""zero"", ""0"" }, { ""one"", ""1"" }, { ""two"", ""2"" }, { ""three"", ""3"" }, { ""four"", ""4"" }, 
    { ""five"", ""5"" }, { ""six"", ""6"" }, { ""seven"", ""7"" }, { ""eight"", ""8"" }, { ""nine"", ""9"" } };

    foreach (var item in numberDict)
    {
        s = s.Replace(item.Key, item.Value);
    }

            return int.Parse(s);
    }
}",https://github.com/JeongJuChan/Algorithm/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/81301.%E2%80%85%EC%88%AB%EC%9E%90%E2%80%85%EB%AC%B8%EC%9E%90%EC%97%B4%EA%B3%BC%E2%80%85%EC%98%81%EB%8B%A8%EC%96%B4/%EC%88%AB%EC%9E%90%E2%80%85%EB%AC%B8%EC%9E%90%EC%97%B4%EA%B3%BC%E2%80%85%EC%98%81%EB%8B%A8%EC%96%B4.cs,2023. 8. 30,36,2
2023. 8. 30 오전 10:00:54,신우석,Unity,43 - 명예의 전당 (1),"using System;
using System.Collections.Generic;

public class Solution {
    public int[] solution(int k, int[] score) {
        List<int> answer = new List<int>();
        int[] honor = new int[k];
        int idx = 0;
        
        for (int i = 0; i < score.Length; ++i) {
            for (int j = k - 1; j >= 0; --j)
                if (score[i] > honor[j]) {
                    if (j < k - 1) honor[j + 1] = honor[j];
                    idx = j;
                }
                else break;
            if (score[i] > honor[idx]) honor[idx] = score[i];
            if (i < k) answer.Add(honor[i]);
            else answer.Add(honor[k-1]);
        }
        
        return answer.ToArray();
    }
}",https://github.com/seoksii/AlgorithmCodeKata/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/unrated/138477.%E2%80%85%EB%AA%85%EC%98%88%EC%9D%98%E2%80%85%EC%A0%84%EB%8B%B9%E2%80%85%EF%BC%881%EF%BC%89,2023. 8. 30,43,2
2023. 8. 30 오전 10:01:01,공혜진,AI,13 - 콜라츠 추측,"def solution(num):
    answer = 0
    if num == 1:
        return 0
    while num != 1: 
        if num % 2 == 0:  
            num //= 2  
        elif num % 2 != 0:  
            num = num * 3 + 1  
        answer += 1 
        if answer >= 500 :
            return -1
    return answer",,2023. 8. 30,13,1
2023. 8. 30 오전 10:01:09,이세진,Unity,16 - 음양 더하기,"public class Solution {
    public int solution(int[] absolutes, bool[] signs) {
        int answer = 0;
        
        for(int i = 0;i < absolutes.Length; i++)
        {
            if(!signs[i])
            {
                answer  -= absolutes[i];
            }
            else
            {
                answer += absolutes[i];
            }
        }  
        return answer;
    }
}",,2023. 8. 30,16,1
2023. 8. 30 오전 10:01:19,정주찬,Unity,37 - 문자열 내 마음대로 정렬하기,"using System.Collections.Generic;
using System;

public class Solution {
    public string[] solution(string[] strings, int n) {
        Array.Sort(strings, (x, y) => x[n].CompareTo(y[n]));

        for (int i = 0; i < strings.Length - 1; i++)
        {
            for (int j = i+1; j < strings.Length; j++)
            {
                if (strings[i][n] == strings[j][n])
                {
                    if (strings[i].CompareTo(strings[j]) > 0)
                    {
                        string temp = strings[i];
                        strings[i] = strings[j];
                        strings[j] = temp;
                    }
                }
            }
        }
        return strings;
    }
}",https://github.com/JeongJuChan/Algorithm/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12915.%E2%80%85%EB%AC%B8%EC%9E%90%EC%97%B4%E2%80%85%EB%82%B4%E2%80%85%EB%A7%88%EC%9D%8C%EB%8C%80%EB%A1%9C%E2%80%85%EC%A0%95%EB%A0%AC%ED%95%98%EA%B8%B0/%EB%AC%B8%EC%9E%90%EC%97%B4%E2%80%85%EB%82%B4%E2%80%85%EB%A7%88%EC%9D%8C%EB%8C%80%EB%A1%9C%E2%80%85%EC%A0%95%EB%A0%AC%ED%95%98%EA%B8%B0.cs,2023. 8. 30,37,2
2023. 8. 30 오전 10:01:30,차명경,AI,9 - 정수 제곱근 판별,"def solution(n):
    result = n**0.5
    
    if result % 1 == 0:
        return (result+1)**2
    else:
        return -1
",,2023. 8. 30,9,1
2023. 8. 30 오전 10:02:27,윤지석,Unity,11 - 하샤드 수,"public class Solution {
    public bool solution(int x) {
        bool answer = false;
        int temp = x;
        int digitsSum = 0;
        while (x != 0)
        {
            digitsSum += x % 10;
            x /= 10;
        }
        x = temp;
        
        answer = x % digitsSum == 0 ? true:false;
        
        return answer;
    }
}",https://github.com/noyyo/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12947.%E2%80%85%ED%95%98%EC%83%A4%EB%93%9C%E2%80%85%EC%88%98,2023. 8. 30,11,1
2023. 8. 30 오전 10:02:55,조용준,Unity,11 - 하샤드 수,"public class Solution
{
    public bool solution(int x)
    {
        bool answer = true;
        string num = x.ToString();
        char[] nums = num.ToCharArray();
        int n;
        int sum = 0;
        
        for (int i = 0; i < nums.Length; i++)
        {
            n = int.Parse(nums[i].ToString());
            sum += n;
        }
        
        if (x % sum == 0)
        {
            answer = true;
        }
        else
        {
            answer = false;
        }
        return answer;
    }
}",,2023. 8. 30,11,1
2023. 8. 30 오전 10:03:11,기현빈,Unity,28 - 직사각형 별찍기,"using System;

public class Example
{
    public static void Main()
    {
        String[] s;

        Console.Clear();
        s = Console.ReadLine().Split(' ');

        int a = Int32.Parse(s[0]);
        int b = Int32.Parse(s[1]);
    
        for(; b != 0; b--)
            Console.WriteLine("""".PadRight(a, '*'));
    }
}",,2023. 8. 30,28,1
2023. 8. 30 오전 10:03:16,조용준,Unity,12 - 두 정수 사이의 합,"public class Solution
{
    public long solution(int a, int b)
    {
        long answer = 0;
        long first;
        long second;
        if (a < b)
        {
            first = a;
            second = b;
        }
        else
        {
            first = b;
            second = a;
        }
        
        for (long i = first; i <= second; i++)
        {
            answer += i;
        }
        
        return answer;
    }
}",,2023. 8. 30,12,1
2023. 8. 30 오전 10:03:33,김경환,Unity,39 - 두 개 뽑아서 더하기,"using System;
using System.Collections.Generic;

public class Solution {
    public int[] solution(int[] numbers) {
        SortedSet<int> set = new SortedSet<int>();
        
        for(int i = 0; i < numbers.Length - 1; i++)
        {
            for(int j = i+1; j < numbers.Length; j++)
            {
                set.Add(numbers[i] + numbers[j]);
            }
        }
        
        int[] answer = new int[set.Count];
        set.CopyTo(answer);
        
        return answer;
    }
}",https://github.com/kkh9700/algorithm,2023. 8. 30,39,2
2023. 8. 30 오전 10:03:35,조용준,Unity,13 - 콜라츠 추측,"public class Solution
{
    public int solution(int num)
    {
        long answer = num;
        int tryCount = 0;
        while(answer != 1 && tryCount != 500)
        {
            tryCount++;
            if (answer % 2 == 0)
            {
                answer = answer / 2;
            }
            else
            {
                answer = answer * 3 + 1;
            }
        }
        
        if (tryCount == 500 && answer != 1)
        {
            return -1;
        }
        else if (num == 1)
        {
            return 0;
        }
        else
        {
            return tryCount;
        }
    }
}",,2023. 8. 30,13,1
2023. 8. 30 오전 10:03:51,김대민,Unity,64 - 신고 결과 받기,"#include <string>
#include <vector>
#include <unordered_map>
#include <set>
using namespace std;

vector<int> solution(vector<string> id_list, vector<string> report, int k) {
    vector<int> answer;
    
    unordered_map<string, int> reports;
    unordered_map<string, set<string>> indexs;
    
    for(int i = 0; i < report.size() ; ++i)
    {
        int findIndex = report[i].find("" "");
        string a = report[i].substr(0, findIndex);
        string b = report[i].substr(findIndex + 1);
        
        indexs[a].insert(b);
    }
    
    for(auto p : indexs)
    {
        for(string str : p.second)
        {
            reports[str]++;
        }
    }
    
    for(string str : id_list)
    {
        int a = 0;
        for(string s : indexs[str])
        {
            if(reports[s] >= k)
                ++a;
        }
        answer.push_back(a);
    }
    
    
    return answer;
}",https://github.com/KimDaeMins/CodingTest/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/92334.%E2%80%85%EC%8B%A0%EA%B3%A0%E2%80%85%EA%B2%B0%EA%B3%BC%E2%80%85%EB%B0%9B%EA%B8%B0/%EC%8B%A0%EA%B3%A0%E2%80%85%EA%B2%B0%EA%B3%BC%E2%80%85%EB%B0%9B%EA%B8%B0.cpp,2023. 8. 30,64,3
2023. 8. 30 오전 10:03:58,조용준,Unity,14 - 서울에서 김서방 찾기,"public class Solution 
{
    public string solution(string[] seoul) 
    {
        string answer = """";
        int i = 0;
        
        while(true)
        {
            if (seoul[i] == ""Kim"")
            {
                answer = $""김서방은 {i}에 있다"";
                break;
            }
            i++;
        }
        
        return answer;
    }
}",,2023. 8. 30,14,1
2023. 8. 30 오전 10:04:16,김준범,Unity,7 - 자연수 뒤집어 배열로 만들기,"using System;

public class Solution
    {
        public int[] solution(long n)
        {
        
            string temp = n.ToString();
   
            int[] answer = new int[temp.Length];
            

            for (int i = 0; i < temp.Length; i++)
            {
 
                answer[i] = (int)Char.GetNumericValue(temp[temp.Length-1 - i]);
            }
            return answer;
        }
    }",,2023. 8. 30,7,1
2023. 8. 30 오전 10:04:17,김대민,Unity,72 - 멀리 뛰기,"#include <string>
#include <vector>

using namespace std;

long long solution(int n) {
    long long answer = 0;
    long long dp[n + 1];
    //7칸일때 21개
    //6칸일때 13개
    //5칸일때 8개 
    //4칸일때 5개
    //3칸일때 3개
    //2칸일때 2개
    //1칸일때 1개
    //아놔 숫자 잘못세서 틀력네씨
    dp[1] = 1;
    dp[2] = 2;
    for(int i  = 3 ; i <= n; ++i)
    {
        dp[i] = (dp[i - 1] + dp[i - 2]) % 1234567;
    }
    answer = dp[n];
    return answer;
}",https://github.com/KimDaeMins/CodingTest/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv2/12914.%E2%80%85%EB%A9%80%EB%A6%AC%E2%80%85%EB%9B%B0%EA%B8%B0/%EB%A9%80%EB%A6%AC%E2%80%85%EB%9B%B0%EA%B8%B0.cpp,2023. 8. 30,72,3
2023. 8. 30 오전 10:04:19,조용준,Unity,15 - 나누어 떨어지는 숫자,"using System.Collections.Generic;
using System;

public class Solution
{
    public int[] solution(int[] arr, int divisor)
    {
        List<int> nums = new List<int>();
        
        for (int i = 0; i < arr.Length; i++)
        {
            if (arr[i] % divisor == 0)
            {
                nums.Add(arr[i]);
            }
        }
        
        int[] answer;
        
        if (nums.Count != 0)
        {
            answer = new int[nums.Count];
        
            for (int i = 0; i < nums.Count; i++)
            {
                answer[i] = nums[i];
            }
        }
        else
        {
            answer = new int[1];
            answer[0] = -1;
        }
        
        Array.Sort(answer);
        
        return answer;
    }
}",,2023. 8. 30,15,1
2023. 8. 30 오전 10:04:37,김대민,Unity,65 - 최댓값과 최솟값,"#include <string>
#include <vector>
#include <queue>
#include <algorithm>
using namespace std;

string solution(string s) {
    string answer = """";
    priority_queue<int, vector<int>, greater<int>> pq;
    
    int start = 0;
    int end = 0;
    while(end < s.size())
    {
        end = s.find("" "", start);
        pq.push(stoi(s.substr(start, end)));
        start = end + 1;
    }
    int last;
    answer += to_string(pq.top());
    answer += "" "";
    while(!pq.empty())
    {
        last = pq.top();
        pq.pop();
    }
    answer += to_string(last);
    return answer;
}",https://github.com/KimDaeMins/CodingTest/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv2/12939.%E2%80%85%EC%B5%9C%EB%8C%93%EA%B0%92%EA%B3%BC%E2%80%85%EC%B5%9C%EC%86%9F%EA%B0%92/%EC%B5%9C%EB%8C%93%EA%B0%92%EA%B3%BC%E2%80%85%EC%B5%9C%EC%86%9F%EA%B0%92.cpp,2023. 8. 30,65,3
2023. 8. 30 오전 10:04:56,김대민,Unity,68 - 피보나치 수,"#include <string>
#include <vector>

using namespace std;

int Fibo(int n )
{
    if(n == 1 || n == 0)
        return n;
    
    return Fibo(n - 1) + Fibo(n - 2);
}
int solution(int n) {
    int answer = 0;
    long long a[100001];
    
    a[0] = 0;
    a[1] = 1;
    
    for(int i = 2; i  <= n; ++i)
    {
        a[i] = (a[i - 1] + a[i - 2]) % 1234567;
    }
    answer = a[n];
    return answer;
}",https://github.com/KimDaeMins/CodingTest/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv2/12945.%E2%80%85%ED%94%BC%EB%B3%B4%EB%82%98%EC%B9%98%E2%80%85%EC%88%98/%ED%94%BC%EB%B3%B4%EB%82%98%EC%B9%98%E2%80%85%EC%88%98.cpp,2023. 8. 30,68,3
2023. 8. 30 오전 10:05:23,김대민,Unity,66 - JadenCase 문자열 만들기,"#include <string>
#include <vector>

using namespace std;

string solution(string s) {
    string answer = """";
    
    int start = 0;
    int end = 0;
    
    bool before = true;
    for(int i = 0; i < s.size(); ++i)
    {
        if(before)
        {
            before = false;
            if(!isdigit(s[i]) && islower(s[i]))
            {
                s[i] = toupper(s[i]);
            }
        }
        else if(!isdigit(s[i]))
        {
            s[i] = tolower(s[i]);
        }
        
        if(s[i] == ' ')
            before = true;
    }
    answer = s;
    return answer;
}",https://github.com/KimDaeMins/CodingTest/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv2/12951.%E2%80%85JadenCase%E2%80%85%EB%AC%B8%EC%9E%90%EC%97%B4%E2%80%85%EB%A7%8C%EB%93%A4%EA%B8%B0/JadenCase%E2%80%85%EB%AC%B8%EC%9E%90%EC%97%B4%E2%80%85%EB%A7%8C%EB%93%A4%EA%B8%B0.cpp,2023. 8. 30,66,3
2023. 8. 30 오전 10:05:24,정범수,AI,44 - 2016년,"def solution(a, b):
    month = [31 if i%7%2 else 30 for i in range(13)]
    month[2] = 29
    month[7] = 31
    day = ['FRI', 'SAT', 'SUN', 'MON', 'TUE', 'WED', 'THU']
    count = 0
    for i in range(1, a):
        count += month[i]
    count += b-1
    return day[count%7]",https://github.com/sudog1/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12901.%E2%80%852016%EB%85%84,2023. 8. 30,44,2
2023. 8. 30 오전 10:05:41,김대민,AI,71 - N개의 최소공배수,"#include <string>
#include <vector>

using namespace std;

int gcd (int a, int b)
{
    while (b != 0) 
    {
        int temp = b;
        b = a % b;
        a = temp;
    }
    return a;
}
int lcm(int a, int b)
{
    return a * b / gcd(a, b);
}
int solution(vector<int> arr) {
    int answer = 0;
    
    answer = arr[0];
    
    for(int i = 1; i < arr.size(); ++i)
    {
        answer = lcm(answer, arr[i]);
    }
    return answer;
}",https://github.com/KimDaeMins/CodingTest/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv2/12953.%E2%80%85N%EA%B0%9C%EC%9D%98%E2%80%85%EC%B5%9C%EC%86%8C%EA%B3%B5%EB%B0%B0%EC%88%98/N%EA%B0%9C%EC%9D%98%E2%80%85%EC%B5%9C%EC%86%8C%EA%B3%B5%EB%B0%B0%EC%88%98.cpp,2023. 8. 30,71,3
2023. 8. 30 오전 10:05:50,김형수,Unity,5 - 나머지가 1이 되는 수 찾기,"using System;

public class Solution {
    public int solution(int n) {
        
        int x;

        int min = int.MaxValue;

        for (x = 1; x <= n; x++)
        {

            if (n % x == 1)
            {

                if (x < min)
                {
                    min = x;
                }

            }

        }


        return min;
        
        
        
        //int answer = 0;
        //return answer;
    }
}",https://github.com/Kim-H-S/Programmers/blob/main/%EB%82%98%EB%A8%B8%EC%A7%80%EA%B0%80%201%EC%9D%B4%20%EB%90%98%EB%8A%94%20%EC%88%98%20%EC%B0%BE%EA%B8%B0.cs,2023. 8. 30,5,1
2023. 8. 30 오전 10:05:52,정범수,AI,45 - 카드 뭉치,"def solution(cards1, cards2, goal):
    rev_cards1 = cards1[::-1]
    rev_cards2 = cards2[::-1]
    for word in goal:
        if rev_cards1 and rev_cards1[-1] == word:
            rev_cards1.pop()
        elif rev_cards2 and rev_cards2[-1] == word:
            rev_cards2.pop()
        else:
            return 'No'
    return 'Yes'",https://github.com/sudog1/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/unrated/159994.%E2%80%85%EC%B9%B4%EB%93%9C%E2%80%85%EB%AD%89%EC%B9%98,2023. 8. 30,45,2
2023. 8. 30 오전 10:06:03,김대민,Unity,70 - 예상 대진표,"#include <iostream>
#include <cmath>;
using namespace std;

int solution(int n, int a, int b)
{
    int answer = 1;

    int low = min(a, b);
    int high = max(a, b);
    
    
    while(low + low % 2 != high)
    {
        answer++;
        low = low % 2 + low / 2;
        high = high % 2 + high / 2;
    }
    
    return answer;
}",https://github.com/KimDaeMins/CodingTest/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv2/12985.%E2%80%85%EC%98%88%EC%83%81%E2%80%85%EB%8C%80%EC%A7%84%ED%91%9C/%EC%98%88%EC%83%81%E2%80%85%EB%8C%80%EC%A7%84%ED%91%9C.cpp,2023. 8. 30,70,3
2023. 8. 30 오전 10:06:22,김대민,Unity,69 - 카펫,"#include <string>
#include <vector>

//1개일땐 8개, 2개일땐 10개, 3개일땐 12개 4개일땐 14개 or 12개
//가로 세로간의 공식이 있지않을까?
//가로가 몇이냐 세로가 몇이냐의 공식인거니까..
//가로*2 + 세로*2 + 4 = 갈색갯수.
//가로 * 세로 = 노랑갯수
using namespace std;

vector<int> solution(int brown, int yellow) {
    vector<int> answer;
    
    //만약 노랑갯수가 16이면 4,4도되고 8,2 도 되고, 16,1 도 됨.
    //근데 이건 배수의 문제지 24면 6, 4도되고, 8, 3도되고 12,2 도되고, 24, 1도된다는거
    //노랑갯수를 1~노랑갯수까지 나눴을 때 나머지가 없는 수.
    for(int i = 1; i <= yellow && yellow / i >= i; ++i)
    {
        if(yellow % i == 0 && (yellow / i) * 2 + i * 2 + 4 == brown)
        {
            answer.push_back(yellow/i + 2);
            answer.push_back(i + 2);
            break;
        }
    }
    return answer;
}",https://github.com/KimDaeMins/CodingTest/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv2/42842.%E2%80%85%EC%B9%B4%ED%8E%AB/%EC%B9%B4%ED%8E%AB.cpp,2023. 8. 30,69,3
2023. 8. 30 오전 10:06:27,김하늘,Unity,19 - 제일 작은 수 제거하기,"using System.Linq;

public class Solution 
{
    public int[] solution(int[] arr) 
    {
        if (arr.Length == 1)
        {
            arr[0] = -1;
            return arr;
        }
        int min = int.MaxValue;
        for (int i = 0; i < arr.Length; i++)
            if (arr[i] < min) min = arr[i];
        
        int[] answer = arr.Except(new int[] {min}).ToArray();
        return answer;
    }
}",,2023. 8. 30,19,1
2023. 8. 30 오전 10:06:40,김대민,Unity,67 - 이진 변환 반복하기,"#include <string>
#include <vector>
#include <bitset>
#include <algorithm>
using namespace std;

vector<int> solution(string s) {
    vector<int> answer;
    answer.push_back(0);
    answer.push_back(0);

    string str = s;
    while (str.size() != 1)
    {
        ++answer[0];

        int length = str.size();
        str.erase(std::remove(str.begin(), str.end(), '0'), str.end());
        int removeLength = str.size();
        answer[1] += length - removeLength;

        str = """";
        while (removeLength != 0)
        {
            str += to_string(removeLength % 2);
            removeLength /= 2;
        }
        reverse(str.begin(), str.end());
    }

    return answer;
}",https://github.com/KimDaeMins/CodingTest/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv2/70129.%E2%80%85%EC%9D%B4%EC%A7%84%E2%80%85%EB%B3%80%ED%99%98%E2%80%85%EB%B0%98%EB%B3%B5%ED%95%98%EA%B8%B0/%EC%9D%B4%EC%A7%84%E2%80%85%EB%B3%80%ED%99%98%E2%80%85%EB%B0%98%EB%B3%B5%ED%95%98%EA%B8%B0.cpp,2023. 8. 30,67,3
2023. 8. 30 오전 10:06:43,정범수,AI,46 - 과일 장수,"def solution(k, m, score):
    answer = 0
    score.sort(reverse=True)
    for i in range(m, len(score)+1, m):
        answer += score[i-1]*m
    return answer",https://github.com/sudog1/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/unrated/135808.%E2%80%85%EA%B3%BC%EC%9D%BC%E2%80%85%EC%9E%A5%EC%88%98,2023. 8. 30,46,2
2023. 8. 30 오전 10:08:03,한병권,Unity,44 - 2016년,"public class Solution {
    public string solution(int a, int b) {
        string answer = """";
        
        int[] tempArr = {0,31,29,31,30,31,30,31,31,30,31,30,31};
        
        for (int i = 1; i < a; i++)
        {
            b += tempArr[i];
        }
        
        b = b % 7;
        
        switch (b)
        {
            case 0:
                answer = ""THU"";
                break;    
            case 1:
                answer = ""FRI"";
                break; 
            case 2:
                answer = ""SAT"";
                break; 
            case 3:
                answer = ""SUN"";
                break; 
            case 4:
                answer = ""MON"";
                break; 
            case 5:
                answer = ""TUE"";
                break; 
            case 6:
                answer = ""WED"";
                break; 
        }
        
        return answer;
    }
}",https://github.com/hbg9212/AlgorithmCodekata,2023. 8. 30,44,2
2023. 8. 30 오전 10:08:14,정범수,AI,47 - 모의고사완전탐색,"def solution(answers):
    arr = [
        [1, 2, 3, 4, 5],
        [2, 1, 2, 3, 2, 4, 2, 5],
        [3, 3, 1, 1, 2, 2, 4, 4, 5, 5]
    ]
    count = [0]*len(arr)
    for i, answer in enumerate(answers):
        for j in range(len(arr)):
            if answer == arr[j][i % len(arr[j])]:
                count[j] += 1
    max_score = max(count)
    result = [i+1 for i in range(len(arr)) if count[i] == max_score]
    return result",https://github.com/sudog1/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/42840.%E2%80%85%EB%AA%A8%EC%9D%98%EA%B3%A0%EC%82%AC,2023. 8. 30,47,2
2023. 8. 30 오전 10:08:36,심명희 ,AI,18 - 없는 숫자 더하기,"def solution(numbers):
    answer = 0
    for i in range(10):
        if i not in numbers:
            answer += i
    return answer",,2023. 8. 30,18,1
2023. 8. 30 오전 10:08:47,정범수,AI,48 - 소수 만들기,"from itertools import combinations

def make_pn(n):
    pn = [2]
    for x in range(3, n+1, 2):
        for y in pn:
            if not x % y:
                break
        else:
            pn.append(x)
    return pn

def solution(nums):
    answer = 0
    nums.sort()
    max_sum = sum(nums[-3:])
    pn = make_pn(max_sum)
    for s in combinations(nums, 3):
        if sum(s) in pn:
            answer += 1
    return answer",https://github.com/sudog1/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12977.%E2%80%85%EC%86%8C%EC%88%98%E2%80%85%EB%A7%8C%EB%93%A4%EA%B8%B0,2023. 8. 30,48,2
2023. 8. 30 오전 10:09:22,정범수,AI,49 - 덧칠하기,"def solution(n, m, section):
    count = 0
    last_idx = 0
    for wall in section:
        if wall > last_idx:
            count += 1
            last_idx = wall+m-1
    return count",https://github.com/sudog1/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/unrated/159994.%E2%80%85%EC%B9%B4%EB%93%9C%E2%80%85%EB%AD%89%EC%B9%98,2023. 8. 30,49,2
2023. 8. 30 오전 10:09:36,신우석,Unity,44 - 2016년,"public class Solution {
    public string solution(int a, int b) {
        string[] weekdays = new string[7] {""THU"", ""FRI"", ""SAT"", ""SUN"", ""MON"", ""TUE"", ""WED""};
        int[] days = new int[12] {31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31};
        
        int answer = b;
        for (int i = 0; i < a - 1; ++i)
            answer += days[i];
        
        return weekdays[answer % 7];
    }
}",https://github.com/seoksii/AlgorithmCodeKata/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12901.%E2%80%852016%EB%85%84,2023. 8. 30,44,2
2023. 8. 30 오전 10:09:53,정범수,AI,50 - 기사단원의 무기,"def count_divisor(num):
    if num == 1:
        return 1
    result = 1
    square_root = num**0.5
    for i in range(2, int(square_root)+1):
        if num % i == 0:
            result += 1
    result *= 2
    if square_root.is_integer():
        result -= 1 
    return result

def solution(number, limit, power):
    offense_score = [count_divisor(i) for i in range(1, number+1)]
    return sum(map(lambda x: x if x <= limit else power, offense_score))",https://github.com/sudog1/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/unrated/136798.%E2%80%85%EA%B8%B0%EC%82%AC%EB%8B%A8%EC%9B%90%EC%9D%98%E2%80%85%EB%AC%B4%EA%B8%B0,2023. 8. 30,50,2
2023. 8. 30 오전 10:09:58,김경환,Unity,40 - 가장 가까운 같은 글자,"using System;
using System.Linq;

public class Solution {
    public int[] solution(string s) {
        int[] answer = new int[s.Length];
        int[] arphabet = Enumerable.Repeat(-1, 26).ToArray();
        
        for(int i = 0; i < s.Length; i++)
        {
            int index = s[i] - 'a';
            if(arphabet[index] == -1)
                answer[i] = -1;
            else
                answer[i] = i - arphabet[index];
            arphabet[index] = i;
        }
        
        return answer;
    }
}",https://github.com/kkh9700/algorithm,2023. 8. 30,40,2
2023. 8. 30 오전 10:09:58,김정민,Unity,40 - 가장 가까운 같은 글자,"public class Solution
        {
            public int[] solution(string s)
            {
                int[] answer = new int[s.Length];
                Dictionary<string, int> idxDic = new Dictionary<string, int>();

                for (int i = 0; i < s.Length; i++)
                {
                    string curStr = s[i] + """";
                    if (idxDic.TryGetValue(curStr, out int charIdx))
                    {
                        answer[i] = i - charIdx;
                        idxDic[curStr] = i;
                    } else
                    {
                        answer[i] = -1;
                        idxDic.Add(curStr, i);
                    }
                }

                return answer;
            }
        }",https://github.com/j-miiin/Algorithm_Study/blob/main/SPARTA_ALGORITHM_2023/Level2/40_NearestSameChar.cs,2023. 8. 29,40,2
2023. 8. 30 오전 10:10:22,정범수,AI,51 - 로또의 최고 순위와 최저 순위,"def solution(lottos, win_nums):
    win_index = [0]*46
    for num in win_nums:
        win_index[num] = 1
    match_cnt = 0
    zero_cnt = 0
    for lotto in lottos:
        if lotto == 0:
            zero_cnt += 1
            continue
        if win_index[lotto]:
            match_cnt += 1
    best = min(6, 7-(match_cnt+zero_cnt))
    lowest = min(6, 7-match_cnt)
    return [best, lowest]",https://github.com/sudog1/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/77484.%E2%80%85%EB%A1%9C%EB%98%90%EC%9D%98%E2%80%85%EC%B5%9C%EA%B3%A0%E2%80%85%EC%88%9C%EC%9C%84%EC%99%80%E2%80%85%EC%B5%9C%EC%A0%80%E2%80%85%EC%88%9C%EC%9C%84,2023. 8. 30,51,2
2023. 8. 30 오전 10:10:25,조범준,Unity,29 - 최대공약수와 최소공배수,"using System;
public class Solution {
    public int[] solution(int n, int m) {
        int[] answer = new int[2] {1,0};
        int min = Math.Min(n,m);
        for(int i = 1; i <= min; i++){
            if(n % i == 0 && m % i == 0){
                answer[0] = i;
            }
        }
        answer[1] = n * m / answer[0];
        return answer;
    }
}",https://github.com/KimMaYa1/BaekJoonEx/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1,2023. 8. 30,29,1
2023. 8. 30 오전 10:10:57,정범수,AI,52 - 옹알이 (2),"def solution(babbling):
    pron = {'aya', 'ye', 'woo', 'ma'}
    count = 0
    for word in babbling:
        idx = 0
        prev = ''
        while idx <= len(word):
            if word[idx:idx+2] in pron and prev != word[idx:idx+2]:
                prev = word[idx:idx+2]
                idx += 2
                continue
            if word[idx:idx+3] in pron and prev != word[idx:idx+3]:
                prev = word[idx:idx+3]
                idx += 3
                continue
            else:
                break
        if idx == len(word):
            count += 1
    return count",https://github.com/sudog1/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/unrated/133499.%E2%80%85%EC%98%B9%EC%95%8C%EC%9D%B4%E2%80%85%EF%BC%882%EF%BC%89,2023. 8. 30,52,2
2023. 8. 30 오전 10:11:01,최지연,AI,17 - 핸드폰 번호 가리기,"def solution(phone_number):
    answer = list(phone_number)
    for i in range(len(phone_number)-4):
        answer[i] = '*'
    answer = ''.join(answer)
    return answer",https://github.com/jiyeonCoder/algorithmPractice/blob/main/17.%20%ED%95%B8%EB%93%9C%ED%8F%B0%20%EB%B2%88%ED%98%B8%20%EA%B0%80%EB%A6%AC%EA%B8%B0.py,2023. 8. 30,17,1
2023. 8. 30 오전 10:11:19,이승연,Unity,10 - 정수 내림차순으로 배치하기,"using System;
public class Solution {
    public long solution(long n) {
        long answer = 0;
        
        char[] chars= n.ToString().ToCharArray();
        Array.Sort(chars);
        Array.Reverse(chars);
        answer = Int64.Parse(chars);
        
        return answer;
    }
}",,2023. 8. 30,10,1
2023. 8. 30 오전 10:11:27,정범수,AI,53 - 숫자 짝꿍,"def solution(X, Y):
    x_cnt = [0]*10
    y_cnt = [0]*10
    for c in X:
        x_cnt[int(c)] += 1
    for c in Y:
        y_cnt[int(c)] += 1
    digit_list = []
    for i in range(9, 0, -1):
        for _ in range(min(x_cnt[i], y_cnt[i])):
            digit_list.append(f'{i}')
            
    if not digit_list:
        if min(x_cnt[0], y_cnt[0]):
            return '0'
        else:
            return '-1'
        
    for _ in range(min(x_cnt[0], y_cnt[0])):
        digit_list.append('0')
        
    return ''.join(digit_list)",https://github.com/sudog1/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/131128.%E2%80%85%EC%88%AB%EC%9E%90%E2%80%85%EC%A7%9D%EA%BF%8D,2023. 8. 30,53,2
2023. 8. 30 오전 10:11:41,김정규,AI,17 - 핸드폰 번호 가리기,"def solution(phone_number):
    answer = []
    for i, x in enumerate(reversed(phone_number)):
        if i >= 4:
            answer.append('*')
        else:
            answer.append(x)
    return ''.join(n for n in reversed(answer))",https://github.com/JungGyu00/algorithm,2023. 8. 30,17,1
2023. 8. 30 오전 10:11:47,최지연,AI,18 - 없는 숫자 더하기,"def solution(numbers):
    compare_val = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
    for n in numbers:
        if n in compare_val:
            compare_val.remove(n)
    answer = sum(compare_val)
    return answer",https://github.com/jiyeonCoder/algorithmPractice/blob/main/18.%20%EC%97%86%EB%8A%94%20%EC%88%AB%EC%9E%90%20%EB%8D%94%ED%95%98%EA%B8%B0.py,2023. 8. 30,18,1
2023. 8. 30 오전 10:11:53,김정민,Unity,41 - 푸드 파이트 대회,"public class Solution
        {
            public string solution(int[] food)
            {
                string firstStr = """";
                for (int i = 1; i < food.Length; i++)
                {
                    int foodNum = food[i] / 2;
                    for (int j = 0; j < foodNum; j++) firstStr += i;
                }

                string answer = firstStr + ""0"" + new string(firstStr.Reverse().ToArray());
                return answer;
            }
        }",https://github.com/j-miiin/Algorithm_Study/blob/main/SPARTA_ALGORITHM_2023/Level2/41_FoodFight.cs,2023. 8. 29,41,2
2023. 8. 30 오전 10:12:08,정범수,AI,54 - 체육복,"def solution(n, lost, reserve):
    student_state = [0]*(n+2)
    for idx in lost:
        student_state[idx] -= 1
    for idx in reserve:
        student_state[idx] += 1
    
    for i, state in enumerate(student_state):
        if state == -1:
            if student_state[i-1] == 1:
                student_state[i] = 0
            elif student_state[i+1] == 1:
                student_state[i] = 0
                student_state[i+1] = 0
    
    return n - sum(filter(lambda x: x<0, student_state))",https://github.com/sudog1/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/42862.%E2%80%85%EC%B2%B4%EC%9C%A1%EB%B3%B5,2023. 8. 30,54,2
2023. 8. 30 오전 10:12:24,김정민,Unity,42 - 콜라 문제,"public class Solution
        {
            public int solution(int a, int b, int n)
            {
                int answer = 0;

                int colaNum = n;
                while (colaNum >= a)
                {
                    int newCola = (colaNum / a) * b;
                    int leftCola = colaNum % a;
                    colaNum = newCola + leftCola;
                    answer += newCola;
                }

                return answer;
            }
        }",https://github.com/j-miiin/Algorithm_Study/blob/main/SPARTA_ALGORITHM_2023/Level2/42_ColaProblem.cs,2023. 8. 29,42,2
2023. 8. 30 오전 10:13:01,김진환,Unity,35 - 시저 암호,"public static string solution(string s, int n)
        {
            string answer = """";
            // 각각의 문자에 대해.
            int charNum = 0;
            for(int i = 0; i < s.Length;i++)
            {
                // 공백 제외
                if (s[i] == ' ')
                {
                    answer += "" "";
                    continue;
                }

                // n을 더한 문자 계산
                // else if 에 원래 charNum < 'a'를 활용 이는 대문자가 소문자 범위에 들어가는 결과를 일으킴.
                charNum = (int)s[i] + n;
                if (charNum > (int)'z')
                {
                    charNum -= 26;
                }
                else if((int)s[i] <= 'Z' && charNum > 'Z')
                {
                    charNum -= 26;
                }

                answer += (char)charNum;

            }
            return answer;
        }",https://github.com/NewRound/AlgorithmKata.git,2023. 8. 30,35,2
2023. 8. 30 오전 10:13:07,김진규,Unity,33 - 크기가 작은 부분,"using System;

public class Solution {
    public int solution(string t, string p) {
        int answer = 0;
        for(int i =0; i< t.Length - p.Length+1; i++)
        {
            string str1 = t.Substring(i,p.Length);
            
            if(string.Compare(str1,p) <=0)
                answer++; 
        }
        return answer;
    }
}",,2023. 8. 30,33,2
2023. 8. 30 오전 10:13:23,김진성,Unity,13 - 콜라츠 추측,"public class Solution
    {
        public long solution(long num)
        {
            long answer = 0;
            while (true)
            {
                if (num == 1)
                {
                    break;
                }

                if (num % 2 == 0)
                {
                    num /= 2;
                }
                else
                {
                    num = num * 3 + 1;
                }
                answer++;
                if (answer >= 500)
                {
                    answer = -1;
                    break;
                }
            }
            return answer;
        }
    }",https://github.com/GYALLERHORN/ALGORITHM,2023. 8. 30,13,1
2023. 8. 30 오전 10:13:46,권수민,AI,10 - 정수 내림차순으로 배치하기,"def solution(n):
    if n >= 1 and n <= 8000000000:
        a = sorted(list(str(n)),reverse=True)
        str_list = map(str,a)
        answer = """".join(str_list)
    return int(answer)",https://github.com/Stella-Kwon/git-github.com-Stella-Kwon-algorithm_prac/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12933.%E2%80%85%EC%A0%95%EC%88%98%E2%80%85%EB%82%B4%EB%A6%BC%EC%B0%A8%EC%88%9C%EC%9C%BC%EB%A1%9C%E2%80%85%EB%B0%B0%EC%B9%98%ED%95%98%EA%B8%B0/%EC%A0%95%EC%88%98%E2%80%85%EB%82%B4%EB%A6%BC%EC%B0%A8%EC%88%9C%EC%9C%BC%EB%A1%9C%E2%80%85%EB%B0%B0%EC%B9%98%ED%95%98%EA%B8%B0.py,2023. 8. 30,10,1
2023. 8. 30 오전 10:14:08,김정민,Unity,43 - 명예의 전당 (1),"public class Solution
        {
            public int[] solution(int k, int[] score)
            {
                int[] answer = new int[score.Length];

                List<int> sortedScoreList = new List<int>();
                for (int i = 0; i < score.Length; i++)
                {
                    sortedScoreList.Add(score[i]);
                    sortedScoreList.Sort();
                    sortedScoreList.Reverse();
                    if (i < k) answer[i] = sortedScoreList.Min();
                    else answer[i] = sortedScoreList[k - 1];
                }

                return answer;
            }
        }",https://github.com/j-miiin/Algorithm_Study/blob/main/SPARTA_ALGORITHM_2023/Level2/43_HallOfFame.cs,2023. 8. 29,43,2
2023. 8. 30 오전 10:15:38,김정민,Unity,44 - 2016년,"public class Solution
        {
            public string solution(int a, int b)
            {
                string[] days = { ""FRI"", ""SAT"", ""SUN"", ""MON"", ""TUE"", ""WED"", ""THU"" };

                int totalDays = 0;
                for (int i = 1; i < a; i++)
                {
                    if (i == 2) totalDays += 29;
                    else if (i == 4 || i == 6 || i == 9 || i == 1) totalDays += 30;
                    else totalDays += 31;
                }
                totalDays += (b - 1);

                string answer = days[totalDays % 7];
                return answer;
            }
        }",https://github.com/j-miiin/Algorithm_Study/blob/main/SPARTA_ALGORITHM_2023/Level2/44_YearOf2016.cs,2023. 8. 29,44,2
2023. 8. 30 오전 10:16:43,문현우,Unity,12 - 두 정수 사이의 합,"using System;

public class Solution {
    public long solution(int a, int b) {
        long answer = 0;
        long ret = 0;
        long longA = Convert.ToInt64(a);
        long longB = Convert.ToInt64(b);

        if(longA > longB){
            for(long i = longB; i <= longA; i++){
                ret += i;
            }
            answer = ret;
        }else if (longA == longB){
            answer = longA;
        }
        else{
            for(long i = longA; i<= longB; i++){
                ret += i;
            }
            answer = ret;
        }
        return answer;
    }
}",https://github.com/Munch310/Algorithm-Csharp/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12912.%E2%80%85%EB%91%90%E2%80%85%EC%A0%95%EC%88%98%E2%80%85%EC%82%AC%EC%9D%B4%EC%9D%98%E2%80%85%ED%95%A9,2023. 8. 30,12,1
2023. 8. 30 오전 10:17:02,김정민,Unity,45 - 카드 뭉치,"public class Solution
        {
            public string solution(string[] cards1, string[] cards2, string[] goal)
            {
                bool isPossible = true;
                int idx1 = 0, idx2 = 0;
                for (int i = 0; i < goal.Length; i++)
                {
                    if (idx1 < cards1.Length && goal[i] == cards1[idx1]) idx1++;
                    else if (idx2 < cards2.Length && goal[i] == cards2[idx2]) idx2++;
                    else
                    {
                        isPossible = false;
                        break;
                    }
                }

                string answer = isPossible ? ""Yes"" : ""No"";
                return answer;
            }
        }",https://github.com/j-miiin/Algorithm_Study/blob/main/SPARTA_ALGORITHM_2023/Level2/45_CardDeck.cs,2023. 8. 30,45,2
2023. 8. 30 오전 10:17:40,김정민,Unity,46 - 과일 장수,"public class Solution
        {
            public int solution(int k, int m, int[] score)
            {
                int answer = 0;

                Array.Sort(score);
                Array.Reverse(score);
                for (int i = m - 1; i < score.Length; i += m)
                {
                    answer += (score[i] * m);
                }

                return answer;
            }
        }",https://github.com/j-miiin/Algorithm_Study/blob/main/SPARTA_ALGORITHM_2023/Level2/46_FruitSeller.cs,2023. 8. 30,46,2
2023. 8. 30 오전 10:18:35,장현웅,AI,12 - 두 정수 사이의 합,"def solution(a, b):
    answer = sum(range(min(a,b), max(a,b)+1))
    return answer",https://github.com/HyeonwoongJang/Algorithm.git,2023. 8. 30,12,1
2023. 8. 30 오전 10:19:18,이혜리,AI,100 - 두 큐 합 같게 만들기,"from collections import deque

def solution(queue1, queue2):
    queue1 = deque(queue1)
    queue2 = deque(queue2)
    answer = -2
    
    queue3 = queue1 + queue2
    sum3 = sum(queue3)
    
    if sum3%2 == 1:
        answer = -1
    else:
        cnt = 0
        sum3 = sum3//2
        sum1 = sum(queue1)
        sum2 = sum(queue2)
        for i in range(len(queue1)*2):
            
            if sum1 == sum2:
                answer = cnt
                return answer
            elif sum1 > sum3:
                while sum1 > sum3:
                    a = queue1.popleft()
                    queue2.append(a)
                    sum1 -= a
                    sum2 += a
                    cnt += 1
            else:
                while sum2 > sum3:
                    a = queue2.popleft()
                    queue1.append(a)
                    sum2 -= a
                    sum1 += a
                    cnt += 1
        answer = -1
    
    return answer",https://github.com/hyeleenotharry/Programmers/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv2/118667.%E2%80%85%EB%91%90%E2%80%85%ED%81%90%E2%80%85%ED%95%A9%E2%80%85%EA%B0%99%EA%B2%8C%E2%80%85%EB%A7%8C%EB%93%A4%EA%B8%B0,2023. 8. 30,100,4
2023. 8. 30 오전 10:19:33,조성훈,Unity,11 - 하샤드 수,"public class Solution 
{
    public bool solution(int x) 
    {
        bool answer = true;
        int sum = 0;
        char[] temp = x.ToString().ToCharArray();
        
        for(int i = 0; i < temp.Length; i++)
        {
            sum += int.Parse(temp[i].ToString());
        }
        if(x%sum == 0)
            return answer;
        else
            return false;
        
        
    }
}",,2023. 8. 30,11,1
2023. 8. 30 오전 10:19:56,조성훈,Unity,12 - 두 정수 사이의 합,"public class Solution 
{
    public long solution(int a, int b) 
    {
        long answer = 0;
        if(b >= a)
        {
            for(int i = a; i < b+1; i++)
            answer += i;
        }
        else
        {
            for(int i = b; i < a+1; i++)
            answer += i;          
        }
        
        return answer;
        
    }
}",,2023. 8. 30,12,1
2023. 8. 30 오전 10:20:38,김지우,AI,13 - 콜라츠 추측,"def solution(num):
    answer = 0
    for i in range(500):
        if num % 2 == 0:
            num = num/2
            answer += 1
            if num == 1:
                break
        if num % 2 != 0:
            num = num*3 + 1
            answer += 1
            if num == 1:
                break
        if answer > 500 and num != 1:
            answer = -1
            break
        
    return answer",,2023. 8. 30,13,1
2023. 8. 30 오전 10:24:01,강상찬,AI,34 - 최소직사각형,"def solution(sizes):
    w = 0
    h = 0
    for i in sizes:
        a = max(i[0],i[1])
        b = min(i[0],i[1])
        if (a > w):
            w = a
        if (b > h):
            h = b
    return (w*h)",,2023. 8. 30,34,2
2023. 8. 30 오전 10:24:25,박준규,Unity,15 - 나누어 떨어지는 숫자,"
            for (int j = 0; j < answer.Length; j++)
            {
                for(int k = j; k <arr.Length; k++)
                {
                    if (arr[k] % divisor == 0)
                    {
                        answer[j] = arr[k];
                        break;
                    }  
                }
            }",,2023. 8. 30,15,1
2023. 8. 30 오전 10:32:46,조영오,Unity,31 - 이상한 문자 만들기,"public class Solution {
    public string solution(string s) {
        char[] msg = s.ToCharArray();
        bool isOdd = false;
        
        for(int i = 0 ; i < msg.Length; i++){
            //공백문자가 아니라면 홀짝 체크 시작 
            if(msg[i] != ' '){
                //홀수 번째라면 대문자를 소문자로
                if(isOdd){
                    if(msg[i] >= 65 && msg[i] <= 90){
                        msg[i] += ' ';
                    }
                }
                //짝수 번째라면 소문자를 대문자로
                else{
                    if(msg[i] >= 97 && msg[i] <= 122){
                        msg[i] -= ' ';
                    }
                }
                
                isOdd = !isOdd;
            }
            //현재 위치가 공백 문자라면 홀짝 체크 리셋.
            else{
                isOdd = false;
            }
        }
        
        string answer = new string(msg);
        return answer;
    }
}",,2023. 8. 30,31,2
2023. 8. 30 오전 10:34:33,권수민,AI,11 - 하샤드 수,"def solution(x):
    if x <= 10000 and x >= 1:
        list_str = list(map(int,str(x)))
        y = 0
        for i in list_str:
            y += i
        if x % y == 0:
            answer = True
        else:
            answer = False
        return answer",https://github.com/Stella-Kwon/git-github.com-Stella-Kwon-algorithm_prac/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12947.%E2%80%85%ED%95%98%EC%83%A4%EB%93%9C%E2%80%85%EC%88%98/%ED%95%98%EC%83%A4%EB%93%9C%E2%80%85%EC%88%98.py,2023. 8. 30,11,1
2023. 8. 30 오전 10:45:11,조성훈,Unity,13 - 콜라츠 추측,"public class Solution {
    public int solution(int num) 
    {
        long temp = num;
        int answer = 0;
        while(temp != 1)
        {
            if(temp % 2 == 0)
            temp /= 2;
            else
            temp = temp * 3 + 1;
            answer++;
            
        if (answer > 500)
        {
            return -1;
        }
            
        }
        return answer;
    }
}",,2023. 8. 30,13,1
2023. 8. 30 오전 11:02:10,김주형,Unity,13 - 콜라츠 추측,"public class Solution
{
    public int solution(long num) 
    {
        int answer = 0;
        int i = 0;
        for (i = 1; num != 1; i++)
        {
            if (num%2 == 0)
            {
                num /= 2;
            }
            else if (num % 2 !=0)
            {
                num = num * 3+1;
            }
            if (i >= 500)
                return -1; 
        }
        answer = i - 1;
        return answer;
    }
}",https://github.com/kjuhyung/Algorithm.git,2023. 8. 30,13,1
2023. 8. 30 오전 11:09:56,강상찬,AI,31 - 이상한 문자 만들기,"def solution(s):
    answer = ''
    lis_s = s.split(' ')
    for i in lis_s:
        cnt = 0
        for j in i:
            if (cnt%2 == 0):
                if (ord(j) > 96 and ord(j) < 123):
                    j = chr(ord(j)-32)
            else:
                if (ord(j) > 64 and ord(j) < 91):
                    j = chr(ord(j)+32)
            answer += j
            cnt += 1
        answer += ' '
    return answer[:-1]",,2023. 8. 30,31,2
2023. 8. 30 오전 11:15:13,채이환,Unity,26 - 문자열 다루기 기본,"public class Solution {
    public bool solution(string s) {
        bool answer = true;
        int num;
        if (int.TryParse(s, out num))
        {
            if (s.Length == 4 || s.Length == 6)
                return true;
            else
                return false;
        }
        else
            return false;
        return answer;
    }
}",,2023. 8. 30,26,1
2023. 8. 30 오전 11:15:41,채이환,Unity,27 - 행렬의 덧셈,"public class Solution {
    public int[,] solution(int[,] arr1, int[,] arr2) {
        int[,] answer = new int[arr1.GetLength(0),arr1.GetLength(1)];
        for (int i = 0; i<arr1.GetLength(0); ++i)
        {
            for (int j = 0; j<arr1.GetLength(1); ++j)
            {
                answer[i,j] = arr1[i,j] + arr2[i,j];
            }
        }
        return answer;
    }
}",,2023. 8. 30,27,1
2023. 8. 30 오전 11:16:05,채이환,Unity,28 - 직사각형 별찍기,"using System;
using System.Linq;
using System.Text;
public class Example
{
    public static void Main()
    {
        String[] s;

        Console.Clear();
        s = Console.ReadLine().Split(' ');

        int a = Int32.Parse(s[0]);
        int b = Int32.Parse(s[1]);

        StringBuilder star = new StringBuilder();
        while (a>0)
        {
            star.Append(""*"");
            --a;
        }
        string line = star.ToString();
        while (b>1)
        {
            star.Append(""\n"" + line);
            --b;
        }
        Console.Write(star.ToString());
    }
}",,2023. 8. 30,28,1
2023. 8. 30 오전 11:16:24,채이환,Unity,29 - 최대공약수와 최소공배수,"public class Solution {
    public int[] solution(int n, int m) {
        int[] answer = new int[2];
        int maxDivisor = GetGCD(n, m);
        int minMultiple = n * m / maxDivisor;
        answer[0] = maxDivisor;
        answer[1] = minMultiple;
        return answer;
    }
    
    public int GetGCD(int big, int small)
    {
        if (big > small)
        {
            if (big % small == 0)
            {
                return small;
            }
            else
            {
                return GetGCD(small, big%small);
            }
        }
        else
            return GetGCD(small, big);
    }
}",,2023. 8. 30,29,1
2023. 8. 30 오전 11:16:46,채이환,Unity,30 - 3진법 뒤집기,"using System;
using System.Collections.Generic;
public class Solution {
    public int solution(int n) {
        int answer = 0;
        Stack<int> stackNum = new Stack<int>();
        while (n>0)
        {
            stackNum.Push(n % 3);
            n /= 3;
        }
        int i = 0;
        while (stackNum.Count > 0)
        {
            answer += stackNum.Pop() * (int)Math.Pow(3,i);
            ++i;
        }
        return answer;
    }
}",,2023. 8. 30,30,1
2023. 8. 30 오전 11:18:41,강상찬,AI,11 - 하샤드 수,"def solution(x):
    return (x%sum(list(map(int, str(x)))) == 0) ",,2023. 8. 30,11,1
2023. 8. 30 오전 11:30:58,임전혁,Unity,37 - 문자열 내 마음대로 정렬하기,"using System;
using System.Collections.Generic;

public class Solution {
    public string[] solution(string[] strings, int n) {
        List<string> list = new List<string>();

        for (int i = 0; i < strings.Length; i++)
        {
            string tempStr = strings[i];
            list.Add(tempStr[n] + tempStr);
        }

        list.Sort();

        string[] answer = new string[strings.Length];
        for (int i = 0; i < answer.Length; i++)
        {
            int tempNum = list[i].Length;
            answer[i] = list[i].Substring(1, tempNum - 1);
        }
        
        return answer;
    }
}",https://github.com/yarogono/Algorithm_CSharp/blob/master/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12915.%E2%80%85%EB%AC%B8%EC%9E%90%EC%97%B4%E2%80%85%EB%82%B4%E2%80%85%EB%A7%88%EC%9D%8C%EB%8C%80%EB%A1%9C%E2%80%85%EC%A0%95%EB%A0%AC%ED%95%98%EA%B8%B0/%EB%AC%B8%EC%9E%90%EC%97%B4%E2%80%85%EB%82%B4%E2%80%85%EB%A7%88%EC%9D%8C%EB%8C%80%EB%A1%9C%E2%80%85%EC%A0%95%EB%A0%AC%ED%95%98%EA%B8%B0.cs,2023. 8. 30,37,2
2023. 8. 30 오전 11:32:45,강상찬,AI,36 - 숫자 문자열과 영단어,"def solution(s):
    a = s.replace('zero','0').replace('one','1').replace('two','2').replace('three','3').replace('four','4').replace('five','5').replace('six','6').replace('seven','7').replace('eight','8').replace('nine','9')
    return int(a)",,2023. 8. 30,36,2
2023. 8. 30 오전 11:39:50,김민재,AI,9 - 정수 제곱근 판별,"def solution(n):
    x = range(1, n+1)
    for i in x:
        if i**2 == n:
            return (i+1)**2


    return -1",https://github.com/Kim-Minjae9872/Code_Kata,2023. 8. 30,9,1
2023. 8. 30 오전 11:40:17,임규한,AI,30 - 3진법 뒤집기,"def solution(n):
    answer = ''
    while n > 0:
        n,i = divmod(n, 3)
        answer += str(i)
    return int(answer, 3)",,2023. 8. 30,30,1
2023. 8. 30 오전 11:50:51,송명근,Unity,12 - 두 정수 사이의 합,"public class Solution {
    public long solution(int a, int b) {
        long num = 0;
        if (b > a)
        {
            num = (long) b - a + 1;
        }
        else {
            num = (long) a - b + 1;
        }
        long mid = (long) (a+b)/2;
        long answer = 0;
        if (num % 2 == 1)
        {
            answer = num * mid;
        }
        else
        {
            if (mid >= 0)
            {
                answer = num * mid + num / 2;
            }
            else
            {
                answer = num * mid - num / 2;
            }
        }
        return answer;
    }
}",https://github.com/audrms6494/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12912.%E2%80%85%EB%91%90%E2%80%85%EC%A0%95%EC%88%98%E2%80%85%EC%82%AC%EC%9D%B4%EC%9D%98%E2%80%85%ED%95%A9,2023. 8. 30,12,1
2023. 8. 30 오전 11:58:00,송명근,Unity,13 - 콜라츠 추측,"public class Solution {
    public int solution(int num) {
        int count = 0;
        if (num == 1)
        {
            return 0;
        }
        while (count < 500)
        {
            count += 1;
            if (num % 2 == 1)
            {
                num = num * 3 + 1;
            }
            else { num /= 2; }
            if (num == 1)
            {
                return count;
            }
        }
        return -1;
        
    }
}",https://github.com/audrms6494/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12943.%E2%80%85%EC%BD%9C%EB%9D%BC%EC%B8%A0%E2%80%85%EC%B6%94%EC%B8%A1,2023. 8. 30,13,1
2023. 8. 30 오전 11:58:17,이성권,Unity,5 - 나머지가 1이 되는 수 찾기,"using System;

public class Solution
{
    public int solution(int n)
    {
        int answer = 0;
        for (int i = 1; ++i < n -1;)
            if(n % i == 1)
            {
                answer = i;
                break;
            }
        if (answer == 0) answer = n - 1 ;
        return answer;
    }
}",https://github.com/,2023. 8. 30,5,1
2023. 8. 30 오후 12:03:16,김규승,Unity,128 - 교점에 별 만들기,"#include <string>
#include <vector>
#include <set>
#include <map>
#include <iostream>
#include <limits>

using namespace std;

bool Intersect(long long a, long long b, long long e, long long c, long long d, long long f, long long* x, long long *y)
{
    /*
    ax + by = e;
    cx + dy = f;
    
    (a b)(x) = (e)
    (c d)(y) = (f)
    (x) =     1    (d -b)(e)
    (y) = (ad - bc)(-c a)(f)
    (x) =     1    (de - bf)
    (y) = (ad - bc)(af - ce)  
        
    x = (de - bf) / (ad - bc)
    y = (af - ce) / (ad - bc)
    */
    
    long long det{a * d - b * c};
    if(det == 0LL)
    {
        return false;
    }
    
    long long xTemp{d * e - b * f};
    long long yTemp{a * f - c * e};
    if(xTemp % det != 0LL ||
       yTemp % det != 0LL)
    {
        //cout << xTemp << ""is no natural number"" << endl;
        //cout << yTemp << ""is no natural number"" << endl;
        //cout << ""det: "" << det << endl;
        return false;
    }
    
    *x = xTemp / det;
    *y = yTemp / det;
    
    return true;
    
}

vector<string> solution(vector<vector<int>> line) {
    
    vector<string> answer;
    
    map<long long, set<long long>> xyMapSet{};
    long long minX{numeric_limits<long long>::max()};
    long long minY{numeric_limits<long long>::max()};
    long long maxX{numeric_limits<long long>::min()};
    long long maxY{numeric_limits<long long>::min()};
    long long x, y;
    for(int i = 0; i < line.size(); ++i)
    {
        for(int j = line.size() - 1; j > i; --j)
        {
            //cout << line[j][0] << "", "" << line[j][1] << "", "" << line[j][2] << "" intersect ""
            //     << line[i][0] << "", "" << line[i][1] << "", "" << line[i][2] << endl;
            if(Intersect(line[j][0], line[j][1], -line[j][2],
                         line[i][0], line[i][1], -line[i][2], &x, &y))
            {
                xyMapSet[x].insert(y);
                minX = min(minX, x);
                minY = min(minY, y);
                maxX = max(maxX, x);
                maxY = max(maxY, y);
            }
        }
    }
    
    //cout << ""min: "" << minX << "", "" << minY << endl
    //     << ""max: "" << maxX << "", "" << maxY << endl;
    string temp{};
    temp.resize(maxX - minX + 1, '.');
    answer.resize(maxY - minY + 1, temp);
    
    for(auto& ySet : xyMapSet)
    {
        for(auto y : ySet.second)
        {
            answer[(maxY - minY) - (y - minY)][ySet.first - minX] = '*';
        }
    }
    
    return answer;
    
}",,2023. 8. 30,128,5
2023. 8. 30 오후 12:09:51,강상찬,AI,33 - 크기가 작은 부분,"def solution(t, p):
    cnt = 0
    for i in range(len(t)-(len(p)-1)):
        if (int(t[i:i+len(p)]) <= int(p)):
            cnt += 1
    return cnt",,2023. 8. 30,33,2
2023. 8. 30 오후 12:44:45,강상찬,AI,46 - 과일 장수,"def solution(k, m, score):
    length = len(score)
    score.sort()
    while (length%m != 0):
        score.pop(0)
        length -= 1
    return (sum(score[0::m])*m)",,2023. 8. 30,46,2
2023. 8. 30 오후 12:49:28,임규한,AI,31 - 이상한 문자 만들기,"def solution(s):
    answer = ''
    ss = s.split("" "")
    for spl in ss:
        for i in range(len(spl)):
            if i%2 == 0:
                answer += spl[i].upper()
            else:
                answer += spl[i].lower()
        answer += ' '
    return answer[:-1]",,2023. 8. 30,31,2
2023. 8. 30 오후 1:11:33,노동균,Unity,30 - 3진법 뒤집기,"using System;
using System.Text;
public class Solution {
    public int solution(int n) {
        StringBuilder sb = new StringBuilder(200);
        int answer = 0;
        int tmpN = n;
        int rest = 0;
        int restoreTens = 0;
        
        while(tmpN>=1)
        {
            rest = tmpN%3;
            tmpN /= 3;
            sb.Append(rest);
        }
        char[] changed = sb.ToString().ToCharArray();
        Array.Reverse(changed);
        
        for(int i=0;i<changed.Length;++i)
        {
            int value = (int)Math.Pow(3,i)*(changed[i]-'0');
            answer += value;
        }
        
        
        return answer;
    }
}",https://github.com/shehdrbs123/Sparta/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/68935.%E2%80%853%EC%A7%84%EB%B2%95%E2%80%85%EB%92%A4%EC%A7%91%EA%B8%B0,2023. 8. 30,30,1
2023. 8. 30 오후 1:12:06,노동균,Unity,31 - 이상한 문자 만들기,"using System.Text;
using System;
public class Solution {
    public string solution(string s) {
        string answer = """";
        string[] splitStrings = s.Split();
        StringBuilder sb = new StringBuilder(100);
        
        for(int i=0;i<splitStrings.Length;++i)
        {
            char[] data = splitStrings[i].ToCharArray();
            
            for(int j=0; j<data.Length;++j)
            {
                if(j%2 == 0)
                {
                    if('a'<= data[j] && data[j]<= 'z')
                    {
                        data[j] = (char)(data[j] - 'a' + 'A');
                    }
                }
                else
                {
                    if('A'<= data[j] && data[j]<= 'Z')
                    {
                        data[j] = (char)(data[j] - 'A' + 'a');
                    }
                }
            }
            sb.Append(new String(data).ToString());
            if(i != splitStrings.Length-1)
                sb.Append("" "");
        }
        answer = sb.ToString();
        return answer;
    }
}",https://github.com/shehdrbs123/Sparta/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12930.%E2%80%85%EC%9D%B4%EC%83%81%ED%95%9C%E2%80%85%EB%AC%B8%EC%9E%90%E2%80%85%EB%A7%8C%EB%93%A4%EA%B8%B0,2023. 8. 30,31,2
2023. 8. 30 오후 1:13:03,노동균,Unity,32 - 삼총사,"using System;

public class Solution {
    public int solution(int[] number) {
        int answer = 0;
        for(int i=0;i<number.Length-2;++i)
        {
            for(int j=i+1;j<number.Length-1;++j)
            {
                for(int k=j+1; k<number.Length; ++k)
                {
                    int isTripple = number[i] + number[j] + number[k];
                    if(isTripple == 0)
                        answer +=1;
                }
            }
        }
        return answer;
    }
}",https://github.com/shehdrbs123/Sparta/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/131705.%E2%80%85%EC%82%BC%EC%B4%9D%EC%82%AC,2023. 8. 30,32,2
2023. 8. 30 오후 1:13:41,노동균,Unity,33 - 크기가 작은 부분,"using System;

public class Solution {
    public int solution(string t, string p) {
        int answer = 0;
        for(int i=0;i<t.Length-p.Length+1;++i)
        {
            string sub = t.Substring(i,p.Length);
            int compare = sub.CompareTo(p);
            if(compare == 0 || compare == -1)
                answer += 1;
        }
        return answer;
    }
}",https://github.com/shehdrbs123/Sparta/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/unrated/147355.%E2%80%85%ED%81%AC%EA%B8%B0%EA%B0%80%E2%80%85%EC%9E%91%EC%9D%80%E2%80%85%EB%B6%80%EB%B6%84%EB%AC%B8%EC%9E%90%EC%97%B4,2023. 8. 30,33,2
2023. 8. 30 오후 1:14:39,노동균,Unity,34 - 최소직사각형,"using System;

public class Solution {
    public int solution(int[,] sizes) {
        int answer = 0;
        int x=0,y = 0;
        
        for(int i=0;i<sizes.GetLength(0);++i)
        {
            int width, height = 0;
 
            width = sizes[i,0];
            height = sizes[i,1];
            if(width < height)
            {
                int tmp = width;
                width = height;
                height = tmp;
            }
            
            x = Math.Max(x,width);
            y = Math.Max(y,height);
            
        }
        
        answer = x*y;
        return answer;
    }
}",https://github.com/shehdrbs123/Sparta/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/86491.%E2%80%85%EC%B5%9C%EC%86%8C%EC%A7%81%EC%82%AC%EA%B0%81%ED%98%95,2023. 8. 30,34,2
2023. 8. 30 오후 1:15:12,노동균,Unity,35 - 시저 암호,"public class Solution {
    public string solution(string s, int n) {
        string answer = """";
        char[] charString = s.ToCharArray();
        
        for(int i=0;i<charString.Length;++i)
        {
            int tmp;
            char baseChar = 'A';
            
            if(charString[i] == ' ')
                continue;
            else if(charString[i] >= 'a')
            {
                baseChar = 'a';
            }
            
            tmp = charString[i] -baseChar;
            tmp = (tmp+n)%26;
            tmp += baseChar;
            charString[i] = (char)tmp;
        }
        
        answer = new string(charString);
        return answer;
    }
}",https://github.com/shehdrbs123/Sparta/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12926.%E2%80%85%EC%8B%9C%EC%A0%80%E2%80%85%EC%95%94%ED%98%B8,2023. 8. 30,35,2
2023. 8. 30 오후 3:01:28,이하택,Unity,13 - 콜라츠 추측,"public class Solution 
{
    public int solution(int num) 
    {
        int answer = 0;
        if(num == 1)
        {
            answer = 0;
        }
        else
        {
            while(num != 1)
            {
                if(answer == 500)
                {
                    answer = -1;
                    break;
                }
                
                if(num % 2 == 0)
                    num /= 2;
                else if(num % 2 == 1)
                {
                    num *= 3;
                    num += 1;
                }
                
                
                answer ++;
            }
        }
        
        return answer;
    }
}",https://github.com/LeeHataeg/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12943.%E2%80%85%EC%BD%9C%EB%9D%BC%EC%B8%A0%E2%80%85%EC%B6%94%EC%B8%A1,2023. 8. 30,13,1
2023. 8. 30 오후 3:03:33,이하택,Unity,12 - 두 정수 사이의 합,"public class Solution 
{
    public int solution(int num) 
    {
        int answer = 0;
        if(num == 1)
        {
            answer = 0;
        }
        else
        {
            while(num != 1)
            {
                if(answer == 500)
                {
                    answer = -1;
                    break;
                }
                
                if(num % 2 == 0)
                    num /= 2;
                else if(num % 2 == 1)
                {
                    num *= 3;
                    num += 1;
                }
                
                
                answer ++;
            }
        }
        
        return answer;
    }
}",https://github.com/LeeHataeg/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12912.%E2%80%85%EB%91%90%E2%80%85%EC%A0%95%EC%88%98%E2%80%85%EC%82%AC%EC%9D%B4%EC%9D%98%E2%80%85%ED%95%A9,2023. 8. 30,12,1
2023. 8. 30 오후 3:48:31,우성훈,Unity,2 - 평균 구하기,"public class Solution {
    public double solution(int[] arr) {
        double answer = 0;
        double sum = 0;
        for( int i = 0; i < arr.Length; i++){
            sum += arr[i];
        }
        answer = sum / arr.Length;
        return answer;
    }
}",,2023. 8. 28,2,1
2023. 8. 30 오후 3:49:08,우성훈,Unity,3 - 자릿수 더하기,"using System;

public class Solution {
    public int solution(int n) {
        int ten =1;
        int answer = 0;
        for(int i =0; i < 9 ; i++){
            if( n / ten == 0){
                break;
            }else{
                ten = ten * 10;
            }
        }
        ten = ten / 10;
        while( n != 0){
            answer += n / ten;
            n = n % ten;
            ten = ten / 10;
        }

        return answer;
    }
}",,2023. 8. 29,3,1
2023. 8. 30 오후 3:49:36,우성훈,Unity,4 - 약수의 합,"public class Solution {
    public int solution(int n) {
        int answer = 0;
        for( int i = 1; i <=3000 ; i++){
            if(n == 0)
                break;
            if( n % i == 0){
                answer += i;
            }
        }
        return answer;
    }
}",,2023. 8. 30,4,1
2023. 8. 30 오후 4:06:26,정재호,Unity,41 - 푸드 파이트 대회,"using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.Linq;

public class Solution
{
    public string solution(int[] food)
    {
        string answer = """";

        List<int> list = new List<int>();

        for (int i = 1; i < food.Length; i++)
        {
            int foodCount = food[i];
            if (foodCount % 2 != 0)
            {
                foodCount -= 1;
            }

            for (int j = 1; j <= foodCount / 2; j++)
            {
                list.Add(i);
            }
        }

        List<int> reverseList = new List<int>();
        reverseList = Enumerable.Reverse(list).ToList();

        list.Add(0);

        foreach (int i in reverseList)
        {
            list.Add(i);
        }

        foreach (int i in list)
        {
            answer += i.ToString();
        }

        return answer;
    }
}",,2023. 8. 30,41,2
2023. 8. 30 오후 4:16:01,우은진,AI,6 - x만큼 간격이 있는 n개의 숫자,"# x만큼 간격이 있는 n개의 숫자

def solution(x, n):
    answer = []
    num = 0
    for i in range(n):
        answer.append(x*(i+1))
    return answer",https://github.com/EunjinWoo/Algorithm/blob/main/Programmers/Lv.1/6.py,2023. 8. 30,6,1
2023. 8. 30 오후 4:20:11,우은진,AI,7 - 자연수 뒤집어 배열로 만들기,"# 자연수 뒤집어 배열로 만들기

def solution(n):
    answer = []
    while n != 0:
        answer.append(n%10)
        n = n // 10
    return answer",https://github.com/EunjinWoo/Algorithm/blob/main/Programmers/Lv.1/7.py,2023. 8. 30,7,1
2023. 8. 30 오후 4:23:02,우은진,AI,8 - 문자열을 정수로 바꾸기,"    return answer
",https://github.com/EunjinWoo/Algorithm/blob/main/Programmers/Lv.1/8.py,2023. 8. 30,8,1
2023. 8. 30 오후 4:30:19,우은진,AI,9 - 정수 제곱근 판별,"# 정수 제곱근 판별
import math

def solution(n):
    answer = 0
    if int(math.sqrt(n)) == math.sqrt(n):
        answer = (math.sqrt(n) + 1) ** 2
    else:
        answer = -1
    return answer

# math module import 하지 말고 sqrt면 그냥 **(1/2)로 쓰기",https://github.com/EunjinWoo/Algorithm/blob/main/Programmers/Lv.1/9.py,2023. 8. 30,9,1
2023. 8. 30 오후 4:42:36,우은진,AI,10 - 정수 내림차순으로 배치하기,"# 정수 내림차순으로 배치하기

def solution(n):
    answer = ''
    a = sorted(str(n), reverse = True)
    for i in range(len(a)):
        answer += a[i]
    return int(answer)

# .join(리스트)라는 리스트를 문자열로 합쳐주는 함수 존재. return int("""".join(ls)) 그래서 이렇게 풀기 가능.",https://github.com/EunjinWoo/Algorithm/blob/main/Programmers/Lv.1/10.py,2023. 8. 30,10,1
2023. 8. 30 오후 4:48:04,이경민,Unity,4 - 약수의 합,"public class Solution {
    public int solution(int n) {
        int sum = 0;
        for (int i = 1; i <= n; i++)
        {
            if (n%i==0 && n > 0)
            {
                sum += i;
            }
        }
        int answer = sum;
        return answer;
    }
}",https://github.com/kminsmin/Algorithm_Test_Practice/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12928.%E2%80%85%EC%95%BD%EC%88%98%EC%9D%98%E2%80%85%ED%95%A9,2023. 8. 29,4,1
2023. 8. 30 오후 4:48:45,이경민,Unity,5 - 나머지가 1이 되는 수 찾기,"using System;

public class Solution {
    public int solution(int n) {
        int answer = 0;
        for (int i = 1; i <= n ; i++)
        {
            if (n%i == 1)
            {
                answer = i;
                break;
            }
        }
        return answer;
    }
}",https://github.com/kminsmin/Algorithm_Test_Practice/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/87389.%E2%80%85%EB%82%98%EB%A8%B8%EC%A7%80%EA%B0%80%E2%80%851%EC%9D%B4%E2%80%85%EB%90%98%EB%8A%94%E2%80%85%EC%88%98%E2%80%85%EC%B0%BE%EA%B8%B0,2023. 8. 29,5,1
2023. 8. 30 오후 4:49:22,이경민,Unity,6 - x만큼 간격이 있는 n개의 숫자,"public class Solution {
    public long[] solution(int x, int n) {
        long[] answer = new long[n];
        for (int i = 1; i <= n; i++)
        {
            answer[i-1] = (long)x*i;
        }
        return answer;
    }
}",https://github.com/kminsmin/Algorithm_Test_Practice/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12954.%E2%80%85x%EB%A7%8C%ED%81%BC%E2%80%85%EA%B0%84%EA%B2%A9%EC%9D%B4%E2%80%85%EC%9E%88%EB%8A%94%E2%80%85n%EA%B0%9C%EC%9D%98%E2%80%85%EC%88%AB%EC%9E%90,2023. 8. 29,6,1
2023. 8. 30 오후 4:49:25,우은진,AI,11 - 하샤드 수,"# 하샤드 수

def solution(x):
    ha_num = sum(list(map(int, str(x))))
    if x % ha_num == 0:
        answer = True
    else:
        answer = False
    return answer",https://github.com/EunjinWoo/Algorithm/blob/main/Programmers/Lv.1/11.py,2023. 8. 30,11,1
2023. 8. 30 오후 4:50:11,이경민,Unity,7 - 자연수 뒤집어 배열로 만들기,"public class Solution {
    public int[] solution(long n) {
        string str = n.ToString();
        int[] answer = new int[str.Length];
        int[] arr = new int[str.Length];
        for (int i = 0; i < str.Length; i++)
        {
            arr[i] = int.Parse(str.Substring(i,1));
        }
        for (int j = 0; j < arr.Length; j++)
        {
            answer[j] = arr[arr.Length - j-1];
        }

        return answer;
    }
}",https://github.com/kminsmin/Algorithm_Test_Practice/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12932.%E2%80%85%EC%9E%90%EC%97%B0%EC%88%98%E2%80%85%EB%92%A4%EC%A7%91%EC%96%B4%E2%80%85%EB%B0%B0%EC%97%B4%EB%A1%9C%E2%80%85%EB%A7%8C%EB%93%A4%EA%B8%B0,2023. 8. 30,7,1
2023. 8. 30 오후 4:50:48,이경민,Unity,8 - 문자열을 정수로 바꾸기,"public class Solution {
    public int solution(string s) {
        int answer = int.Parse(s);
        return answer;
    }
}",https://github.com/kminsmin/Algorithm_Test_Practice/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12925.%E2%80%85%EB%AC%B8%EC%9E%90%EC%97%B4%EC%9D%84%E2%80%85%EC%A0%95%EC%88%98%EB%A1%9C%E2%80%85%EB%B0%94%EA%BE%B8%EA%B8%B0,2023. 8. 30,8,1
2023. 8. 30 오후 4:53:40,우은진,AI,12 - 두 정수 사이의 합,"# 두 정수 사이의 합

def solution(a, b):
    answer = 0
    a, b = min([a,b]), max([a,b])
    for i in range(a, b+1):
        answer += i
    return answer

# return sum(range(a, b + 1)) 이렇게도 가능.",https://github.com/EunjinWoo/Algorithm/blob/main/Programmers/Lv.1/12.py,2023. 8. 30,12,1
2023. 8. 30 오후 5:00:21,우은진,AI,13 - 콜라츠 추측,"# 콜라츠 추측

def solution(num):
    answer = 0
    while num != 1:
        if (num % 2 == 0):
            num /= 2
        else:
            num = num*3 + 1
        answer += 1
        if answer > 500:
            answer = -1
            break
    return answer",https://github.com/EunjinWoo/Algorithm/blob/main/Programmers/Lv.1/13.py,2023. 8. 30,13,1
2023. 8. 30 오후 5:04:13,우은진,AI,14 - 서울에서 김서방 찾기,"# 서울에서 김서방 찾기

def solution(seoul):
    i = seoul.index(""Kim"")
    return f""김서방은 {i}에 있다""",https://github.com/EunjinWoo/Algorithm/blob/main/Programmers/Lv.1/14.py,2023. 8. 30,14,1
2023. 8. 30 오후 5:10:53,배인호,Unity,33 - 크기가 작은 부분,"using System;

public class Solution
{
    public int solution(string t, string p)
    {
        int answer = 0;
        int lengthT = t.Length;
        int lengthP = p.Length;
        long numberP = StringToInt(p);

        for (int i = 0; i <= lengthT - lengthP; i++)
        {
            if (StringToInt(t.Substring(i, lengthP)) <= numberP)
            {
                answer++;
            }
        }

        return answer;
    }

    public long StringToInt(string num)
    {
        long number = 0;
        char[] array = num.ToCharArray();
        int length = array.Length;

        for (int i = 0; i < length; i++)
        {
            number += (array[length - 1 - i] - 48) * (long)Math.Pow(10, i);
        }

        return number;
    }
}
",https://github.com/cutlake2000/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/147355.%E2%80%85%ED%81%AC%EA%B8%B0%EA%B0%80%E2%80%85%EC%9E%91%EC%9D%80%E2%80%85%EB%B6%80%EB%B6%84%EB%AC%B8%EC%9E%90%EC%97%B4,2023. 8. 30,33,2
2023. 8. 30 오후 5:52:20,김주형,Unity,14 - 서울에서 김서방 찾기,"public class Solution 
{
    public string solution(string[] seoul) 
    {
        string answer = """";
        for (int i =0; i<seoul.Length; i++)
        {
            if (seoul[i] == ""Kim"")
            {
                answer = ($""김서방은 {i}에 있다"");
            }
        }
        return answer;
    }
}",https://github.com/kjuhyung/Algorithm.git,2023. 8. 30,14,1
2023. 8. 30 오후 6:25:33,김주형,Unity,15 - 나누어 떨어지는 숫자,"using System.Collections.Generic;

public class Solution 
{
    public int[] solution(int[] arr, int divisor)
    {
        List<int> answerList = new List<int>();

        for(int i = 0; i<arr.Length; i++)
        {
            if (arr[i] % divisor == 0)
            {
                answerList.Add(arr[i]);
            }
        }
        if (answerList.Count == 0)
        {
            answerList.Add(-1);
        }

        answerList.Sort();
        int[] answer = answerList.ToArray();
        return answer;
    }
}",https://github.com/kjuhyung/Algorithm.git,2023. 8. 30,15,1
2023. 8. 30 오후 6:41:10,김지우,AI,14 - 서울에서 김서방 찾기,"def solution(seoul):
    answer = ''
    for index, word in enumerate(seoul):
        if word in ""Kim"":
            answer = f'김서방은 {index}에 있다'
    return answer",,2023. 8. 30,14,1
2023. 8. 30 오후 6:56:25,안소정,Unity,13 - 콜라츠 추측,"public class Solution {
    public int solution(long num) {
        int Cnt = 0;
        int answer = 0;
        
        while (num != 1)
        {
            ++Cnt;
            num = (num % 2 == 0) ? num / 2 : (num * 3) + 1;
            
            if (Cnt > 500)
            {
                return answer = -1;
            }
        }
        return answer = Cnt;
    }
}",,2023. 8. 30,13,1
2023. 8. 30 오후 6:57:39,최종민,AI,23 - 약수의 개수와 덧셈,"def solution(left, right):
    answer = 0


    for i in range(left, right+1):
        count = 0
        for j in range(1, i+1):
            if i % j == 0:
                count += 1

        if count % 2 == 0:
            answer += i
        else:
            answer -= i

    return answer
",,2023. 8. 30,23,1
2023. 8. 30 오후 7:11:09,최종민,AI,24 - 문자열 내림차순으로 배치하기,"def solution(s):
    s = list(s)
    s.sort(reverse=1)
    answer = ''

    for i in s:
        answer+=i

    return answer
",,2023. 8. 30,24,1
2023. 8. 30 오후 7:17:41,최종민,AI,25 - 부족한 금액 계산하기,"def solution(price, money, count):
    answer = 0
    for i in range(1, count+1):
        answer = answer + price * i
    if money >= answer:
        return 0
    else:
        answer -= money

    return answer",,2023. 8. 30,25,1
2023. 8. 30 오후 8:01:10,최종민,AI,26 - 문자열 다루기 기본,"def solution(s):
    if len(s) in [4,6] and s.isdigit():
        return True
    
    return False",,2023. 8. 30,26,1
2023. 8. 30 오후 8:12:45,이솔,AI,16 - 음양 더하기,"def solution(absolutes, signs):
    answer = 0
    for i in range(len(signs)):
        if signs[i]:
            answer += absolutes[i]
        else:
            answer -= absolutes[i]
    return answer",,2023. 8. 30,16,1
2023. 8. 30 오후 8:13:08,이솔,AI,17 - 핸드폰 번호 가리기,"def solution(phone_number):
    letter = phone_number[:-4]
    return phone_number.replace(letter,'*'*len(letter))",,2023. 8. 30,17,1
2023. 8. 30 오후 8:13:31,이솔,AI,18 - 없는 숫자 더하기,"def solution(numbers):
    num_list = set([0,1,2,3,4,5,6,7,8,9])
    
    return sum(num_list - set(numbers))",,2023. 8. 30,18,1
2023. 8. 30 오후 9:08:35,임규한,AI,42 - 콜라 문제,"def solution(a, b, n):
    answer = 0
    while n>=a:
        j = n%a    
        n = n//a*b
        answer += n
        n += j
        
    return answer",,2023. 8. 30,42,2
2023. 8. 30 오후 9:46:11,최석준,Unity,7 - 자연수 뒤집어 배열로 만들기,"public class Solution {
    public int[] solution(long n) {
        string str = n.ToString();
        int[] answer = new int[str.Length];
        
        for(int i = 0; i < str.Length; i++)
        {
            answer[i] = int.Parse(str[i].ToString());
        }
        Array.Reverse(answer);
        return answer;
    }
}",,2023. 8. 30,7,1
2023. 8. 30 오후 11:26:25,남의서,AI,30 - 3진법 뒤집기,"def solution(n):
    answer = ''
    ans = 0
    while n != 0:
        answer += str(n % 3)
        n = n // 3
        
    return int(answer, 3)",,2023. 8. 29,30,1
2023. 8. 31 오전 1:04:20,남의서,AI,32 - 삼총사,"from itertools import combinations
def solution(number):
    answer = 0
    for i in list(combinations(number, 3)):
        if sum(i) == 0:
            answer+=1
    return answer",,2023. 8. 30,32,2
2023. 8. 31 오전 1:08:03,남의서,AI,33 - 크기가 작은 부분,"def solution(t, p):
    answer = 0
    for i in range(len(t) - len(p) + 1):
        if t[i:i+len(p)] <= p:
            answer += 1
    return answer",,2023. 8. 30,33,2
2023. 8. 31 오전 1:47:24,남의서,AI,34 - 최소직사각형,"def solution(sizes):
    a, b = [], []
    for i in range(len(sizes)):
        a.append(max(sizes[i]))
        b.append(min(sizes[i]))
    
    return max(a) * max(b)",,2023. 8. 30,34,2
2023. 8. 31 오전 2:42:44,남의서,AI,35 - 시저 암호,"def solution(s, n):
    ans = ''
    for i in s:
        if i.isupper():
            ans += chr((ord(i)-ord('A')+ n)%26+ord('A'))
        elif i.islower():
            ans += chr((ord(i)-ord('a')+ n)%26+ord('a'))
        elif i == ' ':
            ans += ' '
    return ans",,2023. 8. 30,35,2
2023. 8. 31 오전 2:47:29,남의서,AI,36 - 숫자 문자열과 영단어,"def solution(s):
    num = {
    ""zero"": ""0"",
    ""one"": ""1"",
    ""two"": ""2"",
    ""three"": ""3"",
    ""four"": ""4"",
    ""five"": ""5"",
    ""six"": ""6"",
    ""seven"": ""7"",
    ""eight"": ""8"",
    ""nine"": ""9"",
}
    for i, j in num.items():
        s = s.replace(i, j)
    return int(s)
",,2023. 8. 31,36,2
2023. 8. 31 오전 3:18:01,남의서,AI,37 - 문자열 내 마음대로 정렬하기,"def solution(strings, n):
        
    for i in range(len(strings)):
        strings[i] = strings[i][n] + strings[i]
    
    strings.sort()
    
    for i in range(len(strings)):
        strings[i] = strings[i][1:]
    return strings",,2023. 8. 31,37,2
2023. 8. 31 오전 3:35:19,남의서,AI,38 - K번째수정렬,"def solution(array, commands):
    answer = []
    for command in commands:
        new_array = array[command[0]-1:command[1]]
        new_array.sort()
        answer.append(new_array[command[2]-1])
    
    return answer",,2023. 8. 31,38,2
2023. 8. 31 오전 9:05:50,이경현,Unity,15 - 나누어 떨어지는 숫자,"public static int[] solution(int[] arr, int divisor)
{
    Array.Sort(arr);
    List<int> list = new List<int>();

    for (int i = 0; i < arr.Length; i++)
    {
        if (arr[i] % divisor == 0)
        {
            list.Add(arr[i]);
        }
    }

    if (list.Count == 0) return new int[] { -1 };

    return list.ToArray();
}",https://github.com/516lkh/Algorithm,2023. 8. 31,15,1
2023. 8. 31 오전 9:06:31,조장원,AI,7 - 자연수 뒤집어 배열로 만들기,"def solution(n):
    result = [int (i) for i in reversed(str(n))]
    
    return result",https://github.com/jangwonne/code_test,2023. 8. 31,7,1
2023. 8. 31 오전 9:06:57,이경현,Unity,19 - 제일 작은 수 제거하기," public static int[] solution(int[] arr)
 {
     if (arr.Length < 2) return new int[] {-1};
     return arr.Except(new int[] { arr.Min() }).ToArray();
 }",https://github.com/516lkh/Algorithm,2023. 8. 31,19,1
2023. 8. 31 오전 9:07:32,차명경,AI,8 - 문자열을 정수로 바꾸기,"def solution(s):
    return int(s)",,2023. 8. 31,8,1
2023. 8. 31 오전 9:08:52,양덕영,AI,28 - 직사각형 별찍기,"n, m = map(int, input().split())

for i in range(m):
    print('*' * n)",https://github.com/DeokYoung980130/Ai_Project2023-08-07/tree/14354c8eba6a7e13af930ae516383a1c0b37548a,2023. 8. 31,28,1
2023. 8. 31 오전 9:09:39,공혜진,AI,14 - 서울에서 김서방 찾기,"def solution(seoul):
    x = seoul.index('Kim')
    answer = f'김서방은 {x}에 있다'
    return answer

result = solution([""Jane"", ""Kim""])
print(result)",,2023. 8. 31,14,1
2023. 8. 31 오전 9:10:26,양수홍,AI,43 - 명예의 전당 (1),"def solution(k, score):
    answer = []
    hof=[]
    for i in range(len(score)):
        hof.append(score[i])
        hof.sort()
        if len(hof)<k:
            answer.append(hof[0])
        else :
            answer.append(hof[len(hof)-(k)])
    return answer",,2023. 8. 31,43,2
2023. 8. 31 오전 9:10:47,김경환,Unity,41 - 푸드 파이트 대회,"using System.Text;

public class Solution {
    public string solution(int[] food) {
        StringBuilder sb = new StringBuilder();
        
        for(int i = 1; i < food.Length; i++)
        {
            for(int j = 0; j < food[i] / 2; j++)
            {
                sb.Append(i);
            }
        }
        
        sb.Append(""0"");
        
        for(int i = food.Length-1; i > 0; i--)
        {
            for(int j = 0; j < food[i] / 2; j++)
            {
                sb.Append(i);
            }
        }
        
        return sb.ToString();
    }
}",https://github.com/kkh9700/algorithm,2023. 8. 31,41,2
2023. 8. 31 오전 9:12:48,이홍준,Unity,26 - 문자열 다루기 기본,"using System;

public class Solution {
    public bool solution(string s) {
        bool answer = false;
        int x = 0;
        
        if (s.Length == 4 || s.Length == 6)
        {
            answer = int.TryParse(s, out x);
        }
        else {}
        
        return answer;
    }
}",https://github.com/dlghdwns97/Study/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12918.%E2%80%85%EB%AC%B8%EC%9E%90%EC%97%B4%E2%80%85%EB%8B%A4%EB%A3%A8%EA%B8%B0%E2%80%85%EA%B8%B0%EB%B3%B8,2023. 8. 31,26,1
2023. 8. 31 오전 9:13:14,이경현,Unity,20 - 가운데 글자 가져오기,"string answer = """";
answer = (s.Length % 2 == 0) ? s.Substring(s.Length / 2 - 1, 2) : s.Substring(s.Length / 2, 1);
return answer;",https://github.com/516lkh/Algorithm,2023. 8. 31,20,1
2023. 8. 31 오전 9:13:22,김호연,Unity,19 - 제일 작은 수 제거하기,"using System.Collections.Generic;
using System.Linq;

public class Solution
{
        public int[] solution(int[] arr)
        {
            // 요소를 제거하려면 리스트로 바꾸고 해야될 듯
            List<int> arr_list = new List<int>(arr);

            // 리스트의 최소값을 찾아주는 Min(); 사용 -> Linq 필요
            int min = arr.Min();

            // num을 매개변수로 전달 후 min과 같은지 비교하고 그 요소를 모두 제거 -> Linq 필요
            arr_list.RemoveAll(num => num == min);

            if (arr_list.Count == 0) // 리스트의 크기가 0 = 배열의 크기가 0
            {
                arr_list.Add(-1);
            }
            
            return arr_list.ToArray();
        }
}",,2023. 8. 31,19,1
2023. 8. 31 오전 9:13:49,신현주,Unity,24 - 문자열 내림차순으로 배치하기,"using System;
class Solution {
    public string solution(string s) {
        char[] chr = s.ToCharArray();
        Array.Sort(chr);
        Array.Reverse(chr);
        string answer = new string(chr);
        return answer;
    }
}",https://github.com/Shyunju/codeKata,2023. 8. 31,24,1
2023. 8. 31 오전 9:14:23,이선재,Unity,41 - 푸드 파이트 대회,"#include <string>
#include <vector>

using namespace std;

string solution(vector<int> food) {
    string answer = ""0"";
    
    for(int i = food.size() - 1; i >= 0; i--){
        for(int j = 0; j < food[i]/2; j++){
            answer = to_string(i) + answer + to_string(i);
        }
    }
    
    return answer;
}",https://github.com/Lyrwhitt/Algorithm/blob/main/Programmers/LEVEL1/%ED%91%B8%EB%93%9C%20%ED%8C%8C%EC%9D%B4%ED%8A%B8%20%EB%8C%80%ED%9A%8C,2023. 8. 31,41,2
2023. 8. 31 오전 9:14:37,양덕영,AI,29 - 최대공약수와 최소공배수,"def gcd(a, b):
    while b:
        a, b = b, a % b
    return a

def lcm(a, b):
    return a * b // gcd(a, b)

def solution(n, m):
    greatest_common_divisor = gcd(n, m)
    least_common_multiple = lcm(n, m)
    
    answer = [greatest_common_divisor, least_common_multiple]
    return answer

print(solution(3, 12))",https://github.com/DeokYoung980130/Ai_Project2023-08-07/tree/22325489f4409086d508d178a4a6bb0da3fa8747,2023. 8. 31,29,1
2023. 8. 31 오전 9:16:22,박준규,Unity,16 - 음양 더하기,"using System;

public class Solution 
{
    public int solution(int[] absolutes, bool[] signs) 
    {
        int answer = 0;
        int[] num = new int[absolutes.Length];
        for(int i = 0; i < absolutes.Length; i++){
            if(signs[i] == true){
                num[i] = absolutes[i];
                
            }else if(signs[i] == false){
                num[i] = 0-absolutes[i];
            }
        }
        for(int j = 0; j < num.Length; j++){
            answer += num[j];
        }
        return answer;
    }
}",,2023. 8. 31,16,1
2023. 8. 31 오전 9:16:35,차명경,AI,10 - 정수 내림차순으로 배치하기,"def solution(n):
      return int(''.join(sorted(str(n), reverse=True)))","def solution(n):       return int(''.join(sorted(str(n), reverse=True)))",2023. 8. 31,10,1
2023. 8. 31 오전 9:16:46,신우석,Unity,45 - 카드 뭉치,"using System;

public class Solution {
    public string solution(string[] cards1, string[] cards2, string[] goal) {
        int i = 0, j = 0;
        while (i + j < goal.Length) {
            if (i < cards1.Length && cards1[i] == goal[i+j])
                ++i;
            else if (j < cards2.Length && cards2[j] == goal[i+j])
                ++j;
            else
                return ""No"";
        }
        
        return ""Yes"";
    }
}",https://github.com/seoksii/AlgorithmCodeKata/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/unrated/159994.%E2%80%85%EC%B9%B4%EB%93%9C%E2%80%85%EB%AD%89%EC%B9%98,2023. 8. 31,45,2
2023. 8. 31 오전 9:16:50,이경현,Unity,21 - 수박수박수박수박수박수?,"public string solution(int n)
{
    string answer = """";

    for(int i = 0; i < n; i++)
    {
        answer += (i % 2 == 0) ? ""수"" : ""박"";
    }

    return answer;
}",https://github.com/516lkh/Algorithm,2023. 8. 31,21,1
2023. 8. 31 오전 9:17:21,김경환,Unity,42 - 콜라 문제,"using System;

public class Solution {
    public int solution(int a, int b, int n) {
        int answer = 0;
        
        while(n >= a)
        {
            answer += b * (n / a);
            n = b * (n / a) + n % a;
        }
        
        return answer;
    }
}",https://github.com/kkh9700/algorithm,2023. 8. 31,42,2
2023. 8. 31 오전 9:17:28,이현지,Unity,29 - 최대공약수와 최소공배수,"public class Solution {
    public int[] solution(int n, int m) {
        int[] answer = new int[2];
        int bigger = (n < m)? m : n;
        int smaller = (n < m)? n : m;
        
        for (int i = smaller; i > 0; i--)
        {
            if (n % i == 0 && m % i == 0)
            {
                answer[0] = i;
                break;
            }
        }
        
        for (int j = bigger; j <= m * n; j++)
        {
            if (j % n == 0 && j % m == 0)
            {
                answer[1] = j;
                break;
            }
        }
        
        return answer;
    }
}",https://github.com/szlovelee/Programmers-Algorithm,2023. 8. 31,29,1
2023. 8. 31 오전 9:17:39,양수홍,AI,44 - 2016년,"def solution(a, b):
    answer = ''
    total_days=0
    month_arr=[31,29,31,30,31,30,31,31,30,31,30,31]
    for i in range(a-1):
        total_days+=month_arr[i]
    total_days+=b
    day=['FRI','SAT','SUN','MON','TUE','WED','THU']
    answer=day[(total_days-1)%7]
    return answer",,2023. 8. 31,44,2
2023. 8. 31 오전 9:18:13,김주형,Unity,16 - 음양 더하기,"using System;

public class Solution
{
public int solution(int[] absolutes, bool[] signs) 
    {
        int answer = 0;
    for (int i = 0; i< absolutes.Length; i++)
    {
        if (signs[i] == true)
        {
            answer += absolutes[i];
        }
        else if (signs[i] == false)
        {
            answer -= absolutes[i];
        }
    }   
    return answer;
    }
}",https://github.com/kjuhyung/Algorithm.git,2023. 8. 31,16,1
2023. 8. 31 오전 9:18:13,차요한,Unity,30 - 3진법 뒤집기,"using System;
using static System.Math;
using System.Collections.Generic;

public class Solution {
    public int solution(int n) {
        int answer = 0;
        List<int> list = new List<int>();
        
        while(true)
        {
            if(n==0) break;
            int d = n%3;
            list.Add(d);
            n = n/3;
        }

        list.Reverse();

        for(int i = 0; i<list.Count; i++)
        {
            answer += (int)(list[i] * Math.Pow(3,i));
        }
        return answer;
    }
   
}",https://github.com/HOHOJO/Algorithm_test,2023. 8. 31,30,1
2023. 8. 31 오전 9:18:34,김하늘,Unity,20 - 가운데 글자 가져오기,"public class Solution 
{
    public string solution(string s) 
    {
        string answer = """";
        if (s.Length % 2 != 0)
            answer += s[s.Length / 2];
        else
        {
            answer += s[s.Length / 2 - 1];
            answer += s[s.Length / 2];
        }


        return answer;
    }
}",,2023. 8. 31,20,1
2023. 8. 31 오전 9:18:41,윤지석,Unity,12 - 두 정수 사이의 합,"public class Solution {
    public long solution(int a, int b) {
        bool aIsBigger = false;
        int smallNum;
        int bigNum;
        aIsBigger = a > b? true : false;
        if (aIsBigger)
        {
            bigNum = a;
            smallNum = b;
        }
        else
        {
            bigNum = b;
            smallNum = a;
        }
        
        long answer = 0;
        
        for (; smallNum <= bigNum; smallNum++)
        {
            answer += smallNum;
        }
        return answer;
    }
}",https://github.com/noyyo/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12912.%E2%80%85%EB%91%90%E2%80%85%EC%A0%95%EC%88%98%E2%80%85%EC%82%AC%EC%9D%B4%EC%9D%98%E2%80%85%ED%95%A9,2023. 8. 31,12,1
2023. 8. 31 오전 9:18:58,한병권,Unity,45 - 카드 뭉치,"using System;

public class Solution {
    public string solution(string[] cards1, string[] cards2, string[] goal) {
        string answer = ""Yes"";
        int index1 = 0;
        int index2 = 0;
        
        for(int i = 0; i < goal.Length; i++)
        {
            if(goal[i] == cards1[index1])
            {
                index1++;
                if (index1 >= cards1.Length) index1 = cards1.Length -1;
            }
            else if(goal[i] == cards2[index2])
            {
                index2++;
                if (index2 >= cards2.Length) index2 = cards2.Length -1;
            }
            else
            {
                answer = ""No"";
                break;
            }

        }
        
        
        return answer;
    }
}",https://github.com/hbg9212/AlgorithmCodekata,2023. 8. 31,45,2
2023. 8. 31 오전 9:18:58,정재훈,Unity,13 - 콜라츠 추측,"public class Solution {
    public int solution(int num) {
        int answer = 0;
        long a = num;
        while(a != 1){
            if(a%2 == 0)
            {
                a/=2;
            }
            else
            {
                a = 3*a+1;
            }
            answer++;
            if(answer == 500)
            {
               answer = -1;
                break;
            }
        }
        return answer;
    }
}
",https://github.com/toadsam/Algorithm,2023. 8. 31,13,1
2023. 8. 31 오전 9:19:10,이소이,Unity,31 - 이상한 문자 만들기,"using System;

public class Solution {
    public string solution(string s) {
        string answer = """";
        int index = 0;
        for (int i = 0; i < s.Length; i++)
        {
            if (s[i] == ' ')
            {
                index = 0;
                answer += ' ';
            }
            else
            {
                if (index % 2 == 0)
                {
                    if ((int)s[i] >= 'a')
                        answer += (char)((int)s[i] - 32);
                    else
                        answer += s[i];
                }
                else
                {
                    if ((int)s[i] <= 'Z')
                        answer += (char)((int)s[i] + 32);
                    else
                        answer += s[i];
                }
                index++;
            }
        }
        return answer;
    }
}",https://github.com/leesy015599/AlgorithmCodeKata/blob/master/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12930.%E2%80%85%EC%9D%B4%EC%83%81%ED%95%9C%E2%80%85%EB%AC%B8%EC%9E%90%E2%80%85%EB%A7%8C%EB%93%A4%EA%B8%B0/%EC%9D%B4%EC%83%81%ED%95%9C%E2%80%85%EB%AC%B8%EC%9E%90%E2%80%85%EB%A7%8C%EB%93%A4%EA%B8%B0.cs,2023. 8. 31,31,2
2023. 8. 31 오전 9:19:20,박민혁,Unity,26 - 문자열 다루기 기본,"public class Solution {
    public bool solution(string s) {
        bool answer = false;
        int a;
        if(s.Length==4 || s.Length ==6)
        {
            if(int.TryParse(s,out a))
            {
                answer=true;
            }
        }
        return answer;
    }
}",,2023. 8. 31,26,1
2023. 8. 31 오전 9:19:32,신현,Unity,25 - 부족한 금액 계산하기,"using System;

class Solution
{
    public long solution(int price, int money, int count)
    {
        long sum =0;
        for(int i = 0; i <= count; i++){
            sum += price * i;
        }
        if( sum > money){
            sum -= money;
        }else{
            return 0;
        }
        return sum;
    }
}",https://github.com/Shyunju/codeKata,2023. 8. 31,25,1
2023. 8. 31 오전 9:20:33,이경현,Unity,22 - 내적,"public int solution(int[] a, int[] b)
{
    int answer = 0;
    for (int i = 0; i < a.Length; i++)
    {
        answer += a[i] * b[i];
    }
    return answer;
}",https://github.com/516lkh/Algorithm,2023. 8. 31,22,1
2023. 8. 31 오전 9:20:50,이정환,Unity,25 - 부족한 금액 계산하기,"using System;
using System.Collections.Generic;
class Solution
{
    public long solution(int price, int money, int count)
    {
         long totalCost = (long)price * (count * (count + 1)) / 2; // 등차수열 합 공식을 이용한 전체 이용금액 계산

         return totalCost > money ? totalCost - money : 0;
    }
}",,2023. 8. 31,25,1
2023. 8. 31 오전 9:20:52,이홍준,Unity,27 - 행렬의 덧셈,"using System;

public class Solution {
    public int[,] solution(int[,] arr1, int[,] arr2) {
        int[,] answer = new int[arr1.GetLength(0),arr2.GetLength(1)];
        
        for (int i = 0; i < arr1.GetLength(0); i++)
        {
            for (int j = 0; j < arr1.GetLength(1); j++)
            {
                answer[i, j] = arr1[i, j] + arr2[i, j];
            }
        }
        
        return answer;
    }
}",https://github.com/dlghdwns97/Study/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12950.%E2%80%85%ED%96%89%EB%A0%AC%EC%9D%98%E2%80%85%EB%8D%A7%EC%85%88,2023. 8. 31,27,1
2023. 8. 31 오전 9:22:10,강상찬,AI,35 - 시저 암호,"def solution(s, n):
    answer = ''
    for i in s:
        if i == ' ':
            answer += ' '
        else:
            if ord(i) < 91:
                num = ord(i) + n%26
                if num > 90:
                    num -= 26
            elif ord(i) > 96:
                num = ord(i) + n%26
                if num > 122:
                    num -= 26
            answer += chr(num)
    return answer",,2023. 8. 31,35,2
2023. 8. 31 오전 9:23:44,김경원,Unity,16 - 음양 더하기,"using System;

public class Solution
    {
        public int solution(int[] absolutes, bool[] signs)
        {
            int answer = 0;
            
            for (int i = 0; i < absolutes.Length; i++)
            {
            		// answer에 absolutes원소들을 더해주는데 각 원소는
            		// signs[i]의 참거짓에 따라서, 그냥 더해지거나 -1을 곱해서 음수로 더해짐
                answer += absolutes[i] = signs[i] ? absolutes[i] : absolutes[i]*-1;
            }
            
            return answer;
        }
    }",,2023. 8. 31,16,1
2023. 8. 31 오전 9:24:18,이홍준,Unity,28 - 직사각형 별찍기,"using System;

public class Example
{
    public static void Main()
    {
        String[] s;

        Console.Clear();
        s = Console.ReadLine().Split(' ');

        int a = Int32.Parse(s[0]);
        int b = Int32.Parse(s[1]);
        
        for (int i = 0; i < b; i++)
        {
            for (int j = 0; j < a; j++)
            {
               Console.Write(""*""); 
            }
            Console.WriteLine("""");
        }
    }
}",https://github.com/dlghdwns97/Study/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12969.%E2%80%85%EC%A7%81%EC%82%AC%EA%B0%81%ED%98%95%E2%80%85%EB%B3%84%EC%B0%8D%EA%B8%B0,2023. 8. 31,28,1
2023. 8. 31 오전 9:24:59,김경원,Unity,11 - 하샤드 수,"using System;

public class Solution
    {
        public bool solution(int x)
        {
        // x를 문자열로 변환한다.
            string temp = x.ToString();
            // for문을 돌려서 각 자리수의 합을 구한다.
            int sum = 0;
            for (int i = 0; i < temp.Length; i++)
            {
                sum += (int)Char.GetNumericValue(temp[i]);
            }
            // x가 자리수 합으로 나눠떨어지면 참, 아니면 거짓
            bool answer = x % sum==0 ? true:false;
            return answer;
        }
    }",,2023. 8. 31,11,1
2023. 8. 31 오전 9:25:10,김도현A,Unity,7 - 자연수 뒤집어 배열로 만들기,"using System;
using System.Linq;

public class Solution {
    public int[] solution(long n) {
        string str = n.ToString();
        int[] answer = new int[str.Length];
        
        for(int i = 0; i<str.Length; i++)
        {
            answer[i]=int.Parse(str[i].ToString());
        }
        Array.Reverse(answer);
        
        return answer;
    }
}
",,2023. 8. 31,7,1
2023. 8. 31 오전 9:25:47,노재우,Unity,18 - 없는 숫자 더하기,"using System;

public class Solution
{
    public int solution(int[] numbers)
    {
        Array.Sort(numbers);
        int answer = 0;

        
        for (int i = 0; i < 10; i++)
        {
            int left = 0;
            int right = numbers.Length - 1;
            while (true)
            {
                int mid = (right + left) / 2;
                if (numbers[mid] == i)
                {
                    break;
                }
                else if (left >= right)
                {
                    answer += i;
                    break;
                }
                else if (numbers[mid] > i)
                {
                    right = mid-1;
                }
                else if (numbers[mid] < i)
                {
                    left = mid+1;
                }
            }
        }
        return answer;
    }
}",,2023. 8. 31,18,1
2023. 8. 31 오전 9:25:51,이도현,Unity,7 - 자연수 뒤집어 배열로 만들기,"using System.Linq;

public class Solution {
    public int[] solution(long n) {
        var rev = n.ToString().Reverse();
        int[] answer = new int[n.ToString().Length];

        for (int i = 0; i < n.ToString().Length; ++i)
        {
            answer[i] = rev.ElementAt(i) - '0'; 
        }
        return answer;
    }
}",,2023. 8. 31,7,1
2023. 8. 31 오전 9:26:03,명세인,AI,24 - 문자열 내림차순으로 배치하기,"def solution(s):
    s = sorted(s, reverse = True)
    s = ''.join(s)
    return s",https://github.com/playersein/Coding_Test/commit/14bc2834d789b0a24df183e8f785eaf5822d00d4,2023. 8. 31,24,1
2023. 8. 31 오전 9:26:30,김강현,Unity,11 - 하샤드 수," bool solution(int x)
 {
     int number = 10000;
     int x1 = 0;
     int temp = x;
     for (int i = 0; i < 5; i++)
     {
         if (x / number == 0)
         {
             x1 += 0;
         }
         else
         { x1 += x / number; }
         x %= number;
         number /= 10;

     }
     bool answer = false;
     if (temp % x1 == 0)
     {
         answer = true;
     }

     return answer;
 }",,2023. 8. 31,11,1
2023. 8. 31 오전 9:27:27,박준규,Unity,17 - 핸드폰 번호 가리기,"public class Solution 
{
    public string solution(string phone_number) 
    {
        string answer = """";
        int numLength = phone_number.Length;
        for(int i = 0; i < numLength; i++){
            if(i<numLength-4){
                answer += ""*"";
            }else{
                answer += phone_number[i];
            }
        }
        return answer;
    }
}",,2023. 8. 31,17,1
2023. 8. 31 오전 9:27:42,김예준,Unity,32 - 삼총사,"#include <string>
#include <vector>

using namespace std;

int solution(vector<int> number) {
    int answer = 0;
    
    for (int i = 0; i < number.size(); i++)
    {
        for (int j = i + 1; j < number.size(); j++)
        {
            for (int k = j + 1; k < number.size(); k++)
            {
                if (number[i] + number[j] + number[k] == 0) answer++;
            }
        }
    }
    
    return answer;
}",,2023. 8. 31,32,2
2023. 8. 31 오전 9:28:22,이세진,Unity,17 - 핸드폰 번호 가리기,"public class Solution {
    public string solution(string phone_number) {
            string answer = """";

            for (int i = 0;i <  phone_number.Length; i++)
            {
                if (i < phone_number.Length - 4)
                {
                    answer += ""*"";
                }
                else
                {
                    answer += phone_number[i];
                }
            }
            return answer;
    }
}",,2023. 8. 31,17,1
2023. 8. 31 오전 9:28:31,신현주,Unity,26 - 문자열 다루기 기본,"public class Solution {
    public bool solution(string s) {
        char[] chr = s.ToCharArray();
        if( 4 != chr. Length && 6 != chr.Length){
            return false;
        }
        for( int i = 0; i< chr.Length; i++){
            if(chr[i] > 58){
                return false;
            }
        }
        return true;
    }
}",https://github.com/Shyunju/codeKata,2023. 8. 31,26,1
2023. 8. 31 오전 9:28:54,김경원,Unity,17 - 핸드폰 번호 가리기,"public class Solution
    {
        public string solution(string phone_number)
        {
            string answer = """";

            for (int i = 0; i < phone_number.Length; i++)
            {
                if (i < phone_number.Length-4)
                {
                    answer += ""*"";
                }
                else
                {
                    answer += phone_number[i];
                }
            }

            return answer;
        }
    }",,2023. 8. 31,17,1
2023. 8. 31 오전 9:29:00,장성림,Unity,31 - 이상한 문자 만들기,"using System;
using System.Collections.Generic;
public class Solution {
    public string solution(string s) {
        string answer = """";
        char[] c = s.ToCharArray();
        int count = 0;
        for (int i = 0; i < c.Length; i++){
            if(c[i] == ' '){
                count = 0;
                continue;
            }
            if(count % 2 ==0)
                c[i] = Char.ToUpper(c[i]);
            else
                c[i] = Char.ToLower(c[i]);
            count++;
        }
        answer += new string(c);
        return answer;
    }
}",https://github.com/hoobhoob,2023. 8. 31,31,2
2023. 8. 31 오전 9:29:20,김하늘,Unity,21 - 수박수박수박수박수박수?,"public class Solution 
{
    public string solution(int n) 
    {
        string answer = """";

        for (int i = 1; i <= n; i++)
        {
            if (i % 2 != 0) answer += '수';
            if (i % 2 == 0) answer += '박';
        }
        return answer;
    }
}",,2023. 8. 31,21,1
2023. 8. 31 오전 9:29:42,이승연,Unity,11 - 하샤드 수,"public class Solution {
    public bool solution(int x) {
        bool answer = true;
        int sum=0;
        int y=x;
        while(y>0)
        {
            int Value=y%10;
            sum+=Value;
            y /=10;
        }
        
        answer=x%sum==0?true:false;
        
        return answer;
    }
}",,2023. 8. 31,11,1
2023. 8. 31 오전 9:30:06,이경현,Unity,23 - 약수의 개수와 덧셈,"public class A_1_23_aliquot
{
    public int solution(int left, int right)
    {
        int answer = 0;
        for(int i = left; i <= right; i++)
        {
            answer = (findaliquotnumber(i) % 2 == 0) ? answer + i : answer - i;
        }
        return answer;
    }

    public int findaliquotnumber(int n)
    {
        int count = 0;
        for (int i = 1; i <= n; i++)
        {
            if (n % i == 0) { count++; }
        }
        return count;
    }
}",https://github.com/516lkh/Algorithm,2023. 8. 31,23,1
2023. 8. 31 오전 9:30:15,김경원,Unity,18 - 없는 숫자 더하기,"using System;
using System.Linq;
public class Solution
{
    public int solution(int[] numbers) 
    {       
        int answer = 0;
        for(int i=0;i<10;i++)
        {
            answer +=i;
        }
        answer -= numbers.Sum();
        return answer;
    }
}",,2023. 8. 31,18,1
2023. 8. 31 오전 9:30:39,차명경,AI,11 - 하샤드 수,"        
def solution(x):
    sum = 0
    for i in str(x):
        sum += int(i)
    if x % sum == 0:
        return True
    else:
        return False
",,2023. 8. 31,11,1
2023. 8. 31 오전 9:30:40,윤지석,Unity,13 - 콜라츠 추측,"public class Solution {
    public int solution(long num) {
        int count = 0;
        while (count <= 500)
        {
            if (num % 2 == 0)
            {
                num /= 2;
                count++;
            }
            else if(num == 1)
            {
                return count;
            }
            else
            {
                num = num * 3 + 1;
                count++;
            }
        }

        return -1;
    }
}",https://github.com/noyyo/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12943.%E2%80%85%EC%BD%9C%EB%9D%BC%EC%B8%A0%E2%80%85%EC%B6%94%EC%B8%A1,2023. 8. 31,13,1
2023. 8. 31 오전 9:30:54,최수용,Unity,31 - 이상한 문자 만들기,"using System;
using System.Linq;

public class Solution {
    public string solution(string s) {
        string answer = """";
        string[] splitedS;
        if( s.IndexOf(' ') != -1 )
        {
            splitedS = s.Split(' ');    
        }else{
            splitedS = new string[]{ s };
        }
        for(int i=0; i < splitedS.Length; i++)
        {
            char[] charArray = splitedS[i].ToCharArray();
            for( int j=0; j < splitedS[i].Length ; j++)
            {
                charArray[j] = j%2==0? char.ToUpper(charArray[j]) : char.ToLower(charArray[j]);
            }
            splitedS[i] = new string(charArray);
            answer += splitedS[i];
            answer += i!=(splitedS.Length-1)? "" "" : """";
        }
        return answer;
    }
}",,2023. 8. 31,31,2
2023. 8. 31 오전 9:30:55,김호연,Unity,20 - 가운데 글자 가져오기,"using System;

public class Solution
{
    public string solution(string s)
    {
        string answer = """";
        
        if(s.Length % 2 == 0)
        {
            answer = s.Substring(s.Length / 2 - 1, 2);
        }
        else
        {
            answer = s.Substring(s.Length / 2, 1);
        }

        return answer;
    }
}",,2023. 8. 31,20,1
2023. 8. 31 오전 9:31:11,양덕영,AI,30 - 3진법 뒤집기,"def solution(n):
    ternary_reversed = """"
    while n > 0:
        n, remainder = divmod(n, 3)
        ternary_reversed += str(remainder)

    decimal_value = int(ternary_reversed, 3)
    
    return decimal_value

print(solution(45))",https://github.com/DeokYoung980130/Ai_Project2023-08-07/tree/e625cb609536877cbeb136ba62244fefd69644f0,2023. 8. 31,30,1
2023. 8. 31 오전 9:31:45,최장범,Unity,19 - 제일 작은 수 제거하기,"using System.Collections.Generic;
using System.Linq;

public class Solution
{
        public int[] solution(int[] arr)
        {
            // 각 요소를 제거하기 위해 리스트로 치환
            List<int> arr_list = new List<int>(arr);

            // 리스트에서 가장 작은 수를 찾음
            int min = arr.Min();

            // 해당 요소 모두 제거
            arr_list.RemoveAll(num => num == min);

            if (arr_list.Count == 0)
            {
                arr_list.Add(-1);
            }
            
            return arr_list.ToArray();
        }
}",,2023. 8. 31,19,1
2023. 8. 31 오전 9:31:49,김경환,Unity,43 - 명예의 전당 (1),"using System.Linq;

public class Solution {
    public int[] solution(int k, int[] score) {
        int length = score.Length;
        int[] answer = new int[length];
        int[] hallOfFrame = Enumerable.Repeat(-1, k).ToArray();;
        
        for(int i = 0; i < length; i++)
        {
            answer[i] = AddScore(score[i], hallOfFrame);
        }
        
        return answer;
    }
    
    public int AddScore(int score, int[] array)
    {
        int min = 0;
        
        for(int i = 0; i < array.Length; i++)
        {
            if(array[i] < score)
            {
                for(int j = array.Length - 1; j > i; j--)
                {
                    array[j] = array[j-1];
                }
                
                array[i] = score;
                break;
            }
        }
        
        for(int i = array.Length - 1; i >= 0; i--)
        {
            if(array[i] == -1)
                continue;
            return array[i];
        }
        
        return 0;
    }
}",https://github.com/kkh9700/algorithm,2023. 8. 31,43,2
2023. 8. 31 오전 9:31:58,김민태,Unity,35 - 시저 암호,"using System;
public class Solution {
    public string solution(string s, int n) {
        string answer = """";
        foreach(char c in s)
        {
            if(c!=' ')
            {
                int tmp = 0;
                if((int)c<91)
                {
                    tmp = (int)c + n;
                    if(tmp > 90) tmp = 64 + (tmp - 90);
                }
                else
                {
                    tmp = (int)c + n;
                    if(tmp > 122) tmp = 96 + (tmp - 122);
                }
                
                answer += Convert.ToChar(tmp);    
            }else
                answer += ' ';    
        }
        return answer;
    }
}",https://github.com/rlaalsxo/CodingTest,2023. 8. 31,35,2
2023. 8. 31 오전 9:32:17,최장범,Unity,20 - 가운데 글자 가져오기,"public class Solution {
    public string solution(string s) {
        string answer = """";
        //짝수
        if(s.Length %2 ==0)
        {
            answer += s[s.Length /2 -1]; // 절반에서 -1
            answer += s[s.Length /2]; //절반
        }
        //홀수
        else
        {
            answer += s[s.Length/2];
        }
        return answer;
    }
}",,2023. 8. 31,20,1
2023. 8. 31 오전 9:32:33,공혜진,AI,15 - 나누어 떨어지는 숫자,"def solution(arr, divisor):
    answer = []
    for i in arr:
        if i % divisor == 0 :
            answer.append(i)

    if answer == [] :
        answer.append(-1)

    return sorted(answer)",,2023. 8. 31,15,1
2023. 8. 31 오전 9:33:12,정재호,Unity,42 - 콜라 문제,"using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.Linq;

public class Solution
{
    public int solution(int a, int b, int n)
    {
        int answer = 0;

        while (a <= n)
        {
            int count = (n / a) * b;
            int left = n % a;

            n = count + left;

            answer += count;
        }

        return answer;
    }
}
",,2023. 8. 31,42,2
2023. 8. 31 오전 9:33:35,이경현,Unity,24 - 문자열 내림차순으로 배치하기,"public string solution(string s)
{
    char[] answer = s.ToCharArray();
    Array.Sort(answer);
    Array.Reverse(answer);
    return new string(answer);
}",https://github.com/516lkh/Algorithm,2023. 8. 31,24,1
2023. 8. 31 오전 9:33:56,신현주,Unity,27 - 행렬의 덧셈,"public class Solution {
    public int[,] solution(int[,] arr1, int[,] arr2) {
        int[,] answer = new int[arr1.GetLength(0), arr1.GetLength(1)];
        
        for( int i= 0; i< arr1.GetLength(0); i++)
        {
            for ( int j =0 ; j <arr1.GetLength(1); j++)
            {
                answer[i,j] = arr1[i,j]+arr2[i,j];
            }
        }
        return answer;
    }
}",https://github.com/Shyunju/codeKata,2023. 8. 31,27,1
2023. 8. 31 오전 9:33:57,명세인,AI,25 - 부족한 금액 계산하기,"def solution(price, money, count):
    answer = 0
    rate = 0
    for i in range(1, count+1):
        rate += price*i
    if rate > money:
        answer = rate - money
    else:
        answer = 0
    return answer",https://github.com/playersein/Coding_Test/commit/d030d75cdba622c2f05d59cbdfd8b2fc5d84a94d,2023. 8. 31,25,1
2023. 8. 31 오전 9:34:51,김정규,AI,15 - 나누어 떨어지는 숫자,"def solution(numbers):
    answer = 0
    for i in range(10):
        if not i in numbers:
            answer += i

    return answer",https://github.com/JungGyu00/algorithm,2023. 8. 31,15,1
2023. 8. 31 오전 9:34:52,김하늘,Unity,22 - 내적,"using System;

public class Solution 
{
    public int solution(int[] a, int[] b) 
    {
        int answer = 0;
        for (int i = 0; i < a.Length; i++)
            answer += a[i] * b[i];

        return answer;

    }
}",,2023. 8. 31,22,1
2023. 8. 31 오전 9:34:54,김예준,Unity,33 - 크기가 작은 부분,"using System;

public class Solution {
    public int solution(string t, string p) {
        int answer = 0;
        
        for (int i = 0; i <= t.Length - p.Length; i++)
        {
            string s = """";
            for(int j = 0; j < p.Length; j++)
            {
                s += t[i + j];
            }
            
            if (long.Parse(s) <= long.Parse(p)) answer++;
        }
        
        return answer;
    }
}",,2023. 8. 31,33,2
2023. 8. 31 오전 9:34:58,조호진,AI,23 - 약수의 개수와 덧셈,"def solution(left, right):
    answer = 0
    
    for i in range(left,right+1):
        a = []
        for j in range(1,i+1):
            if i % j ==0:
                a.append(j)
        if len(a) % 2 == 0:
            answer += i
        else:
            answer -= i    
    return answer",https://github.com/bm4706/Algorithm_practice/commit/6b7aa9bbcdc825e6a4758d23130bf1bca0ecd40a,2023. 8. 31,23,1
2023. 8. 31 오전 9:35:09,차요한,Unity,31 - 이상한 문자 만들기,"using System;
using System.Collections.Generic;
using System.Linq;

public class Solution {
    public string solution(string s) {
        string answer = """";
        string[] result = s.Split(new string[] {"" ""}, StringSplitOptions.None);
        
        for(int i=0; i<result.Length ; i++)
        {
            List<string> list = new List<string>();
            list.AddRange(result[i].Select(c => c.ToString()));
            for(int j =0; j< list.Count ; j++)
            {
                if(j==0||(j%2)==0)
                {
                    answer+=list[j].ToUpper(); 
                }
                else
                {
                    answer+=list[j].ToLower();
                }  
            }
            if(i<result.Length-1)
            {
                answer+="" "";
            }
        }
        return answer;
    }
}",https://github.com/HOHOJO/Algorithm_test,2023. 8. 31,31,2
2023. 8. 31 오전 9:35:22,정재훈,Unity,14 - 서울에서 김서방 찾기,"using System;

public class Solution
    {
        public string solution(string[] seoul)
        {
            return new string($""김서방은 {Array.IndexOf(seoul, ""Kim"")}에 있다"");
        }
    }",https://github.com/toadsam/Algorithm,2023. 8. 31,14,1
2023. 8. 31 오전 9:35:48,김해찬,Unity,83 - 피로도,"using System;
using System.Collections;
using System.Collections.Generic;

public class Solution
{
    int answer = 0;
    bool[] check = new bool[8];
    
    void DFS(int count, int k, int[,] dungeons)
    {
        if(count > answer)
        {
            answer = count;
        }
        
        for(int i = 0; i < dungeons.GetLength(0); i++)
        {
            if(check[i] == false && k >= dungeons[i, 0])
            {
                check[i] = true;
                DFS(count + 1, k - dungeons[i, 1], dungeons);
                check[i] = false;
            }
        }
    }
    
    public int solution(int k, int[,] dungeons)
    {
        DFS(0, k, dungeons);
        
        return answer;
    }
}",,2023. 8. 31,83,4
2023. 8. 31 오전 9:35:58,권선영,Unity,7 - 자연수 뒤집어 배열로 만들기,"using System;

public class Solution {
    public long[] solution(long n) {
        int size = n.ToString().Length;
        long[] answer = new long[size];

        for(int i = 0; i < size; i++){
            answer[i] = n % 10;
            n /= 10;
        }
        return answer;
    }
}
",https://github.com/Tealss,2023. 8. 31,7,1
2023. 8. 31 오전 9:36:01,최지연,AI,19 - 제일 작은 수 제거하기,"    arr.remove(min(arr))
    answer = arr
    if len(answer) > 1:
        return answer
    else:
        answer.append(-1)
    return answer",https://github.com/jiyeonCoder/algorithmPractice/blob/main/19.%20%EC%A0%9C%EC%9D%BC%20%EC%9E%91%EC%9D%80%20%EC%88%98%20%EC%A0%9C%EA%B1%B0%ED%95%98%EA%B8%B0.py,2023. 8. 31,19,1
2023. 8. 31 오전 9:36:05,조범준,Unity,30 - 3진법 뒤집기,"using System;
using System.Collections.Generic;

public class Solution {
    public int solution(int n) {
        List<int> answer = new List<int>();
        while(n > 0){
            answer.Add(n%3);
            n /= 3;
        }
        for(int i = 0; i < answer.Count; i++){
            n += (int)Math.Pow(3, answer.Count-i-1) * answer[i];
        }
        return n;
    }
}",https://github.com/KimMaYa1/BaekJoonEx/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1,2023. 8. 31,30,1
2023. 8. 31 오전 9:36:07,남의서,AI,39 - 두 개 뽑아서 더하기,"from itertools import combinations
def solution(numbers):
    answer = set()
    for i in list(combinations(numbers,2)):
        answer.add(sum(i))
    return sorted(answer)",,2023. 8. 31,39,2
2023. 8. 31 오전 9:36:12,김정규,Unity,18 - 없는 숫자 더하기,"def solution(numbers):
    answer = 0
    for i in range(10):
        if not i in numbers:
            answer += i

    return answer",https://github.com/JungGyu00/algorithm,2023. 8. 31,18,1
2023. 8. 31 오전 9:36:12,이형빈,Unity,11 - 하샤드 수,"public class Solution {
    public bool solution(int x) 
    {
        int sum = 0;
        int number = x;
        bool answer = true;
        while(x>0)
        {
            sum += x % 10;
            x = x / 10;
        }
        if(sum!=0)
        {
            if(number%sum==0)
            {
                answer = true;
            }
            else
            {
                answer = false;
            }
    
        }
        return answer;
    }
}",,2023. 8. 31,11,1
2023. 8. 31 오전 9:36:25,김지수,AI,16 - 음양 더하기,"def solution(absolutes, signs):
    for i in range(len(absolutes)):
        if signs[i] == False:
            absolutes[i] = absolutes[i]*(-1)
    return sum(absolutes)",,2023. 8. 31,16,1
2023. 8. 31 오전 9:36:42,박민혁,Unity,27 - 행렬의 덧셈,"public class Solution {
    public int[,] solution(int[,] arr1, int[,] arr2) {
        int[,] answer = new int[arr1.GetLength(0),arr1.GetLength(1)];
        for(int i=0;i<arr1.GetLength(0);++i)
        {
            for(int j=0;j<arr1.GetLength(1);++j)
            {
            answer[i,j]=arr1[i,j]+arr2[i,j];
            }
        }
        return answer;
    }
}",,2023. 8. 31,27,1
2023. 8. 31 오전 9:37:25,이세진,Unity,18 - 없는 숫자 더하기,"using System;

public class Solution {
    public int solution(int[] numbers) {
        int answer = 0;
        
        for(int i = 1 ; i < 10; i++)
        {
            for(int j = 0 ; j < numbers.Length; j++)
            {
                if(i == numbers[j])
                {
                    break;
                }
                else if(j == numbers.Length - 1)
                {
                    answer += i;
                }
            }
        }
        
        return answer;
    }
}",,2023. 8. 31,18,1
2023. 8. 31 오전 9:37:27,김경환,Unity,44 - 2016년,"public class Solution {
    
    public string solution(int a, int b) {
        string[] days = new string[] {""SUN"", ""MON"", ""TUE"", ""WED"", ""THU"", ""FRI"", ""SAT""};
        int[] dates = new int[] {0, 31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31};
        int sum = 0;
        
        for(int i = 1; i < a; i++)
        {
            sum += dates[i];   
        }
        
        sum += b;
        
        return days[(sum + 4) % 7];
    }
    
    
}",https://github.com/kkh9700/algorithm,2023. 8. 31,44,2
2023. 8. 31 오전 9:37:37,양덕영,AI,31 - 이상한 문자 만들기,"def solution(s):
    words = s.split()
    result = []

    for word in words:
        new_word = """"
        for i, char in enumerate(word):
            if i % 2 == 0:
                new_word += char.upper()
            else:
                new_word += char.lower()
        result.append(new_word)
    
    return ' '.join(result)

print(solution(""try hello world""))",https://github.com/DeokYoung980130/Ai_Project2023-08-07/tree/74934180191324c7928779b13d067e0e63a8765f,2023. 8. 31,31,2
2023. 8. 31 오전 9:38:01,송명헌,AI,4 - 약수의 합,"def solution(n):
    answer = 0
   
    for i in range(1,n+1):
    
       
            answer += i
           
    return answer",,2023. 8. 31,4,1
2023. 8. 31 오전 9:38:18,곽민규,Unity,6 - x만큼 간격이 있는 n개의 숫자,"public class Solution {
    public long[] solution(int x, int n) {
        long[] answer = new long[n];
        
        for (int i = 0; i < n; i++) {
            answer[i] = (long)x * (i + 1);
        }
        
        return answer;
    }
}",,2023. 8. 31,6,1
2023. 8. 31 오전 9:38:21,유채연,Unity,24 - 문자열 내림차순으로 배치하기,"        char[] arr=s.ToCharArray();
        System.Array.Sort(arr);
        System.Array.Reverse(arr);
        string answer = new string(arr);//arr.ToString(); 하니까 ""System.Char[]""이 결과값
        return answer;",https://github.com/ychy0006/AlgorithmCodeKata/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1,2023. 8. 31,24,1
2023. 8. 31 오전 9:38:25,김광수,Unity,61 - 개인정보 수집 유효기간,"using System;
using System.Collections.Generic;

public class Solution 
{
    public int[] solution(string today, string[] terms, string[] privacies) 
    {
        DateTime todayDate = DateTime.Parse(today);
        Dictionary<string,int> termsDic = new Dictionary<string,int>();
        List<int> answer = new List<int>();
        
        foreach(string term in terms)
        {
            termsDic.Add(term.Substring(0,1),int.Parse(term.Substring(2,term.Length-2)));
        }
        
        for(int i=0; i< privacies.Length; i++)
        {
            DateTime date = DateTime.Parse(privacies[i].Substring(0,10));
            string type = privacies[i].Substring(11,1);
            
            int result = DateTime.Compare(todayDate, date.AddMonths(termsDic[type]));
            if(result >= 0 )
            {
                answer.Add(i+1);
            }
        }
        return answer.ToArray();
    }
}",https://github.com/kksoo0131/Study/commit/9fcdf319a18a00dd56320fd56cb09a7b37af0624,2023. 8. 31,61,3
2023. 8. 31 오전 9:38:44,최장범,Unity,21 - 수박수박수박수박수박수?,"public class Solution {
    public string solution(int n) 
    {
        int Length = n/2;
        string answer = """";
        
        for(int i=0; i < Length; i++)
        {
            answer += ""수박"";
        }
        if (n%2 == 1)
        {
            answer += ""수"";
        }
        return answer;
    }
}",,2023. 8. 31,21,1
2023. 8. 31 오전 9:38:48,문현우,Unity,13 - 콜라츠 추측,"public class Solution {
    public int solution(int num) {
        int answer = 0;
        int count = 0;
        while(num != 1){
            if(num % 2 == 0){
                num /= 2;
                count++;
            }
            else if(num % 2 == 1){
                num = (num * 3) + 1;
                count++;
            } 
            else if(count > 500 || num < 0){
                count = -1;
                break;
            }
        }
        answer = count;
        return answer;
    }
}",https://github.com/Munch310/Algorithm-Csharp/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12943.%E2%80%85%EC%BD%9C%EB%9D%BC%EC%B8%A0%E2%80%85%EC%B6%94%EC%B8%A1,2023. 8. 31,13,1
2023. 8. 31 오전 9:38:56,신현주,Unity,28 - 직사각형 별찍기,"using System;

public class Example
{
    public static void Main()
    {
        String[] s;

        Console.Clear();
        s = Console.ReadLine().Split(' ');

        int a = Int32.Parse(s[0]);
        int b = Int32.Parse(s[1]);

        for(int j = 1; j <= b; j++){
            for(int i =1; i <= a; i++){
                Console.Write(""*"");
            }
            Console.WriteLine();
        }
    }
}",https://github.com/Shyunju/codeKata,2023. 8. 31,28,1
2023. 8. 31 오전 9:38:57,유채연,Unity,25 - 부족한 금액 계산하기,"        int countSum=0;
        long pay;
        long presentMoney = money;
        for(int i=1;i<=count;i++) countSum += i;
        pay = (long)countSum*price;
        if(pay>presentMoney) return pay-presentMoney;
        else return 0;
        return -1;",https://github.com/ychy0006/AlgorithmCodeKata/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1,2023. 8. 31,25,1
2023. 8. 31 오전 9:39:05,윤지석,Unity,14 - 서울에서 김서방 찾기,"public class Solution {
    public string solution(string[] seoul) {
        const string kim = ""Kim"";
        for (int i = 0; i < seoul.Length; i++)
        {
            if (seoul[i] == kim)
            {
                return $""김서방은 {i}에 있다"";
            }
        }
        return """";
    }
}",https://github.com/noyyo/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12919.%E2%80%85%EC%84%9C%EC%9A%B8%EC%97%90%EC%84%9C%E2%80%85%EA%B9%80%EC%84%9C%EB%B0%A9%E2%80%85%EC%B0%BE%EA%B8%B0,2023. 8. 31,14,1
2023. 8. 31 오전 9:39:20,이승연,Unity,12 - 두 정수 사이의 합,"public class Solution {
    public long solution(int a, int b) {
        long answer = 0;
        
        
        if(a>b)
        {
            for(int  i=b;i<a+1;i++)
            {
                answer+=i;
            }
        }
        else if(b>a)
        {
            for(int  i=a;i<b+1;i++)
            {
                answer+=i;
            }
        }
        else
        {
            answer=a;
        }
        return answer;
    }
}",,2023. 8. 31,12,1
2023. 8. 31 오전 9:39:40,공혜진,AI,16 - 음양 더하기,"def solution(absolutes, signs):
    answer = 0
    for i,j in zip(absolutes, signs):
        if j == False:
            i = -i
        answer += i
    return answer",,2023. 8. 31,16,1
2023. 8. 31 오전 9:40:06,김민태,Unity,36 - 숫자 문자열과 영단어,"using System;

public class Solution {
    public int solution(string s) {
        int answer = 0;
        s = s.Replace(""zero"", ""0"");
        s = s.Replace(""one"", ""1"");
        s = s.Replace(""two"", ""2"");
        s = s.Replace(""three"", ""3"");
        s = s.Replace(""four"", ""4"");
        s = s.Replace(""five"", ""5"");
        s = s.Replace(""six"", ""6"");
        s = s.Replace(""seven"", ""7"");
        s = s.Replace(""eight"", ""8"");
        s = s.Replace(""nine"", ""9"");

        int k;
        bool strToInt = int.TryParse(s, out k);     
        if(strToInt) answer = k;                    
        
        return answer;                              
    }
}",https://github.com/rlaalsxo/CodingTest,2023. 8. 31,36,2
2023. 8. 31 오전 9:40:15,유채연,Unity,26 - 문자열 다루기 기본,"        int num;
        if((s.Length==4||s.Length==6)&&int.TryParse(s,out num)) {
            return true;
        }
        return false;",https://github.com/ychy0006/AlgorithmCodeKata/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1,2023. 8. 31,26,1
2023. 8. 31 오전 9:40:51,맹주한,Unity,2 - 평균 구하기,"#include <stdio.h>
#include <stdbool.h>
#include <stdlib.h>

double solution(int arr[], size_t arr_len) {
    double answer = 0;
    int sum = 0;

    for (size_t i = 0; i < arr_len; i++) {
        sum += arr[i];
    }

    answer = (double)sum / arr_len;

    return answer;
}

int main() {
    int arr[] = {1, 2, 3, 4, 5};
    size_t arr_len = sizeof(arr) / sizeof(arr[0]);

    double avg = solution(arr, arr_len);
    printf(""Average: %.2lf\n"", avg);

    return 0;
}",,2023. 8. 31,2,1
2023. 8. 31 오전 9:40:53,이선재,Unity,42 - 콜라 문제,"#include <string>
#include <vector>

using namespace std;

int solution(int a, int b, int n) {
    int answer = 0;
    
    while((n / a) != 0){
        int remain = n % a;
        
        n /= a;
        
        answer += (n * b);
        
        n = (n * b) + remain;
    }
    
    return answer;
}",https://github.com/Lyrwhitt/Algorithm/blob/main/Programmers/LEVEL1/%EC%BD%9C%EB%9D%BC%20%EB%AC%B8%EC%A0%9C,2023. 8. 31,42,2
2023. 8. 31 오전 9:40:58,최하나,Unity,4 - 약수의 합,"public class Solution {
    public int solution(int n) {
        int answer = 0;
        
        for (int i = 1; i <= n; i++) {
            if (n % i == 0) {
                answer += i;
            }
        }
        return answer;
    }
}",https://github.com/coco0715/AlgorithmsKata,2023. 8. 31,4,1
2023. 8. 31 오전 9:41:20,김경환,Unity,45 - 카드 뭉치,"using System;

public class Solution {
    public string solution(string[] cards1, string[] cards2, string[] goal) {
        int index1 = 0,  index2 = 0;
        
        for(int i = 0 ; i < goal.Length; i++)
        {
            if(index1 != cards1.Length && cards1[index1].Equals(goal[i]))
            {
                index1++;
            }
            else if(index2 != cards2.Length && cards2[index2].Equals(goal[i]))
            {
                index2++;
            }
            else{
                return ""No"";    
            }
        }
        
        return ""Yes"";
    }
}",https://github.com/kkh9700/algorithm,2023. 8. 31,45,2
2023. 8. 31 오전 9:41:27,유채연,Unity,28 - 직사각형 별찍기,"        String[] s;

        Console.Clear();
        s = Console.ReadLine().Split(' ');

        int a = Int32.Parse(s[0]);
        int b = Int32.Parse(s[1]);
        
        for(int i=0;i<a*b;i++){
            if(i%a==0&&i>0) Console.WriteLine();
            Console.Write(""*"");
        }",https://github.com/ychy0006/AlgorithmCodeKata/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1,2023. 8. 31,28,1
2023. 8. 31 오전 9:41:34,김예준,Unity,34 - 최소직사각형,"using System;
using System.Linq;

public class Solution {
    public int solution(int[,] sizes) {
        int w_max = 0;
        int h_max = 0;
        
        for (int i = 0; i < sizes.GetLength(0); i++)
        {
            if (sizes[i,0] < sizes[i,1])
            {
                int tmp = sizes[i,0];
                sizes[i,0] = sizes[i,1];
                sizes[i,1] = tmp;
            }
            
            if (sizes[i,0] > w_max) w_max = sizes[i,0];
            if (sizes[i,1] > h_max) h_max = sizes[i,1];
        }
        
        return w_max * h_max;
    }
}",,2023. 8. 31,34,2
2023. 8. 31 오전 9:42:03,이정환,Unity,27 - 행렬의 덧셈,"public class Solution {
    public int[,] solution(int[,] arr1, int[,] arr2) {
        int upperBound0 = arr1.GetUpperBound(0);
        int upperBound1 = arr1.GetUpperBound(1);
        int[,] answer = new int[upperBound0 + 1, upperBound1 + 1]; 
        for(int i = 0; i <= upperBound0; i++){
            for(int j = 0; j <= upperBound1; j++){
                answer[i, j] = arr1[i, j] + arr2[i, j];
            }
        }
        return answer;
    }
}",,2023. 8. 31,27,1
2023. 8. 31 오전 9:42:09,유채연,Unity,27 - 행렬의 덧셈,"        int rowLength = arr1.GetLength(0);
        int columnLength= arr1.GetLength(1);
        
        int [,] answer = new int[rowLength,columnLength];
        for(int j=0;j<arr1.GetLength(0);j++){
            for(int i = 0;i<arr1.GetLength(1);i++) answer[j,i] = arr1[j,i] + arr2[j,i];
        }
        return answer;",https://github.com/ychy0006/AlgorithmCodeKata/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1,2023. 8. 31,27,1
2023. 8. 31 오전 9:42:13,이경현,Unity,25 - 부족한 금액 계산하기,"public long solution(int price, int money, int count)
{
    long total = 0;
    for(int j = 1; j <= count; j++)
    {
        total += (long)(price * j);

    }

    if (total <= money) return 0;
    return (long)(total - money);
}",https://github.com/516lkh/Algorithm,2023. 8. 31,25,1
2023. 8. 31 오전 9:42:15,김진환,Unity,36 - 숫자 문자열과 영단어,"public static int solution(string s)
        {
            long answer = 0;
            // 숫자인 경우 (1자리 숫자)
            // 묶음 (o = 1 / t = 2, 3  /  f = 4, 5  /  s = 6, 7  / e = 8  / n = 9 / z = 0)
            // 건너뛰는 길이 4 3 3 5 4 4 3 5 5 4
            int count = 0;

            for(int i = 0; i < s.Length; i++)
            {
                switch(s[i])
                {
                    case '0':
                    case '1':
                    case '2':
                    case '3':
                    case '4':
                    case '5':
                    case '6':
                    case '7':
                    case '8':
                    case '9':
                        answer += long.Parse(s[i].ToString());
                        answer *= (long)Math.Pow(10, 1);
                        count++;
                        break;

                    case 'o': // 1
                        answer += 1;
                        answer *= (long)Math.Pow(10, 1);
                        i += 2;
                        count++;
                        break;
                    case 't': // 2,3
                        if (s[i+1] == 'w')
                        {
                            answer += 2;
                            answer *= (long)Math.Pow(10, 1);
                            i += 2;
                        }
                        else
                        {
                            answer += 3;
                            answer *= (long)Math.Pow(10, 1);
                            i += 4;
                        }
                        count++;
                        break;
                    case 'f': // 4,5
                        if (s[i + 1] == 'o')
                        {
                            answer += 4;
                            answer *= (long)Math.Pow(10, 1);
                            i += 3;
                        }
                        else
                        {
                            answer += 5;
                            answer *= (long)Math.Pow(10, 1);
                            i += 3;
                        }
                        count++;
                        break;
                    case 's': // 6,7
                        if (s[i + 1] == 'i')
                        {
                            answer += 6;
                            answer *= (long)Math.Pow(10, 1);
                            i += 2;
                        }
                        else
                        {
                            answer += 7;
                            answer *= (long)Math.Pow(10, 1);
                            i += 4;
                        }
                        count++;
                        break;
                    case 'e': // 8
                        answer += 8;
                        answer *= (long)Math.Pow(10, 1);
                        i += 4;
                        count++;
                        break;
                    case 'n': // 9
                        answer += 9;
                        answer *= (long)Math.Pow(10, 1);
                        i += 3;
                        count++;
                        break;
                    case 'z': // 0
                        answer += 0;
                        answer *= (long)Math.Pow(10, 1);
                        i += 3;
                        count++;
                        break;
                }
                Console.WriteLine(""{0} :  {1}"",answer, count);
            }

            return (int)(answer / 10);
        }",https://github.com/NewRound/AlgorithmKata.git,2023. 8. 31,36,2
2023. 8. 31 오전 9:42:19,이선재,Unity,43 - 명예의 전당 (1),"#include <string>
#include <vector>
#include <algorithm>

using namespace std;

vector<int> solution(int k, vector<int> score) {
    vector<int> answer;
    vector<int> rank;
    
    for(int t : score)
    {
        if(rank.empty())
        {
            rank.push_back(t);
            answer.push_back(t);
        }
        else
        {
            rank.push_back(t);
            sort(rank.begin(), rank.end(), greater<int>());
            
            if(rank.size() < k)
            {
                answer.push_back(rank.back());
            }
            else
            {
                answer.push_back(rank[k-1]);
            }
        }
    }
    
    return answer;
}",https://github.com/Lyrwhitt/Algorithm/blob/main/Programmers/LEVEL1/%EB%AA%85%EC%98%88%EC%9D%98%20%EC%A0%84%EB%8B%B9%20(1),2023. 8. 31,43,2
2023. 8. 31 오전 9:43:21,진우성,Unity,4 - 약수의 합,"public class Solution {
    public int solution(int n) {
        int answer = 0;
        for(int i = 1; i <= n; i++)
        {
            if(n % i == 0)
            {
                answer += i;
            }
        }
        return answer;
    }
}",,2023. 8. 31,4,1
2023. 8. 31 오전 9:43:24,권수민,AI,12 - 두 정수 사이의 합,"def solution(a, b):
    answer = 0
    if not a <= 10000000 and a >= -10000000 and b <= 10000000 and b >= -10000000:
        return
    if a == b:
        return a or b 
    elif a > b :
        temp = a
        a = b
        b = temp
        # for i in range(b, a+1):
        #     answer += i
    for i in range(a,b+1):
        answer += i
    return answer",https://github.com/Stella-Kwon/git-github.com-Stella-Kwon-algorithm_prac/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12912.%E2%80%85%EB%91%90%E2%80%85%EC%A0%95%EC%88%98%E2%80%85%EC%82%AC%EC%9D%B4%EC%9D%98%E2%80%85%ED%95%A9/%EB%91%90%E2%80%85%EC%A0%95%EC%88%98%E2%80%85%EC%82%AC%EC%9D%B4%EC%9D%98%E2%80%85%ED%95%A9.py,2023. 8. 31,12,1
2023. 8. 31 오전 9:43:55,김민재,AI,10 - 정수 내림차순으로 배치하기,"def solution(n):

    list = []

    for x in str(n):
        list.append(x)
    list.sort(reverse=True)
    answer = ''.join(list)
    return int(answer)",https://github.com/Kim-Minjae9872/Code_Kata,2023. 8. 31,10,1
2023. 8. 31 오전 9:44:15,양수홍,AI,45 - 카드 뭉치,"def solution(cards1, cards2, goal):
    i=j=0
    for k in range(len(goal)):
        if i<len(cards1) and goal[k]==cards1[i]:
            i+=1
        elif j<len(cards2) and goal[k]==cards2[j] :
            j+=1
        else:
            return ""No""
    return ""Yes""",,2023. 8. 31,45,2
2023. 8. 31 오전 9:44:17,조호진,AI,24 - 문자열 내림차순으로 배치하기,"def solution(s):
    answer = ''.join(sorted(s,reverse=True))
    return answer",https://github.com/bm4706/Algorithm_practice/commit/a0567ab4ba70a9228a8793eba25ea7997c264c22,2023. 8. 31,24,1
2023. 8. 31 오전 9:44:26,김호연,Unity,21 - 수박수박수박수박수박수?,"using System;

public class Solution {
    public string solution(int n) {
        string answer = """";
        //n만큼 반복하는, 한 번 더해질 때 수, 박 번갈아서 더해짐
        for(int i = 1; i <= n; i++)
        {
            answer += i % 2 != 0 ? ""수"" : ""박"";
        }
        return answer;
    }
}",,2023. 8. 31,21,1
2023. 8. 31 오전 9:44:28,김나운,Unity,16 - 음양 더하기,"using System;

public class Solution {
    public int solution(int[] absolutes, bool[] signs) {
        int answer = 0;
        
        for(int i = 0; i < absolutes.Length; i++){
            if(signs[i]){
                answer += absolutes[i];
            }else{
                answer -= absolutes[i];
            }
        }
        
        return answer;
    }
}",,2023. 8. 31,16,1
2023. 8. 31 오전 9:44:29,신우석,Unity,46 - 과일 장수,"using System;

public class Solution {
    public int solution(int k, int m, int[] score) {
        int[] costs = new int[k+1];
        
        foreach (int i in score) {
            ++costs[i];
        }
        
        int answer = 0;
        for (int i = k; i > 0; --i) {
            answer += costs[i] / m * m * i;
            costs[i - 1] += costs[i] % m;
        }
        return answer;
    }
}",https://github.com/seoksii/AlgorithmCodeKata/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/unrated/135808.%E2%80%85%EA%B3%BC%EC%9D%BC%E2%80%85%EC%9E%A5%EC%88%98,2023. 8. 31,46,2
2023. 8. 31 오전 9:44:47,최성원,Unity,5 - 나머지가 1이 되는 수 찾기,"public class Solution
{
    public int solution(int n)
    {
        for (int x = 2; x < n; x++) 
        {
            if (n % x == 1)
            {
                return x;
            }
        }
        return 0;  
    }
}

",,2023. 8. 31,5,1
2023. 8. 31 오전 9:44:49,김나운,Unity,17 - 핸드폰 번호 가리기,"public class Solution {
    public string solution(string phone_number) {
        char[] nums = phone_number.ToCharArray();
        
        for (int i = 0; i < nums.Length - 4; i++) {
            nums[i] = '*';
        }
        
        return new string(nums);
    }
}
",,2023. 8. 31,17,1
2023. 8. 31 오전 9:44:51,공혜진,AI,17 - 핸드폰 번호 가리기,"def solution(phone_number):
    answer = '*'*(len(phone_number)-4) + phone_number[-4:]
    return answer",,2023. 8. 31,17,1
2023. 8. 31 오전 9:44:52,김주형,Unity,17 - 핸드폰 번호 가리기,"public class Solution
{
    public string solution(string phone_number)
    {
        string last = phone_number.Substring(phone_number.Length - 4);
        string answer = new string('*',phone_number.Length - 4) + last;

        return answer;
    }
}",https://github.com/kjuhyung/Algorithm.git,2023. 8. 31,17,1
2023. 8. 31 오전 9:45:12,김나운,Unity,18 - 없는 숫자 더하기,"using System;
using System.Linq;

public class Solution {
    public int solution(int[] numbers) {
        int totalSum = 45;
        int numbersSum = numbers.Sum(); 
        
        return totalSum - numbersSum;
    }
}
",,2023. 8. 31,18,1
2023. 8. 31 오전 9:45:52,차요한,Unity,32 - 삼총사,"using System;

public class Solution {
    public int solution(int[] number) {
        int answer = 0;

        for(int i =0; i<number.Length ; i++)
        {
            for(int j =i+1; j<number.Length ; j++)
            {
                for(int k=j+1 ; k<number.Length; k++)
                {
                    if((number[i]+number[j]+number[k])==0){answer++;}
                }
            }
        }
        return answer;
    }
}",https://github.com/HOHOJO/Algorithm_test,2023. 8. 31,32,2
2023. 8. 31 오전 9:45:56,문현우,Unity,14 - 서울에서 김서방 찾기,"using System;
public class Solution {
    public string solution(string[] seoul) {
        int indexKim = Array.IndexOf(seoul, ""Kim"");
        string answer = $""김서방은 {indexKim}에 있다"";
        return answer;
    }
}",https://github.com/Munch310/Algorithm-Csharp/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12919.%E2%80%85%EC%84%9C%EC%9A%B8%EC%97%90%EC%84%9C%E2%80%85%EA%B9%80%EC%84%9C%EB%B0%A9%E2%80%85%EC%B0%BE%EA%B8%B0,2023. 8. 31,14,1
2023. 8. 31 오전 9:46:29,최장범,Unity,22 - 내적,"using System;

public class Solution {
    public int solution(int[] a, int[] b) 
    {        
        int answer = 0;
        
        //길이가 같은 두 배열 a와 b라서 반복문은 b.Length여도 됨
        for(int i=0; i<a.Length; i++)
        {
            answer += a[i] * b[i];
        }
        return answer;
    }
}",,2023. 8. 31,22,1
2023. 8. 31 오전 9:46:46,노재우,Unity,19 - 제일 작은 수 제거하기,"
public class Solution
{
    public int[] solution(int[] arr)
    {
        int[] answer;
        List<int> ints = new List<int>();
        int minIndex = 0;
        for (int i = 0; i < arr.Length; i++)
        {
            if (arr[minIndex] > arr[i])
            {
                minIndex = i;
            }
        }

        for (int i = 0; i < arr.Length; i++)
        {
            if (i == minIndex)
            {
                continue;
            }
            ints.Add(arr[i]);
        }

        if (ints.Count == 0)
        {
            answer = new int[] { -1 };
            return answer;
        }
        answer = ints.ToArray();
        return answer;
    }
}
",,2023. 8. 31,19,1
2023. 8. 31 오전 9:47:06,송유섭,Unity,7 - 자연수 뒤집어 배열로 만들기,"using System;
using System.Linq;

public class Solution 
{
    public int[] solution(long n) 
    {
        string str = n.ToString();
        int[] answer = new int[str.Length];
        
        for(int i = 0; i < str.Length; i++)
        {
            answer[i] = int.Parse(str[i].ToString());
        }
        Array.Reverse(answer);
        return answer;
    }
}",https://github.com/SongJinx3512/codeKata/blob/main/codeKata%20lv%201%20%237%20%EC%9E%90%EC%97%B0%EC%88%98%20%EB%92%A4%EC%A7%91%EC%96%B4%20%EB%B0%B0%EC%97%B4%EB%A1%9C%20%EB%A7%8C%EB%93%A4%EA%B8%B0,2023. 8. 31,7,1
2023. 8. 31 오전 9:47:40,강상찬,AI,38 - K번째수정렬,"def solution(array, commands):
    answer =[]
    for cm in commands:
        array_cut = array[cm[0]-1:cm[1]]
        answer.append(sorted(array_cut)[cm[2]-1])
    return answer",,2023. 8. 31,38,2
2023. 8. 31 오전 9:47:47,장성림,Unity,32 - 삼총사,"using System;

public class Solution {
    public int solution(int[] number) {
        int answer = 0;
        for(int i = 0; i < number.Length; i++){
            for(int j = 0; j < number.Length; j++){
                if (j == i)
                    continue;
                for(int k = 0; k < number.Length; k++){
                    if (k == i || k == j)
                        continue;
                    if (number[i] + number[j] + number[k] == 0)
                        answer++;
                }
            }
        }
        answer /= 6;
        return answer;
    }
}",https://github.com/hoobhoob,2023. 8. 31,32,2
2023. 8. 31 오전 9:48:18,김종훈,Unity,21 - 수박수박수박수박수박수?,"public class Solution {
    public string solution(int n) {
        string answer = """";
        
        for(int i=1; i<=n; i++)
        {
            if(i%2==0)
            {
                answer += ""박"";
            }
            else
            {
                answer += ""수"";
            }
        }
        return answer;
    }
}",,2023. 8. 31,21,1
2023. 8. 31 오전 9:48:22,공혜진,AI,18 - 없는 숫자 더하기,"def solution(numbers):
    answer = 0
    a = []
    for i in range(1,10):
        if not i in numbers:
            a.append(i)
    answer = sum(a)
    return answer",,2023. 8. 31,18,1
2023. 8. 31 오전 9:48:27,이기호,AI,13 - 콜라츠 추측,"def solution(num):
    count = 0

    if num == 1:
        return(0)
    else:
        while num != 1:
            if num % 2 == 0:
                num = num/2
                count += 1

            else:
                num = num*3+1
                count += 1
    if count < 500:
        return(count)
    else:
        return(-1)",,2023. 8. 31,13,1
2023. 8. 31 오전 9:49:13,김종훈,Unity,22 - 내적,"using System;

public class Solution {
    public int solution(int[] a, int[] b) {
        int answer = 0;
        
        for(int i=0; i<a.Length; i++)
        {
            answer += a[i] * b[i];
        }
        return answer;
    }
}",,2023. 8. 31,22,1
2023. 8. 31 오전 9:49:25,강희건,Unity,5 - 나머지가 1이 되는 수 찾기,"namespace remainder
{
    public class Solution
    {
        public int solution(int n)
        {
            for(int x = 2; x <= n; x++)
            {
                if(n % x == 1)
                {
                    return x;
                }
            }
            return -1;
        }
    }
    class Program
    {
        static void Main(string[] args)
        {
            Solution solution = new Solution();

            int result = solution.solution(10);
            Console.WriteLine(result);
        }
    }
}",https://github.com/bo9us,2023. 8. 31,5,1
2023. 8. 31 오전 9:49:28,이소이,Unity,32 - 삼총사,"using System;

public class Solution {
    public int solution(int[] number) {
        int answer = 0;
        for (int i = 0; i < number.Length - 2; i++)
        {
            for (int j = i + 1; j < number.Length - 1; j++)
            {
                for (int k = j + 1; k < number.Length; k++)
                {
                    if (number[i] + number[j] + number[k] == 0)
                        answer++;
                }
            }
        }
        return answer;
    }
}",https://github.com/leesy015599/AlgorithmCodeKata/blob/master/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/131705.%E2%80%85%EC%82%BC%EC%B4%9D%EC%82%AC/%EC%82%BC%EC%B4%9D%EC%82%AC.cs,2023. 8. 31,32,2
2023. 8. 31 오전 9:49:51,최수용,Unity,32 - 삼총사,"using System;

public class Solution {
    public int solution(int[] number) 
    {
        int answer = 0;
        for(int x=0; x < number.Length-2; x++)
        {
            for(int y=x; y < number.Length-1; y++)
            {
                for(int z=y; z < number.Length; z++)
                {
                    if(x==y) continue;
                    if(y==z) continue;
                    if(z==x) continue;

                    int sum = number[x]+number[y]+number[z];
                    if(sum==0) answer += 1;
                }
            }
        }
        return answer;
    }
}",,2023. 8. 31,32,2
2023. 8. 31 오전 9:50:10,정재훈,Unity,15 - 나누어 떨어지는 숫자,"using System.Collections.Generic;

public class Solution {

    public int[] solution(int[] arr, int divisor) {
    
    	
        List<int> result = new List<int>();
        
        
        for(int i=0; i<arr.Length; i++)
        {
        	
            if(arr[i]%divisor == 0)
            {
            	
                result.Add(arr[i]);
            }
        }
        
       
        if (result.Count == 0)
            return new int[] { -1 };
            
       
        result.Sort();
        
      
        return result.ToArray();
    }
}",https://github.com/toadsam/Algorithm,2023. 8. 31,15,1
2023. 8. 31 오전 9:50:16,김종훈,Unity,23 - 약수의 개수와 덧셈,"public class Solution {
    public int solution(int left, int right) {
        int answer = 0;
        
        for(int i=left; i<=right; i++)
        {
            int count=0;
            for(int j=1; j<=i; j++)
            {
                if(i%j==0) count++;
            }
            if(count%2==0) answer += i;
            else answer -= i;
        }
        return answer;
    }
}",,2023. 8. 31,23,1
2023. 8. 31 오전 9:50:50,이선재,Unity,44 - 2016년,"#include <string>
#include <vector>

using namespace std;

string solution(int a, int b) {
    int sum = 0;
    
    int month[12] = {31,29,31,30,31,30,31,31,30,31,30,31};
    string day[7] = {""THU"",""FRI"",""SAT"",""SUN"",""MON"",""TUE"",""WED""};
    
    for(int i = 0; i < a-1; i++){
        sum += month[i];
    }
    
    return day[(sum+b) % 7];
}",https://github.com/Lyrwhitt/Algorithm/blob/main/Programmers/LEVEL1/2016%EB%85%84,2023. 8. 31,44,2
2023. 8. 31 오전 9:50:50,김종훈,Unity,24 - 문자열 내림차순으로 배치하기,"public class Solution {
    public string solution(string s) {
        char[] temp = s.ToCharArray();
        System.Array.Sort(temp);
        System.Array.Reverse(temp);

        return new string(temp);
    }
}",,2023. 8. 31,24,1
2023. 8. 31 오전 9:51:19,김종훈,Unity,25 - 부족한 금액 계산하기,"using System;

class Solution
{
    public long solution(int price, int money, int count)
    {
        long result = price * ((long)count * (1 + count) / 2);
        
        if(result <= money) {
            return 0;
        }
        else 
        {
            return result - (long)money;    
        }
    }
}",,2023. 8. 31,25,1
2023. 8. 31 오전 9:51:38,이장원,Unity,6 - x만큼 간격이 있는 n개의 숫자," public long[] solotion(int x, int n)
    {
        long[] answer = new long[n];

        for(int i = 0;i < n; i++)
        {
            if (i != 0) 
                answer[i] += answer[i - 1] + x;

            else
                answer[i] = x;
        }
        return answer;
    }",,2023. 8. 31,6,1
2023. 8. 31 오전 9:51:42,양수홍,AI,46 - 과일 장수,"def solution(k, m, score):
    answer = 0
    score.sort()
    while len(score)>=m:
        answer+=min(score[len(score)-m:])*m
        for i in range(m):
            score.pop()
    return answer",,2023. 8. 31,46,2
2023. 8. 31 오전 9:51:43,김강현,Unity,12 - 두 정수 사이의 합,"#include <stdio.h>
#include <stdbool.h>
#include <stdlib.h>

long long solution(int a, int b) 
{
    long long sum = 0;
    int gab = a-b;
        if(a==b)
    {
        sum = a;
    }
    
        if(gab>0) // a가 더 클때
        {
            sum = a+b;
            while(gab != 1)
            {   
                b++;
                sum += b;
                gab--;
            }
        }
        if(gab<0) // b가 더 클때
        {
            sum = a+b;
            while(gab != -1)
            {
                  a++;
                sum += a;
                gab++;
            }
        }
  
    long long answer = (long long)sum;
    return answer;
}",,2023. 8. 31,12,1
2023. 8. 31 오전 9:52:02,이홍준,Unity,29 - 최대공약수와 최소공배수,"using System;

public class Solution {
    public int[] solution(int n, int m) {
        int[] answer = new int[2];
        int temp = 0;
        int min = 0;
        int max = 0;
        if (n > m)
        {
            temp = n;
            n = m;
            m = temp;
        }
        else {}

        min = cal(n, m);
        max = (n * m) / cal(n, m);
        
        answer[0] = min;
        answer[1] = max;
        return answer;
    }
    
    public int cal (int a, int b)
    {
        if (b % a == 0)
        {
            return a;
        }
        else
        {
            return cal(b % a, a);
        }
    }
}",https://github.com/dlghdwns97/Study/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12940.%E2%80%85%EC%B5%9C%EB%8C%80%EA%B3%B5%EC%95%BD%EC%88%98%EC%99%80%E2%80%85%EC%B5%9C%EC%86%8C%EA%B3%B5%EB%B0%B0%EC%88%98,2023. 8. 31,29,1
2023. 8. 31 오전 9:52:06,박준규,Unity,18 - 없는 숫자 더하기,"using System;

public class Solution 
{
    public int solution(int[] numbers) 
    {
        int answer = 0;
        for(int j = 0; j < numbers.Length;j++)
        {        
            for(int i = 0; i < 10; i++)
            {
                if(numbers[j]==i){
                    answer += i;
                }
            }
        }
        answer = 45 - answer;
        return answer;
    }
}",,2023. 8. 31,18,1
2023. 8. 31 오전 9:52:16,이경현,Unity,26 - 문자열 다루기 기본,"public static bool solution(string s)
{
    int tmp;

    if (s.Length ==4 || s.Length == 6) {
        return int.TryParse(s, out tmp);
    }

    return false;
}",https://github.com/516lkh/Algorithm,2023. 8. 31,26,1
2023. 8. 31 오전 9:52:25,이선재,Unity,45 - 카드 뭉치,"#include <string>
#include <vector>
#include <algorithm>

using namespace std;

string solution(vector<string> cards1, vector<string> cards2, vector<string> goal) {
    string answer = """";
    
    // 끝에 더미가 있을경우 대비
    reverse(cards1.begin(), cards1.end());
    reverse(cards2.begin(), cards2.end());
    reverse(goal.begin(), goal.end());
    
    while(goal.size() != 0)
    {
        if((goal.back() != cards1.back()) && (goal.back() != cards2.back()))
        {
            break;
        }
        
        if(goal.back() == cards1.back())
        {
            goal.pop_back();
            cards1.pop_back();
        }
        else if(goal.back() == cards2.back())
        {
            goal.pop_back();
            cards2.pop_back();
        }
    }
    
    if(goal.size() != 0)
        answer = ""No"";
    else
        answer = ""Yes"";
    
    return answer;
}",https://github.com/Lyrwhitt/Algorithm/blob/main/Programmers/LEVEL1/%EC%B9%B4%EB%93%9C%20%EB%AD%89%EC%B9%98,2023. 8. 31,45,2
2023. 8. 31 오전 9:52:34,김종훈,Unity,26 - 문자열 다루기 기본,"public class Solution {
    public bool solution(string s) {
        bool answer = false;

            if (s.Length == 4 || s.Length == 6)
            {	
                answer = int.TryParse(s, out int temp);
            }

            return answer;
    }
}",,2023. 8. 31,26,1
2023. 8. 31 오전 9:52:41,신해준,Unity,12 - 두 정수 사이의 합,"public class Solution {
    public long solution(int a, int b) {
        long answer = 0;
        
        if (a < b) {
            for (int i = a; i <= b; i++) {
                answer += i;
            }
        } else if (b < a) {
            for (int i = b; i <= a; i++) {
                answer += i;
            }
        } else {
            answer = a;
        }
        
        return answer;
    }
}
",,2023. 8. 31,12,1
2023. 8. 31 오전 9:53:07,김하늘,Unity,23 - 약수의 개수와 덧셈,"using System;

public class Solution 
{
    public int solution(int left, int right) 
    {
        int answer = 0;
        for (int i = left; i <= right; i++)
        {
            int divisor = 0;

            for (int j = 1; j <= i; j++)
            {
                if (i % j == 0)
                {
                    divisor++;
                }
            }
            if (divisor % 2 == 0) answer += i;
            else answer -= i;
        }
        return answer;
    }
}",,2023. 8. 31,23,1
2023. 8. 31 오전 9:53:15,김예준,Unity,35 - 시저 암호,"#include <string>

using namespace std;

string solution(string s, int n) {
    string answer = """";
    
    for (int i = 0; i < s.size(); i++)
    {
        if (s[i] >= 'A' && s[i] <= 'Z')
        {
            s[i] + n > 'Z' ? s[i] += n - 'Z' + 'A' - 1 : s[i] += n;
        }
        else if (s[i] >= 'a' && s[i] <= 'z')
        {
            s[i] + n > 'z' ? s[i] += n - 'z' + 'a' - 1 : s[i] += n;
        }
    }
    
    answer = s;
    
    return answer;
}",,2023. 8. 31,35,2
2023. 8. 31 오전 9:53:19,김종훈,Unity,27 - 행렬의 덧셈,"public class Solution {
    public int[,] solution(int[,] arr1, int[,] arr2) {
         int[,] answer = new int[arr1.GetLength(0),arr1.GetLength(1)];
        
        for(int i=0; i<arr1.GetLength(0); i++)
        {
            for(int j=0; j<arr1.GetLength(1); j++)
            {
                answer[i,j] = arr1[i,j] + arr2[i,j];
            }
        }
        
        return answer;
    }
}",,2023. 8. 31,27,1
2023. 8. 31 오전 9:53:39,한병권,Unity,46 - 과일 장수,"using System;
using System.Linq;
using System.Collections.Generic;

public class Solution {
    public int solution(int k, int m, int[] score) {
        int answer = 0;
        List<int> list = score.ToList();
        list = list.OrderByDescending(i => i).ToList();
        
        for(int i = 0; i < list.Count; i++)
        {
            if(i + m - 1 < list.Count)
            {
                answer += list[ i + m -1] * m;
                i = i + m - 1;
            }
        }
        
        return answer;
    }
}",https://github.com/hbg9212/AlgorithmCodekata,2023. 8. 31,46,2
2023. 8. 31 오전 9:53:41,박민혁,Unity,28 - 직사각형 별찍기,"using System;

public class Example
{
    public static void Main()
    {
        String[] s;

        Console.Clear();
        s = Console.ReadLine().Split(' ');

        int a = Int32.Parse(s[0]);
        int b = Int32.Parse(s[1]);
        for(int i=0; i<b;++i)
        {
            for(int j=0; j<a;++j)
            {
                Console.Write(""*"");
            }
            Console.WriteLine();
        }

        //Console.WriteLine(""{0}"", a + b);
    }
}",,2023. 8. 31,28,1
2023. 8. 31 오전 9:54:02,박도현,Unity,9 - 정수 제곱근 판별,"using System;
public class Solution {
    public long solution(long n) {
        long answer = 0;
        double i = Math.Sqrt(n);
        if(i > 2)
        {answer = (long)((i+1)*(i+1));}
        else{answer = -1;}
        return answer;
    }
}
",,2023. 8. 31,9,1
2023. 8. 31 오전 9:54:02,김종훈,Unity,28 - 직사각형 별찍기,"using System;

public class Example
{
    public static void Main()
    {
        String[] s;

            Console.Clear();
            s = Console.ReadLine().Split(' ');

            int a = Int32.Parse(s[0]);
            int b = Int32.Parse(s[1]);

            for (int i = 0; i < b; i++)
            {
                for (int j = 0; j < a; j++)
                {
                    Console.Write(""*"");
                }
                Console.Write(""\n"");
            }
    }
}",,2023. 8. 31,28,1
2023. 8. 31 오전 9:54:48,김종훈,Unity,29 - 최대공약수와 최소공배수,"public class Solution {
    public int[] solution(int n, int m) {
            int min = 0;
            int max = 0;

            if (n >= m)
            {
                max = n;
                min = m;
            }
            else
            {
                max = m;
                min = n;
            }

            int num = 0;

            while (true)
            {
                num = max % min;
                max = min;

                if (num == 0)
                    break;

                min = num;
            }

            int[] answer = new int[] { min, n * m / min };

            return answer;           
       
    }
}",,2023. 8. 31,29,1
2023. 8. 31 오전 9:54:53,박지원,Unity,18 - 없는 숫자 더하기,"using System;

public class Solution {
    public int solution(int[] numbers) {
        int answer = 0;
        bool find = false;
        for(int i = 0; i < 10; i++){
            find = false;
            foreach(int num in numbers){
                if(num == i){
                    find = true;
                    break;
                }
            }
            if(find == false) answer += i;
        }
        return answer;
    }
}",https://github.com/jwonp9127/AlgorithmStudy/tree/7373199f271bd4a9d96f15d1908f6a7f0859d94a/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/86051.%E2%80%85%EC%97%86%EB%8A%94%E2%80%85%EC%88%AB%EC%9E%90%E2%80%85%EB%8D%94%ED%95%98%EA%B8%B0,2023. 8. 31,18,1
2023. 8. 31 오전 9:55:16,이기호,AI,14 - 서울에서 김서방 찾기,"def solution(seoul):
    answer = f'김서방은 {seoul.index(""Kim"")}에 있다'
    return answer",,2023. 8. 31,14,1
2023. 8. 31 오전 9:55:25, 강성호,Unity,42 - 콜라 문제,"using System;
using System.Collections.Generic;
using System.Linq;

public class Solution {
    public int solution(int a, int b, int n) {
    int answer = 0;
			int rest = 0;
			while (n >= a)
			{ 
				rest = n % a;
				n = n / a;
				answer += n * b;
				n = n * b + rest;
			}
			
            return answer;
    }
}",,2023. 8. 31,42,2
2023. 8. 31 오전 9:55:30,김종훈,Unity,30 - 3진법 뒤집기,"using System;
using System.Collections.Generic;

public class Solution {
    public int solution(int n) {
        int answer = 0;
        List<int> list = new List<int>();
        
        while(true)
        {
            if(n==0) break;
            int d = n%3;
            list.Add(d);
            n = n/3;
        }
        list.Reverse();
        
        for(int i = 0; i<list.Count; i++)
        {
            answer += (int)(list[i] * Math.Pow(3,i));
        }
        return answer;
    }
}",,2023. 8. 31,30,1
2023. 8. 31 오전 9:55:38,이정환,Unity,28 - 직사각형 별찍기,"using System;

public class Example
{
    public static void Main()
    {
            String[] s;

            Console.Clear();
            s = Console.ReadLine().Split(' ');

            int a = Int32.Parse(s[0]);
            int b = Int32.Parse(s[1]);
            string a1 = """";
            string b1 = a1.PadLeft(a, '*');

            for(int i=0; i<b; i++) {
                Console.WriteLine(""{0}"", b1);
            }
    }
}
",,2023. 8. 31,28,1
2023. 8. 31 오전 9:55:42,김명식,Unity,17 - 핸드폰 번호 가리기,"using System;
public class Solution {
    public string solution(string phone_number) {
            string answer = """";

            int leng = phone_number.Length;
            string str2 = phone_number.Substring(leng - 4, 4);
            string str1 = """";
            for (int i = 0; i < leng - 4; i++)
            {
                str1 += ""*"";
            }
            
            answer = str1 + str2;
            return answer;
        }
}",https://github.com/D0ryeon/Algorithm-Code-Kata,2023. 8. 31,17,1
2023. 8. 31 오전 9:55:54,윤지석,Unity,15 - 나누어 떨어지는 숫자,"using System.Collections.Generic;
using System.Linq;
public class Solution {
    public int[] solution(int[] arr, int divisor) {
        List<int> answerList = new List<int>();
        for (int i = 0; i < arr.Length; i++)
        {
            if (arr[i] % divisor == 0)
            {
                if (!answerList.Contains(arr[i]))
                    answerList.Add(arr[i]);
            }
        }
        int[] answer;
        if (answerList.Count == 0)
        {
            answer = new int [] {-1};
            return answer;            
        }
        answerList = answerList.OrderBy(item => item).ToList();
        answer = answerList.ToArray();
        return answer;
    }
}",https://github.com/noyyo/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12910.%E2%80%85%EB%82%98%EB%88%84%EC%96%B4%E2%80%85%EB%96%A8%EC%96%B4%EC%A7%80%EB%8A%94%E2%80%85%EC%88%AB%EC%9E%90%E2%80%85%EB%B0%B0%EC%97%B4,2023. 8. 31,15,1
2023. 8. 31 오전 9:55:57,박희원,Unity,24 - 문자열 내림차순으로 배치하기,"using System;

public class Solution
        {
             public string solution(string s)
            {
                string answer= """";
                char[] chars = s.ToCharArray();
                Array.Sort(chars);
                Array.Reverse(chars);
                answer = new string(chars);

                return answer;
            }
        }
",,2023. 8. 31,24,1
2023. 8. 31 오전 9:56:01,노재우,Unity,20 - 가운데 글자 가져오기,"public class Solution
{
    public string solution(string s)
    {
        int num = s.Length / 2;
        int changeNum = 1;
        string answer = """";
        if (s.Length % 2 == 0)
        {
            changeNum = 2;
            num--;
        }
        for (int i = 0; i < changeNum; i++)
        {
            answer += s[num + i];
        }
        return answer;
    }
}",,2023. 8. 31,20,1
2023. 8. 31 오전 9:56:11,김종훈,Unity,31 - 이상한 문자 만들기,"public class Solution {
    public string solution(string s) {
        string answer = """";
            
            string[] temp = s.Split();
            
            for (int i = 0; i < temp.Length; i++)
            {
    
                for (int j = 0; j < temp[i].Length; j++)
                {
                    if (j == 0)
                    {
                        answer += System.Char.ToUpper(temp[i][j]);
                        continue;
                    }
                    if (j % 2 == 0)
                    {
                        answer += System.Char.ToUpper(temp[i][j]);
                    }
                    else
                    {
                        answer += System.Char.ToLower(temp[i][j]);
                    }
                }
                if (i != temp.Length-1)
                {
                    answer += "" "";
                }
            }
            
            return answer;
    }
}",,2023. 8. 31,31,2
2023. 8. 31 오전 9:56:21,박희원,Unity,25 - 부족한 금액 계산하기,"using System;

class Solution
{
    public long solution(int price, int money, int count)
            {
                long result = 0; 
                for (int i = 1; i <=count; i++)
                {
                    result += price * i;
                }
                if (result <= money)
                    return 0; 
                else
                    return result -= money;

            }
}",,2023. 8. 31,25,1
2023. 8. 31 오전 9:56:33,심우진,Unity,9 - 정수 제곱근 판별,"    using System;

public class Solution
    {
        public long solution(long n)
        {
            // 제곱근을 구한다.
            double sqrtN = Math.Sqrt(n);

            // 제곱근이 정수라면
            if (sqrtN == (long)sqrtN)
            {
                long nextInt = (long)sqrtN + 1;
                return nextInt * nextInt;
            }

            return -1;
        }

    }",https://github.com/agasa0624/at,2023. 8. 31,9,1
2023. 8. 31 오전 9:56:43,박희원,Unity,26 - 문자열 다루기 기본,"public class Solution {
      public bool solution(string s)
            {
                bool answer = false;
                if (s.Length == 4 || s.Length == 6)
                {
                    return answer = int.TryParse(s, out int num);
                }
                else
                    return answer;
            }
}",,2023. 8. 31,26,1
2023. 8. 31 오전 9:56:51,조호진,AI,25 - 부족한 금액 계산하기,"def solution(price, money, count):
    answer = 0
    for i in range(1,count+1):
        answer += price * i
    if money - answer >=0:
        return 0
    else:
        a = answer - money
        return a

    ",https://github.com/bm4706/Algorithm_practice/commit/567973c9c0831eb331b7428744d69750bd649a99,2023. 8. 31,25,1
2023. 8. 31 오전 9:56:57,심우진,Unity,10 - 정수 내림차순으로 배치하기,"    //정수 내림차순으로 배치하기
    using System;
using System.Linq;

public class Solution
    {
        public long solution(long n)
        {
            // 숫자를 문자열로 변환 후, 내림차순 정렬
            string sortedStr = new string(n.ToString().OrderByDescending(c => c).ToArray());

            // 문자열을 다시 숫자로 변환
            return long.Parse(sortedStr);
        }
    }
",https://github.com/agasa0624/at,2023. 8. 31,10,1
2023. 8. 31 오전 9:57:00,박희원,Unity,27 - 행렬의 덧셈,"public class Solution {
    public int[,] solution(int[,] arr1, int[,] arr2)
            {
                int[,] answer = new int[arr1.GetLength(0),arr1.GetLength(1)];

                for (int i = 0; i < arr1.GetLength(0); i++)
                {
                    for (int j = 0; j < arr1.GetLength(1); j++)
                    {
                        answer[i, j] = arr1[i, j] + arr2[i, j];
                    }
                }

                return answer;
            }
}",,2023. 8. 31,27,1
2023. 8. 31 오전 9:57:02,양수홍,AI,47 - 모의고사완전탐색,"def solution(answers):
    answer = []

    cnt_one = 0 
    cnt_two = 0 
    cnt_three = 0
    
    one = [1, 2, 3, 4, 5]
    two = [2, 1, 2, 3, 2, 4, 2, 5]
    three = [3, 3, 1, 1, 2, 2, 4, 4, 5, 5]
    

    for i, ans in enumerate(answers):
        if ans==one[i%5]:
            cnt_one+=1
        if ans==two[i%8]:
            cnt_two+=1
        if ans==three[i%10]:
            cnt_three+=1
    
    # rank라는 딕셔너리를 cnt 변수로 구성  
    rank = {
        1:cnt_one,
        2:cnt_two,
        3:cnt_three
    } # 딕셔너리로 사용할 rank를 선언합니다.
    
    all_rank_values = rank.values() 
    max_rank_values = max(all_rank_values) 
    
    for i in range(1, len(rank)+1): 
        if rank[i] == max_rank_values:
            answer.append(i) 

    return answer",,2023. 8. 31,47,2
2023. 8. 31 오전 9:57:07,최지연,AI,20 - 가운데 글자 가져오기,"def solution(s):
    list(s)
    answer = []
    if len(s) % 2 != 0:
        count = (len(s)-1)/2
        answer.append(s[int(count)])
    else:
        count = (len(s))/2
        answer.append(s[int(count)-1])
        answer.append(s[int(count)])
    answer = ''.join(answer)
    return answer",https://github.com/jiyeonCoder/algorithmPractice/blob/main/20.%20%EA%B0%80%EC%9A%B4%EB%8D%B0%20%EA%B8%80%EC%9E%90%20%EA%B0%80%EC%A0%B8%EC%98%A4%EA%B8%B0.py,2023. 8. 31,20,1
2023. 8. 31 오전 9:57:20,박희원,Unity,28 - 직사각형 별찍기,"using System;

public class Example
{
    public static void Main()
        {
            String[] s;

            Console.Clear();
            s = Console.ReadLine().Split(' ');

            int a = Int32.Parse(s[0]);
            int b = Int32.Parse(s[1]);

            for(int i = 0; i<b; i++)
            {
                for(int j = 0; j<a; j++)
                {
                    Console.Write(""*""); 
                }
                Console.WriteLine();
            }
        }
}",,2023. 8. 31,28,1
2023. 8. 31 오전 9:57:45,박희원,Unity,29 - 최대공약수와 최소공배수,"public class Solution {
        public int[] solution(int n, int m)
        {
            int[] answer = new int[2];
            int min;
            int max;

            min = gcd(n, m);
            max = (n * m) / min;

            answer[0] = min;
            answer[1] = max;
            return answer;
        }
        public int gcd(int n, int m)
        {
            if (m == 0) return n;
            else return gcd(m, n % m);
        }
}",,2023. 8. 31,29,1
2023. 8. 31 오전 9:57:47,김연우,Unity,5 - 나머지가 1이 되는 수 찾기,"#include <stdio.h>

int solution(int n) {
    for (int x = 2; x <= n; ++x) {
        if ((n - 1) % x == 0) {
            return x;
        }
    }
    return n - 1;
}

int main() {
    printf(""%d\n"", solution(10));  
    printf(""%d\n"", solution(12));  
    return 0;
}",,2023. 8. 31,5,1
2023. 8. 31 오전 9:57:50,차요한,Unity,33 - 크기가 작은 부분,"using System;

public class Solution {
    public int solution(string t, string p) {
        int answer = 0;
        string str = """";
        long num = 0;
        
        for(int i = 0; i < t.Length - p.Length + 1; i++)
        {
            num = long.Parse(t.Substring(i, p.Length));
            if(num <= long.Parse(p))
            {
                answer++;
            }
            
        }
        return answer;
    }
}",https://github.com/HOHOJO/Algorithm_test,2023. 8. 31,33,2
2023. 8. 31 오전 9:57:52,김호연,Unity,22 - 내적,"using System;

public class Solution {
    public int solution(int[] a, int[] b) {
        int answer = 0;
        
        for(int i = 0; i < a.Length; i++)
        {
            answer += a[i]* b[i];
        }
        
        return answer;
    }
}",,2023. 8. 31,22,1
2023. 8. 31 오전 9:58:03,신우석,Unity,47 - 모의고사완전탐색,"using System;
using System.Collections.Generic;

public class Solution {
    public int[] solution(int[] answers) {
        int[] supo1 = new int[] {1, 2, 3, 4, 5};
        int[] supo2 = new int[] {2, 1, 2, 3, 2, 4, 2, 5};
        int[] supo3 = new int[] {3, 3, 1, 1, 2, 2, 4, 4, 5, 5};
        
        int cnt1 = 0, cnt2 = 0, cnt3 = 0;
        
        for (int i = 0; i < answers.Length; ++i) {
            if (answers[i] == supo1[i % supo1.Length]) ++cnt1;
            if (answers[i] == supo2[i % supo2.Length]) ++cnt2;
            if (answers[i] == supo3[i % supo3.Length]) ++cnt3;
        }
        
        if (cnt1 > cnt2 && cnt1 > cnt3) return new int[1] {1};
        else if (cnt2 > cnt1 && cnt2 > cnt3) return new int[1] {2};
        else if (cnt3 > cnt1 && cnt3 > cnt2) return new int[1] {3};
        else if (cnt1 == cnt2 && cnt1 > cnt3) return new int[2] {1,2};
        else if (cnt1 > cnt2 && cnt1 == cnt3) return new int[2] {1,3};
        else if (cnt1 < cnt2 && cnt2 == cnt3) return new int[2] {2,3};
        
        return new int[3] {1,2,3};
    }
}",https://github.com/seoksii/AlgorithmCodeKata/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/42840.%E2%80%85%EB%AA%A8%EC%9D%98%EA%B3%A0%EC%82%AC,2023. 8. 31,47,2
2023. 8. 31 오전 9:58:05,이경현,Unity,27 - 행렬의 덧셈,"public int[,] solution(int[,] arr1, int[,] arr2)
{
    int[,] answer = new int[arr1.GetLength(0),arr1.GetLength(1)];
    
    for(int i = 0; i < arr2.GetLength(0); i++)
    {
        for(int j=0; j < arr2.GetLength(1); j++)
        {
            answer[i, j] = arr1[i, j] + arr2[i, j];
        }
    }

    return answer;
}",https://github.com/516lkh/Algorithm,2023. 8. 31,27,1
2023. 8. 31 오전 9:58:10,장성림,Unity,33 - 크기가 작은 부분,"using System;

public class Solution {
    public int solution(string t, string p) {
        int answer = 0;
        int tLength = t.Length;
        int pLength = p.Length;
        for (int i = 0; i <= tLength - pLength; i++){
            long intT = long.Parse(t.Substring(i, pLength));
            long intP = long.Parse(p);
            if (intT <= intP)
                answer++;
        }
        return answer;
    }
}",https://github.com/hoobhoob,2023. 8. 31,33,2
2023. 8. 31 오전 9:58:52,김민석,Unity,11 - 하샤드 수,"using System;

public class Solution {
    public bool solution(int x) 
    {
        string temp = x.ToString();

        int sum = 0;
        for (int i = 0; i < temp.Length; i++)
        {
            sum += (int)Char.GetNumericValue(temp[i]);
        }
        bool answer = x % sum==0 ? true:false;
        return answer;
    }
}",https://github.com/ms0753/codekata/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12947.%E2%80%85%ED%95%98%EC%83%A4%EB%93%9C%E2%80%85%EC%88%98/%ED%95%98%EC%83%A4%EB%93%9C%E2%80%85%EC%88%98.cs,2023. 8. 31,11,1
2023. 8. 31 오전 9:59:08,윤지석,Unity,16 - 음양 더하기,"using System;

public class Solution {
    public int solution(int[] absolutes, bool[] signs) {
        int sum = 0;
        int num = 0;
        for (int i = 0; i < absolutes.Length; i++)
        {
            num = signs[i]? absolutes[i] : -absolutes[i];
            sum += num;
        }
        
        return sum;
    }
}",https://github.com/noyyo/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/76501.%E2%80%85%EC%9D%8C%EC%96%91%E2%80%85%EB%8D%94%ED%95%98%EA%B8%B0,2023. 8. 31,16,1
2023. 8. 31 오전 9:59:23,진우성,Unity,5 - 나머지가 1이 되는 수 찾기,"using System;

public class Solution {
    public int solution(int n) {
        int answer = 1;
        for(int i = 1; i <= n; i++)
        {
            if(n % i == 1)
            {
                answer = i;
                break;
            }
        }
        return answer;
    }
}",,2023. 8. 31,5,1
2023. 8. 31 오전 9:59:41,김진규,Unity,34 - 최소직사각형,"using System;

public class Solution {
    public int solution(int[,] sizes) {
        int answer = 0;
        int width =0;
        int height =0;
        for (int i = 0; i < sizes.GetLength(0); i++) {
            int w = sizes[i, 0];
            int h = sizes[i, 1];

            if (w < h) {
                int temp = w;
                w = h;
                h = temp;
            }

            width = Math.Max(width, w);
            height = Math.Max(height, h);
        }
        answer = width *height;
        return answer;
    }
}",,2023. 8. 31,34,2
2023. 8. 31 오전 9:59:42,함영주,Unity,20 - 가운데 글자 가져오기,"public class Solution {
    public string solution(string s) {
        string answer = """";
        if (s.Length % 2 == 0)
        {
            answer = s.Substring((s.Length-1)/2,2);
        }
        else 
        {
            answer = s.Substring(s.Length/2,1);
        }
        return answer;
    }
}",,2023. 8. 31,20,1
2023. 8. 31 오전 10:00:01,박도현,Unity,10 - 정수 내림차순으로 배치하기,"using System;
public class Solution {
    public long solution(long n) {
        long answer = 0;
        string str = """"+n;
        int[] array = new int[] { };
        Array.Resize(ref array, str.Length);
        for(int i = 0; i < str.Length; i++)
        {
             array[i] = int.Parse(str.Substring(i, 1));
            
        }
        
        Array.Sort(array);
        str = """";
        
        for(int i = array.Length; i > 0; i--)
        {
            str += """"+array[i-1];
            
        }
        
        answer = int.Parse(str);
        
        return answer;
    }
}",,2023. 8. 31,10,1
2023. 8. 31 오전 10:00:01,함영주,Unity,13 - 콜라츠 추측,"public class Solution {
    public int solution(int num) {
        int answer = 0;
        long a = num;
        
        while(a != 1)
        {
            ++answer;
            
            if(a % 2 == 0)
            {
                a = a/2;
            }
            else 
            {
                a= (a*3)+1;
            }
            
            if(answer >= 500)
            {
                return -1;
            }
        }
        return answer;
    }
}",,2023. 8. 31,13,1
2023. 8. 31 오전 10:00:10,김정규,AI,19 - 제일 작은 수 제거하기,"def solution(arr):
    arr.pop(arr.index(min(arr)))
    if arr == []:
        return [-1]
    return arr",https://github.com/JungGyu00/algorithm,2023. 8. 31,19,1
2023. 8. 31 오전 10:00:49,우민규,Unity,17 - 핸드폰 번호 가리기,"public class Solution {
    public string solution(string phone_number) {
        string answer = """";
        
        
        
        
        for(int i=0;i<phone_number.Length;i++) // phone_number.Length만큼 반복
        {
                if (i < phone_number.Length-4) //phone_number의 뒷 4자리(끝에 들어감)
                {
                    answer += ""*"";
                }
                else // phone_number의 앞자리들
                {
                    //answer가 string 형이므로 숫자가 +char1, +char2 ...이런식으로 추가됨
                    answer += phone_number[i]; 
                }
        }
        return answer;
    }
}",https://github.com/Woomingyu/Programmers.git,2023. 8. 31,17,1
2023. 8. 31 오전 10:01:07,이형빈,Unity,12 - 두 정수 사이의 합,"public class Solution {
    public long solution(int a, int b) 
    {
        long answer = 0;
        if(a<b)
        {
            for(int i = a;i<=b; i++)
            {
                answer += i;
            }
        }
        else if(a>b)
        {
            for(int i = b; i<=a; i++)
            {
                answer +=i;  
            }
        }  
        else if(a==b)
        {            
            answer = a;
        }   
        
        return answer;
    }
}",,2023. 8. 31,12,1
2023. 8. 31 오전 10:01:09,조영오,Unity,32 - 삼총사,"using System;
using System.Collections.Generic;

public class Solution {
    public int solution(int[] number) {
        int answer = 0;
        
        //조합 리스트 체크를 위한 문자열
        string check = """";
        
        //현재 반복에서 선택된 학생 리스트
        List<int> selected = new List<int>();
        
        //지금까지 확인한 학생 조합 리스트
        List<string> combo = new List<string>();
        
        for(int i = 0 ; i < number.Length ; i ++){
            
            //j 가 이 전에 선택된 학생이 아니라면 진행
            for(int j = 0 ; j < number.Length ; j++ ){
                if(i != j){
                    //k 가 이 전에 선택된 학생이 아니라면
                    for(int k = 0 ; k < number.Length ; k++ ){
                        if(i != k && j != k){
                            selected.Add(i);
                            selected.Add(j);
                            selected.Add(k);
                            selected.Sort();
                            check = $""{selected[0]} {selected[1]} {selected[2]}"";
                            
                            selected.Clear();
                            Console.WriteLine(check);
                            //지금까지 확인한 조합이 아니라면 진행
                            if(!combo.Contains(check)){
                                combo.Add(check);
                                
                                //삼총사 조합이라면
                                if(number[i] + number[j] + number[k] == 0){
                                    answer++;
                                }
                            }
                        }
                    }
                }
            }
        }
        
        return answer;
    }
}",,2023. 8. 31,32,2
2023. 8. 31 오전 10:01:26,김종훈,Unity,32 - 삼총사,"using System;

public class Solution {
    public int solution(int[] number) {
        int answer = 0;
          
        for(int i = 0; i < number.Length; i++)
        {
            for(int j = i + 1; j < number.Length; j++)
            {
                for(int k = j + 1; k < number.Length; k++)
                {
                    if(number[i] + number[j] + number[k] == 0)
                    {
                        answer++;
                    }
                }
            }
        }
        return answer;
    }
}",,2023. 8. 31,32,2
2023. 8. 31 오전 10:02:01,공혜진,AI,19 - 제일 작은 수 제거하기,"def solution(arr):
    arr.remove(min(arr))
    if arr == []:
        return [-1]
    else :
        return arr",,2023. 8. 31,19,1
2023. 8. 31 오전 10:02:14,심명희,AI,19 - 제일 작은 수 제거하기,"def solution(arr):
    arr.remove(min(arr))
    
    if len(arr) == 0:
        arr.append(-1)       
    else:
        return arr
    
    return arr",,2023. 8. 31,19,1
2023. 8. 31 오전 10:02:37,김광수,Unity,62 - 달리기 경주,"using System;
using System.Collections.Generic;

public class Solution {
    public string[] solution(string[] players, string[] callings) {
        
        //플레이어 50000 명
        // 자리바꿈 횟수 1 000 000 번
        //최악의 경우 5만명중에서 한명을찾는 작업을 100만번 반복해야됨
        
        // -> 찾는횟수를 줄여야된다. 각선수의 순위를 따로 저장하자 players 는 중복되지 않으니까 Dictionary 사용
        // 앞의선수를 어캐찾지?
        
        
        Dictionary<string,int> playersDic = new Dictionary<string,int>();
        
        for(int i =0; i< players.Length; i++)
        {
            playersDic.Add(players[i], i);
        }
        
        // 선수가 추월할때마다
        // 선수의 순위를 +1해주고
        
        // 플레이어 dic에서 name선수의 순위를 올리고 가져온다.
        // 원래 해당 순위에 있는 선수 정보를 가져온다.
        
        // 두번째 선수의 등수를 내리고
        
        // players에서 두명의 선수의 위치를 조정해준다.
        
        foreach(string name in callings)
        {
            int index = --playersDic[name];
            
            string name2 = players[index];
            playersDic[name2]++;
            
            players[index] = name;
            players[index+1] = name2;
        }
        return players;
    }
}


/* Try 1 시간 초과 발생!!

 public string[] solution(string[] players, string[] callings) {
        
        //이름을 불렀다면 앞의 선수와 자리를 바꾼다?
        
        foreach(string name in callings)
        {
            int index = Array.IndexOf(players, name);
            players[index] = players[index-1];
            players[index-1] = name;
        }
        return players;
    }
*/",https://github.com/kksoo0131/Study/commit/199ea13e65d8e490eb62775edbc8b935cd3aaa74,2023. 8. 31,62,3
2023. 8. 31 오전 10:03:06,차명경,AI,12 - 두 정수 사이의 합,"def solution(a, b):  
    if a<b:        
        return sum(range(a,b+1))
    elif a==b:
        return a
    else:
        return sum(range(b,a+1))
    ",,2023. 8. 31,12,1
2023. 8. 31 오전 10:03:26,이경현,Unity,28 - 직사각형 별찍기,"using System;

public class Example
{
    public static void Main()
    {
        String[] s;

        Console.Clear();
        s = Console.ReadLine().Split(' ');

        int a = Int32.Parse(s[0]);
        int b = Int32.Parse(s[1]);
        for(int i = 0; i < b; i++){
            for(int j=0;j<a;j++){
                Console.Write(""*"");
            }
            Console.WriteLine();
        }
    }
}",https://github.com/516lkh/Algorithm,2023. 8. 31,28,1
2023. 8. 31 오전 10:03:33,송명근,Unity,14 - 서울에서 김서방 찾기,"using System;
public class Solution {
    public string solution(string[] seoul) {
        int num = Array.IndexOf(seoul, ""Kim"");
        string answer = $""김서방은 {num}에 있다"";
        return answer;
    }
}",https://github.com/audrms6494/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12919.%E2%80%85%EC%84%9C%EC%9A%B8%EC%97%90%EC%84%9C%E2%80%85%EA%B9%80%EC%84%9C%EB%B0%A9%E2%80%85%EC%B0%BE%EA%B8%B0,2023. 8. 31,14,1
2023. 8. 31 오전 10:03:52,조범준,Unity,31 - 이상한 문자 만들기,"using System;
public class Solution {
    public string solution(string s) {
        string answer = """";
        string[] str = s.Split();
        for(int i = 0; i < str.Length; i++){
            for(int j = 0; j<str[i].Length; j++){
                if(j%2==0){
                    answer += str[i].Substring(j,1).ToUpper();
                }else{
                    answer += str[i].Substring(j,1).ToLower();
                }
            }
            if(i < str.Length - 1)
            answer+="" "";
        }
        
        return answer;
    }
}",https://github.com/KimMaYa1/BaekJoonEx/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1,2023. 8. 31,31,2
2023. 8. 31 오전 10:04:21,송명근,Unity,15 - 나누어 떨어지는 숫자,"using System.Collections.Generic;
public class Solution {
    public int[] solution(int[] arr, int divisor) {
        List <int> temp = new List <int> ();
        foreach (int num in arr)
        {
            if (num % divisor == 0) 
            {
                temp.Add(num);
            }
        }
        if (temp.Count == 0)
        {
            return new int[] {-1};
        }
        temp.Sort();
        int[] answer = temp.ToArray();
        return answer;
    }
}",https://github.com/audrms6494/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12910.%E2%80%85%EB%82%98%EB%88%84%EC%96%B4%E2%80%85%EB%96%A8%EC%96%B4%EC%A7%80%EB%8A%94%E2%80%85%EC%88%AB%EC%9E%90%E2%80%85%EB%B0%B0%EC%97%B4,2023. 8. 31,15,1
2023. 8. 31 오전 10:04:23,심명희,AI,18 - 없는 숫자 더하기,"def solution(numbers):
    answer = 0
    for i in range(10):
        if i not in numbers:
            answer += i
    return answer",,2023. 8. 31,18,1
2023. 8. 31 오전 10:04:30,김형수,Unity,6 - x만큼 간격이 있는 n개의 숫자,"public class Solution {
    public long[] solution(int x, int n) {
        
        long[] answer = new long[n];

        for (int i = 0; i < n; i++)
        {
            //x[i] = x * (i + 1);
           answer[i] = (long)x * (i + 1);
        }

        return answer;
        
        
        //long[] answer = new long[] {};
        //return answer;
    }
}",https://github.com/Kim-H-S/Programmers,2023. 8. 31,6,1
2023. 8. 31 오전 10:04:33,양수홍,AI,48 - 소수 만들기,"from itertools import combinations
def solution(nums):
    answer=0
    numbers=[sum(comb) for comb in combinations(nums,3)]
    for number in numbers:
        cnt=0
        for i in range(1,number+1):
            if number%i==0:
                cnt+=1
        if cnt==2:
            answer+=1
    return answer",,2023. 8. 31,48,2
2023. 8. 31 오전 10:05:30,이홍준,Unity,30 - 3진법 뒤집기,"using System;
using System.Collections.Generic;

public class Solution {
    public int solution(int n) {
        int answer = 0;
        
        while(n > 0)
        {
            answer = answer * 3;
            answer += n % 3;
            n = n / 3;
        }
        
        return answer;
    }
}",https://github.com/dlghdwns97/Study/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/68935.%E2%80%853%EC%A7%84%EB%B2%95%E2%80%85%EB%92%A4%EC%A7%91%EA%B8%B0,2023. 8. 31,30,1
2023. 8. 31 오전 10:06:08,김정민,Unity,47 - 모의고사완전탐색,"public class Solution
        {
            public int[] solution(int[] answers)
            {
                int[] person1Ans = new int[] { 1, 2, 3, 4, 5 };
                int[] person2Ans = new int[] { 2, 1, 2, 3, 2, 4, 2, 5 };
                int[] person3Ans = new int[] { 3, 3, 1, 1, 2, 2, 4, 4, 5, 5 };

                int[] countAns = new int[3];

                for (int i = 0; i < answers.Length; i++)
                {
                    if (answers[i] == person1Ans[i % person1Ans.Length]) countAns[0]++;
                    if (answers[i] == person2Ans[i % person2Ans.Length]) countAns[1]++;
                    if (answers[i] == person3Ans[i % person3Ans.Length]) countAns[2]++;
                }
                
                List<int> answerList = new List<int>();

                for (int i = 0; i < countAns.Length; i++)
                {
                    if (countAns[i] == countAns.Max()) answerList.Add(i + 1);
                }

                int[] answer = answerList.ToArray();

                return answer;
            }
        }",https://github.com/j-miiin/Algorithm_Study/blob/main/SPARTA_ALGORITHM_2023/Level2/47_MockTest.cs,2023. 8. 31,47,2
2023. 8. 31 오전 10:06:34,이세진,Unity,19 - 제일 작은 수 제거하기,"public class Solution {
    public int[] solution(int[] arr) {
        int min = arr[0];
        
        for(int i = 0; i < arr.Length; i++)
        {
            if(arr[i] < min)
            {
                min = arr[i];
            }
        }
        for(int i = 0; i < arr.Length; i++)
        {
            if(arr[i] == min)
            {
                arr[i] = -1;
                break;
            }
        }
        int[] answer = new int[arr.Length - 1];
        
        if(arr.Length == 1){
             return arr;
        }
        else
        {
            int j = 0;
            for(int i = 0;i < arr.Length - 1;i++)
            {
                if(arr[i] != -1)
                {
                    answer[i] = arr[i + j];
                }
                else
                {
                    j++;
                    answer[i] = arr[i + j];
                }
            }
        }
        return answer;
    }
}",,2023. 8. 31,19,1
2023. 8. 31 오전 10:06:37,김정민,Unity,48 - 소수 만들기," class Solution
        {
            static int[] numArr;
            static bool[] visisted;
            static int result;
            public int solution(int[] nums)
            {
                numArr = nums;
                visisted = new bool[numArr.Length];
                result = 0;

                dfs(0, 0, 0);

                int answer = result;
                return answer;
            }

            static void dfs(int start, int depth, int sum)
            {
                if (depth == 3)
                {
                    if (isPrime(sum)) result++;
                    return;
                }

                for (int i = start; i < numArr.Length; i++)
                {
                    if (!visisted[i])
                    {
                        visisted[i] = true;
                        dfs(i + 1, depth + 1, sum + numArr[i]);
                        visisted[i] = false;
                    }
                }
            }

            static bool isPrime(int num)
            {
                if (num == 0 || num == 1) return false;
                if (num == 2) return true;
                for (int i = 2; i <= Math.Sqrt(num); i++)
                {
                    if (num % i == 0) return false;
                }
                return true;
            }
        }",https://github.com/j-miiin/Algorithm_Study/blob/main/SPARTA_ALGORITHM_2023/Level2/48_MakePrimeNum.cs,2023. 8. 31,48,2
2023. 8. 31 오전 10:07:07,김진성,Unity,14 - 서울에서 김서방 찾기,"using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Algorithm_006
{
    public class Solution
    {
        public string solution(string[] seoul)
        {
            string answer = """";
            for (int i = 0; i < seoul.Length; i++)
            {
                if (seoul[i] == ""Kim"")
                {
                    answer = $""김서방은 {i}에 있다"";
                }
            }
            return answer;
        }
    }
}",https://github.com/GYALLERHORN/ALGORITHM,2023. 8. 31,14,1
2023. 8. 31 오전 10:07:12,신우석,Unity,48 - 소수 만들기,"using System;

class Solution
{
    int[] Prime = new int[3000];
    
    bool isPrime(int num) {
        if (Prime[num] == 1 ) return true;
        else if (Prime[num] == -1) return false;
        
        for (int i = 2; i * i <= num; ++i)
            if (num % i == 0) {
                Prime[num] = -1;
                return false;
            }
        Prime[num] = 1;
        return true;
    }
    
    public int solution(int[] nums)
    {
        int answer = 0;
        for (int i = 0; i < nums.Length - 2; ++i)
            for (int j = i + 1; j < nums.Length - 1; ++j)
                for (int k = j + 1; k < nums.Length; ++k)
                    if (isPrime(nums[i] + nums[j] + nums[k])) ++answer;

        return answer;
    }
}",https://github.com/seoksii/AlgorithmCodeKata/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12977.%E2%80%85%EC%86%8C%EC%88%98%E2%80%85%EB%A7%8C%EB%93%A4%EA%B8%B0,2023. 8. 31,48,2
2023. 8. 31 오전 10:07:54,채이환,Unity,31 - 이상한 문자 만들기,"using System;
using System.Text;
public class Solution {
    public string solution(string s) {
        string[] words = s.Split("" "");
        StringBuilder sb = new StringBuilder();
        int diff = 'A' - 'a';
        foreach (string word in words)
        {
            for (int i = 0; i < word.Length; ++i)
            {
                if (i % 2 == 0)
                {
                    char temp = (char)(word[i] + (word[i] > 'Z' ? diff : 0));
                    sb.Append(temp);
                }
                else
                {
                    char temp = (char)(word[i] - (word[i] > 'Z' ? 0 : diff));
                    sb.Append(temp); 
                }
            }
            sb.Append("" "");
        }
        sb.Remove(sb.Length-1, 1);
        return sb.ToString();
    }
}",,2023. 8. 31,31,2
2023. 8. 31 오전 10:08:23,채이환,Unity,32 - 삼총사,"using System;
using System.Linq;
public class Solution {
    public int solution(int[] number) {
        int answer = 0;
        int[] num = new int[3];
        for (int i = 0; i < number.Length; ++i)
        {
            num[0] = number[i];
            for (int j = i + 1; j < number.Length; ++j)
            {
                num[1] = number[j];
                for (int k = j + 1; k < number.Length; ++k)
                {
                    num[2] = number[k];
                    if (num.Sum() == 0)
                        answer++;
                }
            }
        }
        return answer;
    }
}",,2023. 8. 31,32,2
2023. 8. 31 오전 10:08:38,조호진,AI,26 - 문자열 다루기 기본,"def solution(s):
    if len(s) == 4 or len(s) == 6:
        if s.isdigit():
            return True
        else:
            return False
    else:
        return False
",https://github.com/bm4706/Algorithm_practice/commit/40f96332a4f310a309b9e3244048fab7f51b8e18,2023. 8. 31,26,1
2023. 8. 31 오전 10:08:43,채이환,Unity,33 - 크기가 작은 부분,"using System;

public class Solution {
    public int solution(string t, string p) {
        int answer = 0;
        int limit = t.Length - p.Length + 1;
        for (int i = 0; i < limit; ++i)
        {
            var str = t.Substring(i, p.Length);
            if (Convert.ToInt64(str) <= Convert.ToInt64(p))
                ++answer;
        }
        return answer;
    }
}",,2023. 8. 31,33,2
2023. 8. 31 오전 10:08:43,윤지석,Unity,17 - 핸드폰 번호 가리기,"public class Solution {
    public string solution(string phone_number) {
        string answer = """";
        string backNumber = phone_number.Substring(phone_number.Length - 4, 4);
        for (int i = 0; i < phone_number.Length - 4;i++)
        {
            answer += ""*"";
        }
        answer += backNumber;
        return answer;
    }
}",https://github.com/noyyo/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12948.%E2%80%85%ED%95%B8%EB%93%9C%ED%8F%B0%E2%80%85%EB%B2%88%ED%98%B8%E2%80%85%EA%B0%80%EB%A6%AC%EA%B8%B0,2023. 8. 31,17,1
2023. 8. 31 오전 10:08:56,노동균,Unity,36 - 숫자 문자열과 영단어,"using System;
using System.Text;

public class Solution {
    public int solution(string s) 
    {
        int answer = 0;
        string tmpS = s.ToLower();
       
        for(int i=0;i<=9;++i)
        {
            string stringNum = GetStringNum(i);
            tmpS = tmpS.Replace(stringNum,i.ToString());
        }
                
        answer = int.Parse(tmpS);
        return answer;
    }
    
    public string GetStringNum(int x)
    {
        switch(x)
        {
            case 1:
                return ""one"";
                break;
            case 2:
                return ""two"";
                break;
            case 3:
                return ""three"";
                break;
            case 4:
                return ""four"";
                break;
            case 5:
                return ""five"";
                break;
            case 6:
                return ""six"";
                break;
            case 7:
                return ""seven"";
                break;
            case 8:
                return ""eight"";
                break;
            case 9:
                return ""nine"";
                break;
        }
        return ""zero"";
    }
}",https://github.com/shehdrbs123/Sparta/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/81301.%E2%80%85%EC%88%AB%EC%9E%90%E2%80%85%EB%AC%B8%EC%9E%90%EC%97%B4%EA%B3%BC%E2%80%85%EC%98%81%EB%8B%A8%EC%96%B4,2023. 8. 31,36,2
2023. 8. 31 오전 10:09:04,채이환,Unity,34 - 최소직사각형,"using System;

public class Solution {
    public int solution(int[,] sizes) {
        // 정렬
        for (int i = 0; i <= sizes.GetUpperBound(0); ++i)
        {
            if (sizes[i, 0] < sizes[i, 1])
            {
                var temp = sizes[i, 0];
                sizes[i, 0] = sizes[i, 1];
                sizes[i, 1] = temp;
            }
        }
        // 가장 큰 값 가져오기
        int[,] ans = new int[1,2];
        for (int i = 0; i <= sizes.GetUpperBound(0); ++i)
        {
            if (ans[0,0] < sizes[i,0])
                ans[0,0] = sizes[i,0];
            if (ans[0,1] < sizes[i,1])
                ans[0,1] = sizes[i,1];
        }
        Console.Write(ans[0,0] + "" "" + ans[0,1]);
        return ans[0,0]*ans[0,1];
    }
}",,2023. 8. 31,34,2
2023. 8. 31 오전 10:09:37,조용준,Unity,16 - 음양 더하기,"using System;

public class Solution 
{
    public int solution(int[] absolutes, bool[] signs) 
    {
        int answer = 0;
        
        for(int i = 0; i < absolutes.Length; i++)
        {
            if (signs[i] == false)
            {
                absolutes[i] *= -1;
            }
            answer += absolutes[i];
        }
        return answer;
    }
}",,2023. 8. 31,16,1
2023. 8. 31 오전 10:09:44,이기호,AI,15 - 나누어 떨어지는 숫자,"def solution(arr, divisor):
    answer = []
    
    for i in arr:
        if i % divisor == 0:
            answer.append(i)
    
    if len(answer) == 0:
        answer.append(-1)
        
    answer.sort()
    
    return answer",,2023. 8. 31,15,1
2023. 8. 31 오전 10:10:06,조용준,Unity,17 - 핸드폰 번호 가리기,"public class Solution 
{
    public string solution(string phone_number) 
    {
        string answer = """";
        char[] nums = phone_number.ToCharArray();
        for(int i = 0; i < nums.Length - 4; i++)
        {
            nums[i] = '*';
        }
        for(int i = 0; i < nums.Length; i++)
        {
            answer += nums[i].ToString();
        }
        return answer;
    }
}",,2023. 8. 31,17,1
2023. 8. 31 오전 10:10:19,공혜진,AI,20 - 가운데 글자 가져오기,"def solution(s):
    if len(s)%2 != 0:
        return s[len(s)//2]
    else:
        return s[(len(s)//2-1) : (len(s)//2+1)]",,2023. 8. 31,20,1
2023. 8. 31 오전 10:10:29,조용준,Unity,18 - 없는 숫자 더하기,"using System;

public class Solution 
{
    public int solution(int[] numbers) 
    {
        int answer = 45;
        for(int i = 0; i < numbers.Length; i++)
        {
            answer -= numbers[i];
        }
        return answer;
    }
}",,2023. 8. 31,18,1
2023. 8. 31 오전 10:10:32,최지연,AI,21 - 수박수박수박수박수박수?,"def solution(n):
    answer = []
    for i in range(n):
        if i % 2 == 0:
            answer.append('수')
        else:
            answer.append('박')
    answer = ''.join(answer)
    return answer",https://github.com/jiyeonCoder/algorithmPractice/blob/main/21.%20%EC%88%98%EB%B0%95%EC%88%98%EB%B0%95%EC%88%98%EB%B0%95%EC%88%98%EB%B0%95%EC%88%98%EB%B0%95%EC%88%98%3F.py,2023. 8. 31,21,1
2023. 8. 31 오전 10:10:46,권수민,AI,13 - 콜라츠 추측,"def solution(num):
    if not num >= 1 and num < 8000000:
        return
    if num == 1:
        return 0
    answer = 0
    while num >= 1:
        if num % 2 == 0:
            num = num // 2
            
        elif num == 1:
            break
        
        else:
        # elif num % 2 != 0:
            num = num * 3 + 1
            
        answer += 1
        
    if answer > 500:
            return -1
    return answer
",https://github.com/Stella-Kwon/git-github.com-Stella-Kwon-algorithm_prac/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12943.%E2%80%85%EC%BD%9C%EB%9D%BC%EC%B8%A0%E2%80%85%EC%B6%94%EC%B8%A1/%EC%BD%9C%EB%9D%BC%EC%B8%A0%E2%80%85%EC%B6%94%EC%B8%A1.py,2023. 8. 31,13,1
2023. 8. 31 오전 10:10:46,김준범,Unity,8 - 문자열을 정수로 바꾸기,"using System;
public class Solution {
    public int solution(string s) {
        int answer = 0;
        answer = Convert.ToInt32(s);
        return answer;
    }
}",,2023. 8. 31,8,1
2023. 8. 31 오전 10:10:58,조용준,Unity,19 - 제일 작은 수 제거하기,"using System.Collections.Generic;

public class Solution
{
    public int[] solution(int[] arr)
    {
        List<int> num = new List<int>();
        int minIndex = 0;
        for (int i = 0; i < arr.Length; i++)
        {
            num.Add(arr[i]);
            if (arr[minIndex] > arr[i])
            {
                minIndex = i;
            }
        }
        num.RemoveAt(minIndex);
        int[] answer;
        if (arr.Length == 1)
        {
            answer = new int[1];
            answer[0] = -1;
            return answer;
        }
        else
        {
            answer = new int[num.Count];
            for (int i = 0; i < num.Count; i++)
            {
                answer[i] = num[i];
            }
            return answer;
        }
    }
}",,2023. 8. 31,19,1
2023. 8. 31 오전 10:11:42,노동균,Unity,37 - 문자열 내 마음대로 정렬하기,"using System;
public class Solution {
    public string[] solution(string[] strings, int n) {
        
        Array.Sort(strings,(x,y)=>{
            char a = x[n];
            char b = y[n];
            
            if(a==b)
            {
                return x.CompareTo(y);
            }
            return a-b;
        });
        
        return strings;
    }
}",https://github.com/shehdrbs123/Sparta/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12915.%E2%80%85%EB%AC%B8%EC%9E%90%EC%97%B4%E2%80%85%EB%82%B4%E2%80%85%EB%A7%88%EC%9D%8C%EB%8C%80%EB%A1%9C%E2%80%85%EC%A0%95%EB%A0%AC%ED%95%98%EA%B8%B0,2023. 8. 31,37,2
2023. 8. 31 오전 10:12:13,노동균,Unity,38 - K번째수정렬,"using System;

public class Solution {
    public int[] solution(int[] array, int[,] commands) {
        int[] answer; 
        
        answer = Solve1(array,commands);
        
        return answer;
    }
    
    public int[] Solve1(int[] array, int[,] commands)
    {
        int[] answer; 
        int commandsHeight = commands.GetLength(0);
        
        answer = new int[commandsHeight];
        
        for(int i=0;i<commandsHeight;++i)
        {
            int start = commands[i,0]-1;
            int end = commands[i,1]-1;
            int[] subArray = new int [end-start+1];
            int k=start;
            for(int j=0;j<subArray.Length;++j)
            {
                subArray[j] = array[k];
                ++k;
            }
            
            Array.Sort(subArray);
            int pos = commands[i,2]-1;
            answer[i] = subArray[pos];
        }
        
        return answer;
    }
    
    public int[] Solve2(int[] array, int[,] commands)
    {
        int[] answer = new int[commands.Length/3];

        for(int i=0;i<answer.Length;++i)
        {
            int startIdx = commands[i,0]-1;
            int endIdx = commands[i,1]-1;
            int selectIdx = commands[i,2]-1;

            if(startIdx > endIdx)
            {
                int tmp = startIdx;
                startIdx = endIdx;
                endIdx = tmp;
            }
            int subLength = endIdx - startIdx +1;
            int[] sub = new int[subLength]; 
            int tmpStartIdx = startIdx;
            for(int j=0;j<subLength;++j)
            {
                sub[j] = array[tmpStartIdx];
                ++tmpStartIdx;
            }   
            Console.WriteLine();
            Array.Sort(sub);

            answer[i] = sub[selectIdx];
        }
        

        return answer;
    }
}",https://github.com/shehdrbs123/Sparta/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/42748.%E2%80%85K%EB%B2%88%EC%A7%B8%EC%88%98,2023. 8. 31,38,2
2023. 8. 31 오전 10:13:19,노동균,Unity,39 - 두 개 뽑아서 더하기,"using System;
using System.Collections.Generic;
public class Solution {
    public int[] solution(int[] numbers) {
        int[] answer;
        SortedSet<int> madeNumbers = new SortedSet<int>();
        
        for(int i=0;i<numbers.Length-1;++i)
        {
            for(int j=i+1;j<numbers.Length;++j)
            {
                madeNumbers.Add(numbers[i]+numbers[j]);
            }
        }
        
        answer = new int[madeNumbers.Count];
        var enumerator = madeNumbers.GetEnumerator();
        for(int i=0;i<answer.Length;++i)
        {
            enumerator.MoveNext();
            answer[i] = enumerator.Current;
        }
        return answer;
    }
}",https://github.com/shehdrbs123/Sparta/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/68644.%E2%80%85%EB%91%90%E2%80%85%EA%B0%9C%E2%80%85%EB%BD%91%EC%95%84%EC%84%9C%E2%80%85%EB%8D%94%ED%95%98%EA%B8%B0,2023. 8. 31,39,2
2023. 8. 31 오전 10:13:56,노동균,Unity,40 - 가장 가까운 같은 글자,"using System;
using System.Collections.Generic;
public class Solution {
    public int[] solution(string s) {
        int[] answer = new int[s.Length];
        Dictionary<char,int> charPos = new Dictionary<char,int>();
        
        for(int i=0;i<s.Length;++i)
        {
            char currentChar = s[i];
            int val;
            if(charPos.TryGetValue(currentChar,out val))
            {
                int pos = val;
                answer[i] = i-pos;
                charPos[currentChar] = i;
            }
            else
            {
                answer[i] = -1;
                charPos.Add(currentChar,i);
            }
        }
        
        
        return answer;
    }
    
    public int[] solve1(string s)
    {
        int[] answer = new int[s.Length];
        Dictionary<char,int> charCheckDic = new Dictionary<char,int>();
        
        for(int i=0;i<s.Length;i++)
        {
            char one = s[i];
            int pos = -1;
            if(charCheckDic.TryGetValue(one,out pos))
            {
                answer[i] = i - pos;
                charCheckDic[one] = i;   
            }
            else
            {
                answer[i] = -1;
                charCheckDic.Add(one,i);
            }
        }
        
        return answer;
    }
}",https://github.com/shehdrbs123/Sparta/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/unrated/142086.%E2%80%85%EA%B0%80%EC%9E%A5%E2%80%85%EA%B0%80%EA%B9%8C%EC%9A%B4%E2%80%85%EA%B0%99%EC%9D%80%E2%80%85%EA%B8%80%EC%9E%90,2023. 8. 31,40,2
2023. 8. 31 오전 10:15:00,우민규,Unity,16 - 음양 더하기,"using System;

public class Solution {
    public int solution(int[] absolutes, bool[] signs) {
        int answer = 123456789;
        int a = 0;
        
        for(int i = 0; i < absolutes.Length; i++)
        {
            if(signs[i])
            {
                a += absolutes[i];
            }
            else
            {
                a -= absolutes[i];  
            }          
        }
        
        return a;
    }
}",https://github.com/Woomingyu/Programmers.git,2023. 8. 31,16,1
2023. 8. 31 오전 10:15:06,정주찬,Unity,38 - K번째수정렬,"using System;
using System.Collections.Generic;

public class Solution {
    public int[] solution(int[] array, int[,] commands) {
        int[] answer = new int[commands.GetLength(0)];

        for (int i = 0; i < commands.GetLength(0); i++)
        {
            int[] tempArr = new int[commands[i, 1] - commands[i, 0] + 1];
            for (int j = 0; j < tempArr.Length; j++)
            {
                tempArr[j] = array[commands[i, 0] - 1 + j];
            }

            Array.Sort(tempArr);

            answer[i] = tempArr[commands[i, 2] - 1];

            //Console.WriteLine(answer[i]);
        }
        return answer;
    }
}",https://github.com/JeongJuChan/Algorithm/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/42748.%E2%80%85K%EB%B2%88%EC%A7%B8%EC%88%98/K%EB%B2%88%EC%A7%B8%EC%88%98.cs,2023. 8. 31,38,2
2023. 8. 31 오전 10:15:34,정주찬,Unity,39 - 두 개 뽑아서 더하기,"using System;
using System.Collections.Generic;
using System.Linq;

public class Solution {
    public int[] solution(int[] numbers) {
        List<int> answer = new List<int>();
        for (int i = 0; i < numbers.Length - 1; i++)
        {
            for (int j = i + 1; j < numbers.Length; j++)
            {
                int temp = numbers[i] + numbers[j];
                if (!answer.Contains(temp))
                {
                    answer.Add(temp);
                }
            }
        }

        answer.Sort();
        return answer.ToArray();
    }
}",https://github.com/JeongJuChan/Algorithm/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/68644.%E2%80%85%EB%91%90%E2%80%85%EA%B0%9C%E2%80%85%EB%BD%91%EC%95%84%EC%84%9C%E2%80%85%EB%8D%94%ED%95%98%EA%B8%B0/%EB%91%90%E2%80%85%EA%B0%9C%E2%80%85%EB%BD%91%EC%95%84%EC%84%9C%E2%80%85%EB%8D%94%ED%95%98%EA%B8%B0.cs,2023. 8. 31,39,2
2023. 8. 31 오전 10:16:07,정주찬,Unity,40 - 가장 가까운 같은 글자,"using System.Collections.Generic;

public class Solution {
    public int[] solution(string s) {
        Dictionary<char, int> indexDict = new Dictionary<char, int>();
        int[] answer = new int[s.Length];

        for (int i = 0; i < s.Length; i++)
        {
            if (!indexDict.ContainsKey(s[i]))
            {
                indexDict.Add(s[i], i);
                answer[i] = -1;
            }
            else
            {
                answer[i] = i - indexDict[s[i]];
                indexDict[s[i]] = i;
            }
        }
        return answer;
    }
}",https://github.com/JeongJuChan/Algorithm/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/unrated/142086.%E2%80%85%EA%B0%80%EC%9E%A5%E2%80%85%EA%B0%80%EA%B9%8C%EC%9A%B4%E2%80%85%EA%B0%99%EC%9D%80%E2%80%85%EA%B8%80%EC%9E%90/%EA%B0%80%EC%9E%A5%E2%80%85%EA%B0%80%EA%B9%8C%EC%9A%B4%E2%80%85%EA%B0%99%EC%9D%80%E2%80%85%EA%B8%80%EC%9E%90.cs,2023. 8. 31,40,2
2023. 8. 31 오전 10:16:36,정주찬,Unity,41 - 푸드 파이트 대회,"using System;
using System.Linq;
using System.Text;

public class Solution {
    public string solution(int[] food) {
        StringBuilder answer = new StringBuilder();

        for (int i = 1; i < food.Length; i++)
        {
            for (int j = 0; j < food[i] / 2; j++)
            {
                answer.Append(i);
            }
        }

        string reverse = new string(answer.ToString().Reverse().ToArray());
        answer.Append(""0"");
        answer.Append(reverse);
        
        return answer.ToString();
    }
}",https://github.com/JeongJuChan/Algorithm/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/unrated/134240.%E2%80%85%ED%91%B8%EB%93%9C%E2%80%85%ED%8C%8C%EC%9D%B4%ED%8A%B8%E2%80%85%EB%8C%80%ED%9A%8C/%ED%91%B8%EB%93%9C%E2%80%85%ED%8C%8C%EC%9D%B4%ED%8A%B8%E2%80%85%EB%8C%80%ED%9A%8C.cs,2023. 8. 31,41,2
2023. 8. 31 오전 10:17:02,정주찬,Unity,42 - 콜라 문제,"using System;

public class Solution {
    public int solution(int a, int b, int n) {
        int answer = 0;
        while(n >= a)
        {
            int rest = n % a;
            int temp = n / a * b;
            answer += temp;
            n = temp;
            n += rest;
        }
        return answer;
    }
}",https://github.com/JeongJuChan/Algorithm/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/unrated/132267.%E2%80%85%EC%BD%9C%EB%9D%BC%E2%80%85%EB%AC%B8%EC%A0%9C/%EC%BD%9C%EB%9D%BC%E2%80%85%EB%AC%B8%EC%A0%9C.cs,2023. 8. 31,42,2
2023. 8. 31 오전 10:17:29,김지수,AI,17 - 핸드폰 번호 가리기,"def solution(phone_number):
    return ""*""*(len(phone_number)-4) + phone_number[-4:]",,2023. 8. 31,17,1
2023. 8. 31 오전 10:17:51,정주찬,Unity,43 - 명예의 전당 (1),"using System.Collections.Generic;

public class Solution {
    public int[] solution(int k, int[] score) {
        List<int> scores = new List<int>();
        int[] result = new int[score.Length];

        for (int i = 0; i < score.Length; i++)
        {
            scores.Add(score[i]);
            scores.Sort((x,y) => -x.CompareTo(y));

            if (i < k)
            {
                result[i] = scores[i];
            }
            else
            {
                result[i] = scores[k - 1];
            }

            //Console.WriteLine(result[i]);
        }
        return result;
    }
}",https://github.com/JeongJuChan/Algorithm/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/unrated/138477.%E2%80%85%EB%AA%85%EC%98%88%EC%9D%98%E2%80%85%EC%A0%84%EB%8B%B9%E2%80%85%EF%BC%881%EF%BC%89/%EB%AA%85%EC%98%88%EC%9D%98%E2%80%85%EC%A0%84%EB%8B%B9%E2%80%85%EF%BC%881%EF%BC%89.cs,2023. 8. 31,43,2
2023. 8. 31 오전 10:18:18,정주찬,Unity,44 - 2016년,"public class Solution {
    public string solution(int a, int b) {
        int days = 0;

        string[] dayArr = new string[] { ""THU"", ""FRI"", ""SAT"", ""SUN"", ""MON"", ""TUE"", ""WED"" };

        for (int i = 1; i < a; i++)
        {
            if (i == 2)
            {
                days += 29;
            }
            else if (i <= 7)
            {
                days += i % 2 == 0 ? 30 : 31;
            }
            else
            {
                days += i % 2 == 0 ? 31 : 30;
            }
        }

        days += b;
        return dayArr[days % 7];
    }
}",https://github.com/JeongJuChan/Algorithm/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12901.%E2%80%852016%EB%85%84/2016%EB%85%84.cs,2023. 8. 31,44,2
2023. 8. 31 오전 10:21:59,박지원,Unity,19 - 제일 작은 수 제거하기,"using System;
using System.Linq;

public class Solution {
    public int[] solution(int[] arr) {
        int arr_L = arr.Length;
        if(arr_L == 1) return new int[1]{-1};
        
        int[] answer = new int[arr_L-1];
        int index = Array.IndexOf(arr, arr.Min());
            
        for(int i = 0; i < arr_L; i++){
            if(i < index)   answer[i] = arr[i];
            if(i > index)   answer[i-1] = arr[i];
        }
        
        return answer;
    }
}",https://github.com/jwonp9127/AlgorithmStudy/tree/213d18549902610b0db17670fea01d92c111c74d/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12935.%E2%80%85%EC%A0%9C%EC%9D%BC%E2%80%85%EC%9E%91%EC%9D%80%E2%80%85%EC%88%98%E2%80%85%EC%A0%9C%EA%B1%B0%ED%95%98%EA%B8%B0,2023. 8. 31,19,1
2023. 8. 31 오전 10:23:11,이진범,AI,14 - 서울에서 김서방 찾기,"def solution(seoul):
    kim_index = seoul.index(""Kim"")
    answer = ""김서방은 {}에 있다"".format(kim_index)
    return answer


seoul = [""park"", ""Kim"", ""jang""]
busan = [""choi"", ""lee"", ""Alice""]
result = solution(seoul)
print(result)",,2023. 8. 31,14,1
2023. 8. 31 오전 10:23:29,김정규,AI,20 - 가운데 글자 가져오기,"def solution(s):
    if len(s) % 2 == 0:
        return s[len(s)//2 - 1:len(s)//2 + 1]
    else:
        return s[len(s) // 2]",https://github.com/JungGyu00/algorithm,2023. 8. 31,20,1
2023. 8. 31 오전 10:23:30,한병권,Unity,47 - 모의고사완전탐색,"using System;

public class Solution {
    public int[] solution(int[] answers) {
        int[] answer = new int[] {};
        
        int[] temp1Arr = {1,2,3,4,5};
        int[] temp2Arr = {2,1,2,3,2,4,2,5};
        int[] temp3Arr = {3,3,1,1,2,2,4,4,5,5};

        int temp1 = 0;
        int temp2 = 0;
        int temp3 = 0;
        
        for (int i = 0; i < answers.Length; i ++)
        {
            if ( i == 0 )
            {
                if (answers[i] == temp1Arr[i]) temp1++;
                if (answers[i] == temp2Arr[i]) temp2++;
                if (answers[i] == temp3Arr[i]) temp3++;
            }
            else
            {
                if (answers[i] == temp1Arr[i%5]) temp1++;
                if (answers[i] == temp2Arr[i%8]) temp2++;
                if (answers[i] == temp3Arr[i%10]) temp3++;
            }
        }
        
        if(temp1 >= temp2 && temp1 >= temp3)
        {
            if (temp1 != temp2 && temp1 != temp3)
            {
                answer = new int[] {1};
            }
            else if (temp1 == temp2 && temp1 != temp3)
            {
                answer = new int[] {1,2};
            }
            else if (temp1 != temp2 && temp1 == temp3)
            {
                answer = new int[] {1,3};
            }
            else if(temp1 == temp2 && temp1 == temp3)
            {
                answer = new int[] {1,2,3};
            }
        }
        else if (temp2 >= temp3)
        {
            if(temp2 != temp3)
            {
                answer = new int[] {2};
            }
            else
            {
                answer = new int[] {2,3};
            }
        }
        else
        {
            answer = new int[] {3};
        }

        return answer;
    }
}",https://github.com/hbg9212/AlgorithmCodekata,2023. 8. 31,47,2
2023. 8. 31 오전 10:24:34,조성훈,Unity,14 - 서울에서 김서방 찾기,"using System;

public class Solution {
    public string solution(string[] seoul) 
    {
        string answer = """";
        int temp = Array.IndexOf(seoul, ""Kim"");
        answer = ""김서방은 "" + temp + ""에 있다"";
        return answer;

    }
}",,2023. 8. 31,14,1
2023. 8. 31 오전 10:28:05,송승훈,Unity,18 - 없는 숫자 더하기,"using System;

public class Solution {
    public int solution(int[] numbers) {
       int[] ten = { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 };
        int answer = 0;
        for(int i =0; i< ten.Length;i++)
        {
            for (int j = 0; j<numbers.Length;j++)
            {
                if (ten[i] == numbers[j])
                {
                    ten[i]=0;
                }
            }
        }
        
         for(int i =0; i< ten.Length;i++)
        {
             answer+=ten[i];
        }
     
        return answer;
    }
}",https://github.com/DoDokang318/CodeKata.git,2023. 8. 31,18,1
2023. 8. 31 오전 10:28:51,송승훈,Unity,20 - 가운데 글자 가져오기,"public class Solution {
    public string solution(string s) {
        string answer = """";      
        char[] c = s.ToCharArray();
       char[] a = new char[c.Length % 2 == 0 ? 2 : 1];
        if(c.Length%2==0)
        {
            a[0]=c[c.Length/2-1];
            a[1]=c[c.Length/2];
            
        }
        else
        {
             a[0] = c[c.Length / 2];
        }
        answer = new string(a); 
        return answer;
    }
}",https://github.com/DoDokang318/CodeKata.git,2023. 8. 31,20,1
2023. 8. 31 오전 10:29:18,송승훈,Unity,21 - 수박수박수박수박수박수?,"public class Solution {
    public string solution(int n) {
        string answer = """";

    for(int i =1 ; i <= n; i++ )
    {
        if(i%2 == 0)
        {
            answer += ""박"";
        }
        else
        {
            answer += ""수"";
        }
    }
        
    
        return answer;
    }
}",https://github.com/DoDokang318/CodeKata.git,2023. 8. 31,21,1
2023. 8. 31 오전 10:29:22,이진범,AI,15 - 나누어 떨어지는 숫자,"def solution(arr, divisor):
    result = sorted([x for x in arr if x % divisor == 0])
    return result if result else [-1]


# 테스트
arr1 = [5, 9, 7, 10]
divisor1 = 5
result1 = solution(arr1, divisor1)
print(result1)

arr2 = [2, 36, 1, 3]
divisor2 = 1
result2 = solution(arr2, divisor2)
print(result2)

arr3 = [3, 2, 6]
divisor3 = 10
result3 = solution(arr3, divisor3)
print(result3)
",,2023. 8. 31,15,1
2023. 8. 31 오전 10:29:43,송승훈,Unity,22 - 내적,"using System;

public class Solution {
    public int solution(int[] a, int[] b) {
        int answer = 0;
        
        for(int i = 0 ; i<a.Length; i ++)
        {
            answer += a[i]*b[i];
        }
        
        return answer;
    }
}",https://github.com/DoDokang318/CodeKata.git,2023. 8. 31,22,1
2023. 8. 31 오전 10:30:15,송승훈,Unity,23 - 약수의 개수와 덧셈,"using System;

public class Solution {
    public int solution(int left, int right) {
        int answer = 0;
        int count = 0;
        for(int i = left ; i <= right ; i++)
        {       
            for(int j = 1 ; j <= i ; j++)
            { 
                if(i%j == 0)
                {
                   count++;
                }   
            }
            if (count%2==0)
            {
                answer+=i;
                count=0;
            }
            else 
            {
                answer-=i;
                count=0;
            }
        }  
        
        return answer;
    }
}",https://github.com/DoDokang318/CodeKata.git,2023. 8. 31,23,1
2023. 8. 31 오전 10:30:41,이경민,Unity,9 - 정수 제곱근 판별,"public class Solution {
    public long solution(long n) {
        long answer = 0;
        long root = 0;
        for (long i = 1; i <= n; i++)
             {
                 if (i*i == n)
                 {
                     root = i+1;
                     break;
                 }
             }
        if (root > 0)
        {
            answer = root * root;
            return answer;
        }
        return -1;
    }
}",https://github.com/kminsmin/Algorithm_Test_Practice/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12934.%E2%80%85%EC%A0%95%EC%88%98%E2%80%85%EC%A0%9C%EA%B3%B1%EA%B7%BC%E2%80%85%ED%8C%90%EB%B3%84,2023. 8. 31,9,1
2023. 8. 31 오전 10:31:24,이경민,Unity,10 - 정수 내림차순으로 배치하기,"using System.Linq;

public class Solution {
    public long solution(long n) {
        long answer = 0;
        string str = n.ToString();
        int[] arr = new int[str.Length];
        for (int i = 0; i < str.Length; i++)
        {
            arr[i] = int.Parse(str.Substring(i,1));
        }
        arr = arr.OrderByDescending(x => x).ToArray();
        string answerString = """";
        foreach(int num in arr)
        {
            answerString += num.ToString();
        }
        answer = long.Parse(answerString);
        return answer;
    }
}",https://github.com/kminsmin/Algorithm_Test_Practice/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12933.%E2%80%85%EC%A0%95%EC%88%98%E2%80%85%EB%82%B4%EB%A6%BC%EC%B0%A8%EC%88%9C%EC%9C%BC%EB%A1%9C%E2%80%85%EB%B0%B0%EC%B9%98%ED%95%98%EA%B8%B0,2023. 8. 31,10,1
2023. 8. 31 오전 10:31:54,이경민,Unity,11 - 하샤드 수,"public class Solution {
    public bool solution(int x) {
        bool answer = false;
        int sum = 0;
        string str = x.ToString();
        char[] arr = str.ToCharArray();
        foreach (char digit in arr)
        {
            sum += int.Parse(digit.ToString());
        }
        if (x % sum == 0)
        {
            answer = true;
        }
        return answer;
    }
}",https://github.com/kminsmin/Algorithm_Test_Practice/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12947.%E2%80%85%ED%95%98%EC%83%A4%EB%93%9C%E2%80%85%EC%88%98,2023. 8. 31,11,1
2023. 8. 31 오전 10:32:26,이경민,Unity,12 - 두 정수 사이의 합,"using System.Collections.Generic;

public class Solution {
    public long solution(int a, int b) {
        long answer = 0;
        List<int> list = new List<int>();
        list.Add(a);
        list.Add(b);
        list.Sort();
        for(int i=list[0];i<=list[1];i++)
        {
            answer += i;
        }
        return answer;
    }
}",https://github.com/kminsmin/Algorithm_Test_Practice/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12912.%E2%80%85%EB%91%90%E2%80%85%EC%A0%95%EC%88%98%E2%80%85%EC%82%AC%EC%9D%B4%EC%9D%98%E2%80%85%ED%95%A9,2023. 8. 31,12,1
2023. 8. 31 오전 10:32:56,이경민,Unity,13 - 콜라츠 추측,"public class Solution {
    public int solution(long num) {
        int answer = 0;
        while (num != 1)
        {
            if (num % 2 == 0)
            {
                num /= 2;
            }
            else
            {
               num *= 3;
               num ++;
            }
            answer++;
            if (answer >= 500)
            {
                answer = -1;
                break;
            }
                
        }
        return answer;
    }
}",https://github.com/kminsmin/Algorithm_Test_Practice/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12943.%E2%80%85%EC%BD%9C%EB%9D%BC%EC%B8%A0%E2%80%85%EC%B6%94%EC%B8%A1,2023. 8. 31,13,1
2023. 8. 31 오전 10:37:45,장현웅,AI,14 - 서울에서 김서방 찾기,"def solution(seoul):
    answer = ''
    
    for i in range(0,len(seoul)):
        if seoul[i] == ""Kim"":
            answer = f""김서방은 {i}에 있다""
    return answer",https://github.com/HyeonwoongJang/Algorithm.git,2023. 8. 31,14,1
2023. 8. 31 오전 10:38:47,조성훈,Unity,15 - 나누어 떨어지는 숫자,"using System;

public class Solution 
{
    public int[] solution(int[] arr, int divisor) 
    {
        int[] answer = new int[arr.Length];
        int temp = 0;
        
        for(int i = 0; i < arr.Length; i++)
        {
            if(arr[i]%divisor == 0)
            {
                answer[temp] = arr[i];
                temp++;
            }
        }
        
        if(temp == 0)
        {
            return new int[] {-1};
        }
        else
        {
            Array.Resize(ref answer, temp);// 배열의 크기가 arr.Length 
            Array.Sort(answer);
            return answer;
        }

        
        
        return answer;
    }
}",,2023. 8. 31,15,1
2023. 8. 31 오전 10:40:19,임전혁,Unity,38 - K번째수정렬,"using System;

public class Solution {
    public int[] solution(int[] array, int[,] commands) {

        int[] answer = new int[commands.GetLength(0)];
        
        for (int s = 0; s < commands.GetLength(0); s++)
        {
            int i = Convert.ToInt32(commands[s, 0]) - 1;
            int j = Convert.ToInt32(commands[s, 1]) - 1;
            int k = Convert.ToInt32(commands[s, 2]) - 1;
            
            if (i == j)
            {
                answer[s] = array[i];
                continue;
            }

            int[] tempArr = new int[j - i + 1];
            int iNum = i;
            for (int d = 0; d <= j - i; d++)
            {
                tempArr[d] = array[iNum];
                iNum++;
            }

            Array.Sort(tempArr);
            answer[s] = Convert.ToInt32(tempArr[k]);
        }
        
        return answer;
    }
}",https://github.com/yarogono/Algorithm_CSharp/blob/master/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/42748.%E2%80%85K%EB%B2%88%EC%A7%B8%EC%88%98/K%EB%B2%88%EC%A7%B8%EC%88%98.cs,2023. 8. 31,38,2
2023. 8. 31 오전 10:45:26,조영오,Unity,33 - 크기가 작은 부분,"using System;

public class Solution {
    public int solution(string t, string p) {
        int answer = 0;
        int num = 0;
        string sub = """";
        
        for(int i = 0 ; i < t.Length-(p.Length-1); i++){
            sub = t.Substring(i,p.Length);
            if(Convert.ToDouble(sub) <= Convert.ToDouble(p)){answer++;}
        }
        
        return answer;
    }
}",,2023. 8. 31,33,2
2023. 8. 31 오전 10:50:01,임전혁,Unity,39 - 두 개 뽑아서 더하기,"using System;
using System.Collections.Generic;

public class Solution {
    public int[] solution(int[] numbers) {
        int[] answer = null;
        List<int> list = new List<int>();
        
        for (int i = 0; i < numbers.Length; i++)
        {
            for (int j = i + 1; j < numbers.Length; j++)
            {
                int tempNum = numbers[i] + numbers[j];
                if (!list.Contains(tempNum))
                    list.Add(tempNum);
            }
        }
        
        list.Sort();
        
        return list.ToArray();
    }
}",https://github.com/yarogono/Algorithm_CSharp/blob/master/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/68644.%E2%80%85%EB%91%90%E2%80%85%EA%B0%9C%E2%80%85%EB%BD%91%EC%95%84%EC%84%9C%E2%80%85%EB%8D%94%ED%95%98%EA%B8%B0/%EB%91%90%E2%80%85%EA%B0%9C%E2%80%85%EB%BD%91%EC%95%84%EC%84%9C%E2%80%85%EB%8D%94%ED%95%98%EA%B8%B0.cs,2023. 8. 31,39,2
2023. 8. 31 오전 10:50:49,어하림,Unity,6 - x만큼 간격이 있는 n개의 숫자,"public class Solution {
    public long[] solution(int x, int n) {
            long[] answer = new long[n];

            for (int i = 0; i < n; i++)
            {
                if (i == 0)
                    answer[i] = x;
                else
                    answer[i] = x + answer[i - 1];
            }

            return answer;

    }
}",,2023. 8. 31,6,1
2023. 8. 31 오전 11:01:50,김도현B,Unity,30 - 3진법 뒤집기,"using System;
using System.Collections;
public class Solution {
    public int solution(int n) {
        int answer = 0;
        Stack s = new Stack();
        while (n > 2)
        {
            s.Push(n % 3);
            n /= 3;
        }
        s.Push(n);
        int count = s.Count;
        for(int i = 0; i < count; i++)
            answer += (int)s.Pop() * (int)Math.Pow(3, i);
        return answer;
    }
}",https://github.com/subscriptioncat/Algorithm,2023. 8. 31,30,1
2023. 8. 31 오전 11:11:28,강상찬,AI,39 - 두 개 뽑아서 더하기,"def solution(numbers):
    tempr = []
    for i in range(len(numbers)):
        for val in range(i + 1, len(numbers)):
            tempr.append((numbers[i] + + numbers[val]))
    return sorted(list(set(tempr)))",,2023. 8. 31,39,2
2023. 8. 31 오전 11:18:15,김도현B,Unity,31 - 이상한 문자 만들기,"public class Solution {
    public string solution(string s) {
        string answer = """";
        int count = 0;
        for (int i = 0; i < s.Length; i++)
        {
            count = s[i] == ' ' ? 0 : count + 1;
            answer += count % 2 == 1 ? s.ToUpper()[i] :  s.ToLower()[i];
        }
        return answer;
    }
}",https://github.com/subscriptioncat/Algorithm,2023. 8. 31,31,2
2023. 8. 31 오전 11:25:18,김윤경,Unity,6 - x만큼 간격이 있는 n개의 숫자,"public class Solution {
    public long[] solution(int x, int n) {
         long[] answer = new long[n];
        long longX = x;
        for (int i = 0; i < n; i++)
        {
            answer[i] = longX;
            longX += x;
        }
        return answer;
    }
}",,2023. 8. 31,6,1
2023. 8. 31 오전 11:29:35,임전혁,Unity,40 - 가장 가까운 같은 글자,"using System;
using System.Collections.Generic;

public class Solution {
    public int[] solution(string s) {
        int[] answer = new int[s.Length];

        List<int> list = new List<int>();

        for (int i = 0; i < s.Length; i++)
        {
            int tempNum = Convert.ToInt32(s[i]);
            if (list.Contains(tempNum))
            {
                int v = list.LastIndexOf(tempNum);
                answer[i] = list.Count - v;
            }
            else if (!list.Contains(tempNum))
            {
                answer[i] = -1;
            }

            list.Add(tempNum);
        }
        
        return answer;
    }
}",https://github.com/yarogono/Algorithm_CSharp/blob/master/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/unrated/142086.%E2%80%85%EA%B0%80%EC%9E%A5%E2%80%85%EA%B0%80%EA%B9%8C%EC%9A%B4%E2%80%85%EA%B0%99%EC%9D%80%E2%80%85%EA%B8%80%EC%9E%90/%EA%B0%80%EC%9E%A5%E2%80%85%EA%B0%80%EA%B9%8C%EC%9A%B4%E2%80%85%EA%B0%99%EC%9D%80%E2%80%85%EA%B8%80%EC%9E%90.cs,2023. 8. 31,40,2
2023. 8. 31 오전 11:30:02,김도현B,Unity,32 - 삼총사,"using System;
using System.Linq;
public class Solution {
    public int solution(int[] number) {
        int answer = 0;
        for(int x = 0; x < number.Count(); x++){
            for(int y = x + 1; y < number.Count(); y++){
                for(int z = y + 1; z < number.Count(); z++){
                    answer += number[x] + number[y] + number[z] == 0 ? 1 : 0;
                }
            }
        }
        return answer;
    }
}",https://github.com/subscriptioncat/Algorithm,2023. 8. 31,32,2
2023. 8. 31 오전 11:38:43,정범수,AI,55 - 문자열 나누기,"def solution(s):
    x = ''
    answer = 0
    for c in s:
        if x:
            if c == x:
                x_count += 1
            else:
                x_count -= 1
            if x_count == 0:
                answer += 1
                x = ''
        else:
            x = c
            x_count = 1
    if x:
        answer += 1
    return answer",https://github.com/sudog1/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/unrated/140108.%E2%80%85%EB%AC%B8%EC%9E%90%EC%97%B4%E2%80%85%EB%82%98%EB%88%84%EA%B8%B0,2023. 8. 31,55,3
2023. 8. 31 오전 11:39:15,정범수,AI,56 - 대충 만든 자판,"def solution(keymap, targets):
    char_dict = {}
    for key in keymap:
        for i, c in enumerate(key):
            if c in char_dict:
                char_dict[c] = min(char_dict[c], i+1)
            else:
                char_dict[c] = i+1
                
    answer = []          
    for target in targets:
        count = 0
        for c in target:
            if c in char_dict:
                count += char_dict[c]
            else:
                count = -1
                break
        answer.append(count)
        
    return answer",https://github.com/sudog1/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/unrated/160586.%E2%80%85%EB%8C%80%EC%B6%A9%E2%80%85%EB%A7%8C%EB%93%A0%E2%80%85%EC%9E%90%ED%8C%90,2023. 8. 31,56,3
2023. 8. 31 오전 11:39:30,명세인,AI,19 - 제일 작은 수 제거하기,"def solution(arr):
    min_num = min(arr)
    for a in arr:
        if a == min_num:
            arr.remove(a)
            if len(arr) == 0:
                arr.append(-1)
            return arr",https://github.com/playersein/Coding_Test/commit/27433e0ca95a4e957808fde7c441e20779699bd9,2023. 8. 31,19,1
2023. 8. 31 오전 11:39:47,정범수,AI,57 - 둘만의 암호,"def solution(s, skip, index):
    skip_idx = [0]*(26)
    result = []
    for c in skip:
        skip_idx[ord(c)-ord('a')] = 1
    for c in s:
        i = ord(c)-ord('a')
        temp = index
        while temp:
            i += 1
            i %= 26
            if not skip_idx[i]:
                temp -= 1
        result.append(chr(i+ord('a')))
            
    return ''.join(result)",https://github.com/sudog1/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/unrated/155652.%E2%80%85%EB%91%98%EB%A7%8C%EC%9D%98%E2%80%85%EC%95%94%ED%98%B8,2023. 8. 31,57,3
2023. 8. 31 오전 11:40:25,정범수,AI,58 - 햄버거 만들기,"def solution(ingredient):
    count = 0
    stack = []
    for e in ingredient:
        if len(stack) >= 3 and e == 1:
            for i in range(1, 4):
                if stack[-i]+i != 4:
                    stack.append(e)
                    break
            else:
                count += 1
                for _ in range(3):
                    stack.pop()
        else:
            stack.append(e)
            
    return count",https://github.com/sudog1/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/unrated/133502.%E2%80%85%ED%96%84%EB%B2%84%EA%B1%B0%E2%80%85%EB%A7%8C%EB%93%A4%EA%B8%B0,2023. 8. 31,58,3
2023. 8. 31 오전 11:40:39,명세인,AI,26 - 문자열 다루기 기본,"def solution(s):
    result = []

    if len(s) == 4 or len(s) == 6:
        for a in s:
            if a in [str(i) for i in range(0,10)]:
                result.append(a)
        if len(result) == len(s):
            return True
        else:
            return False
    return False",https://github.com/playersein/Coding_Test/commit/19c92343d45d55e67203df6904a137e4dfcefd72,2023. 8. 31,26,1
2023. 8. 31 오전 11:40:58,강성호,Unity,43 - 명예의 전당 (1),"using System;
using System.Collections.Generic;
using System.Linq;
public class Solution {
    public int[] solution(int k, int[] score) {
      int[] answer = new int[score.Length];
			
			List<int> hall = new List<int>();

			for(int i = 0; i < score.Length; i++)
			{
                if (hall.Count == k)
                {
					if (hall[0] > score[i])
					{
						answer[i] = hall[0];
						continue;
					}
					hall.RemoveAt(0);
                }

				hall.Add(score[i]);
				hall.Sort();
				answer[i] = hall[0];
            }
	
			return answer;
    }
}",,2023. 8. 31,43,2
2023. 8. 31 오전 11:41:02,정범수,AI,59 - 성격 유형 검사하기,"def solution(survey, choices):
    pers_type = ['R', 'T', 'C', 'F', 'J', 'M', 'A', 'N']
    type_score = {
        'R': 0,
        'C': 0,
        'J': 0,
        'A': 0,
    }
    for i, s in enumerate(survey):
        if s[0] in type_score:
            type_score[s[0]] += 4-choices[i]
        else:
            type_score[s[1]] -= 4-choices[i]
            
    result = []
    for i in range(0, len(pers_type), 2):
        if type_score[pers_type[i]] >= 0:
            result.append(pers_type[i])
        else:
            result.append(pers_type[i+1])
            
    return ''.join(result)",https://github.com/sudog1/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/118666.%E2%80%85%EC%84%B1%EA%B2%A9%E2%80%85%EC%9C%A0%ED%98%95%E2%80%85%EA%B2%80%EC%82%AC%ED%95%98%EA%B8%B0,2023. 8. 31,59,3
2023. 8. 31 오전 11:41:45,정범수,AI,60 - 바탕화면 정리,"def solution(wallpaper):
    cur_row = -1
    min_col = 50
    max_col = -1
    answer = []
    for r in range(len(wallpaper)):
        for c in range(len(wallpaper[r])):
            if wallpaper[r][c] == '#':
                if cur_row == -1:
                    answer.append(r)
                cur_row = r
                min_col = min(min_col, c)
                max_col = max(max_col, c)

    answer.append(min_col)
    answer.append(cur_row+1)
    answer.append(max_col+1)
    return answer",https://github.com/sudog1/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/unrated/161990.%E2%80%85%EB%B0%94%ED%83%95%ED%99%94%EB%A9%B4%E2%80%85%EC%A0%95%EB%A6%AC,2023. 8. 31,60,3
2023. 8. 31 오전 11:42:15,명세인,AI,23 - 약수의 개수와 덧셈,"def solution(left, right):
    answer = 0
    cnt_num = 0
    
    for i in range(left, right+1):
        cnt_num = 0
        for a in range(1,i+1):
            if i % a == 0:
                cnt_num += 1
        if cnt_num % 2 == 0:
            answer += i
        else:
            answer -= i               
    return answer",https://github.com/playersein/Coding_Test/commit/b7032e8fe580305425e960532a16d817da72897d,2023. 8. 31,23,1
2023. 8. 31 오전 11:42:36,정범수,AI,61 - 개인정보 수집 유효기간,"def convert(date, weight):
    return sum(map(lambda x, y: int(x)*y, date.split('.'), weight))

def solution(today, terms, privacies):
    weight = [12*28, 28, 1]
    today = convert(today, weight)
    terms = list(map(lambda x: x.split(), terms))
    terms_dict = {term: int(expi)*28 for term, expi in terms}
    answer = []
    for i, privacy in enumerate(privacies):
        date, term = privacy.split()
        if today - convert(date, weight) >= terms_dict[term]:
            answer.append(i+1)
            
    return answer",https://github.com/sudog1/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/unrated/150370.%E2%80%85%EA%B0%9C%EC%9D%B8%EC%A0%95%EB%B3%B4%E2%80%85%EC%88%98%EC%A7%91%E2%80%85%EC%9C%A0%ED%9A%A8%EA%B8%B0%EA%B0%84,2023. 8. 31,61,3
2023. 8. 31 오전 11:43:03,정범수,AI,62 - 달리기 경주,"def solution(players, callings):
    rank = {player: i for i, player in enumerate(players)}
    temp = players[:]
    for c in callings:
        if rank[c]:
            cur_rank = rank[c]
            rank[temp[cur_rank-1]] += 1
            rank[c] -= 1
            temp[cur_rank], temp[cur_rank-1] = temp[cur_rank-1], temp[cur_rank]
            
    return temp",https://github.com/sudog1/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/unrated/178871.%E2%80%85%EB%8B%AC%EB%A6%AC%EA%B8%B0%E2%80%85%EA%B2%BD%EC%A3%BC,2023. 8. 31,62,3
2023. 8. 31 오전 11:44:09,정범수,AI,63 - 공원 산책,"def solution(park, routes):
    for i in range(len(park)):
        for j in range(len(park[i])):
            if park[i][j] == 'S':
                cur_pos = [i, j]
    d = {
        'N': (-1, 0),
        'S': (1, 0),
        'W': (0, -1),
        'E': (0, 1)
    }
    for route in routes:
        a, b = route.split()
        x, y = cur_pos
        dx, dy = d[a]
        for _ in range(int(b)):
            if not ( 0 <= x+dx < len(park) and 0 <= y+dy < len(park[0]) ):
                break
            if park[x+dx][y+dy] == 'X':
                break
            x += dx
            y += dy
        else:
            cur_pos = [x, y]
            
    return cur_pos",https://github.com/sudog1/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/unrated/172928.%E2%80%85%EA%B3%B5%EC%9B%90%E2%80%85%EC%82%B0%EC%B1%85,2023. 8. 31,63,3
2023. 8. 31 오전 11:45:39,정범수,AI,64 - 신고 결과 받기,"def solution(id_list, report, k):
    report_state = {}
    for a, b in map(lambda x: x.split(), report):
        if b not in report_state:
            report_state[b] = {a}
        else:
            report_state[b].add(a)
    
    receive_mail = {i: 0 for i in id_list}
    for b in report_state:
        if len(report_state[b]) >= k:
            for a in report_state[b]:
                receive_mail[a] += 1
    
    return list(map(lambda x: receive_mail[x], id_list))",https://github.com/sudog1/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/92334.%E2%80%85%EC%8B%A0%EA%B3%A0%E2%80%85%EA%B2%B0%EA%B3%BC%E2%80%85%EB%B0%9B%EA%B8%B0,2023. 8. 31,64,3
2023. 8. 31 오전 11:46:24,정범수,AI,65 - 최댓값과 최솟값,"def solution(s):
    temp = s.split()
    temp = list(map(lambda x: int(x), temp))
    return f'{min(temp)} {max(temp)}'",https://github.com/sudog1/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv2/12939.%E2%80%85%EC%B5%9C%EB%8C%93%EA%B0%92%EA%B3%BC%E2%80%85%EC%B5%9C%EC%86%9F%EA%B0%92,2023. 8. 31,65,3
2023. 8. 31 오전 11:47:19,정범수,AI,66 - JadenCase 문자열 만들기,"def solution(s):
    temp = list(s)
    state = 0
    for i in range(len(temp)):
        if temp[i] == ' ':
            state = 0
            continue
        if state:
            temp[i] = temp[i].lower()
        else:
            temp[i] = temp[i].upper()
            state = 1
            
    return ''.join(temp)",https://github.com/sudog1/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv2/12951.%E2%80%85JadenCase%E2%80%85%EB%AC%B8%EC%9E%90%EC%97%B4%E2%80%85%EB%A7%8C%EB%93%A4%EA%B8%B0,2023. 8. 31,66,3
2023. 8. 31 오전 11:47:43,정범수,AI,67 - 이진 변환 반복하기,"def solution(s):
    count_zero = 0
    count_convert = 0
    while s != '1':
        count_convert += 1
        count_zero += len(s)
        s = ''.join((filter(lambda x: x == '1', s)))
        count_zero -= len(s)
        s = bin(len(s))[2:]
    
    return [count_convert, count_zero]",https://github.com/sudog1/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv2/70129.%E2%80%85%EC%9D%B4%EC%A7%84%E2%80%85%EB%B3%80%ED%99%98%E2%80%85%EB%B0%98%EB%B3%B5%ED%95%98%EA%B8%B0,2023. 8. 31,67,3
2023. 8. 31 오전 11:48:19,정범수,AI,68 - 피보나치 수,"def solution(n):
    fibo_num = [0, 1]
    for i in range(n-1):
        fibo_num[i%2] = (fibo_num[0]+fibo_num[1]) % 1234567
    return fibo_num[n%2]",https://github.com/sudog1/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv2/12945.%E2%80%85%ED%94%BC%EB%B3%B4%EB%82%98%EC%B9%98%E2%80%85%EC%88%98,2023. 8. 31,68,3
2023. 8. 31 오후 12:01:43,김도현B,Unity,29 - 최대공약수와 최소공배수,"using System;
using System.Collections.Generic;
public class Solution {
    public int[] solution(int n, int m) {
        int max = Math.Max(n, m);
        int min = Math.Min(n, m);
        int fixedMax = max;
        int fixedMin = min;

        int[] answer = new int[2] { 1, 1 };
        Dictionary<int, int> minArr = new Dictionary<int, int>();
        Dictionary<int, int> maxArr = new Dictionary<int, int>();
        minArr.Add(1, 1);
        maxArr.Add(1, 1);
        if (max % min == 0)
        {
            answer[0] = min;
            answer[1] = max;
        }
        else
        {
            for (int i = 2; i <= fixedMax; i++)
            {
                int minCount = 0;
                int maxCount = 0;
                while (max % i == 0)
                {
                    max /= i;
                    maxCount++;
                }
                while (min % i == 0)
                {
                    min /= i;
                    minCount++;
                }
                if (maxCount > 0) { maxArr.Add(i, maxCount); }
                if (minCount > 0) { minArr.Add(i, minCount); }
            }
            foreach (KeyValuePair<int, int> i in maxArr)
            {
                if (minArr.TryGetValue(i.Key, out n))
                    answer[1] *= (int)Math.Pow(i.Key, Math.Max(n, i.Value));
                else
                    answer[1] *= (int)Math.Pow(i.Key, i.Value);
            }
            foreach (KeyValuePair<int, int> i in minArr)
            {
                if (maxArr.TryGetValue(i.Key, out n))
                    answer[0] *= (int)Math.Pow(i.Key, Math.Min(n, i.Value));
                else
                    answer[1] *= (int)Math.Pow(i.Key, i.Value);
            }
        }
        return answer;
    }
}",https://github.com/subscriptioncat/Algorithm,2023. 8. 31,29,1
2023. 8. 31 오후 1:25:07,남의서,AI,40 - 가장 가까운 같은 글자,"def solution(s):
    answer = []
    lst = []
    for i in s:
        if i in lst:
            answer.append(len(answer) - max([lst.index(i)]))
            lst[lst.index(i)] = ' '
            lst.append(i)
        else:
            answer.append(-1)
            lst.append(i)

    return answer",,2023. 8. 31,40,2
2023. 8. 31 오후 1:38:11,남의서,AI,41 - 푸드 파이트 대회,"def solution(food):
    answer = ''
    cal = 1
    for i in food[1:]:
        answer += str(cal) * (i // 2)
        cal += 1
    answer = answer + '0' + answer[::-1]
    return answer",,2023. 8. 31,41,2
2023. 8. 31 오후 1:55:52,남의서,AI,42 - 콜라 문제,"def solution(a, b, n):
    answer = 0
    while n > a - 1:
        answer += (n // a) * b 
        n = n % a + (n // a) * b
    
    return answer",,2023. 8. 31,42,2
2023. 8. 31 오후 2:08:40,남의서,AI,43 - 명예의 전당 (1),"def solution(k, score):
    answer = []
    a = []
    for i in score:
        a.append(i)
        a.sort(reverse=True)
        answer.append((a[:k])[-1])
    return answer",,2023. 8. 31,43,2
2023. 8. 31 오후 2:22:21,남의서,AI,44 - 2016년,"def solution(a, b):
    day = [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]
    d = (sum(day[:a - 1]) + b) % 7
    dy = ['FRI','SAT','SUN','MON','TUE','WED','THU']

    
    return dy[d - 1]",,2023. 8. 31,44,2
2023. 8. 31 오후 2:46:18,남의서,AI,45 - 카드 뭉치,"def solution(cards1, cards2, goal):
    for i in goal:
        if cards1 and i == cards1[0]:
            del cards1[0]
        elif cards2 and i == cards2[0]:
            del cards2[0]
        else:
            return ""No""
    return ""Yes""",,2023. 8. 31,45,2
2023. 8. 31 오후 3:00:13,남의서,AI,46 - 과일 장수,"def solution(k, m, score):
    answer = 0
    score.sort(reverse=True)
    for i in range(len(score) // m):
        answer += m * score[(i + 1) * m - 1]

    return answer",,2023. 8. 31,46,2
2023. 8. 31 오후 3:21:17,남의서,AI,47 - 모의고사완전탐색,"def solution(answers):
    answer = []
    cycle1 = [1, 2, 3, 4, 5]
    cycle2 = [2, 1, 2, 3, 2, 4, 2, 5]
    cycle3 = [3, 3, 1, 1, 2, 2, 4, 4, 5, 5]
    l = [0, 0, 0]
    for i in range(len(answers)):
        if answers[i] == cycle1[i % 5]:
            l[0] += 1
        if answers[i] == cycle2[i % 8]:
            l[1] += 1
        if answers[i] == cycle3[i % 10]:
            l[2] += 1
    for i in range(3):
        if l[i] == max(l):
            answer.append(i+1)
    return answer",,2023. 8. 31,47,2
2023. 8. 31 오후 3:36:33,남의서,AI,48 - 소수 만들기,"import itertools
def solution(nums):

    s = list(itertools.combinations(nums, 3))
    for i in range(len(s)):
        s[i] = sum(s[i])
        for j in range(2, s[i]):
            if s[i] % j == 0:
                s[i] = 0
                break
    # [실행] 버튼을 누르면 출력 값을 볼 수 있습니다.
    return len(s) - s.count(0)
",,2023. 8. 31,48,2
2023. 8. 31 오후 4:09:14,조영오,Unity,34 - 최소직사각형,"using System;

public class Solution {
    public int solution(int[,] sizes) {
        int answer = 0;
        int length1 = 0;
        int length2 = 0;
        int first = 0;
        int second = 0;
        
        for(int i = 0; i < sizes.GetLength(0); i++){
            if(sizes[i,0] > sizes[i,1]){
                first = sizes[i,0];
                second = sizes[i,1];
            }
            else{
                first = sizes[i,1];
                second = sizes[i,0];
            }
            
            if(length1 < first){length1 = first;}
            if(length2 < second){length2 = second;}
        }
        
        answer = length1 * length2;
        
        return answer;
    }
}",,2023. 8. 31,34,2
2023. 8. 31 오후 4:25:35,조영오,Unity,35 - 시저 암호,"public class Solution {
    public string solution(string s, int n) {
        
        char[] code = s.ToCharArray();
        
        //n 만큼 아스키 코드를 더한다. 소문자건 대문자건 z 를 초과한다면, 
        //다시 a로 돌아가서 남은 횟수만큼 민다
        for(int i = 0 ; i < code.Length; i++){
            //알파벳 대문자라면
            if(code[i] >= 65 && code[i] <= 90){
                code[i] += (char)n;
                
                if(code[i] > 90) {code[i] -= (char)26;}
            }
            //알파벳 소문자라면
            else if(code[i] >= 97 && code[i] <= 122){
                code[i] += (char)n;
                
                if(code[i] > 122) {code[i] -= (char)26;}
            }
        }
        
        string answer = new string(code);
        
        return answer;
    }
}",,2023. 8. 31,35,2
2023. 8. 31 오후 4:58:23,김민재,AI,8 - 문자열을 정수로 바꾸기,"def solution(s):
    answer = 0

    answer = int(s)
    return answer",https://github.com/Kim-Minjae9872/Code_Kata,2023. 8. 30,8,1
2023. 8. 31 오후 4:59:11,김민재,AI,11 - 하샤드 수,"def solution(x):
    answer = True
    plus = 0

    for h in str(x):
        plus += int(h)
    if x % plus == 0:
        return answer
    else:
        return False",https://github.com/Kim-Minjae9872/Code_Kata,2023. 8. 31,11,1
2023. 8. 31 오후 5:07:42,조영오,Unity,36 - 숫자 문자열과 영단어,"using System;
using System.Collections.Generic;

public class Solution {
    public int solution(string s) {
        int answer = 0;
        string num = """";
        List<int> numList = new List<int>();
        
        foreach(char c in s){
            //현재 문자가 알파벳이라면
            if(c >= 'a' && c <= 'z'){
                num += c;
                //현재까지의 알파벳 문자열을 숫자로 변환 및 삽입 시도. 성공했다면 누적 문자열 초기화
                if(ConvertNum(num, numList)){
                    Console.Write($""{numList[numList.Count-1]} "");
                    num = """";
                }
                //실패했다면 그대로 넘김.
                else{
                    
                }
            }
            //현재 문자가 숫자라면 삽입.
            else{
                numList.Add((int)Char.GetNumericValue(c));
                Console.Write($""{numList[numList.Count-1]} "");
            }
        }
        
        for(int i = 0; i < numList.Count; i++){
            answer += numList[i] * (int)Math.Pow(10,numList.Count-(i+1));
        }
        
        return answer;
    }
    
    public static bool ConvertNum(string str, List<int> numList){
        
        bool isDone = true;
        
        switch(str){
            case ""zero"":{
                numList.Add(0);
                break;
            }
            case ""one"":{
                numList.Add(1);
                break;
            }
            case ""two"":{
                numList.Add(2);
                break;
            }
            case ""three"":{
                numList.Add(3);
                break;
            }
            case ""four"":{
                numList.Add(4);
                break;
            }
            case ""five"":{
                numList.Add(5);
                break;
            }
            case ""six"":{
                numList.Add(6);
                break;
            }
            case ""seven"":{
                numList.Add(7);
                break;
            }
            case ""eight"":{
                numList.Add(8);
                break;
            }
            case ""nine"":{
                numList.Add(9);
                break;
            }
            default:{
                isDone = false;
                break;
            }
        }
        return isDone;
    }
}",,2023. 8. 31,36,2
2023. 8. 31 오후 5:13:21,최석준,Unity,8 - 문자열을 정수로 바꾸기,"int solution(const char* s) {
    int answer = atoi(s);
    return answer;
}",,2023. 8. 31,8,1
2023. 8. 31 오후 7:43:04,조영오,Unity,37 - 문자열 내 마음대로 정렬하기,"public class Solution {
    public string[] solution(string[] strings, int n) {
        string temp = """";
        int shorter = 0;
        for (int i = 0; i < strings.Length; i++)
            {
                for (int j = i + 1; j < strings.Length; j++)
                {
                    //인덱스 n 의 문자를 기준으로 정렬.
                    if (strings[i][n] > strings[j][n])
                    {
                        temp = strings[i];
                        strings[i] = strings[j];
                        strings[j] = temp;
                    }
                    //인덱스 n 의 문자가 동일하다면, 사전순으로 정렬.
                    else if (strings[i][n] == strings[j][n])
                    {
                        //길이가 더 짧은 쪽의 길이를 구하고
                        if(strings[i].Length > strings[j].Length){shorter = strings[j].Length;}
                        else{shorter = strings[i].Length;}

                        for (int k = 0; k < shorter; k++)
                        {
                            if (strings[i][k] > strings[j][k])
                            {
                                temp = strings[i];
                                strings[i] = strings[j];
                                strings[j] = temp;
                                break;
                            }
                            else if (strings[i][k] < strings[j][k])
                            {
                                break;
                            }
                            else{}
                        }
                    }
                }
            }
        
        string[] answer = strings;
        return answer;
    }
}",,2023. 8. 31,37,2
2023. 8. 31 오후 7:44:29,김민재,AI,12 - 두 정수 사이의 합,"def solution(a, b):
    answer = 0
    while True:
        if a == b:
            answer = answer + a
            break

        elif a < b:
            answer = answer + a
            a = a+1
            continue
        elif a > b:
            answer = answer + b
            b = b+1
            continue

    return answer
",https://github.com/Kim-Minjae9872/Code_Kata,2023. 8. 31,12,1
2023. 8. 31 오후 8:47:40,안소정,Unity,15 - 나누어 떨어지는 숫자,"using System;
using System.Collections.Generic;

public class Solution {
    public int[] solution(int[] arr, int divisor) {
        //리스트 만들기
        List<int> X = new List<int>();
        //나누어지면 리스트에 추가
        for (int i = 0; i < arr.Length; i++)
        {
            if (arr[i] % divisor == 0)
                X.Add(arr[i]);
        }
        //0개면 -1, 배열 정리해서 출력
        if (X.Count == 0)
            {
                return new int[] {-1};
            }
            X.Sort();
            return X.ToArray();
    }
}",,2023. 8. 31,15,1
2023. 8. 31 오후 9:04:36,이하택,Unity,11 - 하샤드 수,"public class Solution 
{
    public bool solution(int x) 
    {
        bool answer;
        
        int hashNum = Hash(x);
        
        if(x % hashNum == 0)
        {
            answer = true;
        }
        else
        {
            answer = false;
        }
        return answer;
    }
    
    public int Hash(int h)
    {
        int sum = 0;
        while(true)
        {
            sum += h % 10;
            h /= 10;
            
            if(h < 10)
            {
                sum += h % 10;
                return sum;
            }
        }
    }
}",https://github.com/LeeHataeg/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12947.%E2%80%85%ED%95%98%EC%83%A4%EB%93%9C%E2%80%85%EC%88%98,2023. 8. 31,11,1
2023. 8. 31 오후 9:05:37,이하택,Unity,9 - 정수 제곱근 판별,"using System;

public class Solution 
{
    public long solution(long n) 
    {
        var sqrtNum = Math.Sqrt(n);
        
        if(sqrtNum - (long)sqrtNum == 0)
        {
            long answer = (long)sqrtNum;
            answer += 1;
            answer *= answer;
            return answer;
        }
        else
        {
            return -1;
        }
    }
}",https://github.com/LeeHataeg/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12934.%E2%80%85%EC%A0%95%EC%88%98%E2%80%85%EC%A0%9C%EA%B3%B1%EA%B7%BC%E2%80%85%ED%8C%90%EB%B3%84,2023. 8. 31,9,1
2023. 8. 31 오후 9:07:07,이하택,Unity,14 - 서울에서 김서방 찾기,"public class Solution 
{
    public string solution(string[] seoul) 
    {
        int index = 0;
        foreach(string k in seoul)
        {
            if(k == ""Kim"")
            {
                break;
            }
            else
            {
                index++;
            }
        }
            
        string answer = $""김서방은 {index}에 있다"";
        return answer;
    }
}",https://github.com/LeeHataeg/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12919.%E2%80%85%EC%84%9C%EC%9A%B8%EC%97%90%EC%84%9C%E2%80%85%EA%B9%80%EC%84%9C%EB%B0%A9%E2%80%85%EC%B0%BE%EA%B8%B0,2023. 8. 31,14,1
2023. 8. 31 오후 9:22:39,배인호,Unity,34 - 최소직사각형,"using System;

public class Solution
{
    public int solution(int[,] input)
    {
        int answer = 0;
        int xIndex = input.GetLength(0);
        int beforeTransformNums;
        int afterTransformNums;

        int[] minSize = { input[0, 0], input[0, 1] };

        for (int i = 1; i < xIndex; i++)
        {
            beforeTransformNums =
                CompareEachNums(minSize[0], input[i, 0]) + CompareEachNums(minSize[1], input[i, 1]);
            afterTransformNums =
                CompareEachNums(minSize[0], input[i, 1]) + CompareEachNums(minSize[1], input[i, 0]);

            if (beforeTransformNums < afterTransformNums)
            {
                SetEachNums(minSize, input[i, 1], input[i, 0]);
            }
            else
            {
                SetEachNums(minSize, input[i, 0], input[i, 1]);
            }
        }

        answer = minSize[0] * minSize[1];

        return answer;
    }

    public void SetEachNums(int[] minSize, int input0, int input1)
    {
        if (minSize[0] < input0)
        {
            minSize[0] = input0;
        }

        if (minSize[1] < input1)
        {
            minSize[1] = input1;
        }
    }

    public int CompareEachNums(int a, int b)
    {
        if ((a - b) >= 0)
        {
            return 0;
        }
        else
        {
            return a - b;
        }
    }
}
",https://github.com/cutlake2000/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/86491.%E2%80%85%EC%B5%9C%EC%86%8C%EC%A7%81%EC%82%AC%EA%B0%81%ED%98%95,2023. 8. 31,34,2
2023. 8. 31 오후 9:40:28,이솔,AI,19 - 제일 작은 수 제거하기,"def solution(arr):
    if len(arr) == 1:
        return [-1]
    else:
        array_num = sorted(arr, reverse=True)[-1]
        arr.remove(array_num)
        return arr",,2023. 8. 31,19,1
2023. 8. 31 오후 9:41:02,이솔,AI,20 - 가운데 글자 가져오기,"def solution(s):
    answer = """"
    mid_index = len(s)//2

    if len(s) % 2:
        answer = s[mid_index]
    else:
        answer = s[mid_index-1:mid_index+1]

    return answer",,2023. 8. 31,20,1
2023. 8. 31 오후 9:41:28,이솔,AI,21 - 수박수박수박수박수박수?,"def solution(n):
    answer = ''

    for i in range(1,n+1):
        if i % 2:
            answer += '수'
        else:
            answer += '박'

    return answer",,2023. 8. 31,21,1
2023. 8. 31 오후 10:13:43,배인호,Unity,35 - 시저 암호,"public class Solution
{
    public string solution(string s, int n)
    {
        string answer = """";
        char[] array = s.ToCharArray();
        int index = array.Length;

        for (int i = 0; i < index; i++)
        {
            if ('A' <= array[i] && array[i] <= 'Z')
            {
                if ((array[i] + n) > 'Z')
                {
                    array[i] = (char)(array[i] + n - 26);
                }
                else
                {
                    array[i] = (char)(array[i] + n);
                }
            }
            else if ('a' <= array[i] && array[i] <= 'z')
            {
                if ((array[i] + n) > 'z')
                {
                    array[i] = (char)(array[i] + n - 26);
                }
                else
                {
                    array[i] = (char)(array[i] + n);
                }
            }
        }

        answer = new string(array);

        return answer;
    }
}
",https://github.com/cutlake2000/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12926.%E2%80%85%EC%8B%9C%EC%A0%80%E2%80%85%EC%95%94%ED%98%B8,2023. 8. 31,35,2
2023. 8. 31 오후 10:19:19,이성,Unity,6 - x만큼 간격이 있는 n개의 숫자,"public class Solution {
    public long[] solution(int x, int n) {
        long[] answer = new long[n];
        //0부터 n까지 반복
        for(int i=0; i<n; i++)
        {
            //i가 첫 번째 가 아니면 이전 anwerd와 x값을 더함
            if(i!=0)
                answer[i] += answer[i-1] + x;
            //i가 0이면 첫 번째 x 대입
            else
                answer[i] = x;
        }
        return answer;
    }
}",https://github.com,2023. 8. 31,6,1
2023. 9. 1 오전 8:52:35,김대열,Unity,113 - 하노이의 탑,"#include <string>
#include <vector>

using namespace std;

vector<vector<int>> hanoi(int n, int from, int to, int dest){
    vector<vector<int>> answer;
    vector<int> movement;
    
    if( n == 1 ){
        movement.push_back(from);
        movement.push_back(dest);
        answer.push_back(movement);
        return answer;
    }
    
    
    auto a1 = hanoi(n-1, from, dest, to);
    for(int i =0;i<a1.size();i++){
        answer.push_back(a1[i]);
    }
    
    auto a2 = hanoi(1, from, to, dest);
    for(int i =0;i<a2.size();i++){
        answer.push_back(a2[i]);
    }
    
    auto a3 = hanoi(n-1, to, from, dest);
    for(int i =0;i<a3.size();i++){
        answer.push_back(a3[i]);
    }
    return answer;
}

vector<vector<int>> solution(int n) {
    vector<vector<int>> answer = hanoi(n,1,2,3);
    return answer;
}
",,2023. 9. 1,113,5
2023. 9. 1 오전 8:58:07,박민호,Unity,31 - 이상한 문자 만들기,"
public class Solution {
    public string solution(string s) {
        string answer = """";
        int num = 0;

        for(int i = 0; i < s.Length; i++)
        {
            answer += num % 2 == 0 ? s[i].ToString().ToUpper() : s[i].ToString().ToLower();

            num = s[i] == ' '? 0 : num + 1;

        }


        return answer;
    }
}",,2023. 9. 1,31,2
2023. 9. 1 오전 9:01:44,곽정원,AI,6 - x만큼 간격이 있는 n개의 숫자,"def solution(x, n):
    answer = []
    
    for i in range(n) :
        answer.append(x*(i+1))
    
    return answer",,2023. 9. 1,6,1
2023. 9. 1 오전 9:04:24,김경원,Unity,19 - 제일 작은 수 제거하기,"using System.Collections.Generic;
using System.Linq;
public class Solution {
    public int[] solution(int[] arr) {
        List<int> arr_list = new List<int>(arr);
        int min = arr.Min();
        arr_list.RemoveAll(num => num == min);
        if(arr_list.Count ==0)
        {
            arr_list.Add(-1);
        }
        return arr_list.ToArray();
    }
}",,2023. 9. 1,19,1
2023. 9. 1 오전 9:05:24,김경원,Unity,20 - 가운데 글자 가져오기,"
public class Solution {
    public string solution(string s) {
        string answer = """";
        
        // 짝수인경우 - 문자열 길이의 절반과 -1까지, 2개가 중간글자
        if(s.Length %2 == 0){
        // 각 글자를 더해줌
            answer += s[s.Length / 2  - 1];
            answer += s[s.Length / 2];
        }
        else{ // 홀수는 문자열길이의 절반이 중간글자
            answer += s[s.Length / 2];
        }

        return answer;
    }
}",,2023. 9. 1,20,1
2023. 9. 1 오전 9:07:00,김경원,Unity,21 - 수박수박수박수박수박수?,"public class Solution {
    public string solution(int n) {
        string answer = """";
        
        //1부터 n까지 반복하여 i값을 2로 나눈 나머지로 홀수와 짝수를 판별
        for(int i=1; i<=n; i++)
        {
            //짝수이면 ""박"" 을 더함
            if(i%2==0)
            {
                answer += ""박"";
            }
            //홀수이면 ""수"" 을 더함
            else
            {
                answer += ""수"";
            }
        }
        return answer;
    }
}",,2023. 9. 1,21,1
2023. 9. 1 오전 9:07:12,노재우,Unity,21 - 수박수박수박수박수박수?,"public class Solution
{
    public string solution(int n)
    {
        string answer = """";
        char su = '수';
        char park = '박';
        for (int i = 0; i < n; i++)
        {
            if (i%2 ==0 || i==0)
            {
                answer+= su;
            }
            else if (i%2==1)
            {
                answer += park;
            }
        }

        return answer;
    }
}",,2023. 9. 1,21,1
2023. 9. 1 오전 9:07:18,조범준,Unity,32 - 삼총사,"using System;

public class Solution {
    public int solution(int[] number) {
        int answer = 0;
        for(int i = 0; i < number.Length; i++){
            for(int j = i+1; j < number.Length; j++){
                for(int k = j+1; k < number.Length; k++){
                    if((number[i]+number[j]+number[k])==0){
                        answer++;
                    }
                }
            }
        }
        return answer;
    }
}",https://github.com/KimMaYa1/BaekJoonEx/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1,2023. 9. 1,32,2
2023. 9. 1 오전 9:07:18,김민상,Unity,40 - 가장 가까운 같은 글자,"using System.Collections.Generic;

public class Solution
{
    public int[] solution(string s)
    {
        List<int> answer = new List<int>();
        Dictionary<char, int> dict = new Dictionary<char, int>();

        for (int i = 0; i < s.Length; i++)
        {
            int now = dict.ContainsKey(s[i]) ? i - dict[s[i]] : -1;
            answer.Add(now);

            dict[s[i]] = i;
        }

        return answer.ToArray();
    }
}",,2023. 9. 1,40,2
2023. 9. 1 오전 9:07:31,최지연,AI,22 - 내적,"def solution(a, b):
    answer = []
    for i in range(len(a)):
        result = a[i]*b[i]
        answer.append(result)
    return sum(answer)",https://github.com/jiyeonCoder/algorithmPractice/blob/main/22.%20%EB%82%B4%EC%A0%81.py,2023. 9. 1,22,1
2023. 9. 1 오전 9:07:46,김경원,Unity,22 - 내적,"using System;

public class Solution {
    public int solution(int[] a, int[] b) {
        int answer = 0;
        //반복문을 통해 해당 배열순서의 정수를 곱해 answer에 더함.
        for(int i=0; i<a.Length; i++)
        {
            answer += a[i] * b[i];
        }
        return answer;
    }
}",,2023. 9. 1,22,1
2023. 9. 1 오전 9:08:04,김경환,Unity,46 - 과일 장수,"using System;

public class Solution {
    public int solution(int k, int m, int[] score) {
        Array.Sort(score);
        Array.Reverse(score);
        
        int answer = 0;
        
        for(int i = 0; i < score.Length / m; i++)
        {
            answer += score[i * m + m - 1] * m;
        }
        
        return answer;
    }
}",https://github.com/kkh9700/algorithm,2023. 9. 1,46,2
2023. 9. 1 오전 9:09:28,명세인,AI,28 - 직사각형 별찍기,"a, b = map(int, input().strip().split(' '))

for i in range(0,b):
    print('*'*a)",https://github.com/playersein/Coding_Test/commit/41cfc243a990c1e5bfa773249063a3d222b0ed5e,2023. 9. 1,28,1
2023. 9. 1 오전 9:10:37,조병우,Unity,9 - 정수 제곱근 판별,"public class Solution 
{
    public long solution(long n) 
    {
        long answer = -1;
        
        for (long x = n; x >= 1; x--) 
        {
            if (n % x == 0) 
            {
                if(n / x == x)
                {
                answer = (x + 1) * (x + 1);
                }
            }
        }
        return answer;
    }
}",,2023. 9. 1,9,1
2023. 9. 1 오전 9:11:07,김정규,AI,21 - 수박수박수박수박수박수?,"def solution(n):
    answer = ''
    for i in range(n):
        if i % 2 == 0:
            answer += ""수""
        else:
            answer += ""박""
    return answer",https://github.com/JungGyu00/algorithm,2023. 9. 1,21,1
2023. 9. 1 오전 9:11:12,노재우,Unity,22 - 내적,"public class Solution
{
    public int solution(int[] a, int[] b)
    {
        int answer = 0;

        for (int i = 0; i < a.Length; i++)
        {
            answer += a[i] * b[i];
        }
        return answer;
    }
}",,2023. 9. 1,22,1
2023. 9. 1 오전 9:11:25,이솔,AI,22 - 내적,"def solution(a, b):
    answer = 0
    for i in range(len(a)):
        answer += a[i]*b[i]
    return answer",,2023. 9. 1,22,1
2023. 9. 1 오전 9:11:25,윤지연,Unity,9 - 정수 제곱근 판별,"public class Solution {
    public long solution(long n) {
        for(long i = 1; i <= n; i++)
        {
            if(i * i == n)
            {
                return (i+1)*(i+1);
            }
        }
        return -1;
    }
}",https://github.com/jungbosong/Codekata/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12934.%E2%80%85%EC%A0%95%EC%88%98%E2%80%85%EC%A0%9C%EA%B3%B1%EA%B7%BC%E2%80%85%ED%8C%90%EB%B3%84,2023. 9. 1,9,1
2023. 9. 1 오전 9:11:27,이세진,Unity,19 - 제일 작은 수 제거하기,"using System.Collections.Generic;
using System.Linq;

public class Solution {
    public int[] solution(int[] arr) {
        List<int> arr_list = new List<int>(arr);
        
        if(arr.Length==1) {arr[0] = -1; return arr;}
        
         int min = arr.Min();

         arr_list.RemoveAll(num => num == min);
        
        
        return arr_list.ToArray();
    }
}",,2023. 9. 1,19,1
2023. 9. 1 오전 9:11:40,이주연,Unity,37 - 문자열 내 마음대로 정렬하기,"#include <string>
#include <vector>
#include <algorithm>

using namespace std;

int num;
bool cmp(string a, string b)
{
    if(a[num] == b[num])
    {
        return a < b;
    }
    else
    {
        return a[num] < b[num];
    }
}

vector<string> solution(vector<string> strings, int n) {
    num = n;
    sort(strings.begin(), strings.end(), cmp);
    return strings;
}",,2023. 9. 1,37,2
2023. 9. 1 오전 9:11:50,이솔,AI,23 - 약수의 개수와 덧셈,"def solution(left, right):
    answer = 0
    for num in range(left,right+1):
        count = 0
        for i in range(1,num+1):
            if not num % i:
                count += 1
        if count % 2:
            answer -= num
        else:
            answer += num
    return answer",,2023. 9. 1,23,1
2023. 9. 1 오전 9:12:06,김민태,Unity,37 - 문자열 내 마음대로 정렬하기,"using System;
public class Solution {
    public string[] solution(string[] strings, int n) {
        int len = strings.Length;
        string[] answer = new string[len];
        for(int i=0; i<len; i++)
        {
            answer[i] = (strings[i][n]) + strings[i];
        }
        
        Array.Sort(answer);
        
        for(int j=0; j<len; j++)
        {
            answer[j] = answer[j].Substring(1);
        }
        return answer;
    }
}",https://github.com/rlaalsxo/CodingTest,2023. 9. 1,37,2
2023. 9. 1 오전 9:12:14,이솔,AI,24 - 문자열 내림차순으로 배치하기,"def solution(s):
    answer = ''.join(sorted(s, reverse=True))
    return answer",,2023. 9. 1,24,1
2023. 9. 1 오전 9:13:59,김예준,Unity,36 - 숫자 문자열과 영단어,"using System;

public class Solution {
    public int solution(string s) {
        int answer = 0;
        string res = """";
        
        for (int i = 0; i < s.Length; i++)
        {
            if (s[i] >= '0' && s[i] <= '9') res += s[i];
            else if (s[i] == 'z')
            {
                res += '0';
                i += 3;
            }
            else if (s[i] == 'o')
            {
                res += '1';
                i += 2;
            }
            else if (s[i] == 't')
            {
                if (s[i+1] == 'w')
                {
                    res += '2';
                    i += 2;
                }
                else
                {
                    res += '3';
                    i += 4;
                }
            }
            else if (s[i] == 'f')
            {
                if (s[i+1] == 'o')
                {
                    res += '4';
                    i += 3;
                }
                else
                {
                    res += '5';
                    i += 3;
                }
            }
            else if (s[i] == 's')
            {
                if (s[i+1] == 'i')
                {
                    res += '6';
                    i += 2;
                }
                else
                {
                    res += '7';
                    i += 4;
                }
            }
            else if (s[i] == 'e')
            {
                res += '8';
                i += 4;
            }
            else
            {
                res += '9';
                i += 3;
            }
        }
        
        answer = Int32.Parse(res);
        
        return answer;
    }
}",,2023. 9. 1,36,2
2023. 9. 1 오전 9:14:05,양덕영,AI,31 - 이상한 문자 만들기,"def solution(s):
    answer = ''
    for word in s.split("" ""):
        n = ''
        for i in range(len(word)):
            if i%2 == 0 :
                n += word[i].upper()
            else :
                n += word[i].lower()
        answer += (n + "" "")
    return answer[0:-1]",https://github.com/DeokYoung980130/Ai_Project2023-08-07/tree/main,2023. 9. 1,31,2
2023. 9. 1 오전 9:14:44,이세진,Unity,21 - 수박수박수박수박수박수?,"public class Solution {
    public string solution(int n) {
        string answer = """";
        
        for(int i = 2; i  < n + 2 ; i ++ )
        {

            if(i % 2 == 0)
            {
                answer += ""수"";
            }
            else
            {
                answer += ""박"";
            }
        }

        return answer;
    }
}",,2023. 9. 1,21,1
2023. 9. 1 오전 9:15:30,최장범,Unity,23 - 약수의 개수와 덧셈,"using System;

public class Solution {
    public int solution(int left, int right) {
        int answer = 0;
        for(int i =left; i<=right; i++)
        {
            int count =0;
            for(int j=1; j<=i; j++)
            {
                if(i%j==0) count++;
            }
            if(count%2==0) answer += i;
            else answer -= i;
        }
        return answer;
    }
}",,2023. 9. 1,23,1
2023. 9. 1 오전 9:16:27,이홍준,Unity,31 - 이상한 문자 만들기,"using System;

public class Solution {
    public string solution(string s) {
        string answer = """";
        string[] temp = s.Split();
        
        for(int i = 0; i < temp.Length; i++)
        {
            for (int j = 0; j < temp[i].Length; j++)
            {
                if (j % 2 == 0)
                {
                    answer += Char.ToUpper(temp[i][j]);
                }
                else
                {
                    answer += Char.ToLower(temp[i][j]);
                }
            }
            if(i < temp.Length - 1)
            {
                            answer += "" "";
            }
        }
        return answer;
    }
}",https://github.com/dlghdwns97/Study/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12930.%E2%80%85%EC%9D%B4%EC%83%81%ED%95%9C%E2%80%85%EB%AC%B8%EC%9E%90%E2%80%85%EB%A7%8C%EB%93%A4%EA%B8%B0,2023. 9. 1,31,2
2023. 9. 1 오전 9:17:27,신우석,Unity,49 - 덧칠하기,"using System;

public class Solution {
    public int solution(int n, int m, int[] section) {
        int offset = m * -1;
        int answer = 0;
        foreach (int i in section) {
            if (offset + m <= i) {
                offset = i;
                ++answer;
            }
        }
        return answer;
    }
}",https://github.com/seoksii/AlgorithmCodeKata/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/unrated/161989.%E2%80%85%EB%8D%A7%EC%B9%A0%ED%95%98%EA%B8%B0,2023. 9. 1,49,2
2023. 9. 1 오전 9:18:02,김진규,Unity,35 - 시저 암호,"using System;
public class Solution {
    public string solution(string s, int n) {
        string answer = """";
        char[] alpha = s.ToCharArray();
        for(int i =0; i< alpha.Length;i++)
        {
            char c = alpha[i];
            if(char.IsLetter(c))
            {
                char baseChar = char.IsLower(c) ? 'a' : 'A';
                alpha[i] = (char)((((c-baseChar)+n)%26)+baseChar);
            }
        }
        answer = new String(alpha);
        return answer;
    }
}",,2023. 9. 1,35,2
2023. 9. 1 오전 9:18:07,박민혁,Unity,29 - 최대공약수와 최소공배수,"public class Solution {
    public int[] solution(int n, int m) {
        
        int number=n<m?n:m;
        int min=0;
        int max;
        for(int i=1;i<=number;++i)
        {
            if(n%i==0 && m%i==0)
            {
                min=i;
            }
        }
        max=n*m/min;
         int[] answer = new int[] {min,max};
        return answer;
    }
}",,2023. 9. 1,29,1
2023. 9. 1 오전 9:18:19,한병권,Unity,48 - 소수 만들기,"using System;
using System.Collections.Generic;

class Solution
{
    public int solution(int[] nums)
    {
        int answer = 0;
        List<int> list = new List<int>();
        
        for(int i = 1; i < 3000; i++)
        {
            int c = 0;
            for(int j = 1; j <= i; j++)
            {
                if(i%j == 0)
                {
                    c++;
                }
            }
            
            if(c==2)
            {
                list.Add(i);
            }
        }
        
        
        for(int i = 0; i < nums.Length; i++)
        {
            for(int j = i + 1; j < nums.Length; j++)
            {
                for(int k = j + 1; k < nums.Length; k++)
                {
                    int temp = nums[i] + nums[j] + nums[k];
                    if(list.Contains(temp))
                    {
                        answer++;
                    }
                }
            }
        }

        return answer;
    }
}",https://github.com/hbg9212/AlgorithmCodekata,2023. 9. 1,48,2
2023. 9. 1 오전 9:18:40,김정규,AI,22 - 내적,"def solution(a, b):
    answer = 0
    for i in range(len(a)):
        answer += a[i] * b[i]
    return answer",https://github.com/JungGyu00/algorithm,2023. 9. 1,22,1
2023. 9. 1 오전 9:18:54,김정민,Unity,50 - 기사단원의 무기,"public int solution(int number, int limit, int power)
            {
                int answer = 0;

                for (int i = 1; i <= number; i++)
                {
                    int curPower = GetDividerNum(i, limit);
                    if (curPower <= limit) answer += curPower;
                    else answer += power;
                }

                return answer;
            }

            public static int GetDividerNum(int num, int limit)
            {
                int count = 0;
                for (int i = 1; i * i <= num; i++)
                {
                    if (num % i == 0)
                    {
                        count++;
                        if (i * i < num) count++;
                    }
                    if (count > limit) break;
                }
                return count;
            }",https://github.com/j-miiin/Algorithm_Study/blob/main/SPARTA_ALGORITHM_2023/Level2/50_IronOfWeapon.cs,2023. 9. 1,50,2
2023. 9. 1 오전 9:19:08,노재우,Unity,23 - 약수의 개수와 덧셈,"public class Solution
{
    public int solution(int left, int right)
    {
        int answer = 0;
        for (int i = left; i <= right; i++)
        {
            int count = 1;
            for (int j = 1; j < i/2+1; j++)
            {
                if (i%j==0)
                {
                    count++;
                }
            }
            if (count % 2 ==0)
            {
                answer += i;
            }
            else if (count % 2 == 1)
            {
                answer -= i;
            }
        }
        return answer;
    }
}",,2023. 9. 1,23,1
2023. 9. 1 오전 9:20:22,김도현A,Unity,8 - 문자열을 정수로 바꾸기,"public class Solution {
    public int solution(string s) {
        int answer = 0;
        answer = int.Parse(s);
        return answer;
    }
}",,2023. 9. 1,8,1
2023. 9. 1 오전 9:20:39,신현주,Unity,29 - 최대공약수와 최소공배수,"using System;
public class Solution {
    public int[] solution(int n, int m) {
        int[] answer = new int[2];
        int tmp;
        if( n > m){
            tmp = n;
            n = m;
            m = tmp;
        }
        int min = UCL(n, m);
        int max = n * m / min;
        
        answer[0] = min; //최대공약수
        answer[1] = max;
        
        return answer;
    }
    public int UCL(int n, int m){
        if(m == 0){
            return n;
        }else{
            return UCL(m, n%m);
        }   
    }
}
",https://github.com/Shyunju/codeKata,2023. 9. 1,29,1
2023. 9. 1 오전 9:21:37,조범준,Unity,33 - 크기가 작은 부분,"using System;

public class Solution {
    public int solution(string t, string p) {
        int answer = 0;
        for(int i = 0; i <= t.Length- p.Length; i++){
             if(long.Parse(t.Substring(i,p.Length)) <= long.Parse(p)){
                 answer++;
             }
        }
        return answer;
    }
}",https://github.com/KimMaYa1/BaekJoonEx/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1,2023. 9. 1,33,2
2023. 9. 1 오전 9:21:39,양덕영,AI,32 - 삼총사,"from itertools import combinations

def solution(number):
    count = 0  # 삼총사의 수를 세는 변수

    # 학생들의 수 만큼 반복하며 가능한 모든 조합을 생성
    for comb in combinations(number, 3):
        if sum(comb) == 0:
            count += 1
    
    return count

# 예시 입력과 출력
student_numbers = [-2, 3, 0, 2, -5]
result = solution(student_numbers)
print(result)",https://github.com/DeokYoung980130/Ai_Project2023-08-07/tree/e0096ef30e417987a4ffc8a25339712093dcbc0f,2023. 9. 1,32,2
2023. 9. 1 오전 9:21:49,박민호,Unity,32 - 삼총사,"using System;

public class Solution {
    public int solution(int[] number) {
        int count=0;
        for(int i=0; i<number.Length-2;i++){
            for(int j=i+1;i<j&&j<number.Length-1;j++){
                for(int k = j+1;j<k&&k<number.Length;k++){                    
                    if (number[i]+number[j]+number[k]==0){
                        count++;
                    }
                }
            }
        }
        int answer = count;
        return answer;
    }
}",,2023. 9. 1,32,2
2023. 9. 1 오전 9:22:10,차명경,AI,14 - 서울에서 김서방 찾기,"def solution(seoul):
    return ""김서방은 "" + str(seoul.index('Kim')) + ""에 있다""",,2023. 9. 1,14,1
2023. 9. 1 오전 9:22:20,김도현B,Unity,33 - 크기가 작은 부분,"using System;

public class Solution {
    public int solution(string t, string p) {
        int answer = 0;
        long tLenght = t.Length;
        long pLenght = p.Length;
        long Count = tLenght - pLenght;
        for (long i = 0; i <= Count; i++)
            answer += long.Parse(t.Substring((int)i, (int)pLenght)) <= long.Parse(p) ? 1 : 0;
        return answer;
    }
}",https://github.com/subscriptioncat/Algorithm,2023. 9. 1,33,2
2023. 9. 1 오전 9:22:43,김지수,AI,18 - 없는 숫자 더하기,"def solution(numbers):
    answer = 0
    for i in range(0,10):
        if i not in numbers:
            answer += i
    return answer",,2023. 9. 1,18,1
2023. 9. 1 오전 9:22:46,이정환,Unity,29 - 최대공약수와 최소공배수,"public class Solution {
    public int[] solution(int n, int m) {
      int half;
      int min=1;

        if(m>=n)
        {
            half=m/2;

            if(half>n)
            {
                half=n;
            }
        }
        else
        {
          half=n/2;

          if(half>m)
          {
            half=m;
          }
        }

        while(half>1)
        {
            if(m%half==0 && n%half==0)
            {
                min=half;
                break;
            }
            half--;
        }





        int[] answer=new int[] {min , m*n/min};
        return answer;
    }
}",,2023. 9. 1,29,1
2023. 9. 1 오전 9:23:34,심우진,Unity,12 - 두 정수 사이의 합,"//두 정수 사이의 합
public class Solution
{
    public long solution(int a, int b)
    {
        if (a > b)
        {
            int temp = a;
            a = b;
            b = temp;
        }

        long sum = 0;
        for (int i = a; i <= b; i++)
        {
            sum += i;
        }

        return sum;
    }
}",https://github.com/agasa0624/at,2023. 9. 1,12,1
2023. 9. 1 오전 9:23:58,심우진,Unity,11 - 하샤드 수,"//하샤드의 수
public class Solution
{
    public bool solution(int x)
    {
        int sum = 0;
        int temp = x;

        while (temp > 0)
        {
            sum += temp % 10; // 현재 숫자의 마지막 자리를 합산
            temp /= 10;      // 숫자를 10으로 나누어 다음 자릿수로 이동
        }

        return x % sum == 0; // x가 자릿수의 합으로 나누어 떨어지면 true 반환
    }
}",https://github.com/agasa0624/at,2023. 9. 1,11,1
2023. 9. 1 오전 9:23:59,최장범,Unity,24 - 문자열 내림차순으로 배치하기,"using System;

public class Solution {
    public string solution(string s) {
        string answer = """";
        char[] chr_temp = s.ToCharArray();
        
        Array.Sort(chr_temp);
        Array.Reverse(chr_temp);
        
        answer = new string(chr_temp);
        
        return answer;
    }
}",,2023. 9. 1,24,1
2023. 9. 1 오전 9:24:02,이세진,Unity,20 - 가운데 글자 가져오기,"public class Solution {
    public string solution(string s) {
        string answer = """";

        if(s.Length % 2 == 1)
        {
            answer += s[(s.Length / 2)];
        }
        else
        {
            answer += s[(s.Length / 2) - 1];
            answer += s[(s.Length / 2)];
        }
        
        return answer;
    }
}",,2023. 9. 1,20,1
2023. 9. 1 오전 9:24:04,이선재,Unity,46 - 과일 장수,"#include <string>
#include <vector>
#include <algorithm>

using namespace std;

int solution(int k, int m, vector<int> score) {
    int answer = 0;
    
    sort(score.begin(), score.end(), greater<>());
    
    int count = 0;
    
    for(int i = 0; i < score.size(); i++){
        if(count == m-1){
            answer += score[i] * m;
            count = 0;
            
            continue;
        }
        
        count += 1;
    }
    
    return answer;
}",https://github.com/Lyrwhitt/Algorithm/blob/main/Programmers/LEVEL1/%EA%B3%BC%EC%9D%BC%20%EC%9E%A5%EC%88%98,2023. 9. 1,46,2
2023. 9. 1 오전 9:24:04,심명희,AI,20 - 가운데 글자 가져오기,"def solution(s):
    answer = ''
    if len(s) % 2 == 0:
        index=len(s)//2
        answer=(s[index-1]+s[index])
    else:
        index=len(s)//2
        answer=s[index]
    return answer",,2023. 9. 1,20,1
2023. 9. 1 오전 9:24:23,김강현,Unity,13 - 콜라츠 추측,"#include <stdio.h>
#include <stdbool.h>
#include <stdlib.h>

int solution(int num) 

{
    int answer = -1;
    int i = 01;
        if(num == 1)
    {
        answer = 0;
    }
    while(num !=1 )
    {
        if(num% 2 == 0)
        {
            num /=2;
        }
        else if(num%2 == 1)
        {
            num *= 3;
            num +=1;
        }
        else if( i > 500)
        {
            answer = -1;
            break;
        }
        answer = i;
        i++;
    }

    return answer;
}",,2023. 9. 1,13,1
2023. 9. 1 오전 9:24:27,장성림,Unity,34 - 최소직사각형,"using System;

public class Solution {
    public int solution(int[,] sizes) {
        int answer = 0;
        int maxWeight = 0;
        int maxHeight = 0;
        for (int i = 0; i < sizes.GetLength(0); i++){
            int big = sizes[i,0];
            int small = sizes[i,1];
            if (sizes[i,0] < sizes[i,1]){
                big = sizes[i,1];
                small = sizes[i,0];
            }
            if(maxWeight < big)
                maxWeight = big;
            if(maxHeight < small)
                maxHeight = small;
        }
        answer = maxWeight * maxHeight;
        return answer;
    }
}",https://github.com/hoobhoob,2023. 9. 1,34,2
2023. 9. 1 오전 9:25:57,김하늘,Unity,24 - 문자열 내림차순으로 배치하기,"using System;

public class Solution 
{
    public string solution(string s) 
    {
        char[] chars = s.ToCharArray();
        Array.Sort(chars);
        Array.Reverse(chars);

        string answer = new string(chars);
        return answer;
    }
}",,2023. 9. 1,24,1
2023. 9. 1 오전 9:26:11,강성호,Unity,44 - 2016년,"using System;
using System.Collections.Generic;
using System.Linq;

public class Solution {
    public string solution(int a, int b) {
        string answer = """";
			int sum = 0;
			int[] arr = new int[] {31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31  };
			string[] day = new string[] { ""SUN"", ""MON"", ""TUE"", ""WED"", ""THU"", ""FRI"", ""SAT"" };
			int cnt = 5;
			for(int i = 0; i < a - 1; i++)
			{
				sum += arr[i];
			}
			sum += b;

			for(int i = 0; i < sum; i++)
			{
				
				answer = day[cnt];
				cnt++;
				if (cnt == 7) cnt = 0;
			}
            
            return answer;
    }
}",,2023. 9. 1,44,2
2023. 9. 1 오전 9:26:15,김형중,Unity,21 - 수박수박수박수박수박수?,"public class Solution {
    public string solution(int n) {
        string answer = """";
        
        for(int i=1; i<=n; i++)
        {
            if(i%2==0)
            {
                answer += ""박"";
            }
            else
            {
                answer += ""수"";
            }
        }
        return answer;
    }
}",,2023. 9. 1,21,1
2023. 9. 1 오전 9:26:21,김경환,Unity,47 - 모의고사완전탐색,"using System;
using System.Linq;
using System.Collections.Generic;

public class Solution {
    public int[] solution(int[] answers) {
        int [] st1 = {1,2,3,4,5}; 
        int [] st2 = {2,1,2,3,2,4,2,5};
        int [] st3 = {3,3,1,1,2,2,4,4,5,5}; 
        
        int[] solve = new int[3];
        
        for(int i = 0 ; i < answers.Length; i++)
        {
            if(answers[i] == st1[i%5]) solve[0]++;
            if(answers[i] == st2[i%8]) solve[1]++; 
            if(answers[i] == st3[i%10]) solve[2]++;
        }
        
        int max = solve.Max();
        
        if(max == 0)
            return new int[] {};
        
        List<int> answer = new List<int>();
        
        if(solve[0] == max) answer.Add(1);
        if(solve[1] == max) answer.Add(2);
        if(solve[2] == max) answer.Add(3);
        
        return (int[])answer.ToArray();
    }
}",https://github.com/kkh9700/algorithm,2023. 9. 1,47,2
2023. 9. 1 오전 9:27:00,이선재,Unity,47 - 모의고사완전탐색,"#include <string>
#include <vector>
#include <algorithm>

using namespace std;

bool sortSupoza(pair<int, int> a, pair<int, int> b)
{
    if(a.second == b.second)
    {
        return a.first < b.first;
    }
    else
    {
        return a.second > b.second;
    }
}

vector<int> solution(vector<int> answers) {
    
    int pattern1[5] = {1, 2, 3, 4, 5};
    int pattern2[8] = {2, 1, 2, 3, 2, 4, 2, 5};
    int pattern3[10] = {3, 3, 1, 1, 2, 2, 4, 4, 5, 5};
    
    vector<pair<int, int>> supoza;
    
    vector<int> answer;
    
    supoza.push_back(make_pair(1, 0));
    supoza.push_back(make_pair(2, 0));
    supoza.push_back(make_pair(3, 0));
    
    for(int i = 0; i < answers.size(); i++)
    {
        if(answers[i] == pattern1[i % 5])
        {
            supoza[0].second++;
        }
        if(answers[i] == pattern2[i % 8])
        {
            supoza[1].second++;
        }
        if(answers[i] == pattern3[i % 10])
        {
            supoza[2].second++;
        }
    }   
    
    sort(supoza.begin(), supoza.end(), sortSupoza);
    
    int max = 0;
    
    for(int i = 0; i < supoza.size(); i++)
    {   
        if(supoza[i].second >= max)
        {
            answer.push_back(supoza[i].first);
            max = supoza[i].second;
        }
        else
            break;
    }
    
    return answer;
}",https://github.com/Lyrwhitt/Algorithm/blob/main/Programmers/LEVEL1/%EB%AA%A8%EC%9D%98%EA%B3%A0%EC%82%AC,2023. 9. 1,47,2
2023. 9. 1 오전 9:27:04,박준규,Unity,19 - 제일 작은 수 제거하기,"using System;
using System.Linq;
using System.Collections.Generic;
public class Solution 
{
    public int[] solution(int[] arr) 
    {
        List<int> arr_list = new List<int>(arr);
        int min = arr.Min();
        arr_list.RemoveAll(num => num == min);
        if(arr_list.Count ==0)
        {
            arr_list.Add(-1);
        }
        return arr_list.ToArray();
    }
}",,2023. 9. 1,19,1
2023. 9. 1 오전 9:27:07,조영오,Unity,38 - K번째수정렬,"using System;
using System.Collections.Generic;

public class Solution {
    public int[] solution(int[] array, int[,] commands) {
        List<int> list = new List<int>();
        
        //commands 의 행 단위로 루프 
        for(int index = 0 ; index < commands.GetLength(0) ; index++){
            int i = commands[index,0];
            int j = commands[index,1];
            int k = commands[index,2];
            int newArrLength = j-i+1;
            
            //규칙대로 부분배열 구하기
            int[] newArr = new int[newArrLength];
            Array.Copy(array, i-1, newArr, 0, newArrLength);
            
            //정렬 후 해당 원소를 리스트에 추가
            Array.Sort(newArr);
            list.Add(newArr[k-1]);
        }
        
        //정답 배열로 옮김
        int[] answer = list.ToArray();
        
        return answer;
    }
}",,2023. 9. 1,38,2
2023. 9. 1 오전 9:28:15,우민규,Unity,18 - 없는 숫자 더하기,"using System;
using System.Linq; //sum사용

public class Solution {
    public int solution(int[] numbers) {
        int answer = -0;
        //1~10까지의 값 합산 answer에 넣어줌 
        for(int i = 0; i < 10; i++)
        {
            answer += i;
        }
        //answer에 numbers배열의 모든값을 더한만큼 빼줌
        answer -= numbers.Sum();
        return answer;
    }
}",https://github.com/Woomingyu/Programmers,2023. 9. 1,18,1
2023. 9. 1 오전 9:28:21,이기호,AI,16 - 음양 더하기,"def solution(absolutes, signs):
    answer = 0

    for i in range(len(absolutes)):
        if signs[i]:
            answer += absolutes[i]
        else:
            answer -= absolutes[i]
    return (answer)",,2023. 9. 1,16,1
2023. 9. 1 오전 9:28:46,이세진,Unity,22 - 내적,"using System;

public class Solution {
    public int solution(int[] a, int[] b) {
        int answer = 0;
        
        for(int i = 0; i < a.Length; i++)
        {
            answer += (a[i]*b[i]);
        } 
        
        return answer;
    }
}",,2023. 9. 1,22,1
2023. 9. 1 오전 9:28:59,이소이,Unity,33 - 크기가 작은 부분,"using System;

public class Solution {
    public int solution(string t, string p) {
        int answer = 0;
        
        int tLen = t.Length;
        int pLen = p.Length;
        for (int i = 0; i < tLen - pLen + 1; i++)
        {
            double part = 0;
            for (int j = 0; j < pLen; j++)
                part = part * (double)10 + double.Parse(Char.ToString(t[i + j]));
            answer = (part <= double.Parse(p)) ? answer + 1 : answer;
        }
        
        return answer;
    }
}",https://github.com/leesy015599/AlgorithmCodeKata/blob/master/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/unrated/147355.%E2%80%85%ED%81%AC%EA%B8%B0%EA%B0%80%E2%80%85%EC%9E%91%EC%9D%80%E2%80%85%EB%B6%80%EB%B6%84%EB%AC%B8%EC%9E%90%EC%97%B4/%ED%81%AC%EA%B8%B0%EA%B0%80%E2%80%85%EC%9E%91%EC%9D%80%E2%80%85%EB%B6%80%EB%B6%84%EB%AC%B8%EC%9E%90%EC%97%B4.cs,2023. 9. 1,33,2
2023. 9. 1 오전 9:29:08,이주연,Unity,38 - K번째수정렬,"#include <string>
#include <vector>
#include <algorithm>

using namespace std;

vector<int> solution(vector<int> array, vector<vector<int>> commands) {
    vector<int> answer;
    for(int i=0;i<commands.size();i++){
        int start=commands[i][0]-1;
        int end=commands[i][1]-1;
        int number=commands[i][2]-1;
        vector<int> subcommands;
        
        for(int j=start;j<=end;j++){
            subcommands.push_back(array[j]);
        }
        sort(subcommands.begin(), subcommands.end());
        answer.push_back(subcommands[number]);
        
    }
    return answer;
}",,2023. 9. 1,38,2
2023. 9. 1 오전 9:29:17,이현지,Unity,30 - 3진법 뒤집기,"using System;
using static System.Math;

public class Solution {
    public int solution(int n) 
    {        
        int x = 0;

        while (true)
        {
            if ((int)Pow(3, x) > n) break;
            ++x;
        }

        int [] result = new int[x];

        for (int i = 0; i < x; i++)
        {

            int value = n / (int)Pow(3, x - i - 1);
            n -= value * (int)Pow(3, x - i - 1);

            result[x - i - 1] = value;

        }


        int answer = 0;

        for (int j = 0; j < x; j++)
        {
            answer += (int)Pow(3, x - j - 1) * result[j];
        }

        return answer;
    }
}",https://github.com/szlovelee/Programmers-Algorithm,2023. 9. 1,30,1
2023. 9. 1 오전 9:29:19,배인호,Unity,36 - 숫자 문자열과 영단어,"using System;

public class Solution
{
    public int solution(string s)
    {
        int answer = 0;

        if (s.Contains(""zero""))
        {
            s = s.Replace(""zero"", ""0"");
        }
        if (s.Contains(""one""))
        {
            s = s.Replace(""one"", ""1"");
        }
        if (s.Contains(""two""))
        {
            s = s.Replace(""two"", ""2"");
        }
        if (s.Contains(""three""))
        {
            s = s.Replace(""three"", ""3"");
        }
        if (s.Contains(""four""))
        {
            s = s.Replace(""four"", ""4"");
        }
        if (s.Contains(""five""))
        {
            s = s.Replace(""five"", ""5"");
        }
        if (s.Contains(""six""))
        {
            s = s.Replace(""six"", ""6"");
        }
        if (s.Contains(""seven""))
        {
            s = s.Replace(""seven"", ""7"");
        }
        if (s.Contains(""eight""))
        {
            s = s.Replace(""eight"", ""8"");
        }
        if (s.Contains(""nine""))
        {
            s = s.Replace(""nine"", ""9"");
        }

        answer = Convert.ToInt32(s);

        return answer;
    }
}
",https://github.com/cutlake2000/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/81301.%E2%80%85%EC%88%AB%EC%9E%90%E2%80%85%EB%AC%B8%EC%9E%90%EC%97%B4%EA%B3%BC%E2%80%85%EC%98%81%EB%8B%A8%EC%96%B4,2023. 9. 1,36,2
2023. 9. 1 오전 9:29:24,윤지연,Unity,10 - 정수 내림차순으로 배치하기,"using System.Collections.Generic;

public class Solution {
    public long solution(long n) {
        long answer = 0;

        List<int> tmpAnswer = new List<int>();
        foreach(char c in n.ToString())
        {
            tmpAnswer.Add((int)c-'0');
        }

        tmpAnswer.Sort((n1, n2) => n2.CompareTo(n1));

        long idx = 1;
        for (int i = tmpAnswer.Count - 1; i >= 0; i--)
        {
            answer += tmpAnswer[i] * idx;
            idx *= 10;
        }
        return answer;
    }
}",https://github.com/jungbosong/Codekata/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12933.%E2%80%85%EC%A0%95%EC%88%98%E2%80%85%EB%82%B4%EB%A6%BC%EC%B0%A8%EC%88%9C%EC%9C%BC%EB%A1%9C%E2%80%85%EB%B0%B0%EC%B9%98%ED%95%98%EA%B8%B0,2023. 9. 1,10,1
2023. 9. 1 오전 9:29:35,김경환,Unity,48 - 소수 만들기,"using System;

class Solution
{
    public int solution(int[] nums)
    {
        int answer = 0, length = nums.Length;;
        
        for(int i = 0 ; i < length - 2; i++)
        {
            for(int j = i + 1; j < length - 1; j++)
            {
                for(int k = j + 1; k < length; k++)
                {
                    int num = nums[i] + nums[j] + nums[k];
                    
                    if(isPrime(num))
                        answer++;
                }
            }
        }

        return answer;
    }
    
    public bool isPrime(int num)
    {
        for(int i = 2; i < num; i++)
        {
            if(num % i == 0)
                return false;
        }
        
        return true;
    }
}",https://github.com/kkh9700/algorithm,2023. 9. 1,48,2
2023. 9. 1 오전 9:29:53,임전혁,Unity,41 - 푸드 파이트 대회,"using System;
using System.Text;
using System.Collections.Generic;

public class Solution {
    public string solution(int[] food) {   
        List<int> list = new List<int>();

        StringBuilder sb = new StringBuilder();
        for (int i = 1; i < food.Length; i++)
        {
            int tempNum = food[i] / 2;
            for (int j = 0; j < tempNum; j++)
            {
                list.Add(i);
                sb.Append(i);
            }
        }

        sb.Append(""0"");

        list.Reverse();
        foreach (int num in list)
            sb.Append(num);
        
        return sb.ToString();
    }
}",https://github.com/yarogono/Algorithm_CSharp/blob/master/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/unrated/134240.%E2%80%85%ED%91%B8%EB%93%9C%E2%80%85%ED%8C%8C%EC%9D%B4%ED%8A%B8%E2%80%85%EB%8C%80%ED%9A%8C/%ED%91%B8%EB%93%9C%E2%80%85%ED%8C%8C%EC%9D%B4%ED%8A%B8%E2%80%85%EB%8C%80%ED%9A%8C.cs,2023. 9. 1,41,2
2023. 9. 1 오전 9:30:35,조호진,AI,27 - 행렬의 덧셈,"def solution(arr1, arr2):
    answer = [[]]
    for i in range(len(arr1)):
        for j in range(len(arr1[i])):
            arr1[i][j]+=arr2[i][j]
    return arr1",https://github.com/bm4706/Algorithm_practice/commit/ab6193743b7185261f11ff05bc7c027d66ef71e6,2023. 9. 1,27,1
2023. 9. 1 오전 9:30:42,김민석,Unity,12 - 두 정수 사이의 합,"public class Solution {
    public long solution(int a, int b) 
    {
        long answer = 0;
        for (int i = (a >= b) ? b : a; i <= a || i <= b; i ++)
        {
            answer += i;
        }
            
        return answer;
    }
}",https://github.com/ms0753/codekata/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12912.%E2%80%85%EB%91%90%E2%80%85%EC%A0%95%EC%88%98%E2%80%85%EC%82%AC%EC%9D%B4%EC%9D%98%E2%80%85%ED%95%A9/%EB%91%90%E2%80%85%EC%A0%95%EC%88%98%E2%80%85%EC%82%AC%EC%9D%B4%EC%9D%98%E2%80%85%ED%95%A9.cs,2023. 9. 1,12,1
2023. 9. 1 오전 9:31:17,지민규,Unity,29 - 최대공약수와 최소공배수,"public class Solution {
    public int[] solution(int n, int m) {
        int[] answer = new int[2];
        int minNum = (n > m) ? m : n;
        int maxDiv = 0;
        for (int i = 1; i < minNum + 1; i++)
        {
            if (n % i == 0 && m % i == 0)
            {
                maxDiv = i;
            }
        }
        int minTime = n * m / maxDiv;
        answer[0] = maxDiv;
        answer[1] = minTime;
        return answer;
    }
}",,2023. 9. 1,29,1
2023. 9. 1 오전 9:31:48,김형중,Unity,22 - 내적,"public class Solution {
    public int solution(int[] a, int[] b) {
        int answer = 0;
        
        for(int i = 0; i < a.Length; i++)
        {
            answer += a[i] * b[i];
        }
        
        return answer;
    }
}",,2023. 9. 1,22,1
2023. 9. 1 오전 9:32:04,임전혁,Unity,42 - 콜라 문제,"using System;

public class Solution {
    public int solution(int a, int b, int n) {
        int answer = 0;
        
        while(n >= a) {
            answer += n / a * b;
            n = ((n / a) * b) + (n % a);
        }
        
        return answer;
    }
}",https://github.com/yarogono/Algorithm_CSharp/tree/master/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/unrated/132267.%E2%80%85%EC%BD%9C%EB%9D%BC%E2%80%85%EB%AC%B8%EC%A0%9C,2023. 9. 1,42,2
2023. 9. 1 오전 9:32:26,박민호,Unity,33 - 크기가 작은 부분,"using System;

public class Solution {
    public int solution(string t, string p) {
        int count=0;
        for (int i =0;i<t.Length-p.Length+1;i++){
            string str = t.Substring(i,p.Length);
            if(long.Parse(str)<=long.Parse(p)){
                count++;
            }
        }

        int answer = count;
        return answer;
    }
}",,2023. 9. 1,33,2
2023. 9. 1 오전 9:34:02,신우석,Unity,50 - 기사단원의 무기,"using System;

public class Solution {
    public int solution(int number, int limit, int power) {
        int answer = 0;
        
        for (int i = 1; i <= number; ++i) {
            int cnt = 0;
            for (int j = 1; j * j <= i; ++j)
                if (j * j == i) ++cnt;
                else if (i % j == 0) cnt += 2;
            
            if (cnt > limit) cnt = power;
            answer += cnt;
        }
        
        return answer;
    }
}",https://github.com/seoksii/AlgorithmCodeKata/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/unrated/136798.%E2%80%85%EA%B8%B0%EC%82%AC%EB%8B%A8%EC%9B%90%EC%9D%98%E2%80%85%EB%AC%B4%EA%B8%B0,2023. 9. 1,50,2
2023. 9. 1 오전 9:34:09,이홍준,Unity,32 - 삼총사,"using System;

public class Solution {
    public int solution(int[] number) {
        int answer = 0;
        
        for (int i = 0; i < number.Length - 2; i++)
        {
            for (int j = i + 1; j < number.Length - 1; j++)
            {
                for (int k = j + 1; k < number.Length; k++)
                {
                    if (number[i] + number[j] + number[k] == 0)
                    {
                        answer++;
                    }
                }
            }
        }
        
        return answer;
    }
}",https://github.com/dlghdwns97/Study/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/131705.%E2%80%85%EC%82%BC%EC%B4%9D%EC%82%AC,2023. 9. 1,32,2
2023. 9. 1 오전 9:34:26,기현빈,Unity,29 - 최대공약수와 최소공배수,"public class Solution {
    public int[] solution(int n, int m) {
        int[] answer = new int[2];
        
        if(m > n) {
            int temp = n;
            n = m;
            m = temp;
        }
        
        int r = 1;
        int a = n;
        int b = m;
        while(r != 0) {
            r = a % b;
            a = b;
            b = r;
        }
        
        answer[0] = a;
        
        int xn = n / a;
        int xm = m / a;
        if(xn % xm == 0) answer[1] = n;
        else answer[1] = n * xm;
        
        return answer;
    }
}",,2023. 9. 1,29,1
2023. 9. 1 오전 9:35:09,이경현,Unity,29 - 최대공약수와 최소공배수,"    public static int[] solution(int n, int m)
    {
        int greatestDivisor=1;

        int ntmp = n;
        int mtmp = m;

        List<int> Divisors = new List<int>();
        int divisor = 2;


        while ((divisor < n / 2 || divisor < m / 2))
        {
            if(ntmp % divisor == 0 && mtmp % divisor == 0)
            {
                Divisors.Add(divisor);
                ntmp /= divisor;
                mtmp /= divisor;
                divisor = 1;
            }
            divisor++;
        }

        if (Divisors.Count == 0)
        {
            return new int[] { 1, n * m };
        }

        foreach(int i in Divisors)
        {
            greatestDivisor *= i;
        }

        return new int[] { greatestDivisor, greatestDivisor * ntmp * mtmp };
    }
}",https://github.com/516lkh/Algorithm,2023. 9. 1,29,1
2023. 9. 1 오전 9:35:25,심명희,AI,21 - 수박수박수박수박수박수?,"def solution(n):
    answer = '수박'*n
    return answer[:n]",,2023. 9. 1,21,1
2023. 9. 1 오전 9:35:41,김나운,Unity,19 - 제일 작은 수 제거하기,"using System.Collections.Generic;
using System.Linq;

public class Solution {
    public int[] solution(int[] arr) {
        List<int> arrList = new List<int>(arr);
        int minValue = arrList.Min();
        
        arrList.Remove(minValue);
        
        if (arrList.Count == 0) {
            arrList.Add(-1);
        }
        
        return arrList.ToArray();
    }
}
",,2023. 9. 1,19,1
2023. 9. 1 오전 9:36:10,박준규,Unity,20 - 가운데 글자 가져오기,"public class Solution 
{
    public string solution(string s) 
    {
        string answer = """";
        int num = s.Length;
        if(num % 2 == 0){
            answer = answer + s[(num/2)-1] + s[(num/2)];
        }else if(num%2==1){
            answer = answer + s[num/2];
        }
        return answer;
    }
}",,2023. 9. 1,20,1
2023. 9. 1 오전 9:36:48,김예준,Unity,37 - 문자열 내 마음대로 정렬하기,"#include <string>
#include <vector>
#include <algorithm>

using namespace std;

int idx;

bool compare(string a, string b)
{
    if (a[idx] == b[idx]) return a < b;
    return a[idx] < b[idx];
}

vector<string> solution(vector<string> strings, int n) {
    vector<string> answer;
    idx = n;
    
    sort(strings.begin(), strings.end(), compare);
    
    answer = strings;
    
    return answer;
}",,2023. 9. 1,37,2
2023. 9. 1 오전 9:37:09,산현,Unity,30 - 3진법 뒤집기,"using System;
using static System.Math;
using System.Collections.Generic;

public class Solution {
    public int solution(int n) {
        int answer = 0;
        List<int> list = new List<int>();
        
        //자연수 n이 0이 될 때 까지 나눈 나머지를 list에 저장
        while(true)
        {
            if(n==0) break;
            int d = n%3;
            list.Add(d);
            n = n/3;
        }
        //앞뒤 뒤집기 list.Reverse()
        list.Reverse();
        
        //뒤집은 list의 나머지 값 * 3의 거듭 제곱을 곱해 answer에 더하기
        for(int i = 0; i<list.Count; i++)
        {
            answer += (int)(list[i] * Math.Pow(3,i));
        }
        return answer;
    }
   
}",https://github.com/Shyunju/codeKata,2023. 9. 1,30,1
2023. 9. 1 오전 9:37:17,김강현,Unity,14 - 서울에서 김서방 찾기,"using System; 
public class Solution {
    public string solution(string[] seoul) 
    {
        int index2 = Array.FindIndex (seoul, element => element == ""Kim"");
        string answer = $""김서방은 {index2}에 있다"";
        return answer;
    }
}",,2023. 9. 1,14,1
2023. 9. 1 오전 9:37:29,김지수,AI,19 - 제일 작은 수 제거하기,"def solution(arr):
    answer = []
    if len(arr) > 1:
        arr.remove(min(arr))
        return arr
    else:
        return[-1]",,2023. 9. 1,19,1
2023. 9. 1 오전 9:38:05,진우성,Unity,6 - x만큼 간격이 있는 n개의 숫자,"public class Solution {
    public long[] solution(int x, int n) {
        long[] answer = new long[n];
        for(int i = 0; i < n; i++)
        {
            answer[i] = (long)x * (i + 1); 
        }
        return answer;
    }
}",,2023. 9. 1,6,1
2023. 9. 1 오전 9:38:20,윤지연,Unity,11 - 하샤드 수,"public class Solution {
    public bool solution(int x) {
        bool answer = true;
        
        int sum = 0;
        int tmp = x;
        while(tmp != 0)
        {
            sum += tmp % 10;
            tmp /= 10;
        }
        
        answer = (x % sum == 0) ? true : false;
        return answer;
    }
}",https://github.com/jungbosong/Codekata/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12947.%E2%80%85%ED%95%98%EC%83%A4%EB%93%9C%E2%80%85%EC%88%98,2023. 9. 1,11,1
2023. 9. 1 오전 9:38:39,김나운,Unity,20 - 가운데 글자 가져오기,"public class Solution {
    public string solution(string s) {
        int length = s.Length;
        int middleIndex = length / 2;
        
        if (length % 2 == 0) {
            return s.Substring(middleIndex - 1, 2);
        } else {
            return s.Substring(middleIndex, 1);
        }
    }
}",,2023. 9. 1,20,1
2023. 9. 1 오전 9:38:44,신현,Unity,10 - 정수 내림차순으로 배치하기,"using System;

public class Solution {
    public long solution(long n) {
        char[] cArr = n.ToString().ToCharArray();
        Array.Sort(cArr);
        Array.Reverse(cArr);
        long answer = long.Parse(new string(cArr));
        return answer;
    }
}",https://github.com/Shyunju/codeKata,2023. 8. 28,10,1
2023. 9. 1 오전 9:39:04,차명경,AI,15 - 나누어 떨어지는 숫자,"def solution(arr, divisor):
    answer = []
    for i in arr:
        if i % divisor == 0:
            answer.append(i)
            answer.sort()
    if len(answer) == 0:
        answer.append(-1)
    return answer",,2023. 9. 1,15,1
2023. 9. 1 오전 9:39:22,신현,Unity,17 - 핸드폰 번호 가리기,"public class Solution {
    public string solution(string phone_number) {
        char[] charArray = phone_number.ToCharArray();
        for(int i = 0; i< charArray.Length-4; i++){
            charArray[i] ='*';
        }
        string result = new string(charArray);
        return result;
    }
}",https://github.com/Shyunju/codeKata,2023. 8. 29,17,1
2023. 9. 1 오전 9:39:29,김예준,Unity,38 - K번째수정렬,"using System;
using System.Collections.Generic;

public class Solution {
    public int[] solution(int[] array, int[,] commands) {
        List<int> answer = new List<int>();
        List<int> tmp = new List<int>();
        
        for (int i = 0; i < commands.GetLength(0); i++)
        {
            tmp.Clear();
            int start = commands[i,0];
            int end = commands[i,1];
            for (int j = start -1; j < end; j++)
            {
                tmp.Add(array[j]);
            }
            tmp.Sort();
            answer.Add(tmp[commands[i,2]-1]);
        }
        
        return answer.ToArray();
    }
}",,2023. 9. 1,38,2
2023. 9. 1 오전 9:39:56,최지연,AI,23 - 약수의 개수와 덧셈,"def solution(left, right):
    answer = []
    for i in range(left, right+1):
        # print(i)
        if i**(1/2) % 1 != 0:
            answer.append(i)
        else:
            answer.append(-i)
    return sum(answer)",https://github.com/jiyeonCoder/algorithmPractice/blob/main/23.%20%EC%95%BD%EC%88%98%EC%9D%98%20%EA%B0%9C%EC%88%98%EC%99%80%20%EB%8D%A7%EC%85%88.py,2023. 9. 1,23,1
2023. 9. 1 오전 9:40:13,신현주,Unity,25 - 부족한 금액 계산하기,"using System;

class Solution
{
    public long solution(int price, int money, int count)
    {
        long sum =0;
        for(int i = 0; i <= count; i++){
            sum += price * i;
        }
        if( sum > money){
            sum -= money;
        }else{
            return 0;
        }
        return sum;
    }
}",https://github.com/Shyunju/codeKata,2023. 8. 31,25,1
2023. 9. 1 오전 9:40:18,곽민규,Unity,7 - 자연수 뒤집어 배열로 만들기,"public class Solution {
    public int[] solution(long n) {
        string str = n.ToString();
        int num = str.Length;
        int[] answer = new int[num];
        
        for (int i = 0; i < num; i++) {
            answer[i] = (int)(n % 10);
            n /= 10;
        }
        
        return answer;
    }
}",,2023. 9. 1,7,1
2023. 9. 1 오전 9:41:04,신현주,Unity,30 - 3진법 뒤집기,"using System;
using static System.Math;
using System.Collections.Generic;

public class Solution {
    public int solution(int n) {
        int answer = 0;
        List<int> list = new List<int>();
        
        //자연수 n이 0이 될 때 까지 나눈 나머지를 list에 저장
        while(true)
        {
            if(n==0) break;
            int d = n%3;
            list.Add(d);
            n = n/3;
        }
        //앞뒤 뒤집기 list.Reverse()
        list.Reverse();
        
        //뒤집은 list의 나머지 값 * 3의 거듭 제곱을 곱해 answer에 더하기
        for(int i = 0; i<list.Count; i++)
        {
            answer += (int)(list[i] * Math.Pow(3,i));
        }
        return answer;
    }
   
}",https://github.com/Shyunju/codeKata,2023. 9. 1,30,1
2023. 9. 1 오전 9:41:08,김민상,Unity,41 - 푸드 파이트 대회,"public class Solution
{
    public string solution(int[] food)
    {
        string left = """";
        string right = """";

        for (int i = 0; i < food.Length; i++)
        {
            string sFood = new string((char)(i + '0'), food[i] / 2);
            left = left + sFood;
            right = sFood + right;
        }
        
        return left + '0' + right;
    }
}",,2023. 9. 1,41,2
2023. 9. 1 오전 9:41:51,신현주,Unity,10 - 정수 내림차순으로 배치하기,"using System;

public class Solution {
    public long solution(long n) {
        char[] cArr = n.ToString().ToCharArray();
        Array.Sort(cArr);
        Array.Reverse(cArr);
        long answer = long.Parse(new string(cArr));
        return answer;
    }
}",https://github.com/Shyunju/codeKata,2023. 8. 28,10,1
2023. 9. 1 오전 9:42:35,김진규,Unity,36 - 숫자 문자열과 영단어,"using System;

public class Solution {
    public int solution(string s) {
        int answer = 0;
        string[] numbers = {""zero"", ""one"", ""two"", ""three"", ""four"", ""five"", ""six"", ""seven"", ""eight"", ""nine""};
        foreach(string num in numbers)
        {
            s = s.Replace(num, Array.IndexOf(numbers, num).ToString());
        }
        answer = int.Parse(s);
        return answer;
    }
}",,2023. 9. 1,36,2
2023. 9. 1 오전 9:42:36,신현주,Unity,17 - 핸드폰 번호 가리기,"public class Solution {
    public string solution(string phone_number) {
        char[] charArray = phone_number.ToCharArray();
        for(int i = 0; i< charArray.Length-4; i++){
            charArray[i] ='*';
        }
        string result = new string(charArray);
        return result;
    }
}",https://github.com/Shyunju/codeKata,2023. 8. 29,17,1
2023. 9. 1 오전 9:42:53,윤지연,Unity,12 - 두 정수 사이의 합,"public class Solution {
    public long solution(int a, int b) {
        long answer = 0;
        int start = ( a < b) ? a: b;
        int end = (start == b) ? a: b;
        
        for(int i = start; i <= end; i++)
        {
            answer += i;
        }
        
        return answer;
    }
}",https://github.com/jungbosong/Codekata/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12912.%E2%80%85%EB%91%90%E2%80%85%EC%A0%95%EC%88%98%E2%80%85%EC%82%AC%EC%9D%B4%EC%9D%98%E2%80%85%ED%95%A9,2023. 9. 1,12,1
2023. 9. 1 오전 9:42:57,양덕영,AI,33 - 크기가 작은 부분,"def calculate_number(s):
    return int(s)

def solution(t, p):
    p_value = calculate_number(p)
    count = 0

    for i in range(len(t) - len(p) + 1):
        substring = t[i:i + len(p)]
        substring_value = calculate_number(substring)
        if substring_value <= p_value:
            count += 1
    
    return count

# 예시 입력과 출력
t_string = ""3141592""
p_string = ""271""
result = solution(t_string, p_string)
print(result)",https://github.com/DeokYoung980130/Ai_Project2023-08-07/tree/9c77b9d0f526b6c8a8cc2cfbcd700f502935450e,2023. 9. 1,33,2
2023. 9. 1 오전 9:43:01,조영오,Unity,39 - 두 개 뽑아서 더하기,"using System;
using System.Collections.Generic;

public class Solution {
    public int[] solution(int[] numbers) {
        
        //서로 다른 인덱스의 두 수? 지금까지 시도한 조합인지 확인하는 과정 필요
        //스트링 리스트로 조합 중복 검사, 정수 리스트로 결과값들을 담음
        List<string> strList = new List<string>();
        List<int> num = new List<int>();
        string str = """";
        
        for(int i = 0 ; i < numbers.Length ; i++){
            for(int j = 0 ; j < numbers.Length; j++){
                if( i != j ) {
                    if(numbers[i] > numbers[j]){str = $""{numbers[j]} {numbers[i]}"";}
                    else{str = $""{numbers[i]} {numbers[j]}"";}
                    
                    //전에 시도한 조합이 아니라면
                    if(!strList.Contains(str)){
                    //다른 결과값이라면
                    if(!num.Contains(numbers[i] + numbers[j])){
                        num.Add(numbers[i] + numbers[j]);
                    }
                    strList.Add(str);
                }
                }
            }
        }
        
        //결과값들을 배열에 담고 오름차순 정렬 후 반환
        
        int[] answer = num.ToArray();
        Array.Sort(answer);
        
        return answer;
    }
}",,2023. 9. 1,39,2
2023. 9. 1 오전 9:43:58,문현우,Unity,15 - 나누어 떨어지는 숫자,"using System;
using System.Collections.Generic;

public class Solution {
    public int[] solution(int[] arr, int divisor) {
        List<int> answerList = new List<int>();
        for(int i = 0; i < arr.Length; i++){
            if(arr[i] % divisor == 0){
                answerList.Add(arr[i]);
            }
        }
        answerList.Sort();

        int[] answer = answerList.ToArray();
        if(answer.Length == 0){
            answer = new int[] {-1};
        }
        return answer;
    }
}",https://github.com/Munch310/Algorithm-Csharp/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12910.%E2%80%85%EB%82%98%EB%88%84%EC%96%B4%E2%80%85%EB%96%A8%EC%96%B4%EC%A7%80%EB%8A%94%E2%80%85%EC%88%AB%EC%9E%90%E2%80%85%EB%B0%B0%EC%97%B4,2023. 9. 1,15,1
2023. 9. 1 오전 9:44:20,신우석,Unity,51 - 로또의 최고 순위와 최저 순위,"using System;

public class Solution {
    public int[] solution(int[] lottos, int[] win_nums) {
        int cnt = 0;
        int cnt0 = 0;
        foreach (int lotto_num in lottos) {
            if (lotto_num == 0) {
                ++cnt0;
                continue;
            }
            foreach (int win_num in win_nums) {
                if (lotto_num == win_num)
                    ++cnt;
            }
        }
        int max = 7 - cnt;
        if (max >= 7) max = 6;
        int min = 7 - (cnt0 + cnt);
        if (min >= 7) min = 6;
        return new int[2] {min, max};
    }
}",https://github.com/seoksii/AlgorithmCodeKata/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/77484.%E2%80%85%EB%A1%9C%EB%98%90%EC%9D%98%E2%80%85%EC%B5%9C%EA%B3%A0%E2%80%85%EC%88%9C%EC%9C%84%EC%99%80%E2%80%85%EC%B5%9C%EC%A0%80%E2%80%85%EC%88%9C%EC%9C%84,2023. 9. 1,51,2
2023. 9. 1 오전 9:44:41,이소이,Unity,34 - 최소직사각형,"using System;

public class Solution {
    public int solution(int[,] sizes) {
        int x = 0;
        int y = 0;
        
        for (int i = 0; i < sizes.GetLength(0); i++)
        {
            int tempX = sizes[i,0] > sizes[i,1] ? sizes[i,0] : sizes[i,1];
            int tempY = sizes[i,0] > sizes[i,1] ? sizes[i,1] : sizes[i,0];
            x = x > tempX ? x : tempX;
            y = y > tempY ? y : tempY;
        }
        return x * y;
    }
}",https://github.com/leesy015599/AlgorithmCodeKata/blob/master/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/86491.%E2%80%85%EC%B5%9C%EC%86%8C%EC%A7%81%EC%82%AC%EA%B0%81%ED%98%95/%EC%B5%9C%EC%86%8C%EC%A7%81%EC%82%AC%EA%B0%81%ED%98%95.cs,2023. 9. 1,34,2
2023. 9. 1 오전 9:44:54,이기호,AI,17 - 핸드폰 번호 가리기,"def solution(phone_number):
    return('*'*(len(phone_number)-4)+phone_number[-4:])",,2023. 9. 1,17,1
2023. 9. 1 오전 9:45:18,이세진,Unity,23 - 약수의 개수와 덧셈,"using System;

public class Solution {
    public int solution(int left, int right) {
        int answer = 0;
        int num = 0;
        
        for(int i = left ; i <= right ; i++ )
        {
            num = 1;
            for(int j = 1; j < (i / 2) + 1 ; j++)
            {
                if(i % j == 0)
                {
                    num++;
                }
            }
            
            if(num % 2 == 0)
            {
                answer += i;
            }
            else
            {
                answer -= i;
            }
        }
        
        return answer;
    }
}",,2023. 9. 1,23,1
2023. 9. 1 오전 9:45:19,이선재,Unity,48 - 소수 만들기,"#include <vector>
#include <iostream>
#include <algorithm>
using namespace std;

int Primel(int n){
    for(int i = 2; i < n; i++){
        if(n%i == 0)
            return 0;
    }
    
    return 1;
}

int solution(vector<int> nums) {
    int answer = 0;
    
    for(int i = 0; i < nums.size()-2; i++){
        for(int j = i+1; j < nums.size()-1; j++){
            for(int k = j+1; k < nums.size(); k++){
                answer += Primel(nums[i] + nums[j] + nums[k]);
            }
        }
    }

    return answer;
}",https://github.com/Lyrwhitt/Algorithm/blob/main/Programmers/LEVEL1/%EC%86%8C%EC%88%98%20%EB%A7%8C%EB%93%A4%EA%B8%B0,2023. 9. 1,48,2
2023. 9. 1 오전 9:45:36,한병권,Unity,49 - 덧칠하기,"using System;

public class Solution {
    public int solution(int n, int m, int[] section) {
        int answer = 0;
        int temp = 0;

        for(int i = 0; i < section.Length; i++)
        {
            
            if(temp < section[i])
            {

                if(m == 1)
                {
                    temp = section[i];
                }
                else
                {
                    temp = section[i] + m-1;
                }
                answer++;
            }

        }

        return answer;
    }
}",https://github.com/hbg9212/AlgorithmCodekata,2023. 9. 1,49,2
2023. 9. 1 오전 9:45:59,김형중,Unity,23 - 약수의 개수와 덧셈,"public class Solution {
    public int solution(int left, int right) {
        int answer = 0;
        int aliquot = 0;
        
        for(int i = left; i <= right; i++)
        {
            for(int j = 1; j <= i; j++)
            {
                if(i % j == 0)  
                {
                    aliquot++;
                }
            }
            answer += aliquot % 2 == 0 ? +i : -i;
            aliquot = 0;
        }
        return answer;
    }
}",,2023. 9. 1,23,1
2023. 9. 1 오전 9:46:35,김예준,Unity,39 - 두 개 뽑아서 더하기,"#include <string>
#include <vector>
#include <set>

using namespace std;

vector<int> solution(vector<int> numbers) {
    vector<int> answer;
    set<int> s;
    
    for (int i = 0; i < numbers.size(); i++)
    {
        for (int j = i + 1; j < numbers.size(); j++)
        {
            s.insert(numbers[i] + numbers[j]);
        }
    }
    
    set<int>::iterator i;
    for(i = s.begin(); i != s.end(); i++)
    {
        answer.push_back(*i);
    }    
    
    return answer;
}",,2023. 9. 1,39,2
2023. 9. 1 오전 9:46:54,이선재,Unity,49 - 덧칠하기,"#include <string>
#include <vector>

using namespace std;

int solution(int n, int m, vector<int> section) {
    int answer = 0;
    int t = 0;
    
    for(int i = 0; i < section.size(); i++)
    {
        if(section[i] < t)
        {
            continue;
        }
        t = section[i] + m;
        answer += 1;
    }
    
    return answer;
}",https://github.com/Lyrwhitt/Algorithm/blob/main/Programmers/LEVEL1/%EB%8D%A7%EC%B9%A0%ED%95%98%EA%B8%B0,2023. 9. 1,49,2
2023. 9. 1 오전 9:46:55,장성림,Unity,35 - 시저 암호,"public class Solution {
    public string solution(string s, int n) {
        string answer = """";
        char[] cArray = s.ToCharArray();
        foreach(char c in cArray){
            char tmp = ' ';
            if(c != ' '){
                if(c >= 'a' && c <= 'z'){
                    tmp = (char)(c + n);
                    if(tmp > 'z')
                        tmp = (char)(tmp - 26);
                }
                else if(c >= 'A' && c <= 'Z'){
                    tmp = (char)(c + n);
                    if(tmp > 'Z')
                        tmp = (char)(tmp - 26);
                }
            }
            answer += tmp.ToString();
        }
        return answer;
    }
}",https://github.com/hoobhoob,2023. 9. 1,35,2
2023. 9. 1 오전 9:47:04,노재우,Unity,24 - 문자열 내림차순으로 배치하기,"public class Solution
{
    public string solution(string s)
    {
        List<char> small = new List<char>();
        string answer = """";
        List<char> big = new List<char>();
        foreach (char c in s)
        {
            if (Char.IsLower(c) == true)
            {
                MySort(small, c);
            }
            else
            {

                MySort(big, c);
            }
        }
        small.AddRange(big);

        answer = new string (small.ToArray());


        return answer;
    }

    void MySort(List<char> list, char txt)
    {
        if (list.Count == 0)
        {
            list.Add(txt);
            return;
        }

        for (int i = 0; i < list.Count; i++)
        {
            if (list[i] < txt)
            {
                list.Insert(i, txt);
                return;
            }
        }

        list.Add(txt);

    }
}",,2023. 9. 1,24,1
2023. 9. 1 오전 9:47:15,김주형,Unity,18 - 없는 숫자 더하기,"using System;

public class Solution
{
    public int solution(int[] numbers) 
    {
        int answer = 0;
        foreach (int n in numbers)
        {
            if(n !=0)
            {
                answer += n;
            }
        }        

        return 45 - answer;
    }
}",https://github.com/kjuhyung/Algorithm.git,2023. 9. 1,18,1
2023. 9. 1 오전 9:48:05,함영주,Unity,11 - 하샤드 수,"public class Solution {
    public bool solution(int x) {
        if (x == 0) {return false;}
        
        bool answer = true;
        string a = x.ToString();
        
        int sum = 0;
        
        for (int i = 0; i < a.Length; i++)
        {
           int b = int.Parse(a.Substring(i,1));
            sum += b;
        }

        if(x % sum == 0)
        {
            answer = true;
        }
        else
        {  answer = false;} 
        
        return answer;
    }
}",,2023. 9. 1,11,1
2023. 9. 1 오전 9:49:05,손병의,Unity,15 - 나누어 떨어지는 숫자,"using System;
using System.Linq;
using System.Collections.Generic;

public class Solution {
    public int[] solution(int[] arr, int divisor) {
        List<int> list = new List<int>();
        
        for(int i = 0; i < arr.Length; i++)
        {
            if(arr[i] % divisor == 0)
                list.Add(arr[i]);
        }
        if(list.Count == 0)
            list.Add(-1);
        else
            list.Sort();
        
        return list.ToArray();
    }
}",https://github.com/Son-BE/CodeKata1,2023. 9. 1,15,1
2023. 9. 1 오전 9:49:21,차요한,Unity,34 - 최소직사각형,https://school.programmers.co.kr/learn/courses/30/lessons/86491,https://github.com/HOHOJO/Algorithm_test,2023. 9. 1,34,2
2023. 9. 1 오전 9:49:43,서재민,Unity,5 - 나머지가 1이 되는 수 찾기,"using System;

public class Solution {
    public int solution(int n)
    {
        for(int i = 1; i < n; i++)
        {
            if (n % i == 1)
                return i;
        }
        return -1;
    }
}",https://github.com/SeoJaeMin619/algorithm,2023. 9. 1,5,1
2023. 9. 1 오전 9:50:25,박준규,Unity,21 - 수박수박수박수박수박수?,"public class Solution 
{
    public string solution(int n) 
    {
        string answer = """";
        for(int i = 0; i<n;i++){
            if(i%2==0){
                answer += ""수"";
            }else if(i%2==1){
                answer += ""박"";
            }
        }
        return answer;
    }
}",,2023. 9. 1,21,1
2023. 9. 1 오전 9:50:40,양수홍,AI,49 - 덧칠하기,"from collections import deque
def solution(n, m, section):
    answer = 0
    section=deque(section)
    while section:
        min_sect=section.popleft()
        while section and min_sect+m>section[0]:
            section.popleft()
        answer+=1
    return answer",,2023. 9. 1,49,2
2023. 9. 1 오전 9:50:44,조호진,AI,28 - 직사각형 별찍기,"a, b = map(int, input().strip().split(' '))
for i in range(b):
    for j in range(a):
        print(""*"", end='')
    print(' ')



",https://github.com/bm4706/Algorithm_practice/commit/a49915840de2ba7de09594de92d80813eaca3a5a,2023. 9. 1,28,1
2023. 9. 1 오전 9:50:47,이주연,Unity,39 - 두 개 뽑아서 더하기,"#include <string>
#include <vector>
#include <algorithm>

using namespace std;

vector<int> solution(vector<int> numbers) {
    vector<int> answer;
    for(int i = 0; i < numbers.size(); i++)
    {
        for(int j = i+1; j < numbers.size(); j++)
        {
            answer.emplace_back(numbers[i]+numbers[j]);
        }
    }
    sort(answer.begin(), answer.end());
    answer.erase(unique(answer.begin(), answer.end()), answer.end());
    return answer;
}",,2023. 9. 1,39,2
2023. 9. 1 오전 9:50:55,최지연,AI,24 - 문자열 내림차순으로 배치하기,"def solution(s):
    answer = list(s)
    answer.sort(reverse=True)
    answer = ''.join(answer)
    return answer",https://github.com/jiyeonCoder/algorithmPractice/blob/main/24.%20%EB%AC%B8%EC%9E%90%EC%97%B4%20%EB%82%B4%EB%A6%BC%EC%B0%A8%EC%88%9C%EC%9C%BC%EB%A1%9C%20%EB%B0%B0%EC%B9%98%ED%95%98%EA%B8%B0.py,2023. 9. 1,24,1
2023. 9. 1 오전 9:51:02,정재훈,Unity,16 - 음양 더하기,"using System;

public class Solution
    {
        public int solution(int[] absolutes, bool[] signs)
        {
            int answer = 0;
            for (int i = 0; i < absolutes.Length; i++)
            { answer += absolutes[i] = signs[i] ? absolutes[i] : absolutes[i]*-1; }
            return answer;
        }
    }",https://github.com/toadsam/Algorithm,2023. 9. 1,16,1
2023. 9. 1 오전 9:51:21,임전혁,Unity,55 - 문자열 나누기,"using System;

public class Solution {
    public int solution(string s) {
        int answer = 0;
        
        char firstChar = s[0];
        int yes = 0;
        int no = 0;
        
        
        for (int i = 0; i < s.Length; i++)
        {
            if (yes == no)
            {
                answer++;
                firstChar = s[i];
            }
            
            
            if (firstChar == s[i])
                yes++;
            else
                no++;
        }
        
        
        return answer;
    }
}",https://github.com/yarogono/Algorithm_CSharp/blob/master/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/unrated/140108.%E2%80%85%EB%AC%B8%EC%9E%90%EC%97%B4%E2%80%85%EB%82%98%EB%88%84%EA%B8%B0/%EB%AC%B8%EC%9E%90%EC%97%B4%E2%80%85%EB%82%98%EB%88%84%EA%B8%B0.cs,2023. 9. 1,55,3
2023. 9. 1 오전 9:51:40,이기호,AI,18 - 없는 숫자 더하기,"def solution(numbers):
    return (sum(range(0, 10))-sum(numbers))",,2023. 9. 1,18,1
2023. 9. 1 오전 9:51:42,김민상,Unity,42 - 콜라 문제,"public class Solution {
    public int solution(int a, int b, int n) {
        int answer = 0;
        while (n >= a)
        {
            answer += (n / a) * b;
            n = (n / a) * b + n % a;
        }
        return answer;
    }
}",,2023. 9. 1,42,2
2023. 9. 1 오전 9:51:53,김종훈,Unity,33 - 크기가 작은 부분,"using System;

public class Solution {
    public int solution(string t, string p) {
        int answer = 0;
        string str = """";
        long num = 0;
        
        for(int i = 0; i < t.Length - p.Length + 1; i++)
        {
            num = long.Parse(t.Substring(i, p.Length));
            if(num <= long.Parse(p))
            {
                answer++;
            }
            
        }
        return answer;
    }
}",,2023. 9. 1,33,2
2023. 9. 1 오전 9:52:06,조범준,Unity,34 - 최소직사각형,"using System;

public class Solution {
    public int solution(int[,] sizes) {
        int answer = 0;
        int[,] nums = new int[sizes.GetLength(0),sizes.GetLength(1)];
        int w = 0, h= 0;
        for(int i = 0; i< nums.GetLength(0); i++){
            nums[i,0] = Math.Max(sizes[i,1], sizes[i,0]);
            nums[i,1] = Math.Min(sizes[i,1], sizes[i,0]);
        }
        for(int i = 0; i < nums.GetLength(0); i++){
            int rw = w;
            w = Math.Max(w, nums[i,0]);    //가로길이
        }
        for(int i = 0; i < nums.GetLength(0); i++){
            int rh = h; 
            h = Math.Max(h, nums[i,1]);
            if(rh >= nums[i,0]&& w >= h){
                h = rh;
            }
        }
        answer = w * h;
        return answer;
    }
}",https://github.com/KimMaYa1/BaekJoonEx/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1,2023. 9. 1,34,2
2023. 9. 1 오전 9:52:25,김종훈,Unity,34 - 최소직사각형,"using System;

public class Solution {
    public int solution(int[,] sizes) {
        int answer = 0;
        int maxW = 0;
        int maxH = 0;
        
        for(int i = 0; i < sizes.GetLength(0); i++)
        {
            int width = sizes[i, 0];
            int height = sizes[i, 1];
            
            if(height > width)
            {
                width = sizes[i,1];
                height = sizes[i,0];
            }
            if(height > maxH)
            {
                maxH = height;
            }
            if(width > maxW)
            {
                maxW = width;
            }
        }
        
        answer = maxW * maxH;
        return answer;
    }
}",,2023. 9. 1,34,2
2023. 9. 1 오전 9:52:54,이장원,Unity,7 - 자연수 뒤집어 배열로 만들기,"public class Solution
{
    public int[] solution(long n)
    {
        string k = n.ToString();
        int[] answer = new int[k.Length];

        for (int i = 0; i < k.Length; ++i)
        {
            answer[i] = int.Parse(k[i].ToString());
        }
        Array.Reverse(answer);
        return answer;
    }
}",,2023. 9. 1,7,1
2023. 9. 1 오전 9:53:06,김진규,Unity,37 - 문자열 내 마음대로 정렬하기,"using System;
public class Solution {
    public string[] solution(string[] strings, int n) {
        string[] answer = new string[strings.Length];
        Array.Copy(strings, answer, strings.Length);
        Array.Sort(answer, (a, b) =>  {
            if (a[n] == b[n])
                return string.Compare(a, b, StringComparison.Ordinal);
            return a[n].CompareTo(b[n]);
        });
        return answer;
    }
}",,2023. 9. 1,37,2
2023. 9. 1 오전 9:53:26,김정규,AI,23 - 약수의 개수와 덧셈,"def solution(left, right):
    answer = 0
    cnt = 0
    for i in range(left, right+1):
        for j in range(1, i+1):
            if i % j == 0:
                cnt += 1
        if cnt % 2 != 0:
            i *= -1
        answer += i
        cnt = 0
    return answer",https://github.com/JungGyu00/algorithm,2023. 9. 1,23,1
2023. 9. 1 오전 9:53:31,김종훈,Unity,35 - 시저 암호,"public class Solution {
    public string solution(string s, int n) {
       string answer = """";
        foreach(char c in s)
        {
            if(c!=' ')
            {
                int tmp = 0;
                
               
                if((int)c<91)
                {
                    tmp = (int)c + n;
                    if(tmp>90) tmp = 64 + (tmp-90);
                }
              
                else
                {
                    tmp = (int)c + n;
                    if(tmp>122) tmp = 96 + (tmp-122);
                }
                
                answer += System.Convert.ToChar(tmp);    
            }else
                answer += ' ';    
        }
        return answer;
    }
}",,2023. 9. 1,35,2
2023. 9. 1 오전 9:53:41,박준규,Unity,22 - 내적,"using System;

public class Solution 
{
    public int solution(int[] a, int[] b) 
    {
        int answer = 0;
        for(int i = 0; i < a.Length; i++){
            answer += a[i]*b[i];
        }
        return answer;
    }
}",,2023. 9. 1,22,1
2023. 9. 1 오전 9:54:03,김민태,Unity,38 - K번째수정렬,"using System;

public class Solution {
    public int[] solution(int[] array, int[,] commands) 
    {

        int[] answer = new int[commands.GetLongLength(0)];
        
        for(int n = 0; n < commands.GetLongLength(0); n++)
        {
            int i = commands[n, 0];
            int j = commands[n, 1];
            int k = commands[n, 2];
            
            int[] temp = new int[j - i + 1];
            
            for(int a = 0; a<temp.Length; a++)
            {
                temp[a] = array[a+i-1];
            }
            
            Array.Sort(temp);
            
            answer[n] = temp[k-1];
        }
        return answer;
    }
}",https://github.com/rlaalsxo/CodingTest,2023. 9. 1,38,2
2023. 9. 1 오전 9:54:07,김종훈,Unity,36 - 숫자 문자열과 영단어,"using System;

public class Solution {
    public int solution(string s) {
        int answer = 0;
        
        s = s.Replace(""zero"", ""0"");
        s = s.Replace(""one"", ""1"");
        s = s.Replace(""two"", ""2"");
        s = s.Replace(""three"", ""3"");
        s = s.Replace(""four"", ""4"");
        s = s.Replace(""five"", ""5"");
        s = s.Replace(""six"", ""6"");
        s = s.Replace(""seven"", ""7"");
        s = s.Replace(""eight"", ""8"");
        s = s.Replace(""nine"", ""9"");

        int k;
        bool strToInt = int.TryParse(s, out k);     
        if(strToInt) answer = k;                  
        
        return answer;     
    }
}",,2023. 9. 1,36,2
2023. 9. 1 오전 9:54:11,송유섭,Unity,8 - 문자열을 정수로 바꾸기,"public class Solution 
{
    public int solution(string s) 
    {
        int answer = 0;
        answer = int.Parse(s);
        return answer;
    }
}",https://github.com/SongJinx3512/codeKata/blob/main/codeKata%20lv%201%20%238%20%EB%AC%B8%EC%9E%90%EC%97%B4%20%EC%A0%95%EC%88%98%EB%A1%9C%20%EB%B0%94%EA%BE%B8%EA%B8%B0,2023. 9. 1,8,1
2023. 9. 1 오전 9:54:40,김종훈,Unity,37 - 문자열 내 마음대로 정렬하기,"using System.Linq;

public class Solution {
    public string[] solution(string[] strings, int n) {
        int len = strings.Length;
        string[] answer = new string[len];
        
        for(int i=0; i<len; i++)
        {
            answer[i] = (strings[i][n]) + strings[i];
        }
        
        System.Array.Sort(answer);
        
    
        for(int j=0; j<len; j++)
        {
            answer[j] = answer[j].Substring(1);
        }
        
        return answer;
    }
}",,2023. 9. 1,37,2
2023. 9. 1 오전 9:55:17,강희건,Unity,6 - x만큼 간격이 있는 n개의 숫자,"namespace list
{
    internal class Program
    {
        public static List<long> solution(int x, int n)
        {
            List<long> result = new List<long>();
            for (int i = 1; i <= n; i++)
            {
                result.Add((long)x * i);
            }
            return result;
        }
        static void Main(string[] args)
        {
            int x = 4;
            int n = 3;
            List<long> answer = solution(x, n);

            Console.WriteLine(""Result:"");
            foreach (long num in answer)
            {
                Console.Write(num + "" "");
            }
        }
    }
}",https://github.com/bo9us,2023. 9. 1,6,1
2023. 9. 1 오전 9:55:26,김종훈,Unity,38 - K번째수정렬,"using System;

public class Solution {
    public int[] solution(int[] array, int[,] commands) {
        int[] answer = new int[commands.GetLongLength(0)];
        
        for(int n = 0; n < commands.GetLongLength(0); n++)
        {
            int i = commands[n, 0];
            int j = commands[n, 1];
            int k = commands[n, 2];
            
            int[] temp = new int[j - i + 1];
            
            for(int a = 0; a<temp.Length; a++)
            {
                temp[a] = array[a+i-1];
            }
            Array.Sort(temp);
            
            answer[n] = temp[k-1];
        }
        return answer;
    }
}",,2023. 9. 1,38,2
2023. 9. 1 오전 9:55:43,강상찬,AI,40 - 가장 가까운 같은 글자,"def solution(s):
    answer = []
    store = []
    cnt = 0
    lis = list(s)
    for i in lis:
        if (i in store) == False:
            answer.append(-1)
            store.append(i)
        else:
            answer.append(cnt-(len(store)-store[::-1].index(i)-1))
            store.append(i)
        cnt += 1
    return answer",,2023. 9. 1,40,2
2023. 9. 1 오전 9:55:44,문현우,Unity,16 - 음양 더하기,"using System;

public class Solution {
    public int solution(int[] absolutes, bool[] signs) {
        int answer = 0;
        for(int i=0; i<absolutes.Length; i++){
            if(signs[i] == true){
                answer += absolutes[i];
            }
            else{
                answer -= absolutes[i];
            }
        }
        return answer;
    }
}",https://github.com/Munch310/Algorithm-Csharp/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/76501.%E2%80%85%EC%9D%8C%EC%96%91%E2%80%85%EB%8D%94%ED%95%98%EA%B8%B0,2023. 9. 1,16,1
2023. 9. 1 오전 9:55:56, 이정환,Unity,30 - 3진법 뒤집기,"  public static int solution(int n)
            {

                string n_base3 = """";
                while (n > 0)
                {
                    int temp = n % 3;
                    n_base3 = temp + n_base3;
                    n /= 3;
                }
                Console.WriteLine(n_base3);
                n_base3.Reverse();
                int result = 0;
                for (int i = 0; i < n_base3.Length; i++)
                {
                    result += int.Parse(n_base3[i].ToString()) * (int)Math.Pow(3, i);
                }

                return result;
            }
        ",,2023. 9. 1,30,1
2023. 9. 1 오전 9:55:59,박희원,Unity,30 - 3진법 뒤집기,"using System;
using System.Collections.Generic; 

public class Solution {
    public int solution(int n)
        {
            int answer = 0;

            List<int> list = new List<int>();

            int a = 0;

            while (n > 0)
            {
                list.Add(n % 3);
                n = n / 3;
            }

            int num = 0; 

            for (int i = list.Count-1; i>= 0; i--)
            {
                answer +=(int)Math.Pow(3, num++)*list[i];
            }

            return answer;
        }
}",,2023. 9. 1,30,1
2023. 9. 1 오전 9:57:02,지민규,Unity,30 - 3진법 뒤집기,"using System;

public class Solution {
    public int solution(int n) {
        var threeDiv= new int[] {};
        while (n / 3 > 0 || n % 3 > 0)
        {
            Array.Resize(ref threeDiv, threeDiv.Length+1);
            threeDiv[threeDiv.Length - 1] = (n % 3);
            n /= 3;
        }
        Array.Reverse(threeDiv);
        int answer = 0;
        for (int i = 0; i < threeDiv.Length; i++)
        {
            int temp = threeDiv[i];
            int Times = 1;
            for (int j = 0; j < i; j++)
            {
                Times *= 3;
            }
            answer += temp*Times;
        }
        return answer;
    }
}",,2023. 9. 1,30,1
2023. 9. 1 오전 9:57:07,김예준,Unity,40 - 가장 가까운 같은 글자,"using System;
using System.Collections.Generic;

public class Solution {
    public int[] solution(string s) {
        int[] answer = new int[s.Length];
        Dictionary<char, int> dic = new Dictionary<char, int>();
        
        for (char i = 'a'; i <= 'z'; i++)
        {
            dic.Add(i,0);
        }
        
        for (int i = 0; i < s.Length; i++)
        {
            if (dic[s[i]] == 0)
            {
                dic[s[i]] = i + 1;
                answer[i] = -1;
            }
            else
            {
                answer[i] = i - dic[s[i]] + 1;
                dic[s[i]] = i + 1;
            }
        }
        
        return answer;
    }
}",,2023. 9. 1,40,2
2023. 9. 1 오전 9:57:19,윤지연,Unity,13 - 콜라츠 추측,"public class Solution {
    public int solution(int num) {
        int answer = 0;
        long check = num;
        if(check == 1)
            return answer;
        
        while (true)
        {
            if(answer > 500)
            {
                answer = -1;
                break;
            }
            if(check == 1)
                break;
            
            if(check % 2 == 0)
            {
                check /= 2;
            }
            else
            {
                check = check*3 + 1;
            }
            answer++;
        }
        
        return answer;
    }
}",https://github.com/jungbosong/Codekata/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12943.%E2%80%85%EC%BD%9C%EB%9D%BC%EC%B8%A0%E2%80%85%EC%B6%94%EC%B8%A1,2023. 9. 1,13,1
2023. 9. 1 오전 9:58:12,이홍준,Unity,33 - 크기가 작은 부분,"using System;

public class Solution {
    public int solution(string t, string p) {
        int answer = 0;
        long y = long.Parse(p);
        
        for (int i = 0; i < t.Length - p.Length + 1; i++)
        {
            string s = t.Substring(i, p.Length);
            
            long x = long.Parse(s);
            
            if (x <= y)
            {
                answer++;
            }
        }
    
        return answer;
    }
}",https://github.com/dlghdwns97/Study/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/unrated/147355.%E2%80%85%ED%81%AC%EA%B8%B0%EA%B0%80%E2%80%85%EC%9E%91%EC%9D%80%E2%80%85%EB%B6%80%EB%B6%84%EB%AC%B8%EC%9E%90%EC%97%B4,2023. 9. 1,33,2
2023. 9. 1 오전 9:58:25,김종훈,Unity,39 - 두 개 뽑아서 더하기,"using System;
using System.Collections.Generic;

public class Solution {
    public int[] solution(int[] numbers) {
        List<int> answer = new List<int>();
            
           
            for (int i = 0; i < numbers.Length-1; i++)
            {
            	
                for (int j = i+1; j < numbers.Length; j++)
                {
                	
                    int temp = numbers[i] + numbers[j];
                   
                    if (answer.Contains(temp) == false)
                    {
                        answer.Add(temp);
                    }
                }
            }
           
            answer.Sort();
 
            return answer.ToArray();
    }
}",,2023. 9. 1,39,2
2023. 9. 1 오전 9:58:59,김종훈,Unity,40 - 가장 가까운 같은 글자,"using System;
using System.Collections.Generic; 
using System.Linq; 

public class Solution {
     public int[] solution(string s) {
        int[] answer = new int[s.Length];
        int index = -1;
        
        for(int i = 0; i < s.Length; i++)
        {
            index = -1;
            for(int j = i - 1; j >= 0; j--)
            {
                if(s[i] == s[j])
                {
                    index = i - j;
                    break;
                }
            }
            answer[i] = index;
        }
        return answer;
    }
}",,2023. 9. 1,40,2
2023. 9. 1 오전 9:59:10,어하림,Unity,7 - 자연수 뒤집어 배열로 만들기,"using System;

public class Solution {
    public long[] solution(long n) {
        int size = n.ToString().Length;
        long[] answer = new long[size];

        for(int i = 0; i < size; i++){
            answer[i] = n % 10;
            n /= 10;
        }
        return answer;
    }
}",,2023. 9. 1,7,1
2023. 9. 1 오전 9:59:40,김종훈,Unity,41 - 푸드 파이트 대회,"using System;
using System.Linq;

public class Solution {
    public string solution(int[] food) {
        string answer = """";
        string str = """";
        
        for(int i = 1; i < food.Length; i++)
        {
            for(int j = 0; j < food[i] / 2; j++)
            {
                answer += i.ToString();
            }
        }
        str = String.Concat(answer.Reverse());
        answer += ""0"" + str;
        return answer;
    }
}",,2023. 9. 1,41,2
2023. 9. 1 오전 10:00:12,김종훈,Unity,42 - 콜라 문제,"using System;

public class Solution {
    public int solution(int a, int b, int n) {
        int answer = 0;
        
        while(n > a - 1)
        {
            answer += (n / a) * b;
            n = (n / a) * b + n % a;
        }
        
        return answer;
    }
}",,2023. 9. 1,42,2
2023. 9. 1 오전 10:01:03,이경민,Unity,14 - 서울에서 김서방 찾기,"public class Solution {
    public string solution(string[] seoul) {
        int i = 0;
        foreach (string str in seoul)
        {
            if(str == ""Kim"")
            {
                break;
            }
            i++;
        }
        string answer = $""김서방은 {i}에 있다"";
        return answer;
    }
}",https://github.com/kminsmin/Algorithm_Test_Practice/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12919.%E2%80%85%EC%84%9C%EC%9A%B8%EC%97%90%EC%84%9C%E2%80%85%EA%B9%80%EC%84%9C%EB%B0%A9%E2%80%85%EC%B0%BE%EA%B8%B0,2023. 9. 1,14,1
2023. 9. 1 오전 10:01:14,유채연,Unity,29 - 최대공약수와 최소공배수,"    public long[] solution(int n, int m) {
        int temp = System.Math.Max(n,m);
        if(temp==n) {
            n=m;
            m=temp;
        }
        
        long[] answer = new long[2] {1,0};
        for(int i=2;i<=n;i++){
            if(n%i==0&&m%i==0) {
                answer[0]=(long)i;
            }
        }
        if(answer[0]==1) {
            answer[1] = (n==m) ? n : n*m;
            return answer;
        }
        else{
            int i = 1;
            while(true){
                if((answer[0]*i)%n==0&&(answer[0]*i)%m==0) {
                    answer[1]=answer[0]*i;
                    break;
                }
                i++;
            }
        }
        return answer;
    }",https://github.com/ychy0006/AlgorithmCodeKata/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1,2023. 9. 1,29,1
2023. 9. 1 오전 10:01:16,이경현,Unity,30 - 3진법 뒤집기,"public static int solution(int n)
{
    int answer = 0;
    while (n > 0)
    {
        answer *= 3;
        answer += n % 3;
        n /= 3;
    }
    return answer;
}",https://github.com/516lkh/Algorithm,2023. 9. 1,30,1
2023. 9. 1 오전 10:01:17,김연우,Unity,6 - x만큼 간격이 있는 n개의 숫자,"#include <string>
#include <vector>

using namespace std;

vector<long long> solution(int x, int n) {
    vector<long long> answer(n, x);

    for (int i = 1; i < n; i++)
        answer[i] = answer[i - 1] + x;

    return answer;
}


(못풀어서 참고답 봤습니다)",,2023. 9. 1,6,1
2023. 9. 1 오전 10:01:19,김지수,AI,20 - 가운데 글자 가져오기,"def solution(s):
    if len(s) % 2 == 0:
        answer = s[(len(s)//2-1) : (len(s)//2+1)]
    else: 
        answer = s[len(s)//2]
    return answer",,2023. 9. 1,20,1
2023. 9. 1 오전 10:01:34,이경민,Unity,15 - 나누어 떨어지는 숫자,"using System.Collections.Generic;
public class Solution {
    public int[] solution(int[] arr, int divisor) {
        List<int> answer = new List<int>();
        foreach (int num in arr)
        {
            if (num % divisor == 0)
            {
                answer.Add(num);
            }
        }
        if (answer.Count == 0)
        {
            answer.Add(-1);
        }
        answer.Sort();
        return answer.ToArray();
    }
}",https://github.com/kminsmin/Algorithm_Test_Practice/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12910.%E2%80%85%EB%82%98%EB%88%84%EC%96%B4%E2%80%85%EB%96%A8%EC%96%B4%EC%A7%80%EB%8A%94%E2%80%85%EC%88%AB%EC%9E%90%E2%80%85%EB%B0%B0%EC%97%B4,2023. 9. 1,15,1
2023. 9. 1 오전 10:01:47,유채연,Unity,30 - 3진법 뒤집기,"    public int solution(int n) {
        string s = """";
        while(true){
            s+=(n%3).ToString();
            n/=3;
            if(n==0) break;
        }
        
        char[] c = s.ToCharArray();
        
        double answer=0;
        for(int i=0;i<s.Length;i++){
            answer+=double.Parse(c[i].ToString())*Math.Pow(3,s.Length-1-i);
        }
        
        return (int)answer;
    }",https://github.com/ychy0006/AlgorithmCodeKata/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/68935.%E2%80%853%EC%A7%84%EB%B2%95%E2%80%85%EB%92%A4%EC%A7%91%EA%B8%B0/3%EC%A7%84%EB%B2%95%E2%80%85%EB%92%A4%EC%A7%91%EA%B8%B0.cs,2023. 9. 1,30,1
2023. 9. 1 오전 10:02:05,이경민,Unity,16 - 음양 더하기,"using System;

public class Solution {
    public int solution(int[] absolutes, bool[] signs) {
        int answer = 0;
        for(int i = 0; i < absolutes.Length; i++)
        {
            if (signs[i] == true)
            {
                answer += absolutes[i];
            }
            else answer -= absolutes[i];
        }
        return answer;
    }
}",https://github.com/kminsmin/Algorithm_Test_Practice/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/76501.%E2%80%85%EC%9D%8C%EC%96%91%E2%80%85%EB%8D%94%ED%95%98%EA%B8%B0,2023. 9. 1,16,1
2023. 9. 1 오전 10:02:18,김진성,Unity,15 - 나누어 떨어지는 숫자,"using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Algorithm_006
{
    public class DividedNumberArray
    {
        public int[] solution(int[] arr, int divisor)
        {
            int[] answer;
            List<int> result = new List<int>();

            for (int i = 0; i < arr.Length; i++)
            {
                if (arr[i] % divisor == 0)
                {
                    result.Add(arr[i]);
                }
            }
            if (result.Count == 0)
            {
                result.Add(-1);
            }
            answer = result.ToArray();

            for (int i = 0; i < answer.Length - 1; i++)
            {
                for (int j = i+1; j < answer.Length; j++)
                {
                    if (answer[i] > answer[j])
                    {
                        int temp = answer[i];
                        answer[i] = answer[j];
                        answer[j] = temp;
                    }
                }
            }
            return answer;
        }
    }
}
",https://github.com/GYALLERHORN/ALGORITHM,2023. 9. 1,15,1
2023. 9. 1 오전 10:02:27,유채연,Unity,31 - 이상한 문자 만들기,"    public string solution(string s) {
        string answer = """";
        
        int i=0;
        for(int j = 0; j<s.Length;j++){
            if(s[j]!=' '){
                if(i%2==0) answer += s[j].ToString().ToUpper();
                else answer += s[j].ToString().ToLower();
            }
            i++;
            if(s[j]==' ') {
                answer += s[j];
                i=0;
            }
        }
        
        return answer;
    }",https://github.com/ychy0006/AlgorithmCodeKata/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12930.%E2%80%85%EC%9D%B4%EC%83%81%ED%95%9C%E2%80%85%EB%AC%B8%EC%9E%90%E2%80%85%EB%A7%8C%EB%93%A4%EA%B8%B0/%EC%9D%B4%EC%83%81%ED%95%9C%E2%80%85%EB%AC%B8%EC%9E%90%E2%80%85%EB%A7%8C%EB%93%A4%EA%B8%B0.cs,2023. 9. 1,31,2
2023. 9. 1 오전 10:02:37,이경민,Unity,17 - 핸드폰 번호 가리기,"public class Solution {
    public string solution(string phone_number) {
        string answer = """";
        char[] arr = phone_number.ToCharArray();
        for (int i = 0; i < arr.Length ; i ++)
        {
            if (i < arr.Length - 4)
            {
                arr[i] = char.Parse(""*"");
            }            
            answer += arr[i].ToString();
        }
        
        return answer;
    }
}",https://github.com/kminsmin/Algorithm_Test_Practice/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12948.%E2%80%85%ED%95%B8%EB%93%9C%ED%8F%B0%E2%80%85%EB%B2%88%ED%98%B8%E2%80%85%EA%B0%80%EB%A6%AC%EA%B8%B0,2023. 9. 1,17,1
2023. 9. 1 오전 10:02:51,조범준,Unity,35 - 시저 암호,"using System;

public class Solution {
    public string solution(string s, int n) {
        string answer = """";
        foreach(char c in s){
            if(c != ' ')
            {
                int tmp;
                if((int)c<91)
                {
                    tmp = (int)c + n;
                    if(tmp>90)
                        tmp = 64 + (tmp-90);
                }
                else
                {
                    tmp = (int)c + n;
                    if(tmp>122)
                        tmp = 96 + (tmp-122);
                }
                answer += Convert.ToChar(tmp);
            }else{
                answer += c;
            }
        }
        return answer;
    }
}",https://github.com/KimMaYa1/BaekJoonEx/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1,2023. 9. 1,35,2
2023. 9. 1 오전 10:03:23,이경민,Unity,18 - 없는 숫자 더하기,"using System;

public class Solution {
    public int solution(int[] numbers) {
        int answer = 0;
        bool isIn = false;
        for (int i = 0 ; i < 10; i ++)
        {
            isIn = false;
            foreach(int num in numbers)
            {
                if (i == num)
                {
                    isIn = true;
                    break;
                }                   
            }
            if (isIn == false)
                answer += i;
        }
        return answer;
    }
}",https://github.com/kminsmin/Algorithm_Test_Practice/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/86051.%E2%80%85%EC%97%86%EB%8A%94%E2%80%85%EC%88%AB%EC%9E%90%E2%80%85%EB%8D%94%ED%95%98%EA%B8%B0,2023. 9. 1,18,1
2023. 9. 1 오전 10:03:56,김준범,Unity,9 - 정수 제곱근 판별,"public class Solution {
    public long solution(long n) {
        long answer = 0;
        for(long i=1; i<=n; i++)
        {
            if(i*i==n)
            {
                answer =(i+1)*(i+1);
                break;
            }
            else if(i*i>=n)
            {
                break;
            }
        }
        if(answer ==0)
        {
            answer =-1;
        }
        return answer;
    }
}",,2023. 9. 1,9,1
2023. 9. 1 오전 10:03:56,이경민,Unity,19 - 제일 작은 수 제거하기,"using System.Collections.Generic;
using System.Linq;
public class Solution {
    public int[] solution(int[] arr) {
        List<int> answer = arr.ToList();
        int minNum = 0;
        for (int i = 0; i < answer.Count; i++)
        {
            if (i == 0)
                minNum = answer[i];
            else
            {
                if(answer[i]<minNum)
                   minNum = answer[i];
                else continue;
            }
        }
        answer.Remove(minNum);
        if (answer.Count == 0)
        {
            answer.Add(-1);
        }
        return answer.ToArray();
    }
}",https://github.com/kminsmin/Algorithm_Test_Practice/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12935.%E2%80%85%EC%A0%9C%EC%9D%BC%E2%80%85%EC%9E%91%EC%9D%80%E2%80%85%EC%88%98%E2%80%85%EC%A0%9C%EA%B1%B0%ED%95%98%EA%B8%B0,2023. 9. 1,19,1
2023. 9. 1 오전 10:04:07,기현빈,Unity,30 - 3진법 뒤집기,"using System;

public class Solution {
    public int solution(int n) {
        int answer = 0;
        long trit = 0;
        
        while(n > 0) {
            trit *= 10;
            trit += n % 3;
            n /= 3;
        }
        
        for(int i = 0; trit > 0; i++) {
            answer += (int)((trit % 10) * (int)Math.Pow(3, i));
            trit /= 10;
        }
        
        return answer;
    }
}",,2023. 8. 31,30,1
2023. 9. 1 오전 10:04:59,이정환,Unity,26 - 문자열 다루기 기본,"public class Solution {
    public bool solution(string s) {
        if(s.Length !=4 && s.Length !=6){
            return false;
        }
        foreach(char i in s){
            if(!char.IsDigit(i)){
                return false;
            }
        }
         return true; 
    }
}",,2023. 9. 1,26,1
2023. 9. 1 오전 10:05:04,김형수,Unity,7 - 자연수 뒤집어 배열로 만들기,"using System;

public class Solution {
    public int[] solution(long n) {
        
    // long -> str -> str[i]
    // 문자열 하나씩 배열 원소로 넣는다.

    string str = n.ToString();

    int[] arr = new int[str.Length];

    for (int i = 0; i < str.Length; i++)
    {
        arr[i] = Int32.Parse(str[i].ToString());
    }

    Array.Reverse(arr);

    return arr;
        
    //int[] answer = new int[] {};
    //return answer;
    }
}",https://github.com/Kim-H-S/Programmers/blob/main/%EC%9E%90%EC%97%B0%EC%88%98%20%EB%92%A4%EC%A7%91%EC%96%B4%20%EB%B0%B0%EC%97%B4%EB%A1%9C%20%EB%A7%8C%EB%93%A4%EA%B8%B0.cs,2023. 9. 1,7,1
2023. 9. 1 오전 10:05:05,박민혁,Unity,30 - 3진법 뒤집기,"using System;
using System.Collections.Generic;
public class Solution {
    public int solution(int n) {
        int answer = 0;
        int number=n;
        List<int> a=new List<int>();
        while(number>=1)
        {
           a.Add(number%3);
           number=number/3;
        }
        a.Reverse();
        for(int i=0;i<a.Count;++i)
        {
           if(a[i]!=0)
           {
                   answer+=a[i]*(int)Math.Pow(3,i);
           }            
        }
        return answer;
    }
}",,2023. 9. 1,30,1
2023. 9. 1 오전 10:05:13,이경민,Unity,20 - 가운데 글자 가져오기,"public class Solution {
    public string solution(string s) {
        string answer = """";
        char[] arr = s.ToCharArray();
        if (arr.Length % 2 == 0)
        {
            answer += arr[(arr.Length-2)/2];
            answer += arr[(arr.Length-2)/2 + 1];
        }
        else
        {
            answer += arr[(arr.Length +1)/2 - 1];
        }
        return answer;
    }
}",https://github.com/kminsmin/Algorithm_Test_Practice/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12903.%E2%80%85%EA%B0%80%EC%9A%B4%EB%8D%B0%E2%80%85%EA%B8%80%EC%9E%90%E2%80%85%EA%B0%80%EC%A0%B8%EC%98%A4%EA%B8%B0,2023. 9. 1,20,1
2023. 9. 1 오전 10:05:21,장성림,Unity,36 - 숫자 문자열과 영단어,"using System;

public class Solution {
    public int solution(string s) {
        int answer = 0;
        char[] cArray = s.ToCharArray();
        string cString = """";
        string totalString = """";
        foreach(char c in cArray){
            if (c >= '0' && c <= '9'){
                totalString += c.ToString();
            }
            else{
                cString += c.ToString();
                switch(cString){
                    case ""zero"":
                        totalString += ""0"";
                        cString = """";
                        break;
                    case ""one"":
                        totalString += ""1"";
                        cString = """";
                        break;
                    case ""two"":
                        totalString += ""2"";
                        cString = """";
                        break;
                    case ""three"":
                        totalString += ""3"";
                        cString = """";
                        break;
                    case ""four"":
                        totalString += ""4"";
                        cString = """";
                        break;
                    case ""five"":
                        totalString += ""5"";
                        cString = """";
                        break;
                    case ""six"":
                        totalString += ""6"";
                        cString = """";
                        break;
                    case ""seven"":
                        totalString += ""7"";
                        cString = """";
                        break;
                    case ""eight"":
                        totalString += ""8"";
                        cString = """";
                        break;
                    case ""nine"":
                        totalString += ""9"";
                        cString = """";
                        break;
                    default:
                        break;
                }
            }
        }
        Int32.TryParse(totalString, out answer);
        return answer;
    }
}",https://github.com/hoobhoob,2023. 9. 1,36,2
2023. 9. 1 오전 10:06:51,신해준,Unity,13 - 콜라츠 추측,"public class Solution {
    public int solution(long num) 
    {
        int answer = 0;
        
        while (num != 1)
        {
            if (num % 2 == 0)
                num /= 2;
            else
                num = (num * 3) + 1;
            
            answer++;
            
            if (answer > 500)
                return -1;
            
        }
        
        return answer;
    }
}
",,2023. 9. 1,13,1
2023. 9. 1 오전 10:08:48,정주찬,Unity,45 - 카드 뭉치,"using System;
using System.Linq;

public class Solution {
    public string solution(string[] cards1, string[] cards2, string[] goal) {
        string result = ""Yes"";
        int i = 0;
        int j = 0;
        int k = 0;
        while (i < cards1.Length || j < cards2.Length)
        {
            if (k == goal.Length)
            {
                break;
            }

            if (i < cards1.Length && goal[k] == cards1[i])
            {
                i++;
                k++;
            }
            else if (j < cards2.Length && goal[k] == cards2[j])
            {
                j++;
                k++;
            }
            else
            {
                result = ""No"";
                break;
            }
        }
        
        return result;
    }
}",https://github.com/JeongJuChan/Algorithm/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/unrated/159994.%E2%80%85%EC%B9%B4%EB%93%9C%E2%80%85%EB%AD%89%EC%B9%98/%EC%B9%B4%EB%93%9C%E2%80%85%EB%AD%89%EC%B9%98.cs,2023. 9. 1,45,2
2023. 9. 1 오전 10:09:13,정주찬,Unity,46 - 과일 장수,"using System;

public class Solution {
    public int solution(int k, int m, int[] score) {
            // 한 상자에 m개씩
    // 가장 낮은 점수(p)로 가격을 잼 p * m
    int result = 0;
    Array.Sort(score, (x,y) => -x.CompareTo(y));

    int index = -1;
    int i = 1;
    index = (m - 1);
    while (index < score.Length)
    {
        result += score[index] * m;
        i++;
        index = m * i - 1;
    }
        return result;
    }
}",https://github.com/JeongJuChan/Algorithm/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/unrated/135808.%E2%80%85%EA%B3%BC%EC%9D%BC%E2%80%85%EC%9E%A5%EC%88%98/%EA%B3%BC%EC%9D%BC%E2%80%85%EC%9E%A5%EC%88%98.cs,2023. 9. 1,46,2
2023. 9. 1 오전 10:09:44,정주찬,Unity,47 - 모의고사완전탐색,"using System;
using System.Linq;
using System.Collections.Generic;

public class Solution {
    public int[] solution(int[] answers) {
        int[] case1 = { 1, 2, 3, 4, 5 };
int[] case2 = { 2, 1, 2, 3, 2, 4, 2, 5 };
int[] case3 = { 3, 3, 1, 1, 2, 2, 4, 4, 5, 5 };

List<int> answer = new List<int>();
int[] score = new int[3];

for (int i = 0; i < answers.Length; i++)
{
    if (case1[i % case1.Length] == answers[i])
    {
        score[0]++;
    }
    if (case2[i % case2.Length] == answers[i])
    {
        score[1]++;
    }
    if (case3[i % case3.Length] == answers[i])
    {
        score[2]++;
    }
}

for (int i = 0; i < score.Length; i++)
{
    if (score.Max() == score[i])
    {
        answer.Add(i + 1);
    }
}

answer.Sort();
        return answer.ToArray();
    }
}",https://github.com/JeongJuChan/Algorithm/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/42840.%E2%80%85%EB%AA%A8%EC%9D%98%EA%B3%A0%EC%82%AC/%EB%AA%A8%EC%9D%98%EA%B3%A0%EC%82%AC.cs,2023. 9. 1,47,2
2023. 9. 1 오전 10:10:21,채이환,Unity,35 - 시저 암호,"public class Solution {
    public string solution(string s, int n) {
        string answer = """";
        foreach (char c in s)
        {
            if (c >= 'A' && c <= 'Z')
                answer += (char)(c + n > 'Z' ? 'A' + c + n - 'Z' - 1 : c + n);
            else if (c >= 'a' && c <= 'z')
                answer += (char)(c + n > 'z' ? 'a' + c + n - 'z' - 1 : c + n);
            else
                answer += c;
        }
        return answer;
    }
}",,2023. 9. 1,35,2
2023. 9. 1 오전 10:10:43,채이환,Unity,36 - 숫자 문자열과 영단어,"using System;

public class Solution {
    public int solution(string s) {
        int answer = 0;
        string[] numstr = new string[] {
            ""zero"", ""one"", ""two"", ""three"", ""four"",
            ""five"", ""six"", ""seven"", ""eight"", ""nine""};
        for (int i = 0; i<numstr.Length; ++i)
        {
            s = s.Replace(numstr[i], i.ToString());
        }
        answer = Convert.ToInt32(s);
        return answer;
    }
}",,2023. 9. 1,36,2
2023. 9. 1 오전 10:11:07,채이환,Unity,37 - 문자열 내 마음대로 정렬하기,"using System;
using System.Linq;
public class Solution {
    public string[] solution(string[] strings, int n) {
        Array.Sort(strings, (x,y) => {
            if (x == y)
                return 0;
            else if(x[n] > y[n])
                return 1;
            else if(x[n] < y[n])
                return -1;
            else if(x[n] == y[n])
            {
                for (int i = 0; i<x.Length && i<y.Length; ++i)
                {
                    if (i == n)
                        continue;
                    if (x[i] > y[i])
                        return 1;
                    else if (x[i] < y[i])
                        return -1;
                }
                if (x.Length > y.Length)
                    return 1;
                else if (x.Length < y.Length)
                    return -1;
                else
                    return 0;
            }
            else
                return 0;
        });
        return strings;
    }
}",,2023. 9. 1,37,2
2023. 9. 1 오전 10:11:27,채이환,Unity,38 - K번째수정렬,"using System;
using System.Linq;
public class Solution {
    public int[] solution(int[] array, int[,] commands) {
        int[] answer = new int[commands.GetLength(0)];
        for (int i=0; i<answer.Length; ++i)
        {
            int[] ret = new int[commands[i,1] - commands[i,0] + 1];
            Array.Copy(array, commands[i,0]-1, ret, 0, ret.Length);
            Array.Sort(ret);
            answer[i] = ret[commands[i,2]-1];
        }
        return answer;
    }
}",,2023. 9. 1,38,2
2023. 9. 1 오전 10:12:31,맹주한,Unity,4 - 약수의 합,"#include <stdio.h>
#include <stdbool.h>
#include <stdlib.h>

int solution(int n) {
    int answer = 0;
    
    for (int i = 1; i <= n; i++) {
        if (n % i == 0) {
            answer += i;
        }
    }
    
    return answer;
}

int main() {
    int n1 = 12;
    printf(""n = %d, answer = %d\n"", n1, solution(n1)); 
    
    int n2 = 5;
    printf(""n = %d, answer = %d\n"", n2, solution(n2)); 
    
    return 0;
}",,2023. 9. 1,4,1
2023. 9. 1 오전 10:14:37,양수홍,AI,50 - 기사단원의 무기,"def solution(number, limit, power):
    answer = 0
    for num in range(1,number+1):
        cnt=0
        for i in range(1,int(num**0.5)+1):
            if num%i==0:
                cnt+=2
                if num/i==i:
                    cnt-=1
            if cnt>limit:
                cnt=power
                break
        answer+=cnt
    return answer",,2023. 9. 1,50,2
2023. 9. 1 오전 10:21:21,조영오,Unity,40 - 가장 가까운 같은 글자,"using System;

public class Solution {
    public int[] solution(string s) {
        int[] answer = new int[s.Length];
        string str = """";
        
        //문자열 s 내의 각 문자들에 대한 정보를 정수로 나타낸 배열 반환.
        //가장 앞에 처음으로 나온 문자는 -1, 이 전에 나온 문자가 존재한다면 앞 뒤 중 가장 가까운 문자와의 거리이다.
        for(int i = 0; i < s.Length ; i++){
            //처음으로 발견한 문자라면
            if(!str.Contains(s[i])){
                str += s[i];//str 에 추가
                answer[i] = -1;
            }
            //전에 발견한 적이 있는 문자라면 동일한 문자가 나올 때 까지 앞뒤로 탐색하고 그 거리를 삽입 
            else{
                int distance = 1;
                while(i - distance >= 0 || i + distance < s.Length){
                    if(i - distance >= 0){
                        if(s[i - distance] == s[i]){
                            break;
                        }
                    }
                    else if(i + distance < s.Length){
                        if(s[i + distance] == s[i]){
                            break;
                        }
                    }
                    distance++;
                }
                answer[i] = distance;
            }
        }
        
        return answer;
    }
}",,2023. 9. 1,40,2
2023. 9. 1 오전 10:38:29,김민상,Unity,43 - 명예의 전당 (1),"using System.Collections.Generic;
public class Solution
{
    public class Heapq
    {
        public int Count => heapq.Count;
        private List<int> heapq;

        public Heapq () { heapq = new List<int>(); }

        public int Min
        {
            get
            {
                int min = int.MaxValue;
                for (int i = 0; i < heapq.Count; i++)
                {
                    if (heapq[i] < min)
                    {
                        min = heapq[i];
                    }
                }
                return min;
            }
        }

        public void Pop() => heapq.Remove(Min);

        public void Push(int num) => heapq.Add(num);
    }

    public int[] solution(int k, int[] score)
    {
        Heapq heapq = new Heapq();
        List<int> answer = new List<int>();

        foreach (int s in score)
        {
            heapq.Push(s);
            if (heapq.Count > k)
                heapq.Pop();
            answer.Add(heapq.Min);
        }

        return answer.ToArray();
    }
}",,2023. 9. 1,43,2
2023. 9. 1 오전 10:51:22,신우석,Unity,52 - 옹알이 (2),"using System;

public class Solution {
    public bool check(string b) {
        string[] available = new string[4] {""aya"", ""ye"", ""woo"", ""ma""};
        string previousString = """";
        while (b.Length > 0) {
            bool isFail = true;
            foreach (string a in available) {
                if (b.Length < a.Length) continue;
                string c = b.Substring(0, a.Length);
                if (c == a) {
                    if (c == previousString) return false;
                    b = b.Substring(a.Length);
                    previousString = a;
                    isFail = false;
                    break;
                }
            }
            if (isFail) return false;
        }
        return true;
    }
    
    public int solution(string[] babbling) {
        string[] available = new string[4] {""aya"", ""ye"", ""woo"", ""ma""};
        int answer = 0;
        foreach (string b in babbling)
            if (check(b) == true) ++answer;
        return answer;
    }
}",https://github.com/seoksii/AlgorithmCodeKata/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/unrated/133499.%E2%80%85%EC%98%B9%EC%95%8C%EC%9D%B4%E2%80%85%EF%BC%882%EF%BC%89,2023. 9. 1,52,2
2023. 9. 1 오전 10:52:46,김민상,Unity,44 - 2016년,"public class Solution
{
    public string solution(int a, int b)
    {
        int[] month = new int[] { 31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 };
        int answer = 4;
        for (int i = 0; i < a - 1; i++)
        {
            answer += month[i];
        }
        answer = (answer + b) % 7;
        return new string[] { ""SUN"", ""MON"", ""TUE"", ""WED"", ""THU"", ""FRI"", ""SAT"" }[answer];
    }
}",,2023. 9. 1,44,2
2023. 9. 1 오전 11:00:42,김민상,Unity,45 - 카드 뭉치,"public class Solution
{
    public string solution(string[] cards1, string[] cards2, string[] goal)
    {
        int p1 = 0, p2 = 0;

        foreach (string g in goal)
        {
            if (p1 < cards1.Length && cards1[p1] == g)
                p1 += 1;
            else if (p2 < cards2.Length && cards2[p2] == g)
                p2 += 1;
            else
                return ""No"";
        }

        return ""Yes"";
    }
}",,2023. 9. 1,45,2
2023. 9. 1 오전 11:11:16,조영오,Unity,41 - 푸드 파이트 대회,"using System;

public class Solution {
    public string solution(int[] food) {
        //한명은 왼쪽=>오른쪽 음식 먹기, 다른 한명은 오른쪽=>왼쪽 음식 먹기
        //정 가운데의 '물' 에 먼저 도착한 쪽이 승리, 음식의 종류와 양, 순서는 같아야 한다.
        //각자의 초반 구간에는 칼로리 낮은 음식을 배치하고 점차 높아지도록 하였음.
        //정 가운데 구간은 0이며, 반환할 answer 배열은 이러한 규칙성을 가짐. 
        //food 배열은 칼로리가 적은 순으로 인덱스에 배치된 음식의 양을 나타내는 정수 리스트이다. 
        //food[0] 은 음식 배치의 정 가운데에 들어갈 물이며, 항상 1이다
        //물을 제외하고 배치되는 음식의 수는 반드시 짝수여야 하며, 나머지 음식들은 전부 버려지게 된다.
    
        int foodAmount = 0;
        
        //food 에서 물 제외하고 수량이 홀수인 음식은 1씩 빼기.
        for(int i = 0 ; i < food.Length; i++){
            if(i == 0){foodAmount += 1;}
            else{
                if(food[i] % 2 != 0 && food[i] > 0){
                    food[i] -= 1;
                }
                foodAmount += food[i];
            }
        }
        
        //이렇게 음식이 배치될 자리의 길이와 최종적으로 사용될 food 구하기.
        char[] foodTable = new char[foodAmount];
        //food[0] 는 가장 가운데에 위치해야 하고, food[1] 부터 answer 의 양 끝에서 
        //가운데 방향으로 채워나간다. 
        int currentFood = 1;
        int tableIndex = 0;
        //물 하나를 제외하곤 모든 음식이 짝을 맞추어 배치되어야 함.
        while(foodAmount >= 3 && currentFood < food.Length){
            //해당 종류의 음식 수량이 1 이상이라면
            if(food[currentFood] > 1){
                //테이블의 양 끝에 세팅, 전체적으로 남은 음식 수량 감소
                foodTable[tableIndex] = (char)(currentFood + '0'); 
                Console.WriteLine((char)(currentFood + '0'));
                food[currentFood]--; foodAmount--;
                foodTable[foodTable.Length - (tableIndex+1)] = (char)(currentFood + '0'); 
                food[currentFood]--; foodAmount--;
                tableIndex++;
            }
            //해당 종류의 음식 세팅이 끝났다면
            else{
                currentFood++;
            }
        }
        
        //결과적으로, 물만 남기고 나머지 음식이 배치된 상태가 됨. 여기서 물만 한 가운데에 세팅하면 끝.
        foodTable[foodTable.Length/2] = '0';
        
        string answer = new string(foodTable);
        
        return answer;
    }
}",,2023. 9. 1,41,2
2023. 9. 1 오전 11:13:09,한병권,Unity,50 - 기사단원의 무기,"using System;

public class Solution {
    public int solution(int number, int limit, int power) {
        int answer = 0;
        
        for(int i = 1; i <= number; i++)
        {
            int temp = 1;
            
            for(int j = 1; j <= (i/2); j++)
            {
                if(i % j == 0)
                {
                    temp++;
                    if(temp > limit)
                    {
                        break;
                    }
                }
            }

            if(temp > limit)
            {
                answer += power;
            }
            else
            {
                answer += temp;
            }
            
        }
        
        return answer;
    }
}",https://github.com/hbg9212/AlgorithmCodekata,2023. 9. 1,50,2
2023. 9. 1 오전 11:20:02,김민상,Unity,46 - 과일 장수,"using System;
public class Solution
{
    public int solution(int k, int m, int[] score)
    {
        Array.Sort(score);
        Array.Reverse(score);

        int answer = 0;
        for (int i = m - 1; i < score.Length; i += m)
        {
            answer += score[i] * m;
        }
        return answer;
    }
}",,2023. 9. 1,46,2
2023. 9. 1 오전 11:33:17,조영오,Unity,42 - 콜라 문제,"using System;

public class Solution {
    public int solution(int a, int b, int n) {
        int answer = 0;
        int bottles = n;
        int newBottles = 0;
        
        while(bottles >= a){
            newBottles = (bottles / a) * b;
            bottles = (bottles % a) + newBottles;
            answer += newBottles;
        }
        
        return answer;
    }
}",,2023. 9. 1,42,2
2023. 9. 1 오전 11:33:56,조성훈,Unity,16 - 음양 더하기,"using System;

public class Solution 
{
    public int solution(int[] absolutes, bool[] signs) 
    {
        int answer = 0;
        for(int i = 0; i < signs.Length; i++)
        {
            if(signs[i] == true)
            {
                answer += absolutes[i];
            }
            else
            {
                answer -= absolutes[i];
            }
        }
        return answer;
    }
}",,2023. 9. 1,16,1
2023. 9. 1 오전 11:38:53,김광수,Unity,63 - 공원 산책,"using System;
using System.Collections.Generic;

public class Solution 
{
    public int[] solution(string[] park, string[] routes) 
    {
        int[] start = new int[2];
        Dictionary<string, int[]> dirDic = new Dictionary<string, int[]>();
        
        dirDic.Add(""N"", new int[]{-1,0});
        dirDic.Add(""S"", new int[]{1,0});
        dirDic.Add(""W"", new int[]{0,-1});
        dirDic.Add(""E"", new int[]{0,1});

        
        for (int i =0; i<park.Length; i++)
        {
            for (int j = 0; j < park[i].Length ; j++)
            {
                if(park[i][j] == 'S'){
                    start[0]= i;
                    start[1]= j;
                }
            }    
        }

        
        foreach(string route in routes)
        {
            int[] dir = dirDic[route.Substring(0,1)];
            int move = int.Parse(route.Substring(2,1));
            bool isMove = true;
            int[] temp = new int[2];
            Array.Copy(start,temp,temp.Length);
            
            for(int i =0; i< move; i++)
            {
                int nextY = temp[0] + dir[0];
                if ( nextY < 0 || nextY >= park.Length)
                {
                    isMove = false;
                    // 0보다 크고 park.Length 보단 작아야함
                }
                
                int nextX = temp[1] + dir[1];
                if (nextX < 0 || nextX >= park[0].Length)
                {
                    isMove = false;
                }
                
                if (isMove)
                {
                    if (park[nextY][nextX] == 'X'){
                        isMove = false;
                    }
                }
                
                temp[0]= nextY;
                temp[1]= nextX;
                
            }
            
            if (isMove)
            {
                start = temp;       
            }

            //주어진방향으로 이동하는 도중에 장애물이 있는지
            //끝까지 이동할때 공원을 벗어나는지 확인
        }
        

        return start;
    }
}",https://github.com/kksoo0131/Study/commit/af985efc05dbddc76ede99c06f8de6d835a0cb96,2023. 9. 1,63,3
2023. 9. 1 오전 11:54:32,김민상,Unity,47 - 모의고사완전탐색,"using System.Collections.Generic;
using System;
using System.Linq;
public class Solution
{
    public int[] solution(int[] answers)
    {
        int[][] student = new int[3][] { new int[] { 1, 2, 3, 4, 5 }, new int[] { 2, 1, 2, 3, 2, 4, 2, 5 }, new int[] { 3, 3, 1, 1, 2, 2, 4, 4, 5, 5 } };
        int[] score = new int[3] { 0, 0, 0 };

        for (int i = 0; i < answers.Length; i++)
        {
            for (int j = 0; j < 3; j++)
            {
                if (answers[i] == student[j][i % student[j].Length])
                    score[j] += 1;
            }
        }

        List<int> answer = new List<int>();
        for (int i = 0; i < 3; i++)
        {
            if (score[i] == score.Max())
            {
                answer.Add(i + 1);
            }
        }
        return answer.ToArray();
    }
}",,2023. 9. 1,47,2
2023. 9. 1 오후 12:12:38,이성권,Unity,7 - 자연수 뒤집어 배열로 만들기,"using System;
using System.Linq;

public class Solution {
    public int[] solution(long n) {
        string str = n.ToString();
        int[] answer = new int[str.Length];
        
        for(int i = 0; i < str.Length; i++)
        {
            answer[i] = int.Parse(str[i].ToString());
        }
        Array.Reverse(answer);
        return answer;
    }
}",https://github.com/,2023. 9. 1,7,1
2023. 9. 1 오후 12:18:39,김주형,Unity,19 - 제일 작은 수 제거하기,"using System;
using System.Collections.Generic;

public class Solution 
{
    public int[] solution(int[] arr)
    {
        List<int>answer = new List<int>();
        int min = arr[0];
        if (arr.Length <= 1)
        {
            answer.Clear();
            answer.Add(-1);
        }
         // 배열 길이가 1이거나 0이면 -1

        else
        {
            for(int i = 0; i<arr.Length; i++)
            {
                if (arr[i]<min)
                {
                    min = arr[i];
                }
            } 
            // 최소값 찾아서 저장하기

            for (int i =0; i<arr.Length; i++)
            {
                answer.Add(arr[i]);
            }
            answer.Remove(min);
            // answer List에 arr 배열 모든 값 할당한 후 최소값만 제거     
        } 

        return answer.ToArray();
    }
}",https://github.com/kjuhyung/Algorithm.git,2023. 9. 1,19,1
2023. 9. 1 오후 12:24:25,김도현B,Unity,35 - 시저 암호,"using System.Text;
public class Solution {
    public string solution(string s, int n) {
        StringBuilder sb = new StringBuilder(s);
        for(int i = 0; i < s.Length; i++)
        {
            if (((byte)sb[i]) >= 65 && ((byte)sb[i]) <= 90)
            {
                sb[i] = ((byte)sb[i]) + n > 90 ? (char)(64 + (((byte)sb[i]) + n)-90) : (char)(((byte)sb[i]) + n);
            }
            else if(((byte)sb[i]) >=97 && ((byte)sb[i]) <= 122)
            {
                sb[i] = ((byte)sb[i]) + n > 122 ? (char)(96 + (((byte)sb[i]) + n)-122) : (char)(((byte)sb[i]) + n);
            }
        }
        string answer = sb.ToString();
        return answer;
    }
}",https://github.com/subscriptioncat/Algorithm,2023. 9. 1,35,2
2023. 9. 1 오후 12:26:40,박지원,Unity,20 - 가운데 글자 가져오기,"public class Solution {
    public string solution(string s) {
        int s_l = s.Length;
        if(s_l % 2 == 0){
            return $""{s[s_l/2-1]}{s[s_l/2]}"";
        }
        return s[(s_l-1)/2].ToString();
    }
}",https://github.com/jwonp9127/AlgorithmStudy/tree/11854de3cfcaef50509f8117bb91407cdd20d901/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12903.%E2%80%85%EA%B0%80%EC%9A%B4%EB%8D%B0%E2%80%85%EA%B8%80%EC%9E%90%E2%80%85%EA%B0%80%EC%A0%B8%EC%98%A4%EA%B8%B0,2023. 9. 1,20,1
2023. 9. 1 오후 12:50:15,조영오,Unity,43 - 명예의 전당 (1),"using System;
using System.Collections.Generic;

public class Solution {
    public int[] solution(int k, int[] score) {
        int[] answer = new int[score.Length];
        List<int> list = new List<int>();
        int minScore = 0;
        
        //k 는 명예의 전당 목록 점수의 개수, score 는 처음부터 마지막까지 출연한 가수들의 점수 배열.
        //List 를 사용한다면 관리하기 더 쉬울 듯 하다.
        
        
        for(int i = 0 ; i < score.Length; i++){
            //list 의 크기가 k 미만일 때는 일단 무조건 받아들임.
            //새 값이 들어올 때마다 오름차순 정렬. 0번 인덱스가 최소값이 된다
            if(list.Count < k){
                list.Add(score[i]);
                list.Sort();
            }
            //list 의 크기가 k 이상이라면 
            else if(list.Count >= k){
                //새 값이 최소값보다 클 때 0번 인덱스의 원소를 제거, 재정렬
                if(score[i] > list[0]){
                    list.RemoveAt(0);
                    list.Add(score[i]);
                    list.Sort();
                }
            }
            answer[i] = list[0];
        }
        
        
        //answer 은 매일 명예의 전당 최하위 점수 배열
        
        return answer;
    }
}",,2023. 9. 1,43,2
2023. 9. 1 오후 12:56:18,김도현B,Unity,36 - 숫자 문자열과 영단어,"using System;

public class Solution {
    public int solution(string s) {
        foreach (NumList n in  Enum.GetValues(typeof(NumList)))
    s= s.Replace(n.ToString(), ((int)n).ToString());
        return int.Parse(s);
    }
}
public enum NumList
{
    zero = 0,
    one, 
    two,
    three, 
    four, 
    five, 
    six, 
    seven,
    eight, 
    nine
}",https://github.com/subscriptioncat/Algorithm,2023. 9. 1,36,2
2023. 9. 1 오후 1:08:31,이승연,Unity,13 - 콜라츠 추측,"public class Solution {
    public int solution(long num) {
        int answer = 0;
        

        for(int i=0;i<500;i++)
        {
            if(i==0&&num==1)
            {
                answer=0;
                break;
            }
            if(num%2==0)
            {
                num=num/2;
            }
            else
            {
                num=num*3+1;
            }
            if(num==1)
            {
                answer=i+1;
                break;
            }
            
        }
        if(num!=1)
        {
            answer=-1;
        }
        
        
        return answer;
    }
}",,2023. 9. 1,13,1
2023. 9. 1 오후 4:55:42,최성원,Unity,6 - x만큼 간격이 있는 n개의 숫자,"using System.Collections.Generic;

public class Solution {
    public long[] solution(int x, int n) {
        List<long> answerList = new List<long>();
        
        for(int i = 1; i <= n; i++) {
            answerList.Add((long)x * i);
        }

        return answerList.ToArray();
    }
}
",,2023. 9. 1,6,1
2023. 9. 1 오후 5:18:02,지민규,Unity,15 - 나누어 떨어지는 숫자,"using System.Collections.Generic;

public class Solution {
    public int[] solution(int[] arr, int divisor) {
        List<int> answer = new List<int>();
        int cnt = 0;
        for (int i = 0; i < arr.Length; i++)
        {
            if (arr[i] % divisor == 0)
            {
                answer.Add(arr[i]);
                cnt += 1;
            }
        }
        if (cnt == 0)
        {
            answer.Add(-1);
        }
        answer.Sort();
        return answer.ToArray();
    }
}",,2023. 9. 1,15,1
2023. 9. 1 오후 5:18:39,지민규,Unity,8 - 문자열을 정수로 바꾸기,"public class Solution {
    public int[] solution(long n) {
        int arrayNum = n.ToString().Length;
        int[] answer = new int[arrayNum];
        for (int i = 0; i < arrayNum; i++)
        {
            answer[i] = (int)(n % 10);
            n /= 10;
        }
        return answer;
    }
}",,2023. 9. 1,8,1
2023. 9. 1 오후 5:31:24,배인호,Unity,37 - 문자열 내 마음대로 정렬하기,"using System;

public class Solution
{
    public string[] solution(string[] strings, int n)
    {
        string[] answer = new string[] { };

        for (int i = 0; i < strings.Length - 1; i++)
        {
            for (int j = i + 1; j < strings.Length; j++)
            {
                var compareNum1 = Convert.ToChar(strings[i].Substring(n, 1));
                var compareNum2 = Convert.ToChar(strings[j].Substring(n, 1));

                if (compareNum1 > compareNum2)
                {
                    var tmp = strings[i];
                    strings[i] = strings[j];
                    strings[j] = tmp;
                }
                else if (compareNum1 == compareNum2)
                {
                    int index =
                        strings[i].Length > strings[j].Length
                            ? strings[j].Length
                            : strings[i].Length;

                    for (int k = 0; k < index; k++)
                    {
                        var compareOtherNum1 = Convert.ToChar(strings[i].Substring(k, 1));
                        var compareOtherNum2 = Convert.ToChar(strings[j].Substring(k, 1));

                        if (compareOtherNum1 != compareOtherNum2)
                        {
                            if (compareOtherNum1 > compareOtherNum2)
                            {
                                var tmp = strings[i];
                                strings[i] = strings[j];
                                strings[j] = tmp;
                            }

                            break;
                        }
                        else if (k == index - 1)
                        {
                            if (index != strings[i].Length)
                            {
                                var tmp = strings[i];
                                strings[i] = strings[j];
                                strings[j] = tmp;
                            }
                        }
                    }
                }
            }
        }

        answer = strings;

        return answer;
    }
}
",https://github.com/cutlake2000/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12915.%E2%80%85%EB%AC%B8%EC%9E%90%EC%97%B4%E2%80%85%EB%82%B4%E2%80%85%EB%A7%88%EC%9D%8C%EB%8C%80%EB%A1%9C%E2%80%85%EC%A0%95%EB%A0%AC%ED%95%98%EA%B8%B0,2023. 9. 1,37,2
2023. 9. 1 오후 5:43:50,김주형,Unity,20 - 가운데 글자 가져오기,"using System;
using System.Text;

public class Solution
{
    public string solution(string s)
    {
        string answer;
        StringBuilder sb = new StringBuilder(s);

        int divisor = sb.Length % 2 != 0 ?
            (s.Length -1) /2 : (s.Length -2) /2;
        if (sb.Length % 2 !=0)
        {
            sb.Remove(0,divisor);
            sb.Remove(1,divisor);
        }
        else
        {
            sb.Remove(0,divisor);
            sb.Remove(2,divisor);
        }

        answer = sb.ToString();        
        return answer;
    }
}",https://github.com/kjuhyung/Algorithm.git,2023. 9. 1,20,1
2023. 9. 1 오후 5:46:52,신현주,Unity,31 - 이상한 문자 만들기,"public class Solution {
    public string solution(string s) {
        string answer = """";
        int wordIdx =0;
        for( int i = 0; i< s.Length ; i++){
            if( s[i] == ' '){
                wordIdx =0;
                answer += "" "";
                continue;
            }
            if( wordIdx % 2 == 0 ){
                answer += s[i].ToString().ToUpper();
                wordIdx++;
            }else{
                answer += s[i].ToString().ToLower();
                wordIdx++;
            }
        }
        return answer;
    }
}",https://github.com/Shyunju/codeKata,2023. 9. 1,31,2
2023. 9. 1 오후 6:37:23,김주형,Unity,21 - 수박수박수박수박수박수?,"public class Solution
{
    public string solution(int n)
    {
        string answer = """";
        for (int i = 0; i<n; i++)
        {
            answer += i%2==0 ? ""수"" : ""박"";
        }
        return answer;
    }
}",https://github.com/kjuhyung/Algorithm.git,2023. 9. 1,21,1
2023. 9. 1 오후 7:23:15,권수민,AI,14 - 서울에서 김서방 찾기,"def solution(seoul):
    if 1 <= len(seoul) and  len(seoul) <= 1000:
        # i = 0 
        #enumerate로 i 인덱싱 알아서 추가.
        for i,kim in enumerate(seoul):
            if 1 <= len(kim) and len(kim) <= 20 :
                if kim == ""Kim"":
                    return f""김서방은 {i}에 있다""
                i += 1",https://github.com/Stella-Kwon/git-github.com-Stella-Kwon-algorithm_prac/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12919.%E2%80%85%EC%84%9C%EC%9A%B8%EC%97%90%EC%84%9C%E2%80%85%EA%B9%80%EC%84%9C%EB%B0%A9%E2%80%85%EC%B0%BE%EA%B8%B0/%EC%84%9C%EC%9A%B8%EC%97%90%EC%84%9C%E2%80%85%EA%B9%80%EC%84%9C%EB%B0%A9%E2%80%85%EC%B0%BE%EA%B8%B0.py,2023. 9. 1,14,1
2023. 9. 1 오후 7:24:45,김주형,Unity,22 - 내적,"public class Solution
{
    public int solution(int[] a, int[] b) 
    {
        int answer = 0;

        for(int i=0; i<a.Length; i++)
        {
            answer += a[i]*b[i];
        }

        return answer;
    }
}",https://github.com/kjuhyung/Algorithm.git,2023. 9. 1,22,1
2023. 9. 1 오후 7:28:24,이하택,Unity,18 - 없는 숫자 더하기,"using System;

public class Solution 
{
    public int solution(int[] numbers) 
    {
        int sum = 0;
        foreach(int n in numbers)
            sum += n;
        int answer = 45 - sum;
        return answer;
    }
}",https://github.com/LeeHataeg/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/86051.%E2%80%85%EC%97%86%EB%8A%94%E2%80%85%EC%88%AB%EC%9E%90%E2%80%85%EB%8D%94%ED%95%98%EA%B8%B0,2023. 9. 1,18,1
2023. 9. 1 오후 7:28:57,이하택,Unity,16 - 음양 더하기,"using System;

public class Solution 
{
    public int solution(int[] absolutes, bool[] signs) 
    {
        int answer = 0;
        
        for(int i = 0; i < signs.Length; i++)
        {
            if(signs[i] == true)
            {
                answer += absolutes[i];
            }
            else
            {
                answer -= absolutes[i];
            }
        }
        
        return answer;
    }
}",https://github.com/LeeHataeg/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/76501.%E2%80%85%EC%9D%8C%EC%96%91%E2%80%85%EB%8D%94%ED%95%98%EA%B8%B0,2023. 9. 1,16,1
2023. 9. 1 오후 7:29:39,이하택,Unity,17 - 핸드폰 번호 가리기,"public class Solution 
{
    public string solution(string phone_number) 
    {
        string answer = """";
        
        int count = phone_number.Length;
        string star = """";
        
        for(int i = 0; i< count - 4; i++)
        {
            star = star.Insert(0, ""*"");
        }
        
        answer = phone_number.Remove(0, count-4)
            				 .Insert(0, star);
        
        return answer;
    }
}",https://github.com/LeeHataeg/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12948.%E2%80%85%ED%95%B8%EB%93%9C%ED%8F%B0%E2%80%85%EB%B2%88%ED%98%B8%E2%80%85%EA%B0%80%EB%A6%AC%EA%B8%B0,2023. 9. 1,17,1
2023. 9. 1 오후 7:35:05,조영오,Unity,44 - 2016년,"public class Solution {
    public string solution(int a, int b) {
        string answer = """";
        int day = 4;//2015년 12월 31일 = 2016년 기준 1월 0일 목요일. 
        
        //1월 1일은 금요일. a월 b일의 요일은?
        //윤년 : 2월이 29일이며, 8월과 시작 요일이 같아진다.
        //1월 31, 2월 29, 3월 31, 4월 30, 5월 31, 6월 30, 7월 31, 8월 31,
        //9월 30, 10월 31, 11월 30, 12월 31
        
        for(int i = 1 ; i < a ; i++){
            //1월~7월은 2월 제외 홀수 달이 31, 짝수 달이 30.
            //8월부터는 홀수 달이 30, 짝수 달이 31.
            if(i >= 1 && i <= 7 && i != 2){
                day += i % 2 != 0 ? 31 : 30;
            }
            else if(i == 2){
                day += 29;
            }
            else if(i >= 8){
                day += i % 2 != 0 ? 30 : 31;
            }
        }
        
        day += b;
        day %= 7;
        
        switch(day){
            case 0:
                answer = ""SUN"";
                break;
            case 1:
                answer = ""MON"";
                break;
            case 2:
                answer = ""TUE"";
                break;                
            case 3:
                answer = ""WED"";
                break;
            case 4:
                answer = ""THU"";
                break;
            case 5:
                answer = ""FRI"";
                break;
            case 6:
                answer = ""SAT"";
                break;        
            default:
                answer = ""OUT_OF_RANGE_ERROR"";
                break;
        }
        
        return answer;
    }
}",,2023. 9. 1,44,2
2023. 9. 1 오후 7:55:43,조영오,Unity,45 - 카드 뭉치,"using System;

public class Solution {
    public string solution(string[] cards1, string[] cards2, string[] goal) {
        string answer = ""ERROR MESSAGE"";
        
        //1번, 2번 카드뭉치의 현재 탐색할 문자열의 위치
        int card1Index = 0;
        int card2Index = 0;
        
        //목표 배열을 처음부터 끝까지 탐색. 
        for(int i = 0; i < goal.Length; i++){
            //1번 카드뭉치의 첫 문자열이 목표 배열의 현재 문자열인지 비교.
            //같다면 다음 문자열을 가리키도록 하고 넘어감.
            if(card1Index < cards1.Length && cards1[card1Index] == goal[i]){
                card1Index++;
            }
            else if(card2Index < cards2.Length && cards2[card2Index] == goal[i]){
                card2Index++;
            }
            else{
                answer = ""No"";
                break;
            }
            
            if(i == goal.Length-1){answer = ""Yes"";}
        }
        return answer;
    }
}",,2023. 9. 1,45,2
2023. 9. 1 오후 8:02:08,송승훈,Unity,19 - 제일 작은 수 제거하기,"public class Solution {
    public int[] solution(int[] arr) {
        int[] answer = new int[arr.Length-1];
        if (arr.Length <= 1) 
        {
            return new int[] { -1 };
        }
        else
        {
            for(int i = 0; i < arr.Length-1;i++)
            {
                int maxIndex = i;
                for (int j = i+1; j < arr.Length;j++ )
                {
                    if(arr[j] > arr[maxIndex])
                    {
                        maxIndex = j;
                    }
                }
                
                int temp = arr[i];
                arr[i] = arr[maxIndex];
                arr[maxIndex] = temp;
            }
        }
        for(int i = 0; i < arr.Length-1;i++)
        {
            answer[i]=arr[i];
        }

        
        
        return answer;
    }
}",https://github.com/DoDokang318/CodeKata.git,2023. 9. 1,19,1
2023. 9. 1 오후 8:04:04,송승훈,Unity,24 - 문자열 내림차순으로 배치하기,"public class Solution {
    public string solution(string s) {
        string answer = """";
         char[] c = s.ToCharArray();
        for(int i =0 ; i< c.Length;i++)
        {
            int maxIndex = i;
            for(int j = i+1;j<c.Length; j++)
            {
                if(c[j] > c[maxIndex]) 
                {
                    maxIndex = j; 
                }
            }  
            
            char temp =c[i];
            c[i]=c[maxIndex];
            c[maxIndex] = temp;
        }
        answer = new string(c);
        
        return answer;
    }
}",https://github.com/DoDokang318/CodeKata.git,2023. 9. 1,24,1
2023. 9. 1 오후 8:04:45,송승훈,Unity,25 - 부족한 금액 계산하기,"using System;

class Solution
{
    public long solution(int price,int money, int count)
    {
        long Total =0;
       long answer = 0;
        for (int i = 1 ; i <= count ; i++)
        {
            Total += price*i;
        }
        if(money > Total )
        {
            return 0;
        }
        else
        {
          
            answer = Total - money;
            return  answer;
            
        }
        
       
    }
}",https://github.com/DoDokang318/CodeKata.git,2023. 9. 1,25,1
2023. 9. 1 오후 8:05:19,송승훈,Unity,26 - 문자열 다루기 기본,"public class Solution {
    public bool solution(string s)
    {
          long result;
          return long.TryParse(s, out result);
    
    }
}",https://github.com/DoDokang318/CodeKata.git,2023. 9. 1,26,1
2023. 9. 1 오후 8:21:56,김호연,Unity,23 - 약수의 개수와 덧셈,"using System;

public class Solution {
    public int solution(int left, int right) {
        int answer = 0;
        // 1. 두 사이의 값들을 구해야 됨
        // 2. 그 값들의 약수를 구해야됨
        // 3. 약수들의 개수가 홀수인지, 짝수인지 구하고 홀수면 그 값들을 빼고 짝수면 더하기.
        
        for(int i = left; i <= right; i++) // left부터 right 반복 = i가 그 사이의 수
        {
            int count = 0;
            for(int div = 1; div <= i; div++) // 약수 구하기
            {
                if(i % div == 0) // i를 div로 나눴을 때 나머지가 0이면 div는 i의 약수이다
                {
                    count ++; // 약수의 개수
                }
            }
            
            if(count % 2 == 0) // 약수의 개수가 짝수면 i(그 값)를 answer에 더해야됨
            {
                answer += i;
            }
            else
            {
                answer -= i;
            }
        }
        return answer;
    }
}",,2023. 9. 1,23,1
2023. 9. 1 오후 8:29:40,김호연,Unity,24 - 문자열 내림차순으로 배치하기,"using System;

public class Solution {
    public string solution(string s) {
        string answer = """";
        //내림차순 정렬은 배열로 만든 후 sort reverse하면 될 것 같다.
        //문자열을 배열로 만드는 ToCharArray 사용
        char[] arr  = s.ToCharArray();
        
        Array.Sort(arr);
        Array.Reverse(arr);
        
        answer = new string(arr);  // 새로 문자열로 만듬
        
        return answer;
    }
}",,2023. 9. 1,24,1
2023. 9. 1 오후 8:56:57,안소정,Unity,16 - 음양 더하기,"using System;

public class Solution {
    public int solution(int[] absolutes, bool[] signs) {
        int answer = 0;
        for (int i = 0; i < absolutes.Length; ++i)
            if(signs[i] == true)
            {
                answer += absolutes[i];
            }
            else answer -= absolutes[i];
        return answer;
    }
}",,2023. 9. 1,16,1
2023. 9. 1 오후 9:19:05,김윤경,Unity,7 - 자연수 뒤집어 배열로 만들기," public int[] solution1(long n)         {             string str = n.ToString(); // str = n, long -> string(변환)             int[] answer = new int[str.Length]; // 글자 길이                                                 // str.Length = 5                                                 // int[] answer = new int[5]              for (int i = 0; i < str.Length; i++)              {                 answer[i] = (int)(n % 10); // string -> int(변환)                                            // answer[0] = 12345 % 10 = 5                                            // answer[1] = 1234 % 10 = 4                                            // answer[2] = 123 % 10 = 3                                            // answer[3] = 12 % 10 = 2                                            // answer[4] = 1 % 10 = 1                 n = n / 10;             }             return answer;         }",,2023. 9. 1,7,1
2023. 9. 1 오후 9:58:48,김민재,AI,13 - 콜라츠 추측,"def solution(num):
    answer = 0

    while True:
        if num % 2 == 0:
            num = num / 2
            answer += 1
            continue

        elif num == 1:
            break

        else:
            num = num*3 + 1
            answer += 1

    if answer >= 500:
        answer = -1

    return answer",https://github.com/Kim-Minjae9872/Code_Kata,2023. 9. 1,13,1
2023. 9. 2 오전 9:58:23,김정규,AI,24 - 문자열 내림차순으로 배치하기,"def solution(s):
    s = [ord(s[n]) for n in range(len(s))]
    s.sort(reverse=True)
    return ''.join(chr(n) for n in s)",https://github.com/JungGyu00/algorithm,2023. 9. 2,24,1
2023. 9. 2 오전 10:19:29,김정규,AI,25 - 부족한 금액 계산하기,"def solution(price, money, count):
    a = sum([price*cnt for cnt in range(1, count+1)])
    if money - a >= 0:
        return 0
    else:
        return abs(money - a)",https://github.com/JungGyu00/algorithm,2023. 9. 2,25,1
2023. 9. 2 오전 11:02:25,김민상,Unity,48 - 소수 만들기,"using System;

class Solution
{
    bool IsPrime(int num)
    {
        for (int i = 2; i < Math.Sqrt(num) + 1; i++)
        {
            if (num % i == 0)
                return false;
        }
        return true;
    }

    public int solution(int[] nums)
    {
        int answer = 0;

        for (int i = 0; i < nums.Length - 2; i++)
        {
            for (int j = i + 1; j < nums.Length - 1; j++)
            {
                for (int k = j + 1; k < nums.Length; k++)
                {
                    answer += (IsPrime(nums[i] + nums[j] + nums[k])) ? 1 : 0;
                }
            }
        }
        return answer;
    }
}",,2023. 9. 2,48,2
2023. 9. 2 오전 11:16:30,김민상,Unity,49 - 덧칠하기,"using System;
public class Solution {
    public int solution(int n, int m, int[] section) {
        int answer = 0;
        int now = 0;
        
        foreach (int sect in section)
        {
            if (now < sect)
            {
                now = sect + m - 1;
                answer += 1;
            }
        }
        
        return answer;
    }
}",,2023. 9. 2,49,2
2023. 9. 2 오전 11:54:38,김민상,Unity,50 - 기사단원의 무기,"public class Solution {
    public int solution(int number, int limit, int power) {
        number += 1;
        int[] dp = new int[number];
        
        for (int i = 1; i < number; i++)
        {
            for (int j = i; j < number; j += i)
            {
                dp[j] += 1;
            }
        }
        
        int answer = 0;
        
        foreach (int num in dp)
        {
            answer += (num > limit)? power : num;
        }
        
        return answer;
    }
}",,2023. 9. 2,50,2
2023. 9. 2 오후 4:06:21,이현지,Unity,31 - 이상한 문자 만들기,"public class Solution 
{
    public string solution(string s) 
    {
        string answer = """";
        long count = 0;
        foreach (char c in s)
        {
            if (c == ' ')
            {
                count = 0;
                answer += "" "";
            }
            else 
            {
                answer += (count % 2 == 0)? c.ToString().ToUpper() : c.ToString().ToLower();
                count ++;
            }
        }
        
        return answer;
    }
}",https://github.com/szlovelee/Programmers-Algorithm,2023. 9. 2,31,2
2023. 9. 2 오후 4:26:52,이현지,Unity,32 - 삼총사,"using System;

public class Solution 
{
    public int solution(int[] number) 
    {
        int answer = 0;
        for (int i = 0; i < number.Length - 2; i ++)
        {
            for (int j = i + 1; j < number.Length - 1; j ++)
            {
                for (int k = j + 1; k < number.Length; k ++) 
                {
                    if (number[i] + number[j] + number[k] == 0) answer ++;
                }
            }
        }
   
        return answer;
    }
}",https://github.com/szlovelee/Programmers-Algorithm,2023. 9. 2,32,2
2023. 9. 2 오후 4:39:02,조영오,Unity,46 - 과일 장수,"using System;

public class Solution {
    public int solution(int k, int m, int[] score) {
        
        //상태가 가장 좋을 때의 품질점수 : k
        //한 상자에 담기는 사과의 갯수 : m
        //과일장수가 얻는 최대 이익 : answer
        //주어진 사과 각각의 점수 : score
        
        //사과는 무조건 상자 단위로 팔며, 상자 단위 이하의 남는 사과는 버려진다.
        //상자로 묶인 사과는 모두 팔린다고 가정한다.
        //각 사과 상자의 가격은 담긴 사과들 중 가장 낮은 품질점수 * m(상자 당 사과 갯수) 이다.
        
        int answer = 0;
        //각 사과의 점수별 수량을 나타내는 배열
        int[] apples = new int[k+1];
        
        //점수별 수량 배열 초기화. 헷갈리지 않도록 0번 인덱스는 사용하지 않는다.
        foreach(int s in score){
            apples[s]++;
        }
        foreach(int s in apples){
            Console.Write(s);
        }
        Console.WriteLine();
        //각 점수별 수량마다 상자 단위로 묶는다.
        for(int i = 1; i < apples.Length; i++){
            while(apples[i] >= m){
                answer += (i * m);
                apples[i] -= m;
            }
        }
        Console.WriteLine($""first answer = {answer}"");
        
        //각 점수별로 상자 묶기를 마친 나머지를 최대한 가격이 높은 것들끼리 상자 단위로 묶는다.
        int remain = 0;
        
        for(int i = apples.Length-1; i >= 1; i--){
            remain += apples[i];
            
            while(remain >= m){
                answer += (i * m);
                remain -= m;
            }
        }
        Console.WriteLine($""second answer = {answer}"");
        
        return answer;
    }
}",,2023. 9. 2,46,2
2023. 9. 2 오후 4:54:02,이현지,Unity,33 - 크기가 작은 부분,"using System;

public class Solution 
{
    public int solution(string t, string p) 
    {
        int answer = 0;
        for (int i = 0; i < t.Length - p.Length + 1; i ++)
        {
            string numOfPLen = """";
            for (int j = 0; j < p.Length; j++)
            {
                numOfPLen += t[i + j].ToString();
            }
            if (long.Parse(numOfPLen) <= long.Parse(p)) answer ++;    
        }
        return answer;
    }
}",https://github.com/szlovelee/Programmers-Algorithm,2023. 9. 2,33,2
2023. 9. 2 오후 5:26:16,조영오,Unity,47 - 모의고사완전탐색,"using System;
using System.Collections.Generic;

public class Solution {
    public int[] solution(int[] answers) {
        
        //주어진 모의고사 문제의 실제 정답 배열 : answers 
        //가장 많은 정답을 맞힌 수포자의 번호 배열 : answer
        
        //1, 2, 3 이라는 수포자가 있고, 모두가 문제를 찍지만 찍는 패턴은 전부 다르다.
        //가장 많은 정답을 맞힌 수포자의 번호를 반환하되, 최대 점수 동점자가 여럿이면 오름차순 정렬할 것.
        
        //1번은 1~5를 계속 반복.
        //2번은 2,1,2,3,2,4,2,5 반복.
        //3번은 3,3,1,1,2,2,4,4,5,5 반복.
        int n1 = 0;
        int n2 = 0;
        int n3 = 0;
        
        for(int i = 0; i < answers.Length ; i++){
            if(answers[i] == getN1(i)) n1++;
            if(answers[i] == getN2(i)) n2++;
            if(answers[i] == getN3(i)) n3++;
        }
        
        List <int> students = new List<int>();
        
        //n1 이 최대 점수일 때
        if(n1 >=  n2 && n1 >= n3){
            students.Add(1);
            //동점자가 있다면
            if(n1 == n2){students.Add(2);}
            if(n1 == n3){students.Add(3);}
        }
        //n2 가 최대 점수일 때
        else if(n2 >= n1 && n2 >= n3){
            students.Add(2);
            //동점자가 있다면
            if(n2 == n1){students.Add(1);}
            if(n2 == n3){students.Add(3);}
        }
        //n3 이 최대 점수일 때
        else if(n3 >=  n1 && n3 >= n2){
            students.Add(3);
            //동점자가 있다면
            if(n3 == n1){students.Add(1);}
            if(n3 == n2){students.Add(2);}
        }
        
        //오름차순 정렬
        students.Sort();
        
        int[] answer = students.ToArray();
        
        return answer;
    }
    
    public static int getN1(int i){
        return i%5 + 1;
    }
    public static int getN2(int i){
        if(i % 2 == 0){return 2;}
        else {
            switch(i % 8){
                case 1 : return 1;
                case 3 : return 3;
                case 5 : return 4;
                case 7 : return 5;
            } 
        }
        return 0;
    }
    public static int getN3(int i){
        int index = i % 10;
        
        if(index <= 1) return 3;
        else if(index <= 3) return 1;
        else if(index <= 5) return 2;
        else if(index <= 7) return 4;
        else if(index <= 9) return 5;
        
        return 0;
    }
}",,2023. 9. 2,47,2
2023. 9. 2 오후 5:36:15,임전혁,Unity,43 - 명예의 전당 (1),"using System;
using System.Linq;

public class Solution {
    public int[] solution(int k, int[] score) {

        int[] answer = new int[score.Length];
    
        for (int i = 0; i < score.Length; i++)
        {
            int[] tempArr = Enumerable.Repeat(-1, score.Length * 2).ToArray();

            Array.Copy(score, 0, tempArr, 0, i + 1);
            Array.Sort(tempArr);
            Array.Reverse(tempArr);

            int answerNum = int.MaxValue;
            for (int j = 0; j < k; j++)
            {
                if (tempArr[j] == -1)
                    break;

                if (answerNum > tempArr[j])
                    answerNum = tempArr[j];
            }

            answer[i] = answerNum;
        }

        return answer;
    }
}",https://github.com/yarogono/Algorithm_CSharp/blob/master/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/unrated/138477.%E2%80%85%EB%AA%85%EC%98%88%EC%9D%98%E2%80%85%EC%A0%84%EB%8B%B9%E2%80%85%EF%BC%881%EF%BC%89/%EB%AA%85%EC%98%88%EC%9D%98%E2%80%85%EC%A0%84%EB%8B%B9%E2%80%85%EF%BC%881%EF%BC%89.cs,2023. 9. 2,43,2
2023. 9. 2 오후 5:45:28,임전혁,Unity,44 - 2016년,"using System;

public class Solution {
    public string solution(int a, int b) {
        string answer = """";
        
        string[] days = {""FRI"", ""SAT"", ""SUN"", ""MON"", ""TUE"", ""WED"", ""THU""};


        int[] mDays = {31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31};
        

        int sumMonthDays = 0;
        for(int i = 0; i < a - 1; i++) {
            sumMonthDays += mDays[i];
        }

        sumMonthDays += b -1;

        answer = days[sumMonthDays % 7];
        
        return answer;
    }
}",https://github.com/yarogono/Algorithm_CSharp/blob/master/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12901.%E2%80%852016%EB%85%84/2016%EB%85%84.cs,2023. 9. 2,44,2
2023. 9. 2 오후 7:47:51,이하택,Unity,15 - 나누어 떨어지는 숫자,"using System;
using System.Linq;
public class Solution 
{
    public int[] solution(int[] arr, int divisor) 
    {
        int count = 0;
        
        for(int i = 0; i<arr.Length; i++)
        {
            if(arr[i] % divisor == 0)
            {
                count++;
            }
        }
        
        if(count == 0)
        {
            int[] answer = new int[] {-1};
            return answer;
        }
        else
        {
            int[] answer = arr.Where(x => x % divisor == 0).ToArray();
        	Array.Sort(answer);
            return answer;
        }
    }
}",https://github.com/LeeHataeg/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12910.%E2%80%85%EB%82%98%EB%88%84%EC%96%B4%E2%80%85%EB%96%A8%EC%96%B4%EC%A7%80%EB%8A%94%E2%80%85%EC%88%AB%EC%9E%90%E2%80%85%EB%B0%B0%EC%97%B4,2023. 9. 1,15,1
2023. 9. 2 오후 7:48:43,이하택,Unity,19 - 제일 작은 수 제거하기,"public class Solution 
{
    public int[] solution(int[] arr) 
    {
        int arrLength = arr.Length - 1;
        
        if(arr.Length == 1)
        {
            int[] answer = new int[1];
            answer[0] = -1;
            return answer;
        }
        
        else
        {
            int[] answer = new int[arrLength];
        	int min = 0;
            int minValue = arr[0];
            int k = 0;
            
            for(int i = 0; i < arr.Length; i++)
            {
                if(minValue > arr[i])
                {
                    minValue = arr[i];
                    min = i;
                }
            }
            for(int j = 0; j < arr.Length; j++)
            {
                if(j == min)
                {
                    continue;
                }
                else
                {
                    answer[k] = arr[j];
                    k++;
                }
            }
            
            return answer;
        }
    }
}",https://github.com/LeeHataeg/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12935.%E2%80%85%EC%A0%9C%EC%9D%BC%E2%80%85%EC%9E%91%EC%9D%80%E2%80%85%EC%88%98%E2%80%85%EC%A0%9C%EA%B1%B0%ED%95%98%EA%B8%B0,2023. 9. 2,19,1
2023. 9. 2 오후 7:49:14,이하택,Unity,20 - 가운데 글자 가져오기,"public class Solution 
{
    public string solution(string s) 
    {
        string answer;
        int j = s.Length;
        
        int num1;
        int num2;
        char index1;
        char index2;
        
        if(j % 2 == 0)
        {
            num1 = j / 2 - 1;
            num2 = j / 2;
            
            index1 = s[num1];
            index2 = s[num2];
            
            answer = index1.ToString() + index2.ToString();
        }
        else
        {
            num1 = j / 2;
            
            index1 = s[num1];
            answer = index1.ToString();
        }
        
        return answer;
    }
}",https://github.com/LeeHataeg/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12903.%E2%80%85%EA%B0%80%EC%9A%B4%EB%8D%B0%E2%80%85%EA%B8%80%EC%9E%90%E2%80%85%EA%B0%80%EC%A0%B8%EC%98%A4%EA%B8%B0,2023. 9. 2,20,1
2023. 9. 2 오후 10:58:26,배인호,Unity,38 - K번째수정렬,"using System;
using System.Collections.Generic;
using System.Linq;

public class Solution
{
    public int[] solution(int[] array, int[,] commands)
    {
        int commandsRowIndex = commands.GetLength(0);
        int[] answer = new int[commandsRowIndex];
        List<int> arrayToList = new List<int>();

        for (int i = 0; i < commandsRowIndex; i++)
        {
            arrayToList.Clear();

            int startIndex = commands[i, 0] - 1;
            int endIndex = commands[i, 1];

            for (int j = startIndex; j < endIndex; j++)
            {
                arrayToList.Add(array[j]);
            }

            arrayToList = arrayToList.OrderBy(p => p).ToList();

            answer[i] = arrayToList[commands[i, 2] - 1];
        }

        return answer;
    }
}
",https://github.com/cutlake2000/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/42748.%E2%80%85K%EB%B2%88%EC%A7%B8%EC%88%98,2023. 9. 2,38,2
2023. 9. 2 오후 11:52:48,배인호,Unity,39 - 두 개 뽑아서 더하기,"using System;
using System.Collections.Generic;
using System.Linq;

public class Solution
{
    public int[] solution(int[] numbers)
    {
        List<int> numbersToArray = new List<int>();
        int index = numbers.Length;
        int[] answer = new int[] { };

        for (int i = 0; i < index - 1; i++)
        {
            for (int j = i + 1; j < index; j++)
            {
                int sum = numbers[i] + numbers[j];

                if (!numbersToArray.Contains(sum))
                {
                    numbersToArray.Add(sum);
                }
            }
        }

        answer = numbersToArray.OrderBy(p => p).ToArray();

        return answer;
    }
}
",https://github.com/cutlake2000/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/68644.%E2%80%85%EB%91%90%E2%80%85%EA%B0%9C%E2%80%85%EB%BD%91%EC%95%84%EC%84%9C%E2%80%85%EB%8D%94%ED%95%98%EA%B8%B0,2023. 9. 2,39,2
2023. 9. 3 오전 10:51:55,이현지,Unity,34 - 최소직사각형,"using System;
using System.Linq;

public class Solution 
{
    public int solution(int[,] sizes) 
    {
        int answer = 0;
        int[] minValues = new int[sizes.GetLength(0)];
        int[] maxValues = new int[sizes.GetLength(0)];
        for (int i = 0; i < sizes.GetLength(0); i ++)
        {
            minValues[i] = Math.Min(sizes[i, 0], sizes[i, 1]);
            maxValues[i] = Math.Max(sizes[i, 0], sizes[i, 1]);
        }

        answer = minValues.Max() * maxValues.Max();
        return answer;
    }
}
",https://github.com/szlovelee/Programmers-Algorithm,2023. 9. 3,34,2
2023. 9. 3 오전 11:05:58,임전혁,Unity,45 - 카드 뭉치,"using System;
using System.Linq;

public class Solution {
    public string solution(string[] cards1, string[] cards2, string[] goal) {
        
        string[] result = new string[goal.Length];
        for (int i = 0; i < goal.Length; i++)
        {
            for (int j = 0; j < cards1.Length; j++)
            {
                if (cards1[j] == null)
                    continue;

                if (cards1[j].Equals(goal[i]))
                {
                    result[i] = cards1[j];
                    cards1[j] = null;
                    break;
                }
                else
                    break;
            }

            for (int k = 0; k < cards2.Length; k++)
            {
                if (cards2[k] == null)
                    continue;

                if (cards2[k].Equals(goal[i]))
                {
                    result[i] = cards2[k];
                    cards2[k] = null;
                    break;
                }
                else
                    break;
            }
            
            if (result[i] == null)
                return ""No"";
        }
        return goal.SequenceEqual(result) ? ""Yes"" : ""No"";
    }
}",https://github.com/yarogono/Algorithm_CSharp/blob/master/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/unrated/159994.%E2%80%85%EC%B9%B4%EB%93%9C%E2%80%85%EB%AD%89%EC%B9%98/%EC%B9%B4%EB%93%9C%E2%80%85%EB%AD%89%EC%B9%98.cs,2023. 9. 3,45,2
2023. 9. 3 오전 11:23:02,이현지,Unity,35 - 시저 암호,"using System;

public class Solution 
{
    public string solution(string s, int n) 
    {
        string answer = """";
        foreach (char c in s)
        {
            char newChar;
            
            if (c == ' ') newChar = ' ';
            else if (c > 90) newChar = (c + n < 123)? (char)(c + n) : (char)(c + n - 26);
            else newChar = (c + n < 91)? (char)(c + n) : (char)(c + n - 26);
            
            answer += newChar;
        }
        return answer;
    }
}",https://github.com/szlovelee/Programmers-Algorithm,2023. 9. 3,35,2
2023. 9. 3 오전 11:40:24,이현지,Unity,36 - 숫자 문자열과 영단어,"using System;

public class Solution {
    public int solution(string s) {
        int answer = 0;
        string nums = s.Replace(""zero"", ""0"").Replace(""one"", ""1"").Replace(""two"", ""2"").Replace(""three"", ""3"").Replace(""four"", ""4"").Replace(""five"", ""5"").Replace(""six"", ""6"").Replace(""seven"", ""7"").Replace(""eight"", ""8"").Replace(""nine"", ""9"");
        int.TryParse(nums, out answer);
        return answer;
    }
}",https://github.com/szlovelee/Programmers-Algorithm,2023. 9. 3,36,2
2023. 9. 3 오후 3:25:54,이하택,Unity,22 - 내적,"using System;

public class Solution 
{
    public int solution(int[] a, int[] b) 
    {
        int answer = 0;
        for(int i = 0; i < a.Length; i++)
        {
            answer += a[i]*b[i];
        }
        return answer;
    }
}",https://github.com/LeeHataeg/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/70128.%E2%80%85%EB%82%B4%EC%A0%81,2023. 9. 3,22,1
2023. 9. 3 오후 3:27:14,이하택,Unity,23 - 약수의 개수와 덧셈,"using System;

public class Solution 
{
    public int solution(int left, int right) 
    {
        int answer = 0;
        for(int i = left; i <= right; i++)
        {
            double x = Math.Sqrt((double)i);
            bool isOdd = ((x % 2 == 0.0)||(x % 2 == 1.0))?true:false;
            
            if(isOdd)
                answer -= i;
            else
                answer += i;
        }
        return answer;
    }
}",https://github.com/LeeHataeg/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/77884.%E2%80%85%EC%95%BD%EC%88%98%EC%9D%98%E2%80%85%EA%B0%9C%EC%88%98%EC%99%80%E2%80%85%EB%8D%A7%EC%85%88,2023. 9. 3,23,1
2023. 9. 3 오후 4:50:21,배인호,Unity,40 - 가장 가까운 같은 글자,"using System;
using System.Collections.Generic;
using System.Linq;

public class Solution
{
    public int[] solution(string s)
    {
        int index = s.Length;
        int[] answer = new int[index];
        List<char> list = new List<char>();

        for (int i = 0; i < index; i++)
        {
            if (!list.Contains(s[i]))
            {
                answer[i] = -1;
            }
            else
            {
                answer[i] = i - list.LastIndexOf(s[i]);
            }
            list.Add(s[i]);
        }

        return answer;
    }
}
",https://github.com/cutlake2000/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/142086.%E2%80%85%EA%B0%80%EC%9E%A5%E2%80%85%EA%B0%80%EA%B9%8C%EC%9A%B4%E2%80%85%EA%B0%99%EC%9D%80%E2%80%85%EA%B8%80%EC%9E%90,2023. 9. 3,40,2
2023. 9. 3 오후 4:55:20,배인호,Unity,41 - 푸드 파이트 대회,"using System;

public class Solution
{
    public string solution(int[] food)
    {
        string answer;
        int[] answerArray;
        int stringIndex = 0;
        int answerIndex = 0;
        int iIndex = food.Length;

        for (int i = 1; i < iIndex; i++)
        {
            if (!(food[i] % 2 == 0))
            {
                food[i] -= 1;
            }

            answerIndex += food[i];
        }
        answerIndex++;

        answerArray = new int[answerIndex];

        for (int i = 1; i < iIndex; i++)
        {
            for (int j = 1; j <= (food[i] / 2); j++)
            {
                answerArray[stringIndex] = i;
                answerArray[answerIndex - stringIndex - 1] = i;
                stringIndex++;
            }
        }

        answerArray[answerIndex / 2] = 0;

        answer = string.Join("""", answerArray);

        return answer;
    }
}
",https://github.com/cutlake2000/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/134240.%E2%80%85%ED%91%B8%EB%93%9C%E2%80%85%ED%8C%8C%EC%9D%B4%ED%8A%B8%E2%80%85%EB%8C%80%ED%9A%8C,2023. 9. 3,41,2
2023. 9. 3 오후 6:44:02,배인호,Unity,42 - 콜라 문제,"using System;

public class Solution
{
    public int solution(int emptyBottle, int newBottle, int remainBottle)
    {
        int answer = 0;
        int rest = 0;

        while (true)
        {
            if (remainBottle % emptyBottle != 0)
            {
                rest = remainBottle % emptyBottle;
            }

            remainBottle = remainBottle / emptyBottle * newBottle;
            answer += remainBottle;
            remainBottle += rest;
            rest = 0;

            if (remainBottle < emptyBottle)
            {
                break;
            }
        }

        return answer;
    }
}
",https://github.com/cutlake2000/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/132267.%E2%80%85%EC%BD%9C%EB%9D%BC%E2%80%85%EB%AC%B8%EC%A0%9C,2023. 9. 3,42,2
2023. 9. 3 오후 6:59:40,배인호,Unity,43 - 명예의 전당 (1),"using System;
using System.Collections.Generic;
using System.Linq;

public class Solution
{
    public int[] solution(int k, int[] score)
    {
        List<int> honor = new List<int>();
        int index = score.Length;
        int[] answer = new int[index];

        for (int i = 0; i < index; i++)
        {
            honor.Add(score[i]);
            honor = honor.OrderBy(p => p).ToList();

            if (honor.Count > k)
            {
                honor.RemoveAt(0);
            }

            answer[i] = honor.First();
        }

        return answer;
    }
}
",https://github.com/cutlake2000/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/138477.%E2%80%85%EB%AA%85%EC%98%88%EC%9D%98%E2%80%85%EC%A0%84%EB%8B%B9%E2%80%85%EF%BC%881%EF%BC%89,2023. 9. 3,43,2
2023. 9. 3 오후 7:28:12,배인호,Unity,44 - 2016년,"public class Solution
{
    public string solution(int a, int b)
    {
        string answer = """";
        int[] date = { 31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 };
        string[] day = { ""FRI"", ""SAT"", ""SUN"", ""MON"", ""TUE"", ""WED"", ""THU"" };

        int month2Day = 0;
        int calDay = 0;

        for (int i = 0; i < a - 1; i++)
        {
            month2Day += date[i];
        }

        if ((month2Day + b) >= 7)
        {
            calDay = (month2Day + b) % 7;
        }
        else
        {
            calDay = month2Day + b;
        }

        if (calDay == 0)
        {
            calDay = 7;
        }

        answer = day[calDay - 1];

        return answer;
    }
}
",https://github.com/cutlake2000/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12901.%E2%80%852016%EB%85%84,2023. 9. 3,44,2
2023. 9. 3 오후 8:06:19,배인호,Unity,45 - 카드 뭉치,"using System;
using System.Collections.Generic;
using System.Linq;

public class Solution
{
    public string solution(string[] cards1, string[] cards2, string[] goal)
    {
        string answer = ""Yes"";

        List<string> card1ToList = cards1.ToList();
        List<string> card2ToList = cards2.ToList();
        List<string> goalToList = goal.ToList();

        while (goalToList.Count != 0)
        {
            if (card1ToList.Count != 0 && card1ToList[0].Equals(goalToList[0]))
            {
                goalToList.RemoveAt(0);
                card1ToList.RemoveAt(0);
            }
            else if (card2ToList.Count != 0 && card2ToList[0].Equals(goalToList[0]))
            {
                goalToList.Remove(card2ToList[0]);
                card2ToList.RemoveAt(0);
            }
            else
            {
                answer = ""No"";
                break;
            }
        }

        return answer;
    }
}
",https://github.com/cutlake2000/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/159994.%E2%80%85%EC%B9%B4%EB%93%9C%E2%80%85%EB%AD%89%EC%B9%98,2023. 9. 3,45,2
2023. 9. 3 오후 9:00:11,배인호,Unity,46 - 과일 장수,"using System;
using System.Collections.Generic;
using System.Linq;

public class Solution
{
    public int solution(int k, int m, int[] score)
    {
        int answer = 0;
        List<int> scoreToList = score.OrderByDescending(p => p).ToList();

        int index = scoreToList.Count / m;

        for (int i = m - 1; i < index * m; i += m)
        {
            answer += scoreToList[i];
        }

        return answer * m;
    }
}
",https://github.com/cutlake2000/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/135808.%E2%80%85%EA%B3%BC%EC%9D%BC%E2%80%85%EC%9E%A5%EC%88%98,2023. 9. 3,46,2
2023. 9. 4 오전 9:13:09,차명경,AI,16 - 음양 더하기,"def solution(absolutes, signs):
    answer = 0
    for i in range(len(signs)):
        if signs[i]:
            answer += absolutes[i]
        else:
            answer -= absolutes[i]
    return answe",,2023. 9. 4,16,1
2023. 9. 4 오전 9:14:33,최지연,AI,25 - 부족한 금액 계산하기,"def solution(price, money, count):
    answer = 0
    for i in range(count):
        print(i+1)
        answer += (i+1)*price
    answer = answer-money
    if answer > 0:
        return answer
    else:
        return 0",https://github.com/jiyeonCoder/algorithmPractice/blob/main/25.%20%EB%B6%80%EC%A1%B1%ED%95%9C%20%EA%B8%88%EC%95%A1%20%EA%B3%84%EC%82%B0%ED%95%98%EA%B8%B0.py,2023. 9. 4,25,1
2023. 9. 4 오전 9:18:09,이솔,AI,25 - 부족한 금액 계산하기,"def solution(price, money, count):
    answer = sum(i * price for i in range(1,count+1)) - money
    return answer if answer > 0 else 0",,2023. 9. 4,25,1
2023. 9. 4 오전 9:18:34,이솔,AI,26 - 문자열 다루기 기본,"def solution(s):
    if len(s) != 4 and len(s) != 6:
        return False
    else:
        if s.isdigit():
            return True
        else:
            return False",,2023. 9. 4,26,1
2023. 9. 4 오전 9:18:59,이솔,AI,27 - 행렬의 덧셈,"def solution(arr1, arr2):
    answer = arr1
    count = 0
    for i,j in zip(arr1, arr2):
        for k in range(len(i)):
            a = i[k] + j[k]
            answer[count][k] = a
        count += 1
    return answer",,2023. 9. 4,27,1
2023. 9. 4 오전 9:21:40,공혜진,AI,21 - 수박수박수박수박수박수?,"def solution(n):
    return('수박'*n)[:n]",,2023. 9. 4,21,1
2023. 9. 4 오전 9:21:54,강상찬,AI,41 - 푸드 파이트 대회,"def solution(food):
    answer =''
    foodnum = []
    cnt = 1
    for i in food[1:]:
        if (int(i)//2 != 0):
            answer += str(cnt)*(int(i)//2)
        cnt += 1
    answer = answer + '0' + answer[::-1]
    return answer",,2023. 9. 4,41,2
2023. 9. 4 오전 9:25:12,권수민,AI,15 - 나누어 떨어지는 숫자,"def solution(arr, divisor):
    answer = []
    if len(arr) == 0:
        return 
    for i in arr:
        if i % divisor == 0:
            # result = i
            answer.append(i)
    answer.sort()    
    if not answer:
        answer.append(-1)
    return answer",https://github.com/Stella-Kwon/git-github.com-Stella-Kwon-algorithm_prac/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12910.%E2%80%85%EB%82%98%EB%88%84%EC%96%B4%E2%80%85%EB%96%A8%EC%96%B4%EC%A7%80%EB%8A%94%E2%80%85%EC%88%AB%EC%9E%90%E2%80%85%EB%B0%B0%EC%97%B4/%EB%82%98%EB%88%84%EC%96%B4%E2%80%85%EB%96%A8%EC%96%B4%EC%A7%80%EB%8A%94%E2%80%85%EC%88%AB%EC%9E%90%E2%80%85%EB%B0%B0%EC%97%B4.py,2023. 9. 4,15,1
2023. 9. 4 오전 9:26:27,공혜진,AI,22 - 내적,"def solution(a, b):
    answer = 0
    for i,j in zip(a,b):
        n = i*j
        answer += n
    return answer",,2023. 9. 4,22,1
2023. 9. 4 오전 9:27:06,김도현B,Unity,34 - 최소직사각형,"using System;

public class Solution {
    public int solution(int[,] sizes) {
        int width = 0;
        int height = 0;
        for (int i  = 0; i < sizes.GetLength(0);  i++)
        {
            int max = 0;
            int min = 0;
            if(sizes[i, 0] >= sizes[i, 1])
            {
                max = sizes[i, 0];
                min = sizes[i, 1];
            }
            else
            {
                max = sizes[i, 1];
                min = sizes[i, 0];
            }
            width = Math.Max(width, max);
            height = Math.Max(height, min);
        }
        return width * height;
    }
}",https://github.com/subscriptioncat/Algorithm,2023. 9. 4,34,2
2023. 9. 4 오전 9:27:13,조호진,AI,29 - 최대공약수와 최소공배수,"def solution(n, m):
    answer = []
    
    for i in range(1,min(n,m)+1):
        if n%i ==0 and m%i ==0:
            a= i
    
    b = (n*m) // a
    answer = [a,b]
    return answer",https://github.com/bm4706/Algorithm_practice/commit/06e283c7934744f85164895334bcc014ffa43e1e,2023. 9. 4,29,1
2023. 9. 4 오전 9:27:14,차명경,AI,17 - 핸드폰 번호 가리기,"def solution(phone_number):
    answer= ''
    for i in range(len(phone_number)):
        if i < len(phone_number)-4:
            answer+='*'
        else:
            answer+= phone_number[i]
    return answer",,2023. 9. 4,17,1
2023. 9. 4 오전 9:31:11,이기호,AI,19 - 제일 작은 수 제거하기,"def solution(arr):

    if len(arr)<=1:
        return [-1]
    else:
        arr.remove(min(arr))
        return arr",,2023. 9. 4,19,1
2023. 9. 4 오전 9:34:30,차명경,AI,18 - 없는 숫자 더하기,"def solution(numbers):
    answer=0
    for i in range(1,10):
        if i not in numbers:
            answer+=i
    return answer
        ",,2023. 9. 4,18,1
2023. 9. 4 오전 9:39:24,강상찬,AI,44 - 2016년,"def solution(a, b):
    day = ['SUN','MON','TUE','WED','THU','FRI','SAT']
    st_day = [4,0,1,4,6,2,4,0,3,5,1,3]
    return day[(st_day[(a-1)]+b)%7]",,2023. 9. 4,44,2
2023. 9. 4 오전 9:41:44, 최지연,AI,26 - 문자열 다루기 기본,"def solution(s):
    answer_list = []
    answer = True
    if len(s) == 4 or len(s) == 6:
        for i in s:
            if i.isnumeric():
                pass
            else:
                answer_list.append(i)
        if len(answer_list) > 0:
            answer = False
    else:
        answer = False
    return answer",https://github.com/jiyeonCoder/algorithmPractice/blob/main/26.%20%EB%AC%B8%EC%9E%90%EC%97%B4%20%EB%8B%A4%EB%A3%A8%EA%B8%B0%20%EA%B8%B0%EB%B3%B8.py,2023. 9. 4,26,1
2023. 9. 4 오전 9:43:05,최지연,AI,26 - 문자열 다루기 기본,"def solution(s):
    answer_list = []
    answer = True
    if len(s) == 4 or len(s) == 6:
        for i in s:
            if i.isnumeric():
                pass
            else:
                answer_list.append(i)
        if len(answer_list) > 0:
            answer = False
    else:
        answer = False
    return answer",https://github.com/jiyeonCoder/algorithmPractice/blob/main/26.%20%EB%AC%B8%EC%9E%90%EC%97%B4%20%EB%8B%A4%EB%A3%A8%EA%B8%B0%20%EA%B8%B0%EB%B3%B8.py,2023. 9. 4,26,1
2023. 9. 4 오전 9:43:59,차명경,AI,19 - 제일 작은 수 제거하기,"def solution(arr):
    answer = []
    if len(arr)==1:
        return [-1]
    else:
        arr.remove(min(arr))
    return arr",,2023. 9. 4,19,1
2023. 9. 4 오전 9:44:55,이기호,AI,20 - 가운데 글자 가져오기,"def solution(s):
    if len(s) % 2 == 0:
        return (s[len(s)//2-1]+s[len(s)//2])
    else:
        return (s[len(s)//2+0.5])


print(solution(""qkwedjg""))",,2023. 9. 4,20,1
2023. 9. 4 오전 9:47:54,권수민,AI,16 - 음양 더하기,"def solution(absolutes, signs):
    answer = 0
    len_abs = len(absolutes)
    if not 1 <= len_abs and len_abs <= 1000 and len(signs) == len_abs:
        return
    print(absolutes)
    for index, i in enumerate(absolutes):
        if not 1 <= i and i <= 1000:
            return
        if signs[index] == False:
            answer += -i
        else:
            answer += i
            
    return answer",,2023. 9. 4,16,1
2023. 9. 4 오전 9:49:08,이기호,AI,21 - 수박수박수박수박수박수?,"def solution(n):
    a = ""수박""*n
    return (a[:n])",,2023. 9. 4,21,1
2023. 9. 4 오전 9:49:36,김정규,AI,26 - 문자열 다루기 기본,"def solution(s):
    answer = list(""abcdefgfhijklmnopqrstuvwxyz"")
    for i in s.lower():
        if i in answer or len(s) not in (4, 6):
            return False
    return True
",https://github.com/JungGyu00/algorithm,2023. 9. 4,26,1
2023. 9. 4 오전 9:51:21,김지수,AI,21 - 수박수박수박수박수박수?,"def solution(n):
    answer = ''
    for i in range(1, n+1):
        if i%2 == 0:
            answer += '박'
        else:
            answer += '수'
    return answer ",,2023. 9. 4,21,1
2023. 9. 4 오전 9:51:51,이도현,Unity,8 - 문자열을 정수로 바꾸기,"public class Solution {
    public int solution(string s) {
        int multiplier = 0;

        switch (s[0])
        {
            default:
            case '+':
                multiplier = 1;
                break;
            case '-':
                multiplier = -1;
                break;
        }

        string temp = s;
        if (!(s[0] != '+' && multiplier == 1))
        {
            temp = s.Remove(0, 1);
        }

        return multiplier * int.Parse(temp);
    }
}",,2023. 9. 1,8,1
2023. 9. 4 오전 9:53:53,차명경,AI,20 - 가운데 글자 가져오기,"def solution(s):
    if len(s) %2 == 0:
        return s[int(len(s)/2)-1 : int(len(s)/2)+1]
    else:
        return s[int(len(s)/2)]

",,2023. 9. 4,20,1
2023. 9. 4 오전 9:54:02,공혜진,AI,23 - 약수의 개수와 덧셈,"def solution(left, right):
    answer = 0
    for i in range(left, right+1):
        n = 0
        for j in range(1, i+1):
            if i%j == 0:
                n +=1
        if n%2 == 0:
            answer += i
        else:
            answer -= i
    return answer",,2023. 9. 4,23,1
2023. 9. 4 오전 9:56:11,권선영,Unity,8 - 문자열을 정수로 바꾸기,"using System;
public class Solution {
    public int solution(string s) {
        return Convert.ToInt32(s);
    }
}",https://github.com/Tealss,2023. 9. 4,8,1
2023. 9. 4 오전 9:59:12,이기호,AI,22 - 내적,"def solution(a, b):
    answer = 0
    for i in range(len(a)):
        answer += (a[i]*b[i])
    return (answer)",,2023. 9. 4,22,1
2023. 9. 4 오전 9:59:38,최성원,Unity,7 - 자연수 뒤집어 배열로 만들기,"public class Solution {
    public int[] solution(long n) {
        string str = n.ToString();
        
        char[] reversedCharArray = str.ToCharArray();
        System.Array.Reverse(reversedCharArray);
        
        int[] answer = new int[reversedCharArray.Length];
        for (int i = 0; i < reversedCharArray.Length; i++) {
            answer[i] = int.Parse(reversedCharArray[i].ToString());
        }

        return answer;
    }
}",,2023. 9. 4,7,1
2023. 9. 4 오전 10:00:02,김민상,Unity,51 - 로또의 최고 순위와 최저 순위,"using System;
using System.Linq;

public class Solution
{
    public int[] solution(int[] lottos, int[] win_nums)
    {
        int corr = 0;
        int zero = 0;

        foreach (int num in lottos)
        {
            if (win_nums.Contains(num))
                corr += 1;

            else if (num == 0)
                zero += 1;
        }

        return new int[] { Math.Min(6, 7 - corr - zero), Math.Min(6, 7 - corr) };
    }
}",,2023. 9. 4,51,2
2023. 9. 4 오전 10:00:06,이도현,Unity,9 - 정수 제곱근 판별,"using System;

public class Solution {
    public long solution(long n) {
        long sqrt = (long)Math.Sqrt(n);
        long answer = sqrt * sqrt;
        return answer == n ? (sqrt + 1) * (sqrt + 1) : -1;
    }
}",,2023. 9. 4,9,1
2023. 9. 4 오전 10:00:08,김경환,Unity,49 - 덧칠하기,"using System;

public class Solution {
    public int solution(int n, int m, int[] sections) {
        int answer = 0, num = 0;
        
        for(int i = 0; i < sections.Length; i++)
        {
            if(sections[i] > num)
            {
                num = sections[i] + m - 1;
                answer++;
            }
        }
        
        return answer;
    }
}",https://github.com/kkh9700/algorithm,2023. 9. 4,49,2
2023. 9. 4 오전 10:00:19,차명경,AI,21 - 수박수박수박수박수박수?,"def solution(n):
    return('수박'*n)[:n]",,2023. 9. 4,21,1
2023. 9. 4 오전 10:00:47,조호진,AI,30 - 3진법 뒤집기,"def solution(n):
    b = ''
    while n > 0:
        a = n%3
        b += str(a)
        n = n//3

    answer = int(b,3)
    return answer",https://github.com/bm4706/Algorithm_practice/commit/c78063f19f0f91111800ac15e35566e363ea7ad9#diff-53ae1886f6d914f7a6135ee043e9eec9c0eb6545c67857814cd6034a897e00ee,2023. 9. 4,30,1
2023. 9. 4 오전 10:01:53,김강현,Unity,15 - 나누어 떨어지는 숫자,"using System.Collections.Generic;
public class Solution
{
    public int[] solution(int[] arr, int divisor) 
    {
       List<int> num = new List<int>();
        for(int i=0; i < arr.Length;i++)
        {
            if(arr[i]%divisor == 0)
            {
                num.Add(arr[i]);
            }
        }
        if(num.Count == 0)
        {
                  return new int[] {-1};
        }
        num.Sort();
        return num.ToArray();
    }
}",,2023. 9. 4,15,1
2023. 9. 4 오전 10:02:03,김진규,Unity,38 - K번째수정렬,"using System;

public class Solution {
    public int[] solution(int[] array, int[,] commands) {
        int numCommands = commands.GetLength(0);
        int[] answer = new int[numCommands];
        
        for (int i = 0; i < numCommands; i++)
        {
            int start = commands[i, 0] - 1;
            int end = commands[i, 1] - 1;
            int k = commands[i, 2];

            int[] sliced = new int[end - start + 1];
            Array.Copy(array, start, sliced, 0, sliced.Length);
            Array.Sort(sliced);

            answer[i] = sliced[k - 1];
        }
        
        return answer;
    }
}",,2023. 9. 4,38,2
2023. 9. 4 오전 10:02:19,한병권,Unity,51 - 로또의 최고 순위와 최저 순위,"using System;

public class Solution {
    public int[] solution(int[] lottos, int[] win_nums) {
        int min = 7;
        int max = 7;
        
        for (int i = 0; i < win_nums.Length; i++)
        {
            for (int j = 0; j < win_nums.Length; j++)
            {
                if(lottos[i] == win_nums[j])
                {
                    min--;
                    max--;
                }
            }
            if(lottos[i] == 0)
            {
                max--;
            }
        }
        
        if(min == 7) min--;
        if(max == 7) max--;
        
        int[] answer = new int[] {max, min};
        return answer;
    }
}",https://github.com/hbg9212/AlgorithmCodekata,2023. 9. 4,51,2
2023. 9. 4 오전 10:03:23,최성원,Unity,8 - 문자열을 정수로 바꾸기,"public class Solution {
    public int solution(string s) {
        return int.Parse(s);
    }
}",,2023. 9. 4,8,1
2023. 9. 4 오전 10:03:32,강상찬,AI,43 - 명예의 전당 (1),"def solution(k, score):
    answer = []
    for i in range(len(score)):
        if i < k:
            answer.append(min(score[:i+1]))
        else:
            answer.append(sorted(score[:i+1],reverse=True)[k-1])
    return answer",,2023. 9. 4,43,2
2023. 9. 4 오전 10:03:57,이경현,Unity,31 - 이상한 문자 만들기,"public string solution(string s) {
        string[] tp = s.Split(' ');
        string answer = """";
        string tmp;
        for (int i = 0; i < tp.Length; i++)
        {
            for (int j = 0; j < tp[i].Length; j++)
            {
                answer += (j % 2 != 0) ? tp[i].Substring(j, 1).ToLower() : tp[i].Substring(j, 1).ToUpper();

            }
            if (i != tp.Length - 1) answer += "" "";
        }
        return answer;
    }",https://github.com/516lkh/Algorithm,2023. 9. 4,31,2
2023. 9. 4 오전 10:04:43,맹주한,Unity,5 - 나머지가 1이 되는 수 찾기,"int solution(int n) {
    int x = 2;
    while (x <= n)
    {
        if (n % x == 1)
        {
            return x;
        }
        x++;
    }
}",,2023. 9. 4,5,1
2023. 9. 4 오전 10:04:58,남의서,AI,50 - 기사단원의 무기,"def solution(number, limit, power):
    ans = []
    for i in range(1, number + 1):
        count = 0
        for j in range(1, i+1):
            if i % j == 0:
                count += 1
                print(count)
        if count > limit:
            ans.append(power)
        else:
            ans.append(count)

    return sum(ans)
",,2023. 9. 4,50,2
2023. 9. 4 오전 10:05:28,윤지연,Unity,14 - 서울에서 김서방 찾기,"public class Solution {
    public string solution(string[] seoul) {
        string answer = """";
        for(int i = 0; i < seoul.Length; i++)
        {
            if(seoul[i] == ""Kim"")
            {
                answer = $""김서방은 {i}에 있다"";
            }
        }
        return answer;
    }
}",https://github.com/jungbosong/Codekata/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12919.%E2%80%85%EC%84%9C%EC%9A%B8%EC%97%90%EC%84%9C%E2%80%85%EA%B9%80%EC%84%9C%EB%B0%A9%E2%80%85%EC%B0%BE%EA%B8%B0,2023. 9. 4,14,1
2023. 9. 4 오전 10:06:06,김대열,Unity,22 - 내적,"#include <string>
#include <vector>

using namespace std;

int solution(vector<int> a, vector<int> b) {
    int answer = 0;
    for(int i = 0; i < a.size(); i++){
        answer+= a[i] * b[i];
    }
    return answer;
}",,2023. 9. 4,22,1
2023. 9. 4 오전 10:06:20,곽민규,Unity,8 - 문자열을 정수로 바꾸기,"public class Solution {
    public int solution(string s) {
        int answer = int.Parse(s);
        return answer;
    }
}",,2023. 9. 4,8,1
2023. 9. 4 오전 10:06:58,정범수,AI,69 - 카펫,"def solution(brown, yellow):
    for i in range(1, int(yellow**0.5)+1):
        if yellow%i == 0 and 2*(i+yellow/i)+4 == brown:
            return [yellow/i+2, i+2]",https://github.com/sudog1/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv2/42842.%E2%80%85%EC%B9%B4%ED%8E%AB,2023. 9. 4,69,3
2023. 9. 4 오전 10:07:33,정범수,AI,70 - 예상 대진표,"def solution(n,a,b):
    a, b = min(a, b), max(a, b)
    count = 1
    while True:
        if b-a == 1 and a%2:
            break
        if a%2:
            a += 1
        a //= 2
        if b%2:
            b += 1
        b //= 2
        count += 1
    return count",https://github.com/sudog1/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv2/12985.%E2%80%85%EC%98%88%EC%83%81%E2%80%85%EB%8C%80%EC%A7%84%ED%91%9C,2023. 9. 4,70,3
2023. 9. 4 오전 10:07:38,김경원,Unity,23 - 약수의 개수와 덧셈,"using System;

public class Solution {
    public int solution(int left, int right) {
        int answer = 0;
        
        //left로 시작하여 right까지 반복문 실행
        for(int i=left; i<=right; i++)
        {
            int count=0;
            //1부터 i까지 반복문 실행
            for(int j=1; j<=i; j++)
            {
                //하여 나누었을 때 나머지가 0이면 count 더함.
                if(i%j==0) count++;
            }
            //반복문 종료 후 카운트를 2로 나눈 나머지가 0이면 
            //짝수이므로 해당 정수 answer에 더하기
            if(count%2==0) answer += i;
            //2로 나눈 나머지가 0이 아니면 해당 정수 answer에 빼기
            else answer -= i;
        }
        return answer;
    }
}",,2023. 9. 4,23,1
2023. 9. 4 오전 10:07:42,최장범,Unity,25 - 부족한 금액 계산하기,"using System;

class Solution
{
    public long solution(int price, int money, int count)
    {
        long total = 0;
        for (int i=1; i<=count; i++)
        {
            total += price *i;
        }
        return (total -money) <0 ? 0 : total - money;
    }
}",,2023. 9. 4,25,1
2023. 9. 4 오전 10:07:45,박지원,Unity,21 - 수박수박수박수박수박수?,"public class Solution {
    public string solution(int n) {
        string answer = """";
        while(n-- > 0){
            answer += answer.Length % 2 == 0? ""수"":""박"";
        }
        return answer;
    }
}",https://github.com/jwonp9127/AlgorithmStudy/tree/af1db24e8a056f650f46efb53bb4632ad7148603/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12922.%E2%80%85%EC%88%98%EB%B0%95%EC%88%98%EB%B0%95%EC%88%98%EB%B0%95%EC%88%98%EB%B0%95%EC%88%98%EB%B0%95%EC%88%98%EF%BC%9F,2023. 9. 4,21,1
2023. 9. 4 오전 10:07:58,정범수,AI,71 - N개의 최소공배수,"from math import gcd
from functools import reduce

def solution(arr):
    return reduce(lambda acc, x: acc*x//gcd(acc, x), arr, 1)",https://github.com/sudog1/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv2/12953.%E2%80%85N%EA%B0%9C%EC%9D%98%E2%80%85%EC%B5%9C%EC%86%8C%EA%B3%B5%EB%B0%B0%EC%88%98,2023. 9. 4,71,3
2023. 9. 4 오전 10:08:19,김민태,Unity,39 - 두 개 뽑아서 더하기,"using System;
using System.Collections.Generic;

public class Solution {
    public int[] solution(int[] numbers) {
        List<int> temps = new List<int>();
        for (int i = 0; i<numbers.Length; i++)
        {
            for(int j = 0; j<numbers.Length && j != i; j++)
            {
                int temp = numbers[i] + numbers[j];
                if(!temps.Contains(temp))
                {
                    temps.Add(temp);
                }
            }
        }
        temps.Sort();
        return temps.ToArray();
    }
}",https://github.com/rlaalsxo/CodingTest,2023. 9. 4,39,2
2023. 9. 4 오전 10:08:27,정범수,AI,72 - 멀리 뛰기,"def solution(n):
    result = [0 if i > 1 else 1 for i in range(n+1)]
    for i in range(2, n+1):
        result[i] = (result[i-1] + result[i-2]) % 1234567
    return result[n]",https://github.com/sudog1/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv2/12914.%E2%80%85%EB%A9%80%EB%A6%AC%E2%80%85%EB%9B%B0%EA%B8%B0,2023. 9. 4,72,3
2023. 9. 4 오전 10:08:43,김나운,Unity,21 - 수박수박수박수박수박수?,"public class Solution {
    public string solution(int n) {
        string answer = """";
        
        for(int i=0;i<n;i++){
            if(i % 2 == 0){
                answer += ""수"";
            }else{
                answer += ""박"";
            }
        }
        
        return answer;
    }
}",,2023. 9. 4,21,1
2023. 9. 4 오전 10:08:48,우성훈,Unity,5 - 나머지가 1이 되는 수 찾기,"using System;

public class Solution {
    public int solution(int n)
    {
        for(int i = 1; i < n; i++)
        {
            if (n % i == 1)
                return i;
        }
        return -1;
    }
}",,2023. 9. 4,5,1
2023. 9. 4 오전 10:09:00,김예준,Unity,41 - 푸드 파이트 대회,"using System;
using System.Linq;

public class Solution {
    public string solution(int[] food) {
        string answer = """";
        string s = """";
        
        for (int i = 0; i < food.Length; i++)
        {
            for (int j = 0; j < food[i] / 2; j++)
            {
                s += i.ToString();
            }
        }
        
        answer = s;
        answer += '0';
        answer += new string(s.Reverse().ToArray());
        
        return answer;
    }
}",,2023. 9. 4,41,2
2023. 9. 4 오전 10:09:20,정범수,AI,73 - 귤 고르기,"def solution(k, tangerine):
    cnt_dict = {}
    for t in tangerine:
        if t in cnt_dict:
            cnt_dict[t] += 1
        else:
            cnt_dict[t] = 1
    temp = list(sorted(cnt_dict.values(), reverse=True))
    type_cnt = 0
    for a in temp:
        if k <= 0:
            break
        k -= a
        type_cnt += 1
    return type_cnt",https://github.com/sudog1/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/unrated/138476.%E2%80%85%EA%B7%A4%E2%80%85%EA%B3%A0%EB%A5%B4%EA%B8%B0,2023. 9. 4,73,3
2023. 9. 4 오전 10:09:33,김지수,AI,22 - 내적,"def solution(a, b):
    answer = 0
    for i in range(len(a)):
        answer += a[i]*b[i]
    return answer",,2023. 9. 4,22,1
2023. 9. 4 오전 10:09:55,김경원,Unity,24 - 문자열 내림차순으로 배치하기,"using System;
using System.Linq;

public class Solution {
    public string solution(string s) {
        char[] temp = s.ToCharArray();
        Array.Sort(temp);
        Array.Reverse(temp);

        return new string(temp);
    }
}",,2023. 9. 4,24,1
2023. 9. 4 오전 10:10:03,정범수,AI,74 - 괄호 회전하기,"from collections import deque

def solution(s):
    s = deque(s)
    temp = deque()
    deq = deque()
    bk = {'[':1, '{':2, '(':3, ')':5, '}':6, ']':7}
    while s:
        if not deq:
            temp.append(s[0])
            deq.append(s[0])
            s.popleft()
        else:
            if bk[deq[-1]] < 4:
                if bk[s[0]] < 4:
                    deq.append(s[0])
                    temp.append(s[0])
                    s.popleft()
                elif bk[deq[-1]] + bk[s[0]] == 8:
                    temp.append(s[0])
                    deq.pop()
                    s.popleft()
                else:
                    return 0
            else:
                if bk[s[-1]] > 4:
                    deq.appendleft(s[-1])
                    temp.appendleft(s[-1])
                    s.pop()
                elif bk[deq[0]] + bk[s[-1]] == 8:
                    temp.appendleft(s[-1])
                    deq.popleft()
                    s.pop()
                else:
                    return 0
    if deq:
        return 0
    count = 0
    stack = []
    for c in temp:
        if bk[c] < 4:
            stack.append(c)
        else:
            stack.pop()
        if not stack:
            count += 1
    return count",https://github.com/sudog1/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv2/76502.%E2%80%85%EA%B4%84%ED%98%B8%E2%80%85%ED%9A%8C%EC%A0%84%ED%95%98%EA%B8%B0,2023. 9. 4,74,3
2023. 9. 4 오전 10:10:32,김정규,AI,27 - 행렬의 덧셈,"def solution(arr1, arr2):
    answer = arr2
    for i in range(len(arr1)):
        for j in range(len(arr1[i])):
            answer[i][j] = (arr1[i][j] + arr2[i][j])
    return answer",https://github.com/JungGyu00/algorithm,2023. 9. 4,27,1
2023. 9. 4 오전 10:10:40,정범수,AI,75 - 연속 부분 수열 합의 개수,"def solution(elements):
    result = set()
    for i in range(len(elements)):
        total = 0
        for j in range(len(elements)):
            total += elements[(i+j) % len(elements)]
            result.add(total)
    return len(result)",https://github.com/sudog1/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv2/131701.%E2%80%85%EC%97%B0%EC%86%8D%E2%80%85%EB%B6%80%EB%B6%84%E2%80%85%EC%88%98%EC%97%B4%E2%80%85%ED%95%A9%EC%9D%98%E2%80%85%EA%B0%9C%EC%88%98,2023. 9. 4,75,3
2023. 9. 4 오전 10:10:48,김해찬,Unity,84 - 타겟 넘버,"using System;
using System.Collections;
using System.Collections.Generic;

public class Solution
{
    public void Search(int now, int value, List<int> lst, int max, int correct, int[] numbers)
    {
        if(now == max)
        {
            lst.Add(value);
            return;
        }
        else
        {            
            Search(now + 1, value + numbers[now], lst, max, correct, numbers);
            Search(now + 1, value - numbers[now], lst, max, correct, numbers);
        }
    }
    
    public int solution(int[] numbers, int target)
    {
        int answer = 0;
        
        List<int> lst = new List<int>();
        
        Search(0, 0, lst, numbers.Length, target, numbers);
        
        for(int i = 0; i < lst.Count; i++)
        {
            if(lst[i] == target)
            {
                answer++;
            }
        }
        
        return answer;
    }
}",,2023. 9. 4,84,4
2023. 9. 4 오전 10:10:49,김경원,Unity,25 - 부족한 금액 계산하기,"using System;

class Solution
{
    public long solution(int price, int money, int count)
    {
        long result = price * ((long)count * (1 + count) / 2);
        
        if(result <= money) {
            return 0;
        }
        else 
        {
            return result - (long)money;    
        }
    }
}",,2023. 9. 4,25,1
2023. 9. 4 오전 10:10:50,김경환,Unity,50 - 기사단원의 무기,"using System;

public class Solution {
    public int solution(int number, int limit, int power) {
        int answer = 0;
        
        for(int i = 1 ; i <= number; i++)
        {
            int atk = divisor(i);
            
            if(atk > limit)
                atk = power;
            
            answer += atk;
        }
        
        
        return answer;
    }
    
    public int divisor(int number)
    {
        int result = 0;
        
        for(int i = 1; i * i <= number; i++)
        {
            if(i * i == number)
                result++;
            else if(number % i == 0)
                result += 2;
        }
        
        return result;
    }
}",https://github.com/kkh9700/algorithm,2023. 9. 4,50,2
2023. 9. 4 오전 10:10:54,김진규,Unity,39 - 두 개 뽑아서 더하기,"using System;
using System.Collections.Generic;
using System.Linq;

public class Solution {
    public int[] solution(int[] numbers) {
        HashSet<int>answer = new HashSet<int>();
        for(int i=0; i< numbers.Length -1; i++)
        {
            for(int j =i+1; j< numbers.Length; j++)
            {
                answer.Add(numbers[i]+numbers[j]);
            }
        }
        return answer.OrderBy(x =>x).ToArray();
    }
}",,2023. 9. 4,39,2
2023. 9. 4 오전 10:11:09,정범수,AI,76 - H-Index,"def solution(citations):
    left = 0
    right = len(citations)
    h_index = 0
    while left <= right:
        mid = (left+right) // 2
        if sum(map(lambda x: 1 if x >= mid else 0, citations)) >= mid:
            h_index = max(h_index, mid)
            left = mid+1
        else:
            right = mid-1
    return h_index",https://github.com/sudog1/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv2/42747.%E2%80%85H%EF%BC%8DIndex,2023. 9. 4,76,3
2023. 9. 4 오전 10:11:47,김경,Unity,26 - 문자열 다루기 기본,"public class Solution
{
        public bool solution(string s)
        {
            bool answer = false;

            if (s.Length == 4 || s.Length == 6)
            {	
            	// int형으로 형변환을 시도했을때 가능여부를 검사
                answer = int.TryParse(s, out int temp);
            }

            return answer;
        }
}",,2023. 9. 4,26,1
2023. 9. 4 오전 10:11:58,이현지,Unity,37 - 문자열 내 마음대로 정렬하기,"using System.Linq;
using System.Collections.Generic;

public class Solution 
{
    public string[] solution(string[] strings, int n) 
    {
        string[] answer;
        
        List<string> sorting = strings.ToList();
        answer = sorting.OrderBy(i => i[n]).ThenBy(i => i).ToArray();
        return answer;
    }
}",https://github.com/szlovelee/Programmers-Algorithm,2023. 9. 4,37,2
2023. 9. 4 오전 10:12:05,신현주,Unity,32 - 삼총사,"using System;

public class Solution {
    public int solution(int[] number) {
        int answer = 0;
        for(int i = 0; i < number.Length - 2; i++){
            for(int j = i+1; j < number.Length -1; j ++){
                for( int k = j + 1; k < number.Length; k++){
                    if( number[i] + number[j] + number[k] == 0)
                        answer++;
                }
            }
        }
        return answer;
    }
}",https://github.com/Shyunju/codeKata,2023. 9. 4,32,2
2023. 9. 4 오전 10:12:12,정재훈,Unity,17 - 핸드폰 번호 가리기,"public class Solution
    {
        public string solution(string phone_number)
        {
            string answer = """";

            for (int i = 0; i < phone_number.Length; i++)
            {
                if (i < phone_number.Length-4)
                {
                    answer += ""*"";
                }
                else
                {
                    answer += phone_number[i];
                }
            }

            return answer;
        }
    }",https://github.com/toadsam/Algorithm,2023. 9. 4,17,1
2023. 9. 4 오전 10:12:24,정범수,AI,77 - n^2 배열 자르기,"def solution(n, left, right):
    return [max(i//n+1, i%n+1) for i in range(left, right+1)]",https://github.com/sudog1/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv2/87390.%E2%80%85n%EF%BC%BE2%E2%80%85%EB%B0%B0%EC%97%B4%E2%80%85%EC%9E%90%EB%A5%B4%EA%B8%B0,2023. 9. 4,77,3
2023. 9. 4 오전 10:12:48,박지원,Unity,22 - 내적,"using System;

public class Solution {
    public int solution(int[] a, int[] b) {
        int answer = 0;
        for(int i = 0; i < a.Length; i++)
            answer += a[i]*b[i];
        return answer;
    }
}",https://github.com/jwonp9127/AlgorithmStudy/tree/2272272308911c65374ea66d497d7718daa6e6b0/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/70128.%E2%80%85%EB%82%B4%EC%A0%81,2023. 9. 4,22,1
2023. 9. 4 오전 10:12:50,조범준,Unity,36 - 숫자 문자열과 영단어,"using System;

public class Solution {
    public int solution(string s) {
        int answer = 0;
        s = s.Replace(""zero"", ""0"").Replace(""one"", ""1"").Replace(""two"", ""2"").Replace(""three"", ""3"").Replace(""four"", ""4"").Replace(""five"", ""5"").Replace(""six"", ""6"").Replace(""seven"", ""7"").Replace(""eight"", ""8"").Replace(""nine"", ""9"");
        answer = int.Parse(s);
        return answer;
    }
}",https://github.com/KimMaYa1/BaekJoonEx,2023. 9. 4,36,2
2023. 9. 4 오전 10:13:00,김형중,Unity,14 - 서울에서 김서방 찾기,"public class Solution {
    public string solution(string[] seoul) {
        string answer = """";
        
        for(int x = 0; x < seoul.Length; x++)
        {
            if(seoul[x] == ""Kim"")
            {
                answer = $""김서방은 {x}에 있다"";
            }
            
        }
        return answer;
    }
}",,2023. 9. 4,14,1
2023. 9. 4 오전 10:13:08,정범수,AI,78 - 행렬의 곱셈,"def solution(arr1, arr2):
    temp = [[0]*len(arr2[0]) for _ in range(len(arr1))]
    for i in range(len(arr1)):
        for j in range(len(arr2[0])):
            for k in range(len(arr2)):
                temp[i][j] += arr1[i][k]*arr2[k][j]
    return temp",https://github.com/sudog1/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv2/12949.%E2%80%85%ED%96%89%EB%A0%AC%EC%9D%98%E2%80%85%EA%B3%B1%EC%85%88,2023. 9. 4,78,3
2023. 9. 4 오전 10:13:25,신해준,Unity,14 - 서울에서 김서방 찾기,"using System;

class Solution {
    public string solution(string[] seoul) {
        int x = Array.IndexOf(seoul, ""Kim""); // ""Kim""의 위치를 찾음
        return $""김서방은 {x}에 있다"";
    }
}
",,2023. 9. 4,14,1
2023. 9. 4 오전 10:13:37,정범수,AI,79 - 할인 행사,"def solution(want, number, discount):
    dis_num = {i: 0 for i in want}
    count = 0
    for i in range(len(discount)):
        if i >= 10 and discount[i-10] in dis_num:
            dis_num[discount[i-10]] -= 1
        if discount[i] in dis_num:
            dis_num[discount[i]] += 1
        for j in range(len(want)):
            if dis_num[want[j]] < number[j]:
                break
        else:
            count += 1
    return count",https://github.com/sudog1/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv2/131127.%E2%80%85%ED%95%A0%EC%9D%B8%E2%80%85%ED%96%89%EC%82%AC,2023. 9. 4,79,3
2023. 9. 4 오전 10:13:52,권선영,Unity,9 - 정수 제곱근 판별,"using System;
public class Solution {
    public long solution(long n)
        {
            long num = (long)Math.Sqrt(n);
            if (num * num == n) {
                return (num + 1) * (num + 1);
            }
            else
                return -1;
        }
}",https://github.com/Tealss,2023. 9. 4,9,1
2023. 9. 4 오전 10:14:16,정범수,AI,80 - 의상,"from functools import reduce

def solution(clothes):
    cloth_dict = {}
    for _, part in clothes:
        if part in cloth_dict:
            cloth_dict[part] += 1
        else:
            cloth_dict[part] = 2
    return reduce(lambda acc, x: acc*x, cloth_dict.values(), 1) - 1",https://github.com/sudog1/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv2/42578.%E2%80%85%EC%9D%98%EC%83%81,2023. 9. 4,80,3
2023. 9. 4 오전 10:14:17,차요한,Unity,35 - 시저 암호,"using System;
public class Solution {
    public string solution(string s, int n) {
        string answer = """";
        foreach(char c in s)
        {
            if(c!=' ')
            {
                int tmp = 0;
                if((int)c<91)
                {
                    tmp = (int)c + n;
                    if(tmp>90) tmp = 64 + (tmp-90);
                }
                else
                {
                    tmp = (int)c + n;
                    if(tmp>122) tmp = 96 + (tmp-122);
                }
                
                answer += Convert.ToChar(tmp);    
            }else
                answer += ' ';    
        }
        return answer;
    }
}",https://github.com/HOHOJO/Algorithm_test,2023. 9. 4,35,2
2023. 9. 4 오전 10:14:44,정범수,AI,81 - 기능개발,"def solution(progresses, speeds):
    result = []
    for i in range(len(progresses)):
        if progresses[i] >= 100:
            continue
        count = 0
        while progresses[i] < 100:
            for j in range(i, len(progresses)):
                progresses[j] += speeds[j]
        for j in range(i, len(progresses)):
            if progresses[j] < 100:
                break
            count += 1
        result.append(count)
    return result",https://github.com/sudog1/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv2/42586.%E2%80%85%EA%B8%B0%EB%8A%A5%EA%B0%9C%EB%B0%9C,2023. 9. 4,81,3
2023. 9. 4 오전 10:15:12,최장범,Unity,26 - 문자열 다루기 기본,"public class Solution {
    public bool solution(string s) {
        bool answer = false;
        
        if(s.Length == 4 || s.Length == 6)
        {
            answer = int.TryParse(s, out int temp);
        }
        return answer;
    }
}",,2023. 9. 4,26,1
2023. 9. 4 오전 10:15:13,김어진,Unity,14 - 서울에서 김서방 찾기,"public class Solution {
    public string solution(string[] seoul) {
        string answer = """";
        for (int i=0; i<seoul.Length; i++){
            if(seoul[i] == ""Kim""){
                answer = $""김서방은 {i}에 있다"";
            }
        }
        return answer;
    }
}",https://github.com/KimEoJin24/ProgrammersCodingTests/commit/39fd6d5358503bbaf90a5d7c6738c5efd4371279,2023. 9. 4,14,1
2023. 9. 4 오전 10:15:18,정범수,AI,82 - 프로세스,"from collections import deque

def solution(priorities, location):
    deq = deque(enumerate(priorities))
    remain = sorted(priorities)
    count = 0
    while deq:
        i, p = deq.popleft()
        if p == remain[-1]:
            count += 1
            if i == location:
                return count
            remain.pop()
        else:
            deq.append([i, p])",https://github.com/sudog1/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv2/42587.%E2%80%85%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4,2023. 9. 4,82,3
2023. 9. 4 오전 10:15:31,문준권,Unity,7 - 자연수 뒤집어 배열로 만들기,"public class Solution {
    public long[] solution(long n) {
        int size = n.ToString().Length;
        long[] answer = new long[size];
        
        for(int i = 0; i < size; i++){
            answer[i] = n % 10;
            n /= 10;
        }
        return answer;
    }
}",,2023. 9. 4,7,1
2023. 9. 4 오전 10:16:06,노재우,Unity,25 - 부족한 금액 계산하기,"using System;

class Solution
{
    public long solution(int price, int money, int count)
    {
        long answer = money;
        for (int i = 0; i < count; i++)
        {
            answer -= price * (i + 1);
        }

        if (answer >= 0)
        {
            return 0;
        }
        answer = Math.Abs(answer);

        return answer;
    }
}",,2023. 9. 4,25,1
2023. 9. 4 오전 10:16:14,이경현,Unity,32 - 삼총사,"public int solution(int[] number) 
{
    int count = 0;
    int i, j, k;

    for (i = 0; i<number.Length-2; i++)
    {
        j = i + 1;
        for (; j < number.Length-1; j++)
        {
            k = j + 1;
            for (; k < number.Length; k++)
            {
                if (number[i] + number[j] + number[k] == 0) count++;
            }
        }
    }

    return count;
}",https://github.com/516lkh/Algorithm,2023. 9. 4,32,2
2023. 9. 4 오전 10:16:31,김명식,Unity,18 - 없는 숫자 더하기,"using System;
using System.Linq;

public class Solution {
    public int solution(int[] numbers) {
        int answer = 0;
        int[] first = {1,2,3,4,5,6,7,8,9};
        var exc = first.Except(numbers);
        
        foreach(int num in exc){
            answer+=num;
        }
        
        return answer;
    }
}",https://github.com/D0ryeon/Algorithm-Code-Kata,2023. 9. 4,18,1
2023. 9. 4 오전 10:17:06,김나운,Unity,22 - 내적,"using System;

public class Solution {
    public int solution(int[] a, int[] b) {
        int answer = 0;
        int n = a.Length;
        
        for(int i = 0; i<n;i++){
            int x = a[i] * b[i];
            answer += x;
        }
        
        return answer;
    }
}",,2023. 9. 4,22,1
2023. 9. 4 오전 10:17:09,강성호,Unity,45 - 카드 뭉치,"using System;

public class Solution {
    public string solution(string[] cards1, string[] cards2, string[] goal) {
        string answer = ""Yes"";
			int cnt1 = 0;
			int cnt2 = 0;
			for(int i = 0; i < goal.Length; i++)
			{
				if (cnt1 < cards1.Length && cards1[cnt1] == goal[i])
				{
					cnt1++;
					continue;
				}

				else if(cnt2 < cards2.Length && cards2[cnt2] == goal[i])
				{
					cnt2++;
					continue;
				}
				else
				{
					return ""No"";
				}
			}
			return answer;
    }
}",,2023. 9. 4,45,2
2023. 9. 4 오전 10:17:39,안소정,Unity,17 - 핸드폰 번호 가리기,"public class Solution {
    public string solution(string phone_number) {
        string answer = """";
        for (int i = 0; i < phone_number.Length - 4; i++)
        {
            answer += ""*"";
        }
        for (int i = phone_number.Length - 4;
                 i < phone_number.Length;
                 i++)
        {
            answer += phone_number[i];
        }
        return answer;
        
    }
}",,2023. 9. 4,17,1
2023. 9. 4 오전 10:17:45,김강현,Unity,16 - 음양 더하기,"using System;
using System.Collections.Generic;
public class Solution 
{
    public int solution(int[] absolutes, bool[] signs) 
    {
        List<int>number = new List<int>();
        for(int i = 0 ; i < absolutes.Length;i++)
        {
            if(signs[i]==true)
            {
                number.Add(absolutes[i]);
            }
            else if(signs[i]==false)
            {
                number.Add(absolutes[i]*-1);
            }
        }
        
          int answer = 0;
        for(int i =0 ; i < number.Count; i++)
        {
            answer += number[i];
        }

        return answer;
    }
}",,2023. 9. 4,16,1
2023. 9. 4 오전 10:17:46,윤지석,Unity,18 - 없는 숫자 더하기,"using System;

public class Solution {
    public int solution(int[] numbers) {
        int sum = 0;
        bool[] isNum = new bool[10];
        for (int i = 0; i < numbers.Length; i++)
        {
            isNum[numbers[i]] = true;
        }
        for (int i = 0; i < isNum.Length; i++)
        {
            if (!isNum[i])
                sum += i;
        }
        
        return sum;
    }
}",https://github.com/noyyo/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/86051.%E2%80%85%EC%97%86%EB%8A%94%E2%80%85%EC%88%AB%EC%9E%90%E2%80%85%EB%8D%94%ED%95%98%EA%B8%B0,2023. 9. 4,18,1
2023. 9. 4 오전 10:18:00,김예준,Unity,42 - 콜라 문제,"using System;

public class Solution {
    public int solution(int a, int b, int n) {
        int answer = 0;
        
        while (n >= a)
        {
            int tmp = (n / a) * b;
            answer += tmp;
            n = n % a + tmp;
        }
        
        return answer;
    }
}",,2023. 9. 4,42,2
2023. 9. 4 오전 10:18:12,권수민,AI,17 - 핸드폰 번호 가리기,"def solution(phone_number):

    lens = len(phone_number)
    if not 4 <= lens and lens <= 20:
        return 
    a = list(phone_number) 
    for i in range(lens-4):
        a[i] = '*'
    answer = """".join(a)
    return answer",,2023. 9. 4,17,1
2023. 9. 4 오전 10:18:21,최성원,Unity,9 - 정수 제곱근 판별,"public class Solution {
    public long solution(long n) {
        long answer = 0;
        for (long i = 1; i <= n / i; i++) {
            if (i * i == n) {
                return answer = (i + 1) * (i + 1);
            }
        }
        answer = -1;
        return answer;
    }
",,2023. 9. 4,9,1
2023. 9. 4 오전 10:18:29,박준규,Unity,23 - 약수의 개수와 덧셈,"using System;

public class Solution 
{
    public int solution(int left, int right) 
    {
        int answer = 0;
        int count = 0;
        for(int i = left; i <= right; i++){
            for(int j = 1; j<=i;j++){
                if(i%j==0){
                    count ++;
                }
            }
            if(count%2 == 0){
                answer += i;
            }
            else if(count%2 == 1){
                answer -= i;
            }
            count = 0;
        }
        return answer;
    }
}",,2023. 9. 4,23,1
2023. 9. 4 오전 10:18:37,김경환,Unity,51 - 로또의 최고 순위와 최저 순위,"using System;

public class Solution {
    public int[] solution(int[] lottos, int[] win_nums) {
        int[] rank = new int[] {6, 6, 5, 4, 3, 2, 1};
        int blank = 0, correct = 0;
        
        for(int i = 0; i < 6; i++)
        {
            if(lottos[i] == 0)
            {
                blank++;
                continue;
            }
            
            for(int j = 0; j < 6; j++)
            {
                if(lottos[i] == win_nums[j])
                {
                    correct++;
                    continue;
                }
            }
        }
        
        
        
        return new int[] {rank[correct + blank], rank[correct]};
    }
}",https://github.com/kkh9700/algorithm,2023. 9. 4,51,2
2023. 9. 4 오전 10:19:01,손병의,Unity,16 - 음양 더하기,"using System;

public class Solution 
{
    public int solution(int[] absolutes, bool[] signs) 
    {
        int answer = 0;
        for(int i = 0; i < absolutes.Length; i++)
        {
            if(signs[i] == false)
            {
                absolutes[i] *= -1;
            }
            answer += absolutes[i];
        }
        return answer;
    }
}",https://github.com/Son-BE/CodeKata1,2023. 9. 4,16,1
2023. 9. 4 오전 10:19:18,김호연,Unity,25 - 부족한 금액 계산하기,"using System;

class Solution
{
    public long solution(int price, int money, int count)
    {
        long answer = 0;
        long sum = 0;
        // i번째(count)마다 i배의 Price
        for(int i = 1; i <= count; i++)
        {
            sum += price * i;
        }
        
        if(money > sum)  // 돈 안부족하면 0 리턴
        {
            return 0;
        }
        answer = Math.Abs(money - sum); // 절대값으로 변환
        return answer;
    
    }
}",,2023. 9. 4,25,1
2023. 9. 4 오전 10:19:25,박지원,Unity,23 - 약수의 개수와 덧셈,"using System;

public class Solution {
    public int solution(int left, int right) {
        int answer = 0;
        
        for(int num = left; num <= right; num++){
            int cnt = 1;
            for(int i = 1; i <= num/2; i++){
                if(num % i == 0)
                    cnt++;
            }
            answer += cnt % 2 == 0? num : -num;
        } 
        return answer;
    }
}",https://github.com/jwonp9127/AlgorithmStudy/tree/308e7d0f5f18e8db98d2ef188c5e88ea6a7c7570/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/77884.%E2%80%85%EC%95%BD%EC%88%98%EC%9D%98%E2%80%85%EA%B0%9C%EC%88%98%EC%99%80%E2%80%85%EB%8D%A7%EC%85%88,2023. 9. 4,23,1
2023. 9. 4 오전 10:19:32,김진규,Unity,40 - 가장 가까운 같은 글자,"using System;

public class Solution {
    public int[] solution(string s) {
        int[] answer = new int[s.Length];
        for(int i =0; i<s.Length; i++)
        {
            answer[i] = -1;
        }
        for (int i = 0; i < s.Length; i++) {
            char currentChar = s[i];
            
            for (int j = 0; j < i; j++) {
                if (s[j] == currentChar) {
                    if (i - j < answer[i] || answer[i] == -1) {
                        answer[i] = i - j;
                    }
                }
            }
        }
        return answer;
    }
}",,2023. 9. 4,40,2
2023. 9. 4 오전 10:19:34,윤지석,Unity,19 - 제일 작은 수 제거하기,"public class Solution {
    public int[] solution(int[] arr) {
        int min = arr[0];
        
        foreach(int num in arr)
        {
            if (min > num)
                min = num;
        }
        int[] answer = new int[arr.Length - 1];
        // 최솟값을 가진 인덱스는 복사하지 않음
        int j = 0;
        for (int i = 0; i < arr.Length; i++)
        {
            if (arr[i] == min)
                j--;
            else
                answer[j] = arr[i];
            j++;
        }
        if (answer.Length == 0)
            answer = new int[] {-1};
        return answer;
    }
}",https://github.com/noyyo/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12935.%E2%80%85%EC%A0%9C%EC%9D%BC%E2%80%85%EC%9E%91%EC%9D%80%E2%80%85%EC%88%98%E2%80%85%EC%A0%9C%EA%B1%B0%ED%95%98%EA%B8%B0,2023. 9. 4,19,1
2023. 9. 4 오전 10:20:06,윤지연,Unity,15 - 나누어 떨어지는 숫자,"using System;
using System.Collections.Generic;

public class Solution {
    public int[] solution(int[] arr, int divisor) {
        List<int> tmp = new List<int>();
        
        foreach(int num in arr)
        {
            if(num % divisor == 0)
            {
                tmp.Add(num);
            }
        }
        
        tmp.Sort();
        int[] answer = new int[tmp.Count + 1];
        
        if(tmp.Count == 0)
        {
            answer[0] = -1;
        }
        else
        {
            answer = tmp.ToArray();
        }
        return answer;
    }
}",https://github.com/jungbosong/Codekata/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12910.%E2%80%85%EB%82%98%EB%88%84%EC%96%B4%E2%80%85%EB%96%A8%EC%96%B4%EC%A7%80%EB%8A%94%E2%80%85%EC%88%AB%EC%9E%90%E2%80%85%EB%B0%B0%EC%97%B4,2023. 9. 4,15,1
2023. 9. 4 오전 10:20:20,김하늘,Unity,25 - 부족한 금액 계산하기,"using System;

class Solution
{
    public long solution(int price, int money, int count)
    {
        long total = 0;
        for (int i = 1; i <= count; i++)
            total += (long)(price * i);

        if (total <= money)
            return 0;
        else return total - money;
    }
}",,2023. 9. 4,25,1
2023. 9. 4 오전 10:20:52,윤지석,Unity,20 - 가운데 글자 가져오기,"public class Solution {
    public string solution(string s) {
        int halfIndex = s.Length / 2;
        string answer = """";
        
        if (s.Length % 2 == 0)
            answer = s.Substring(halfIndex - 1, 2);
        else
            answer = s.Substring(halfIndex, 1);
        
        return answer;
    }
}",https://github.com/noyyo/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12903.%E2%80%85%EA%B0%80%EC%9A%B4%EB%8D%B0%E2%80%85%EA%B8%80%EC%9E%90%E2%80%85%EA%B0%80%EC%A0%B8%EC%98%A4%EA%B8%B0,2023. 9. 4,20,1
2023. 9. 4 오전 10:20:57,이홍준,Unity,34 - 최소직사각형,"using System;

public class Solution {
    public int solution(int[,] sizes) {
        int answer = 0;
        int x = 0;
        int y = 0;
        
        for (int i = 0; i < sizes.GetLength(0); i++)
        {
            int w = sizes[i, 0];
            int h = sizes[i, 1];
            
            if (w < h)
            {
                h = sizes[i, 0];
                w = sizes[i, 1];
            }
            if (w > x)
            {
                x = w;
            }
            if (h > y)
            {
                y = h;
            }
        }
        answer = x * y;
        return answer;
    }
}",https://github.com/dlghdwns97/Study/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/86491.%E2%80%85%EC%B5%9C%EC%86%8C%EC%A7%81%EC%82%AC%EA%B0%81%ED%98%95,2023. 9. 4,34,2
2023. 9. 4 오전 10:21:22,윤지석,Unity,21 - 수박수박수박수박수박수?,"using System.Text;

public class Solution {
    public string solution(int n) {
        string repeatString = ""수박"";
        StringBuilder stringBuilder = new StringBuilder();
        for (int i = 0; i < n / 2; i++)
            stringBuilder.Append(repeatString);
        stringBuilder.Append(repeatString.Substring(0, n % 2));
        string answer = stringBuilder.ToString();
        return answer;
    }
}",https://github.com/noyyo/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12922.%E2%80%85%EC%88%98%EB%B0%95%EC%88%98%EB%B0%95%EC%88%98%EB%B0%95%EC%88%98%EB%B0%95%EC%88%98%EB%B0%95%EC%88%98%EF%BC%9F,2023. 9. 4,21,1
2023. 9. 4 오전 10:22:07,윤지석,Unity,22 - 내적,"using System;

public class Solution {
    public int solution(int[] a, int[] b) {
        int sum = 0;
        for (int i = 0; i < a.Length; i++)
        {
            sum += a[i] * b[i];
        }
        
        return sum;
    }
}",https://github.com/noyyo/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/70128.%E2%80%85%EB%82%B4%EC%A0%81,2023. 9. 4,22,1
2023. 9. 4 오전 10:22:15,장성림,Unity,37 - 문자열 내 마음대로 정렬하기,"using System.Collections.Generic;
public class Solution {
    public string[] solution(string[] strings, int n) {
        
        List<string> sList = new List<string>();
        foreach (string s in strings){
            int i = 0;
                for(i = 0; i < sList.Count; i++){
                    if (sList[i][n] > s[n])
                        break;
                    else if(sList[i][n] == s[n] && string.Compare(sList[i], s) == 1)
                        break;
                }
            sList.Insert(i, s);
        }
        string[] answer = sList.ToArray();
        return answer;
    }
}",https://github.com/hoobhoob,2023. 9. 4,37,2
2023. 9. 4 오전 10:22:23,이승연,Unity,14 - 서울에서 김서방 찾기,"public class Solution {
    public string solution(string[] seoul) {
        string answer = """";
        
        for(int i=0;i<seoul.Length;i++)
        {
            if(seoul[i]==""Kim"")
            {
                
                answer=""김서방은 ""+i+""에 있다"";
                break;
                
            }
        }
                         
        return answer;
    }
}",,2023. 9. 4,14,1
2023. 9. 4 오전 10:22:40,윤지석,Unity,23 - 약수의 개수와 덧셈,"using System;
using System.Collections.Generic;

public class Solution {
    private List<int>primeNumbers;
    private int naturalNumberInput;
    public Solution()
    {
        naturalNumberInput = 1000;
        Init();
    }
    public int solution(int left, int right) {
        int sum = 0;
        for (int i = left; i <= right; i++)
        {
            if (GetDivisorCount(i) % 2 == 0)
                sum += i;
            else
                sum -= i;
        }
        
        return sum;
    }
    public int GetDivisorCount(int naturalNumber)
    {
        List<int> primeDivisorsPowerCount = new List<int>();
        for (int i = 0; i < primeNumbers.Count; i++)
        {
            if (primeNumbers[i] > naturalNumber)
                break;
            int primeNumPowerCount = 0;
            int calcNum = naturalNumber;
            while (calcNum >= primeNumbers[i] && calcNum % primeNumbers[i] == 0)
            {
                calcNum /= primeNumbers[i];
                primeNumPowerCount++;
            }
            if (primeNumPowerCount > 0)
                primeDivisorsPowerCount.Add(primeNumPowerCount);
            primeNumPowerCount = 0;
        }
        
        int divisorCount = 1;
        foreach(int powerCount in primeDivisorsPowerCount)
        {
            divisorCount *= (powerCount + 1);
        }
        return divisorCount;
    }
    private void Init()
    {
        primeNumbers = new List<int>();
        bool[] isPrime = new bool[naturalNumberInput + 1];
        for (int i = 2; i <= naturalNumberInput; i++)
            isPrime[i] = true;
        for (int num = 2; num * num <= naturalNumberInput; num++)
        {
            if (isPrime[num])
            {
                for (int multiple = num * num; multiple < naturalNumberInput; multiple += num)
                {
                    isPrime[multiple] = false;
                }
            }
        }
        for (int num = 2; num <= naturalNumberInput; num++)
        {
            if (isPrime[num])
                primeNumbers.Add(num);
        }
    }
}",https://github.com/noyyo/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/77884.%E2%80%85%EC%95%BD%EC%88%98%EC%9D%98%E2%80%85%EA%B0%9C%EC%88%98%EC%99%80%E2%80%85%EB%8D%A7%EC%85%88,2023. 9. 4,23,1
2023. 9. 4 오전 10:23:28,윤지연,Unity,16 - 음양 더하기,"using System;

public class Solution {
    public int solution(int[] absolutes, bool[] signs) {
        int answer = 0;
        
        for(int i = 0; i < absolutes.Length; i++)
        {
            if(signs[i])
            {
                answer += absolutes[i];
            }
            else
            {
                answer -= absolutes[i];
            }
        }
        return answer;
    }
}",https://github.com/jungbosong/Codekata/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/76501.%E2%80%85%EC%9D%8C%EC%96%91%E2%80%85%EB%8D%94%ED%95%98%EA%B8%B0,2023. 9. 4,16,1
2023. 9. 4 오전 10:23:59,안소정,AI,18 - 없는 숫자 더하기,"using System;

public class Solution {
    public int solution(int[] numbers) {
        int answer = 45;
        //0~9 더한 값(45) - (있는 값의 합)
        for (int i = 0; i < numbers.Length; i++)
        {
            answer -= numbers[i];
        }
        return answer;
    }
}",,2023. 9. 4,18,1
2023. 9. 4 오전 10:25:13,김민태,Unity,40 - 가장 가까운 같은 글자,"using System;

public class Solution {
    public int[] solution(string s) {
        int[] answer = new int[s.Length] ;

        for(int i=0; i <s.Length; i++)
        {
            for(int j=0; j<i ; j++)
            {
                if(s[i]==s[j] )
                {
                    answer[i] =i-j;
                } 
            }

            if(answer[i]==0) 
            {
                answer[i] = -1;
            }
        }

        return answer;
    }
}",https://github.com/rlaalsxo/CodingTest,2023. 9. 4,40,2
2023. 9. 4 오전 10:25:44,김윤경,Unity,8 - 문자열을 정수로 바꾸기,"public class Solution 
{
    public int solution(string s) 
    {
        int answer = int.Parse(s);
        return answer;
    }
}
",,2023. 9. 4,8,1
2023. 9. 4 오전 10:26:21,김형중,Unity,24 - 문자열 내림차순으로 배치하기,"using System;

public class Solution {
    public string solution(string s) {
        char[] t = s.ToCharArray(); //원소로 이루어진 배열t = s를 원소별로 배열만들기
        Array.Sort(t); //배열t를 오름차순으로
        Array.Reverse(t); //배열t를 뒤집기(오름차순 ==> 내림차순)
        return new string(t); //배열을 new string으로
    }
}",,2023. 9. 4,24,1
2023. 9. 4 오전 10:26:33,박준규,Unity,24 - 문자열 내림차순으로 배치하기,"using System;
using System.Linq;

public class Solution 
{
    public string solution(string s) 
    {
        string answer = """";
        answer = String.Concat(s.OrderBy(ch => ch));
        char[] arr = answer.ToArray();
        Array.Reverse(arr);
        answer = new string(arr); 
        return answer;
    }
}",,2023. 9. 4,24,1
2023. 9. 4 오전 10:26:33,문준권,Unity,8 - 문자열을 정수로 바꾸기,"public class Solution {
    public int solution(string s) {
        int answer = int.Parse(s);
        return answer;
    }
    
}",,2023. 9. 4,8,1
2023. 9. 4 오전 10:26:38,정재훈,Unity,18 - 없는 숫자 더하기,"using System;

public class Solution {
    public int solution(int[] numbers) {
        int answer = 0;
        int sum = 0 ;
        for(int i = 0 ; i < numbers.Length; i ++)
        {
            sum+=numbers[i];
        }
         answer  = 45-sum;
        return answer;
    }
}",https://github.com/toadsam/Algorithm,2023. 9. 4,18,1
2023. 9. 4 오전 10:26:47,이현지,Unity,38 - K번째수정렬,"using System;

public class Solution 
{
    public int[] solution(int[] array, int[,] commands) 
    {
        int[] answer = new int[commands.GetLength(0)];
        for (int i = 0; i < commands.GetLength(0); i++)
        {
            int[] tempArr = new int[commands[i, 1] - commands[i, 0] + 1];
            int count = 0;
            for (int j = commands[i, 0] - 1; j < commands[i, 1]; j ++)
            {
                tempArr[count] = array[j];
                count ++;
            }
            Array.Sort(tempArr);
            answer[i] = tempArr[commands[i, 2] - 1];
        }
        return answer;
    }
}",https://github.com/szlovelee/Programmers-Algorithm,2023. 9. 4,38,2
2023. 9. 4 오전 10:26:56,이소이,Unity,35 - 시저 암호,"public class Solution {
    public string solution(string s, int n) {
        string answer = """";
        
        for (int i = 0; i < s.Length; i++)
        {
            int ascii = (int)(s[i]) + n;
            
            if (s[i] == ' ')
                ascii = (int)(s[i]);
            else if (('A' <= s[i]) && (s[i] <= 'Z'))
                ascii = (ascii - 65) % 26 + 65;
            else if (('a' <= s[i]) && (s[i] <= 'z'))
                ascii = (ascii - 97) % 26 + 97;
            answer += (char)ascii;
        }
        
        return answer;
    }
}",https://github.com/leesy015599/AlgorithmCodeKata/blob/master/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12926.%E2%80%85%EC%8B%9C%EC%A0%80%E2%80%85%EC%95%94%ED%98%B8/%EC%8B%9C%EC%A0%80%E2%80%85%EC%95%94%ED%98%B8.cs,2023. 9. 4,35,2
2023. 9. 4 오전 10:27:26,노재우,Unity,26 - 문자열 다루기 기본,"public class Solution
{
    public bool solution(string s)
    {
        if (s.Length != 4 && s.Length != 6)
        {
            return false;
        }

        bool answer = int.TryParse(s, out int result);
        return answer;
    }
}",,2023. 9. 4,26,1
2023. 9. 4 오전 10:28:45,최장범,Unity,26 - 문자열 다루기 기본,"using System;

public class Solution
    {
        public int[,] solution(int[,] arr1, int[,] arr2)
        {        
            int[,] answer = new int[arr1.GetLength(0),arr1.GetLength(1)];
                        
            for (int i = 0; i < arr1.GetLength(0); i++)
            {
                for (int j = 0; j < arr1.GetLength(1); j++)
                {
                    answer[i, j] = arr1[i, j] + arr2[i, j];
                }
            }
            return answer;
        }
    }",,2023. 9. 4,26,1
2023. 9. 4 오전 10:29:24,신우석,Unity,53 - 숫자 짝꿍,"using System;
using System.Text;

public class Solution {
    public string solution(string X, string Y) {
        int[] cntX = new int[10];
        int[] cntY = new int[10];
        
        
        foreach (char c in X)
            ++cntX[c - '0'];
        foreach (char c in Y)
            ++cntY[c - '0'];
        
        StringBuilder answerBuilder = new StringBuilder();
        for (int i = 9; i >= 0; --i) {
            int cnt = cntX[i] > cntY[i] ? cntY[i] : cntX[i];
            for (int j = 0; j < cnt; ++j)
                answerBuilder.Append(i);
        }
        
        if (answerBuilder.Length == 0) answerBuilder.Append(-1);
        
        string answer = answerBuilder.ToString();
        
        foreach (char c in answer)
            if (c != '0') return answer;
        
        return ""0"";
    }
}",https://github.com/seoksii/AlgorithmCodeKata/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/131128.%E2%80%85%EC%88%AB%EC%9E%90%E2%80%85%EC%A7%9D%EA%BF%8D,2023. 9. 4,53,2
2023. 9. 4 오전 10:29:54,김하늘,Unity,26 - 문자열 다루기 기본,"public class Solution 
{
    public bool solution(string s) 
    {
        bool answer = false;
        if (s.Length == 4 || s.Length == 6)
        {
            if (int.TryParse(s, out int temp))
                answer = true;
            else
                answer = false;
        }
        return answer;
    }
}",,2023. 9. 4,26,1
2023. 9. 4 오전 10:30:29,이형빈,Unity,13 - 콜라츠 추측,"public class Solution {
    public int solution(int num) 
    {
        
        long number = num;
        int answer = 0;
        while(number != 1)
        {
            answer ++;
           
            if(number % 2 == 0)
            {
                number= number/2;
            }
            else 
            {
                number = number*3+1;
            }            
            if(answer>=488)
            {
                return -1;
                
            }
        }
        
        return answer;
    }
}",,2023. 9. 4,13,1
2023. 9. 4 오전 10:30:35,이정환,Unity,31 - 이상한 문자 만들기,"using System;
using System.Text;

public class Solution {
    public string solution(string s) {
        StringBuilder sb = new StringBuilder();
        bool isUpper = true; // 첫 번째 문자는 대문자로 시작

        foreach (char c in s)
        {
            if (char.IsLetter(c)) // 문자인 경우만 처리
            {
                if (isUpper)
                {
                    sb.Append(char.ToUpper(c));
                }
                else
                {
                    sb.Append(char.ToLower(c));
                }

                isUpper = !isUpper; // 대소문자 토글
            }
            else
            {
                sb.Append(c); // 공백 등의 문자는 그대로 추가
                isUpper = true; // 공백을 만나면 다음 문자는 대문자로 시작
            }
        }

        return sb.ToString();
    }
}",,2023. 9. 4,31,2
2023. 9. 4 오전 10:30:49,김민상,Unity,52 - 옹알이 (2),"using System;
using System.Collections.Generic;

public class Solution
{
    public int solution(string[] babbling)
    {
        Dictionary<string, string> dict = new Dictionary<string, string>() { {""ayaaya"", ""x""}, { ""yeye"", ""x"" }, { ""woowoo"", ""x"" }, { ""mama"", ""x"" }, { ""aya"", ""1"" }, { ""ye"", ""1"" }, { ""woo"", ""1"" }, { ""ma"", ""1"" } };

        int answer = 0;

        for (int i = 0; i < babbling.Length; i++)
        {
            string now = babbling[i];

            foreach (string key in dict.Keys)
            {
                now = now.Replace(key, dict[key]);
            }

            answer += int.TryParse(now, out int result) ? 1 : 0;
        }

        return answer;
    }
}",,2023. 9. 4,52,2
2023. 9. 4 오전 10:31:04,이선재,Unity,50 - 기사단원의 무기,"#include <string>
#include <vector>

using namespace std;

int DivisorCount(int n){
    int count = 0;
    
    for(int i = 1; i <= n; i++){
        if(i*i == n){
            count += 1;
            break;
        }
        else if(n/i < i){
            break;
        }
        else{
            if(n % i == 0)
                count += 2;
        }
    }
    
    return count;
}

int solution(int number, int limit, int power) {
    int answer = 0;
    
    for(int i = 1; i <= number; i++){
        int divisor = DivisorCount(i);
        
        if(divisor <= limit){
            answer += divisor;
        }
        else
            answer += power;
    }
    
    return answer;
}",https://github.com/Lyrwhitt/Algorithm/blob/main/Programmers/LEVEL1/%EA%B8%B0%EC%82%AC%EB%8B%A8%EC%9B%90%EC%9D%98%20%EB%AC%B4%EA%B8%B0,2023. 9. 4,50,2
2023. 9. 4 오전 10:31:05,김예준,Unity,43 - 명예의 전당 (1),"using System;
using System.Linq;
using System.Collections.Generic;

public class Solution {
    public int[] solution(int k, int[] score) {
        List<int> answer = new List<int>();
        List<int> honor = new List<int>();
        
        for (int i = 0; i < score.Length; i++)
        {
            honor.Add(score[i]);
            honor.Sort();
            honor.Reverse();
            
            if (i < k) answer.Add(honor.Last());
            else answer.Add(honor[k - 1]);
        }
        
        return answer.ToArray();
    }
}",,2023. 9. 4,43,2
2023. 9. 4 오전 10:31:29,김도현B,Unity,37 - 문자열 내 마음대로 정렬하기,"using System;
using System.Linq;
public class Solution {
    public string[] solution(string[] strings, int n) {
        return strings.OrderBy(x => x[n]).ThenBy(x => x).ToArray();
    }
}",https://github.com/subscriptioncat/Algorithm,2023. 9. 4,37,2
2023. 9. 4 오전 10:32:38,김광수,Unity,64 - 신고 결과 받기,"using System;
using System.Collections.Generic;

public class Solution 
{   
    
    
    // result의 신고메일은 신고 한사람이 받는거임
    
    // Dictionary를 돌면서 count가 k보다 크다면?
    
    // hashset 안의 사람들에게 결과메일을 +1 해줘야됨
    public int[] solution(string[] id_list, string[] report, int k) 
    {
        Dictionary<string,HashSet<string>> hashSetDic = new Dictionary<string,HashSet<string>>();
        Dictionary<string, int> result = new Dictionary<string, int>();
        
        int[] answer = new int[id_list.Length];
        
        foreach(string id in id_list)
        {
            hashSetDic.Add(id, new HashSet<string>());
            result.Add(id,0);
        }
        
        foreach(string str in report)
        {
            string[] temp = str.Split("" "");
            hashSetDic[temp[1]].Add(temp[0]);
        }
        
        foreach(string id in id_list)
        {
            if (hashSetDic[id].Count >= k)
            {
                foreach(string id2 in hashSetDic[id])
                {
                    result[id2]++;
                }
            };
        }
        
        
        for (int i=0; i< id_list.Length; i++)
        {
            answer[i] = result[id_list[i]];
        }
        
        return answer;
    }
}",https://github.com/kksoo0131/Study/commit/42a04acd30b94f0dfbbf8645bf1461590d1f56bc,2023. 9. 4,64,3
2023. 9. 4 오전 10:33:13,한병권,Unity,52 - 옹알이 (2),"using System;

public class Solution {
    public int solution(string[] babbling) {
        int answer = 0;
        string[] tempStr = {""aya"", ""ye"", ""woo"", ""ma""};
        
        for(int i = 0; i < babbling.Length; i++)
        {
            string str = babbling[i];
            int strLength = str.Length;
            int tempAnswer = 0;
            if(strLength > 1)
            {
                string s = """";
                for(int j = 0; j < strLength; j++)
                {
                    for(int k = 0; k < tempStr.Length; k++)
                    {
                        if(tempStr[k].Length + j <= strLength)
                        {
                            if(tempStr[k] == str.Substring(j,tempStr[k].Length))
                            {
                                if(s != tempStr[k])
                                {
                                    s = tempStr[k];
                                    j += tempStr[k].Length -1;
                                    tempAnswer += tempStr[k].Length;
                                }
                            }
                        }
                    }
                }
                if(tempAnswer == strLength)
                {
                    answer++;
                }
            }
        }
        
        return answer;
    }
}",https://github.com/hbg9212/AlgorithmCodekata,2023. 9. 4,52,2
2023. 9. 4 오전 10:33:18,최장범,Unity,27 - 행렬의 덧셈,"using System;

public class Solution
    {
        public int[,] solution(int[,] arr1, int[,] arr2)
        {        
            int[,] answer = new int[arr1.GetLength(0),arr1.GetLength(1)];
                        
            for (int i = 0; i < arr1.GetLength(0); i++)
            {
                for (int j = 0; j < arr1.GetLength(1); j++)
                {
                    answer[i, j] = arr1[i, j] + arr2[i, j];
                }
            }
            return answer;
        }
    }",,2023. 9. 4,27,1
2023. 9. 4 오전 10:33:40,윤지연,Unity,17 - 핸드폰 번호 가리기,"public class Solution {
    public string solution(string phone_number) {    
        char[] chars = phone_number.ToCharArray();
    
        for(int i = phone_number.Length - 5; i >= 0; i--)
        {
            chars[i] = '*';
        }
        
        return new string(chars);
    }
}",https://github.com/jungbosong/Codekata/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12948.%E2%80%85%ED%95%B8%EB%93%9C%ED%8F%B0%E2%80%85%EB%B2%88%ED%98%B8%E2%80%85%EA%B0%80%EB%A6%AC%EA%B8%B0,2023. 9. 4,17,1
2023. 9. 4 오전 10:34:06,김호연,Unity,26 - 문자열 다루기 기본,"public class Solution {
    public bool solution(string s) {
        bool answer = true;
        //정수형으로 변환이 되면 true, 안되면 false?
        int a;
        if(s.Length == 4 || s.Length == 6) // 문자열의 길이가 4 혹은 6이라는 조건
        {
            answer = int.TryParse(s, out a);
        }
        else
        {
            answer = false;
        }
        
        return answer;
    }
}",,2023. 9. 4,26,1
2023. 9. 4 오전 10:34:20,김강현,Unity,17 - 핸드폰 번호 가리기,"using System.Collections.Generic;
public class Solution 
{
    public string solution(string phone_number) 
    {
        List<string>number = new List<string>();
        for(int i = 0 ; i < phone_number.Length;i++)
        {
            number.Add(phone_number[i].ToString());
        }
        number.Reverse();
        for(int i = 4 ; i < phone_number.Length;i++)
        {
            number[i] = ""*"";
        }
                number.Reverse();
        string answer = """";
        answer = string.Join("""",number.ToArray());
        return answer;
    }
}",,2023. 9. 4,17,1
2023. 9. 4 오전 10:34:47,최하나,Unity,5 - 나머지가 1이 되는 수 찾기,"using System;

public class Solution {
    public int solution(int n) {
    int answer = 0;
        
    for (int i = 1; i <= n; i++)
    {
        if (n % i == 1)
        {
            answer = i;
            break;
        }
    }
    return answer;
}
}",https://github.com/coco0715/AlgorithmsKata,2023. 9. 4,5,1
2023. 9. 4 오전 10:34:54,강성호,Unity,46 - 과일 장수,"using System;

public class Solution {
    public int solution(int k, int m, int[] score) {
       int answer = 0;
			int cnt = 0;
			int min = int.MaxValue;
			Array.Sort(score);

			for(int i = score.Length - 1; i >= 0; i--)
			{
				min = Math.Min(min, score[i]);
				cnt++;
				if(cnt == m)
				{
					answer += min * m;
					cnt = 0;
				}
			}

			return answer;
    }
}",,2023. 9. 4,46,2
2023. 9. 4 오전 10:35:50,신해준,Unity,15 - 나누어 떨어지는 숫자,"using System.Collections.Generic;

public class Solution 
{
    public int[] solution(int[] arr, int divisor) 
    {
        // 나누어 떨어지는 값들을 저장할 배열
        List<int> divisibleNumbers = new List<int>();

        // 배열을 순회하면서 divisor로 나누어 떨어지는 값을 찾음
        for (int i = 0; i < arr.Length; i++)
        {
            if (arr[i] % divisor == 0)
            {
                divisibleNumbers.Add(arr[i]);
            }
        }

        // 나누어 떨어지는 값이 없다면 -1을 배열에 추가
        if (divisibleNumbers.Count == 0)
        {
            divisibleNumbers.Add(-1);
        }

        divisibleNumbers.Sort();
        // 리스트를 배열로 변환하여 반환
        return divisibleNumbers.ToArray();
    }
}",,2023. 9. 4,15,1
2023. 9. 4 오전 10:35:53,박지원,Unity,24 - 문자열 내림차순으로 배치하기,"using System;

public class Solution {
    public string solution(string s) {
        string answer = """";
        char[] s_char = s.ToCharArray();
        Array.Sort(s_char);
        Array.Reverse(s_char);
        return string.Join("""", s_char);
    }
}",https://github.com/jwonp9127/AlgorithmStudy/tree/f22e053a3d9f3fdf1b2f6f0464e7420233a75cc7/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12917.%E2%80%85%EB%AC%B8%EC%9E%90%EC%97%B4%E2%80%85%EB%82%B4%EB%A6%BC%EC%B0%A8%EC%88%9C%EC%9C%BC%EB%A1%9C%E2%80%85%EB%B0%B0%EC%B9%98%ED%95%98%EA%B8%B0,2023. 9. 4,24,1
2023. 9. 4 오전 10:36:12,손병의,Unity,17 - 핸드폰 번호 가리기,https://school.programmers.co.kr/learn/courses/30/lessons/12948,https://github.com/Son-BE/CodeKata1,2023. 9. 4,17,1
2023. 9. 4 오전 10:36:13,김종훈,Unity,43 - 명예의 전당 (1),"using System;
using System.Collections.Generic;
using System.Linq;


public class Solution {
    public int[] solution(int k, int[] score) {
        int[] answer = new int[score.Length];
        List<int> board = new List<int>();
        
        for(int i = 0; i < score.Length; i++)
        {
            if(board.Count == k)
            {
                if(board[0] > score[i])
                {
                    answer[i] = board[0];
                    continue;
                }
                board.RemoveAt(0);
            }
            board.Add(score[i]);
            board.Sort();
            answer[i] = board[0];
        }
        return answer;
    }
}",,2023. 9. 4,43,2
2023. 9. 4 오전 10:36:57,김민태,Unity,41 - 푸드 파이트 대회,"using System;

public class Solution {
    public string solution(int[] food) {
        string answer = """";
        for(int i = 1; i<food.Length; i++)
        {
            if(food[i]/2 != 0)
            {
                for(int j = 0; j<food[i]/2; j++)
                {
                    answer += i.ToString();
                }
            }
        }
        char[] answer2 = answer.ToCharArray();
        Array.Sort(answer2);
        Array.Reverse(answer2);
        answer += ""0"";
        for(int i = 0; i<answer2.Length; i++)
        {
            answer += answer2[i];
        }
        return answer;
    }
}",https://github.com/rlaalsxo/CodingTest,2023. 9. 4,41,2
2023. 9. 4 오전 10:37:28,김연우,Unity,7 - 자연수 뒤집어 배열로 만들기,"#include <stdio.h>
#include <stdlib.h>

int* solution(int n) {
    int* result = (int*)malloc(10 * sizeof(int)); 
    int index = 0;

    while (n > 0) {
        result[index] = n % 10; 
        n /= 10; 
        index++;
    }

    return result;
}

int main() {
    int n = 12345;
    int* result = solution(n);

    for (int i = 0; i < 10; i++) {
        if (result[i] != 0) {
            printf(""%d "", result[i]);
        }
    }

    free(result); 

    return 0;
}",,2023. 9. 4,7,1
2023. 9. 4 오전 10:37:37,김민석,Unity,13 - 콜라츠 추측,"public class Solution {
    public int solution(int num) 
    {
        long temp = num;
        int answer = 0;
        while (temp != 1)
        {
            ++answer;
            temp = temp % 2 == 0 ? temp / 2 : temp * 3 + 1;
            
            if (answer > 500)
            {
                return -1;
            }
        }
        return answer;
    }
}",https://github.com/ms0753/codekata/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12943.%E2%80%85%EC%BD%9C%EB%9D%BC%EC%B8%A0%E2%80%85%EC%B6%94%EC%B8%A1/%EC%BD%9C%EB%9D%BC%EC%B8%A0%E2%80%85%EC%B6%94%EC%B8%A1.cs,2023. 9. 4,13,1
2023. 9. 4 오전 10:37:59,김진규,Unity,41 - 푸드 파이트 대회,"using System;
using System.Text;

public class Solution {
    public string solution(int[] food) {
        StringBuilder  answer = new StringBuilder();
        int foodCount = -1;
        for(int i =0; i <food.Length; i++)
        {
            foodCount += 1;
            for(int j = 0; j <food[i]/2; j++)
            {
                answer.Append(foodCount);                
            }
        }
        answer.Append(0);  
        for(int i =food.Length-1; i >=0; i--)
        {
            for(int j = 0; j <food[i]/2; j++)
            {
                answer.Append(foodCount);                
            }
            foodCount -= 1;
        }
        return answer.ToString();
    }
}",,2023. 9. 4,41,2
2023. 9. 4 오전 10:38:18,이현지,Unity,39 - 두 개 뽑아서 더하기,"using System;
using System.Collections.Generic;
using System.Linq;

public class Solution 
{
    public int[] solution(int[] numbers) 
    {
        int[] answer;
        List<int> sum = new List<int>();
        for (int i = 0; i < numbers.Length - 1; i ++ )
        {
            for (int j = i + 1; j < numbers.Length; j ++)
            {
                sum.Add(numbers[i] + numbers[j]);
            }
        }
        sum.Sort();
        answer = sum.Distinct().ToArray();
        return answer;
    }
}",https://github.com/szlovelee/Programmers-Algorithm,2023. 9. 4,39,2
2023. 9. 4 오전 10:38:32,김나운,Unity,23 - 약수의 개수와 덧셈,"public class Solution {
    public int solution(int left, int right) {
        int answer = 0;

        for (int i = left; i <= right; i++) {
            int count = 0;

            for (int j = 1; j <= i; j++) {
                if (i % j == 0) {
                    count++;
                }
            }

            if (count % 2 == 0) {
                answer += i;
            } else {
                answer -= i;
            }
        }

        return answer;
    }
}
",,2023. 9. 4,23,1
2023. 9. 4 오전 10:38:49,이홍준,Unity,35 - 시저 암호,"using System;

public class Solution {
    public string solution(string s, int n) {
        char[] answer_array = s.ToCharArray();
        int[] x = new int[s.Length];
        
        for(int i = 0; i < s.Length; i++)
        {
            x[i] = Convert.ToInt32(answer_array[i]);
            if(x[i] > 64 && x[i] < 91)
            {
                x[i] = x[i] + n;
                if (x[i] > 90)
                {
                    x[i] -= 26;
                }
            }
            if(x[i] > 96 && x[i] < 123)
            {
                x[i] = x[i] + n;
                if (x[i] > 122)
                {
                    x[i] -= 26;
                }
            }
        }
        
        for(int i = 0; i < x.Length; i++)
        {
            answer_array[i] = Convert.ToChar(x[i]);
        }
        string answer = new string(answer_array);
        
        return answer;
    }
}",https://github.com/dlghdwns97/Study/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12926.%E2%80%85%EC%8B%9C%EC%A0%80%E2%80%85%EC%95%94%ED%98%B8,2023. 9. 4,35,2
2023. 9. 4 오전 10:39:14,문현우,Unity,17 - 핸드폰 번호 가리기,"public class Solution {
    public string solution(string phone_number) {
        int num = 4;
        int length = phone_number.Length;
        string replaceStr = new string('*', length - num) + phone_number.Substring(length - num);
        return replaceStr;
    }
}",https://github.com/Munch310/Algorithm-Csharp/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12948.%E2%80%85%ED%95%B8%EB%93%9C%ED%8F%B0%E2%80%85%EB%B2%88%ED%98%B8%E2%80%85%EA%B0%80%EB%A6%AC%EA%B8%B0,2023. 9. 4,17,1
2023. 9. 4 오전 10:39:24,김하늘,Unity,27 - 행렬의 덧셈,"public class Solution 
{
    public int[,] solution(int[,] arr1, int[,] arr2) 
    {
    int[,] answer = new int[arr1.GetLength(0),arr1.GetLength(1)];

        for (int i = 0; i < arr1.GetLength(0); i++)
        {
            for (int j = 0; j < arr1.GetLength(1); j++)
            {
                answer[i, j] = arr1[i, j] + arr2[i, j];
            }
        }
        return answer;
    }
}",,2023. 9. 4,27,1
2023. 9. 4 오전 10:39:27,김광수,Unity,65 - 최댓값과 최솟값,"using System;

public class Solution 
{
    public string solution(string s) 
    {
        int max = int.MinValue;
        int min = int.MaxValue;
        
        string[] intStringArray = s.Split("" "");
        
        foreach(string str in intStringArray)
        {
            int temp = int.Parse(str);
            
            max = Math.Max(max, temp);
            min = Math.Min(min, temp);
        }
        return $""{min} {max}"";
    }
}",https://github.com/kksoo0131/Study/commit/2e37865f6411d699cd8eedb99420069fc112b0f8,2023. 9. 4,65,3
2023. 9. 4 오전 10:39:47,최장범,Unity,28 - 직사각형 별찍기,"using System;

public class Example
{
    public static void Main()
    {
        String[] s;

        Console.Clear();
        s = Console.ReadLine().Split(' ');

        int a = Int32.Parse(s[0]);
        int b = Int32.Parse(s[1]);
        
        for (int i =0; i< b; i++)
        {
            for (int j = 0; j <a; j++)
            {
                Console.Write(""*"");
            }
            Console.WriteLine();
        }       
    }
}",,2023. 9. 4,28,1
2023. 9. 4 오전 10:40:46,윤지,Unity,18 - 없는 숫자 더하기,"using System;

public class Solution {
    public int solution(int[] numbers) {
        int answer = 0;
        bool[] exist = {false, false, false, false, false, false, false, false, false, false};
        
        foreach(int num in numbers)
        {
            exist[num] = true;
        }
        
        for(int i = 1; i <= 9; i++)
        {
            if(!exist[i])
            {
                answer += i;
            }
        }
        return answer;
    }
}",https://github.com/jungbosong/Codekata/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/86051.%E2%80%85%EC%97%86%EB%8A%94%E2%80%85%EC%88%AB%EC%9E%90%E2%80%85%EB%8D%94%ED%95%98%EA%B8%B0,2023. 9. 4,18,1
2023. 9. 4 오전 10:41:04,우민규,Unity,20 - 가운데 글자 가져오기,"public class Solution {
    public string solution(string s) {
        string answer = """";
        
        //짝수 = 중간과 중간+1의 문자가 중간 글자에 해당함
        if(s.Length % 2 == 0)
            {
            //안쪽의 배치 순서도 중요함(거꾸로 적으면 we 나와야 하는데 ew나옴)
                answer += s[s.Length / 2 - 1];
                answer += s[s.Length / 2];
            }
        //홀수 = 중간이 중간 글자에 해당함
        else
        {
            answer += s[s.Length / 2]; //알아서 소수점을 제거 한다.
        }
        return answer;
    }
    //고급 코드
    //문자열에 .Substring(매개변수1, 매개변수2)의 구조를 가진 메소드는
    //문자열을 '잘라주는' 기능을 한다.
    //매개변수 1로 문자열을 자르기 시작할 index값을 지정하고(0시작, 범위벗어나면 안됨)
    //매개변수 2는 어느 길이만큼 자를 것인지 의미
    //1이면 한글자, 5라면 5글자임(index값이 아니라 단순이 문자 개수이므로 주의)
    //매개변수 2는 생략 가능하며, 이 경우 문자열 끝까지이다.
    
    //목표 1. 매개변수2의 값이 홀수는 1, 짝수는 2가 되어야 한다.
    //목표 2. 매개변수1의 값이 홀수는 문자열 길이 절반, 짝수는 절반에서 -1의 값
    //여기서 조건문을 사용하면 간단하지만, 매개변수를 이용하는 방법도 있다.
    //매개변수2 = (s.Length+1) % 2 기본 코드에 +1 사용하면 홀 짝 0, 1
    //다음으로으로 매개변수2에 +1 해주면 원하는 값인 1, 2를 얻을 수 있다.
    //다음 목표
    //홀수는 문자열 길이 절반값, 짝수는 절반 -1의 값
    //우선 절반값 매개변수1 = s.Length/2 홀 짝 둘다 절반값이 됨
    //짝수일 때 -1이 되어야 한다.
    //매개변수 2를 사용한다. 각각 0, 1이므로 -해주면 원하는 값인
    //홀수 0 , 짝수 -1을 얻을 수 있다. int num1 = (s.Length / 2) - num2;
    // 문자열길이 + 1에서 2로 나눈 나머지를 구한다 => 홀수면 0 / 짝수면 1
    /*
        int num2 = (s.Length + 1) % 2;
        
        int num1 = (s.Length / 2) - num2;
            
        return s.Substring(num1, num2 + 1);
    */
    
}",https://github.com/Woomingyu/Programmers,2023. 9. 4,20,1
2023. 9. 4 오전 10:41:08,박민호,Unity,34 - 최소직사각형,"using System;

public class Solution {
    public int solution(int[,] sizes) {
        for(int i=0;i<sizes.GetLength(0);i++){
            if(sizes[i,0]<sizes[i,1]){
            int temp = sizes[i,0];
            sizes[i,0]=sizes[i,1];
            sizes[i,1]=temp;
            }            
        }
        int max_row = sizes[0,0];
        int max_col = sizes[0,1];
        for(int i=1;i<sizes.GetLength(0);i++){
            if(max_row<sizes[i,0]){
                max_row = sizes[i,0];
            }
            if(max_col<sizes[i,1]){
                max_col=sizes[i,1];
            }
        }
        int answer = max_row*max_col;
        return answer;
    }
}",,2023. 9. 4,34,2
2023. 9. 4 오전 10:42:07,박지원,Unity,25 - 부족한 금액 계산하기,"using System;

class Solution
{
    public long solution(int price, int money, int count)
    {
        long totalPrice = 0;
        for(int i = 1; i <= count; i++)
            totalPrice += price * i;
        return money > totalPrice? 0 : totalPrice - money;
    }
}",https://github.com/jwonp9127/AlgorithmStudy/tree/971e1a56facf98337724d93f8e2d4299d52388bb/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/82612.%E2%80%85%EB%B6%80%EC%A1%B1%ED%95%9C%E2%80%85%EA%B8%88%EC%95%A1%E2%80%85%EA%B3%84%EC%82%B0%ED%95%98%EA%B8%B0,2023. 9. 4,25,1
2023. 9. 4 오전 10:42:34,송유섭,Unity,9 - 정수 제곱근 판별,"using System;
public class Solution 
{
    public long solution(long n) 
    {
        long answer = 0;
        
        double x = Math.Sqrt(n);
        
        if(x % 1 == 0) return(long) ((x + 1)*(x + 1));
        else return -1;
    }
}",https://github.com/SongJinx3512/codeKata/blob/main/codeKata%20lv%201%20%23009%20%EC%A0%95%EC%88%98%20%EC%A0%9C%EA%B3%B1%EA%B7%BC%20%ED%8C%90%EB%B3%84,0230. 9. 4,9,1
2023. 9. 4 오전 10:43:14,송유섭,Unity,9 - 정수 제곱근 판별,"using System;
public class Solution 
{
    public long solution(long n) 
    {
        long answer = 0;
        
        double x = Math.Sqrt(n);
        
        if(x % 1 == 0) return(long) ((x + 1)*(x + 1));
        else return -1;
    }
}",https://github.com/SongJinx3512/codeKata/blob/main/codeKata%20lv%201%20%23009%20%EC%A0%95%EC%88%98%20%EC%A0%9C%EA%B3%B1%EA%B7%BC%20%ED%8C%90%EB%B3%84,2023. 9. 4,9,1
2023. 9. 4 오전 10:43:42,유채연,Unity,32 - 삼총사,"    public int solution(int[] number) {
        int answer = 0;
        for(int i=0;i<number.Length-2;i++){
            for(int j=i+1;j<number.Length-1;j++){
                for(int k=j+1;k<number.Length;k++){
                    if((number[i]+number[j]+number[k])==0) answer++;
                }
            }
        }
        return answer;
    }",https://github.com/ychy0006?tab=repositories,2023. 9. 4,32,2
2023. 9. 4 오전 10:44:16,박민혁,Unity,10 - 정수 내림차순으로 배치하기,"using System;
    public class Solution {
    public long solution(long n) {
        long answer = 0;
        char[] a = n.ToString().ToCharArray();
        Array.Sort(a);
        Array.Reverse(a);     
        answer = long.Parse(new string(a));
        return answer;
    }
}",,2023. 9. 4,10,1
2023. 9. 4 오전 10:44:38,김종훈,Unity,44 - 2016년,"public class Solution {
    public string solution(int a, int b) {
        string answer = """";
        string[] day = new string[] { ""FRI"", ""SAT"", ""SUN"", ""MON"", ""TUE"", ""WED"", ""THU""};
        
        int[] days = new int[] {31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31};
        
        int totalDays = 0;
        
        for(int i=0; i<a-1; i++)
        {
            totalDays += days[i];
        }
        
        totalDays += b -1;
        
        
        answer = day[totalDays % 7];
        return answer;
    }
}",,2023. 9. 4,44,2
2023. 9. 4 오전 10:44:53,유채연,Unity,33 - 크기가 작은 부분,"    public int solution(string t, string p) {
        int answer = 0;
        for(int i=0;i<=t.Length-p.Length;i++){
            if(long.Parse(t.Substring(i,p.Length))<=long.Parse(p)) answer++;
        }
        return answer;
    }",https://github.com/ychy0006?tab=repositories,2023. 9. 4,33,2
2023. 9. 4 오전 10:45:03,이선재,Unity,51 - 로또의 최고 순위와 최저 순위,"#include <string>
#include <vector>
#include <algorithm>

using namespace std;

int Rank(int n){
    if(n == 6){
        return 1;
    }
    else if(n == 5){
        return 2;
    }
    else if(n == 4){
        return 3;
    }
    else if(n == 3){
        return 4;
    }
    else if(n == 2){
        return 5;
    }
    else
        return 6;
}

vector<int> solution(vector<int> lottos, vector<int> win_nums) {
    vector<int> answer;
    
    int zeroCount = 0;
    int equalCount = 0;
    
    for(int i = 0; i < lottos.size(); i++){
        if(lottos[i] == 0){
            zeroCount += 1;
            
            continue;
        }
        else{
            for(int j = 0; j < win_nums.size(); j++){
                if(lottos[i] == win_nums[j]){
                    equalCount += 1;
                }
            }
        }
    }
    
    answer.push_back(Rank(equalCount + zeroCount));
    answer.push_back(Rank(equalCount));
    
    return answer;
}",https://github.com/Lyrwhitt/Algorithm/blob/main/Programmers/LEVEL1/%EB%A1%9C%EB%98%90%EC%9D%98%20%EC%B5%9C%EA%B3%A0%20%EC%88%9C%EC%9C%84%EC%99%80%20%EC%B5%9C%EC%A0%80%20%EC%88%9C%EC%9C%84,2023. 9. 4,51,2
2023. 9. 4 오전 10:45:30,김하늘,Unity,28 - 직사각형 별찍기,"using System;

public class Example
{
    public static void Main()
    {
        String[] s;

        Console.Clear();
        s = Console.ReadLine().Split(' ');

        int a = Int32.Parse(s[0]);
        int b = Int32.Parse(s[1]);

        for (int i = 0; i < b; i++)
        {
            for (int j = 0; j < a; j++)
                Console.Write('*');
            Console.WriteLine();
        }
    }
}",,2023. 9. 4,28,1
2023. 9. 4 오전 10:45:31,유채연,Unity,34 - 최소직사각형,"    public int solution(int[,] sizes) {
        int[] maxValue = new int[sizes.GetLength(0)];
        int[] minValue = new int[sizes.GetLength(0)];
        
        for(int i=0;i<sizes.GetLength(0);i++){
            maxValue[i] = (sizes[i,0]>=sizes[i,1]) ? sizes[i,0] : sizes[i,1];
            minValue[i] = (sizes[i,0]>=sizes[i,1]) ? sizes[i,1] : sizes[i,0];
        }
        int width=maxValue.Max();
        int height=minValue.Max();
        return width*height;
    }",https://github.com/ychy0006?tab=repositories,2023. 9. 4,34,2
2023. 9. 4 오전 10:45:31,김종훈,Unity,45 - 카드 뭉치,"using System;

public class Solution {
    public string solution(string[] cards1, string[] cards2, string[] goal) {
        string answer = ""Yes"";
        int index1 = 0;
        int index2 = 0;
        
        for(int i = 0; i < goal.Length; i++)
        {
            if(index1 < cards1.Length && goal[i] == cards1[index1])
            {
                index1++;
                continue;
            }
            else if(index2 < cards2.Length && goal[i] == cards2[index2])
            {
                index2++;
                continue;
            }
            else
            {
                return ""No"";
            }         
        }
        
        return answer;
    }
}",,2023. 9. 4,45,2
2023. 9. 4 오전 10:46:01,김종훈,Unity,46 - 과일 장수,"using System;
using System.Linq;

public class Solution {
    public int solution(int k, int m, int[] score) {
        int answer = 0;
        int index = m - 1;
        Array.Sort(score);
        Array.Reverse(score);
        
        for(int i = 0; i < score.Length / m; i++)
        {
            answer += score[index] * m;
            index += m;
        }
        return answer;
    }
}",,2023. 9. 4,46,2
2023. 9. 4 오전 10:46:05,기현빈,Unity,31 - 이상한 문자 만들기,"public class Solution {
    public string solution(string s) {
        string answer = """";
        int cnt = 0;
        
        for(int i = 0; i < s.Length; i++) {
            if(s[i] == ' ') {
                answer += ' ';
                cnt = 0;
            }
            else {
                if(cnt % 2 == 0) {
                    if(s[i] >= 97) {
                        answer += (char)(s[i] - 32);
                    }
                    else answer += s[i];
                }
                else {
                    if(s[i] >= 97) {
                        answer += s[i];
                    }
                    else answer += (char)(s[i] + 32);
                }
                
                cnt++;
            }
        }
        
        return answer;
    }
}",,2023. 9. 4,31,2
2023. 9. 4 오전 10:46:14,김경원,Unity,27 - 행렬의 덧셈,"using System;

public class Solution
    {
        public int[,] solution(int[,] arr1, int[,] arr2)
        {
        // 입력된 2차원 배열의 길이와 동일하게 설정
            int[,] answer = new int[arr1.GetLength(0),arr1.GetLength(1)];
            
            // 각각 더해준다.
            for (int i = 0; i < arr1.GetLength(0); i++)
            {
                for (int j = 0; j < arr1.GetLength(1); j++)
                {
                    answer[i, j] = arr1[i, j] + arr2[i, j];
                }
            }
            return answer;
        }
    }",,2023. 9. 4,27,1
2023. 9. 4 오전 10:46:22,김어진,Unity,15 - 나누어 떨어지는 숫자,"using System;
public class Solution {
    public int[] solution(int[] arr, int divisor) {
        int[] answer = new int[arr.Length];
        int count = 0;
        for(int i=0; i<arr.Length; i++){
            if(arr[i] % divisor == 0){
                answer[count] = arr[i];
                count ++;
            }
        }
        if(count == 0){
            Array.Resize(ref answer, 1);
            answer[0] = -1;
        }
        else{
            Array.Resize(ref answer, count);
            Array.Sort(answer);
        }
        return answer;
    }
}",https://github.com/KimEoJin24/ProgrammersCodingTests/commit/a85dbcfd3611046cd640b03ad24cfcc30847623d,2023. 9. 4,15,1
2023. 9. 4 오전 10:46:38,노재우,Unity,27 - 행렬의 덧셈,"public class Solution
{
    public int[,] solution(int[,] arr1, int[,] arr2)
    {
        int yy = arr1.GetLength(0);
        int xx = arr1.GetLength(1);
        int[,] ints = new int[yy,xx];

        for (int y = 0; y < arr1.GetLength(0); y++)
        {
            for (int x = 0; x < arr1.GetLength(1); x++)
            {
                ints[y,x] = arr1[y, x] + arr2[y, x];
            }

        }
        return ints;
    }
}",,2023. 9. 4,27,1
2023. 9. 4 오전 10:46:48,차요한,Unity,36 - 숫자 문자열과 영단어,"using System;

public class Solution {
    static string temp = """";
    static string str = """";
    public int solution(string s) {
        int answer = 0;
        int k;
        for(int i=0; i<s.Length; i++)
        {
            char t = s[i];			
            bool result = int.TryParse(t.ToString(), out k);	
            if(result)											
            {
                temp += s[i];
            }
            else
            {									
                switch (str+=s[i])										
                {											
                    case ""zero"":
                        temp += ""0"";
                        str="""";
                        break;
                    case ""one"":
                        temp += ""1"";
                        str="""";
                        break;
                    case ""two"":
                        temp += ""2"";
                        str="""";
                        break;
                    case ""three"":
                        temp += ""3"";
                        str="""";
                        break;
                    case ""four"":
                        temp += ""4"";
                        str="""";
                        break;
                    case ""five"":
                        temp += ""5"";
                        str="""";
                        break;
                    case ""six"":
                        temp += ""6"";
                        str="""";
                        break;
                    case ""seven"":
                        temp += ""7"";
                        str="""";
                        break;
                    case ""eight"":
                        temp += ""8"";
                        str="""";
                        break;
                    case ""nine"":
                        temp += ""9"";
                        str="""";
                        break;
                    default:
                        break;
                }
            }
        }

        bool tempB = int.TryParse(temp, out k);   

        if(tempB) answer = k;									
        
        return answer;											
    }
}",https://github.com/HOHOJO/Algorithm_test,2023. 9. 4,36,2
2023. 9. 4 오전 10:46:53,심우진,Unity,13 - 콜라츠 추측,"    //콜라츠 추측
    using System;

public class Solution
    {
        public int solution(int num)
        {
            long number = num;// Convert int to long
            int i; //500번의 반복 동안 숫자가 1에 도달하지 않으면 -1을 반환해야 한다. 현재 로직에서는 1에 도달하면 그때의 횟수를 반환하게 되어 있어서 수정
            for (i = 0; i < 500; i++)
            {
                if (number == 1) break;
                number = (number % 2 == 0) ? number / 2 : number * 3 + 1;
            }
            return (number == 1) ? i : -1;
        }
    }",https://github.com/agasa0624/at,2023. 9. 4,13,1
2023. 9. 4 오전 10:46:58,김종훈,Unity,47 - 모의고사완전탐색,"using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;

public class Solution {
    public int[] solution(int[] answers) {
        List<int> answer = new List<int>();
			
            int[] student_1 = new int[] { 1, 2, 3, 4, 5 };
            int[] student_2 = new int[] { 2, 1, 2, 3, 2, 4, 2, 5 };
            int[] student_3 = new int[] { 3, 3, 1, 1, 2, 2, 4, 4, 5, 5 };
			
            int[] count = new int[3];
			
            IEnumerator student1_enum = student_1.GetEnumerator();
            IEnumerator student2_enum = student_2.GetEnumerator();
            IEnumerator student3_enum = student_3.GetEnumerator();

            for(int i = 0; i < answers.Length; ++i)
            {
                if (student1_enum.MoveNext() == false)
                {
                    student1_enum.Reset();
                    student1_enum.MoveNext();
                }

                if (student2_enum.MoveNext() == false)
                {
                    student2_enum.Reset();
                    student2_enum.MoveNext();
                }

                if (student3_enum.MoveNext() == false)
                {
                    student3_enum.Reset();
                    student3_enum.MoveNext();
                }
				
                if ((int)student1_enum.Current == answers[i]) count[0]++;
                if ((int)student2_enum.Current == answers[i]) count[1]++;
                if ((int)student3_enum.Current == answers[i]) count[2]++;
            }
			
            int max = count.Max();
            for (int i = 0; i < count.Length; ++i)
            {
                if (max == count[i])
                {
                    answer.Add(i+1);
                }
            }
			
            answer.Sort();

            return answer.ToArray();
    }
}",,2023. 9. 4,47,2
2023. 9. 4 오전 10:47:16,심우진,Unity,14 - 서울에서 김서방 찾기,"    //서울에서 김서방 찾기
    using System;

public class Solution
    {
        public string solution(string[] seoul)
        {
            int position = Array.IndexOf(seoul, ""Kim"");
            return $""김서방은 {position}에 있다"";
        }

    }",https://github.com/agasa0624/at,2023. 9. 4,14,1
2023. 9. 4 오전 10:47:23,김경원,Unity,28 - 직사각형 별찍기,"using System;

public class Example
{
    public static void Main()
    {
        String[] s;

            Console.Clear();
            s = Console.ReadLine().Split(' ');

            int a = Int32.Parse(s[0]);
            int b = Int32.Parse(s[1]);

            for (int i = 0; i < b; i++)
            {
                for (int j = 0; j < a; j++)
                {
                    Console.Write(""*"");
                }
                Console.Write(""\n"");
            }
    }
}",,2023. 9. 4,28,1
2023. 9. 4 오전 10:47:45,김민태,Unity,42 - 콜라 문제,"using System;

public class Solution {
    public int solution(int a, int b, int n) {
        int answer = 0;
        int div = 0;
        int nam = 0;
        int free = 0;
        bool count = true;
        while(count)
        {
            div = n/a;
            nam = n%a;
            free = div * b;
            if(n >= a)
            {
                answer += free;
                n = nam + free;
            }
            else
            {
                count = false;
            }
        }
        
        return answer;
    }
}",https://github.com/rlaalsxo/CodingTest,2023. 9. 4,42,2
2023. 9. 4 오전 10:47:47,정재훈,Unity,19 - 제일 작은 수 제거하기,"using System;
using System.Collections.Generic;
public class Solution {
    public int[] solution(int[] arr) {
        
        if(arr.Length==1) {arr[0] = -1; return arr;}
        
        
        int temp = arr[0];
        
        
        for(int i=0; i<arr.Length; i++)
        {
            if(temp>arr[i]) temp=arr[i];
        }
        
        List<int> list = new List<int>();
       
        list.AddRange(arr);
      
        list.Remove(temp);
        
        
        int[] answer = new int[] {};
        answer = list.ToArray();
        return answer;
    }
}
",https://github.com/toadsam/Algorithm,2023. 9. 4,19,1
2023. 9. 4 오전 10:48:05,김종훈,Unity,48 - 소수 만들기,"using System;

class Solution
{
    public int solution(int[] nums)
    {
         int answer = 0;


            for(int i = 0; i < nums.Length - 2; ++i)
            {
                for(int j = i + 1; j < nums.Length - 1; ++j)
                {
                    for(int k = j + 1; k < nums.Length; ++k)
                    {
                        int sum = nums[i] + nums[j] + nums[k];
                        if (IsPrimeNumber(sum))
                        {
                            answer++;
                        }
                    }
                }
            }

            return answer;
        }

        bool IsPrimeNumber(int number)
        {

            int check_number = number / 2;

            for(int i = 2; i < check_number; ++i)
            {
                if (number % i == 0)
                {
                    return false;
                }
            }

            return true;
    }
}",,2023. 9. 4,48,2
2023. 9. 4 오전 10:48:14,신현주,Unity,33 - 크기가 작은 부분,"using System;

public class Solution {
    public int solution(string t, string p) {
        int answer = 0;
        long member = 0;
        long ip = Int64.Parse(p);
        for(int i = 0; i <= t.Length-p.Length; i++){
            member = Int64.Parse(t.Substring(i, p.Length));
            if(member <= ip){
                answer++;
            }
            member = 0;
        }
        return answer;
    }
}",https://github.com/Shyunju/codeKata,2023. 9. 4,33,2
2023. 9. 4 오전 10:48:15,김경원,Unity,29 - 최대공약수와 최소공배수,"using System;
public class Solution {
    public int[] solution(int n, int m) {
        int[] answer = new int[2];
        int min;
        int max;
        
        //최대공약수 -> 유클리드 호제법 gcd(n, m) = gcd(m, n%m)
        min = gcd(n, m);
        //최소공배수 -> 두수의 곱 / 최대 공약수
        max = (n * m) / min;
        
        answer[0] = min;
        answer[1] = max;
        return answer;
    }
    public int gcd(int n, int m)
    {
        //두 수 n, m 이 있을 때 어느 한 수가 0이 될 때 까지
        //gcd(m, n%m) 의 재귀함수 반복
        if(m==0) return n;
        else return gcd(m, n%m);
    }
}",,2023. 9. 4,29,1
2023. 9. 4 오전 10:48:42,김종훈,Unity,49 - 덧칠하기,"using System;

public class Solution {
    public int solution(int n, int m, int[] section) {
       int answer = 0;
        int num = 0;
        
        for(int i = 0; i < section.Length; i++)
        {
            if(section[i] > num)
            {
                num = (section[i] + m) - 1;
                answer++;
            }
        }
        
        return answer;
    }
}",,2023. 9. 4,49,2
2023. 9. 4 오전 10:48:51,이장원,Unity,8 - 문자열을 정수로 바꾸기,"namespace codekata
{
    using System;
    public class Solution
    {
        public int solution(string s)
        {
            int answer = 0;
            answer = Convert.ToInt32(s);
            return answer;
        }
    }
}",,2023. 9. 4,8,1
2023. 9. 4 오전 10:48:59,강희건,Unity,7 - 자연수 뒤집어 배열로 만들기,"namespace natural
{
    public class Solution
    {
        public int[] ReverseDigits(int n)
        {
            List<int> result = new List<int>();

            if (n == 0)
            {
                result.Add(0);
                return result.ToArray();
            }

            while (n > 0)
            {
                int digit = n % 10;
                result.Add(digit);
                n /= 10;
            }

            return result.ToArray();
        }
        
        
        public static void Main(string[] args)
        {
            int n = 12345;
            Solution solution = new Solution();
            int[] reverseDigits = solution.ReverseDigits(n);

            Console.Write(""["");
            foreach (int digit in reverseDigits)
            {
                Console.Write(digit + "","");
            }
            Console.Write(""]"");
        }
    }
}",https://github.com/bo9us/algorithm,2023. 9. 4,7,1
2023. 9. 4 오전 10:49:13,김경원,Unity,30 - 3진법 뒤집기,"using System;
using static System.Math;
using System.Collections.Generic;

public class Solution {
    public int solution(int n) {
        int answer = 0;
        List<int> list = new List<int>();
        
        //자연수 n이 0이 될 때 까지 나눈 나머지를 list에 저장
        while(true)
        {
            if(n==0) break;
            int d = n%3;
            list.Add(d);
            n = n/3;
        }
        //앞뒤 뒤집기 list.Reverse()
        list.Reverse();
        
        //뒤집은 list의 나머지 값 * 3의 거듭 제곱을 곱해 answer에 더하기
        for(int i = 0; i<list.Count; i++)
        {
            answer += (int)(list[i] * Math.Pow(3,i));
        }
        return answer;
    }
   
}",,2023. 9. 4,30,1
2023. 9. 4 오전 10:49:27,김형중,Unity,25 - 부족한 금액 계산하기,"using System;

class Solution
{
    public long solution(int price, int money, int count)
    {
        long answer = 0;
        long sum = 0;
        
        for(long N = 1; N <= count; N++)
        {
            sum += price * N;
        }
        return money > sum ? 0 : sum - money;
    }
}",,2023. 9. 4,25,1
2023. 9. 4 오전 10:49:41,김종훈,Unity,50 - 기사단원의 무기,"using System;

public class Solution {
    public int solution(int number, int limit, int power) {
        int answer = 0;
        int num = 0;
        int[] count = new int[number + 1];
        
        for(int i = 1; i <= number; i++)
        {
            for(int j = i; j <= number; j += i)
            {
                count[j]++;
            }
        }
        for(int i = 1; i <= number; i++)
        {
            if(count[i] > limit)
            {
                answer += power;
            }
            else
            {
                answer += count[i];
            }
        }
        return answer;
    }
}",,2023. 9. 4,50,2
2023. 9. 4 오전 10:49:51,김나운,Unity,24 - 문자열 내림차순으로 배치하기,"using System;

public class Solution {
    public string solution(string s) {
        string answer = """";
        
        char[] chars = s.ToCharArray();
        Array.Sort(chars);
        Array.Reverse(chars);
        answer = new string(chars);
        
        return answer;
    }
}",,2023. 9. 4,24,1
2023. 9. 4 오전 10:50:07,김경원,Unity,31 - 이상한 문자 만들기,"using System;

public class Solution
    {
        public string solution(string s)
        {
            string answer = """";
            // 입력된 문자열을 공백을 기준으로 잘라서 저장
            string[] temp = s.Split();
            // for문을 돌려서 문자열을 하나씩 호출함.
            for (int i = 0; i < temp.Length; i++)
            {
            // 호출된 문자열에서 차례로 문자 하나씩을 꺼냄
                for (int j = 0; j < temp[i].Length; j++)
                {
                // 0번째는 짝수 취급이므로 대문자로함
                    if (j == 0)
                    {
                        answer += Char.ToUpper(temp[i][j]);
                        continue;
                    }
                    // 짝수는 대문자로, 홀수는 소문자로 바꿈
                    if (j % 2 == 0)
                    {
                        answer += Char.ToUpper(temp[i][j]);
                    }
                    else
                    {
                        answer += Char.ToLower(temp[i][j]);
                    }
                }
                // 띄어쓰기가 전부 생략되어있으므로 문자열이 하나 끝날때마다 띄어쓰기를 넣어줌.
                // 단, 마지막에는 띄어쓰기를 추가하면 안되므로 temp.Leght-1로 설정해준다.
                if (i != temp.Length-1)
                {
                    answer += "" "";
                }
            }
            
            return answer;
        }
    }",,2023. 9. 4,31,2
2023. 9. 4 오전 10:50:26,김경환,Unity,52 - 옹알이 (2),"using System;

public class Solution
{
    public int solution(string[] babbling)
    {
        int answer = 0;
        string[] pronunciation = new string[] { ""aya"", ""ye"", ""woo"", ""ma"" };

        for (int i = 0; i < babbling.Length; i++)
        {
            string str = babbling[i];

            int index = -1;
            
            while(!str.Equals(""""))
            {
                bool flag = true;
                
                for(int j = 0; j < 4; j++)
                {
                                      
                    if(index != j && str.IndexOf(pronunciation[j]) == 0)
                    {
                        index = j;
                        flag = false;
                        str = str.Substring(pronunciation[j].Length);
                    }
                }
                
                
                if(flag)
                    break;
            }

            
            if(str.Equals(""""))
                answer++;
        }

        return answer;
    }
}",https://github.com/kkh9700/algorithm,2023. 9. 4,52,2
2023. 9. 4 오전 10:50:38,안소정,Unity,20 - 가운데 글자 가져오기,"public class Solution {
    public string solution(string s) {
        string answer = """";
        if (s.Length % 2 == 0)
        { 
            answer += s[s.Length / 2 -1];
            answer += s[s.Length / 2];
        }
        else
            answer += s[s.Length / 2];
        return answer;

    }
}",,2023. 9. 4,20,1
2023. 9. 4 오전 10:51:18,김민석,Unity,14 - 서울에서 김서방 찾기,"using System;

public class Solution
    {
        public string solution(string[] seoul)
        {
            return new string($""김서방은 {Array.IndexOf(seoul, ""Kim"")}에 있다"");
        }
    }",https://github.com/ms0753/codekata/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12919.%E2%80%85%EC%84%9C%EC%9A%B8%EC%97%90%EC%84%9C%E2%80%85%EA%B9%80%EC%84%9C%EB%B0%A9%E2%80%85%EC%B0%BE%EA%B8%B0/%EC%84%9C%EC%9A%B8%EC%97%90%EC%84%9C%E2%80%85%EA%B9%80%EC%84%9C%EB%B0%A9%E2%80%85%EC%B0%BE%EA%B8%B0.cs,2023. 9. 4,14,1
2023. 9. 4 오전 10:51:33,기현빈,Unity,32 - 삼총사,"using System;

public class Solution {
    public int solution(int[] number) {
        int answer = 0;
        
        for(int i = 0; i < number.Length; i++) {
            for(int j = i+1; j < number.Length; j++) {
                for(int k = j+1; k < number.Length; k++) {
                    if(number[i] + number[j] + number[k] == 0) answer++;
                }
            }
        }
        return answer;
    }
}",,2023. 9. 4,32,2
2023. 9. 4 오전 10:51:39,박지원,Unity,26 - 문자열 다루기 기본,"public class Solution {
    public bool solution(string s) {
        if(s.Length != 4 && s.Length != 6)
            return false;
        foreach(char component in s)
            if('0' > component || '9' < component)
                return false;
        return true;
    }
}",https://github.com/jwonp9127/AlgorithmStudy/tree/83f2d9d370bc04ed3cdeafe3510d0cbd624af172/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12918.%E2%80%85%EB%AC%B8%EC%9E%90%EC%97%B4%E2%80%85%EB%8B%A4%EB%A3%A8%EA%B8%B0%E2%80%85%EA%B8%B0%EB%B3%B8,2023. 9. 4,26,1
2023. 9. 4 오전 10:51:47,노재우,Unity,28 - 직사각형 별찍기,"using System;

public class Example
{
    public static void Main()
    {
        String[] s;

        Console.Clear();
        s = Console.ReadLine().Split(' ');

        int a = Int32.Parse(s[0]);
        int b = Int32.Parse(s[1]);

        for (int y = 0; y < b; y++)
        {
            for (int x = 0; x < a; x++)
            {
                Console.Write(""*"");
            }
            Console.WriteLine();
        }

    }
}",,2023. 9. 4,28,1
2023. 9. 4 오전 10:52:10,김호연,Unity,27 - 행렬의 덧셈,"public class Solution
{
    public int[,] solution(int[,] arr1, int[,] arr2)
    {
        int rows = arr1.GetLength(0); // 배열의 행(세로) 길이
        int cols = arr1.GetLength(1); // 배열의 열(가로) 길이
        int[,] answer = new int[rows, cols]; // 결과 배열을 두 배열의 크기와 동일하게 초기화

        for (int i = 0; i < rows; i++)
        {
            for (int j = 0; j < cols; j++)
            {
                answer[i, j] = arr1[i, j] + arr2[i, j]; // 두 배열의 요소를 더함
            }
        }
        return answer;
    }
}",,2023. 9. 4,27,1
2023. 9. 4 오전 10:52:18,김주형,Unity,23 - 약수의 개수와 덧셈,"public class Solution
{
    public int solution(int left, int right)
    {
        int answer = 0;

        for (int i = left; i<=right; i++)
        {
            int count = 0;
            for (int j = 1; j <= i; j++)
            {
                if (i%j == 0) count +=1;
            }
            if (count % 2 == 0) answer +=i;
            else answer -= i;
        }        

        return answer;
    }
}",https://github.com/kjuhyung/Algorithm.git,2023. 9. 4,23,1
2023. 9. 4 오전 10:52:20,조범준,Unity,37 - 문자열 내 마음대로 정렬하기,"using System.Linq;
public class Solution {
    public string[] solution(string[] strings, int n) {
        string[] answer = strings.OrderBy(num => num).OrderBy(num => num[n]).ToArray();
        
        return answer;
    }
}",https://github.com/KimMaYa1/BaekJoonEx,2023. 9. 4,37,2
2023. 9. 4 오전 10:52:33,이승연,Unity,15 - 나누어 떨어지는 숫자,"using System;
using System.Collections.Generic;


public class Solution {
    public int[] solution(int[] arr, int divisor) {
       
        List<int> answerList=new List<int>();
        
        foreach(int element in arr )
        {
            if(element%divisor==0)
            {
                answerList.Add(element);
            }

        }
        
        if(answerList.Count==0)
        {
            return new int[]{-1};
        }
            
        answerList.Sort();
        
        return answerList.ToArray();
    }
}",,2023. 9. 4,15,1
2023. 9. 4 오전 10:53:07,박준규,Unity,25 - 부족한 금액 계산하기,"using System;

class Solution
{
    public long solution(int price, long money, int count)
    {
        long total = 0;
        long answer = 0;
        for(int i = 1; i<=count; i++){
            total += price*i;
        }
        if(money - total < 0){
            answer = (money - total)*(-1);
        }else if(money - total >= 0){
            answer = 0;
        }
        return answer;
    }
}",,2023. 9. 4,25,1
2023. 9. 4 오전 10:53:43,김어진,Unity,16 - 음양 더하기,"using System;

public class Solution {
    public int solution(int[] absolutes, bool[] signs) {
        int answer = 0;
        for(int i=0; i<absolutes.Length; i++){
            if (signs[i] == true){
                answer += absolutes[i];
            }
            else{
                answer -= absolutes[i];
            }
        }
        return answer;
    }
}",https://github.com/KimEoJin24/ProgrammersCodingTests/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/76501.%E2%80%85%EC%9D%8C%EC%96%91%E2%80%85%EB%8D%94%ED%95%98%EA%B8%B0,2023. 9. 4,16,1
2023. 9. 4 오전 10:53:56,박희원,Unity,31 - 이상한 문자 만들기,"public class Solution {
     public string solution(string s)
            {
                string answer = """";
                string[] strArray = s.Split();

                for(int i = 0; i<strArray.Length; i++)
                {
                    for(int j = 0; j < strArray[i].Length; j++)
                    {
                        if (j % 2 == 0 || j == 0)
                            answer += char.ToUpper(strArray[i][j]);
                        else
                            answer += char.ToLower(strArray[i][j]); 
                    }
                    if (i != strArray.Length - 1)
                        answer += "" ""; 
                }

                return answer; 
            }
}",,2023. 9. 4,31,2
2023. 9. 4 오전 10:54:16,김예준,Unity,44 - 2016년,"public class Solution {
    public string solution(int a, int b) {
        string answer = """";
        
        int day = b - 1;
        
        for (int i = 1 ; i < a; i++)
        {
            if (i == 2)
            {
                day += 29;
            }
            else if (i == 1 || i == 3 || i == 5 || i == 7 || i == 8 || i == 10 || i == 12)
            {
                day += 31;
            }
            else
            {
                day += 30;
            }
        }

        switch (day % 7)
        {
            case 1:
                return ""SAT"";
            case 2:
                return ""SUN"";
            case 3:
                return ""MON"";
            case 4:
                return ""TUE"";
            case 5:
                return ""WED"";
            case 6:
                return ""THU"";
            default:
                return ""FRI"";
        }
        
        return answer;
    }
}",,2023. 9. 4,44,2
2023. 9. 4 오전 10:54:32,이소이,Unity,36 - 숫자 문자열과 영단어,"using System;

public class Solution {
    public int solution(string s) {
        int answer = 0;
        
        for (int index = 0; index < s.Length; index++)
        {
            if (('0' <= s[index]) && (s[index] <= '9'))
                answer = answer * 10 + (int)s[index] - (int)'0';
            else // if s[i] is alphabet
            {
                string alpha = """";
                while ((AlphaToNum(alpha) == -1) && (index < s.Length))
                    alpha += s[index++];
                if (index != s.Length)
                    index--;
                answer = answer * 10 + AlphaToNum(alpha);
            }
        }
        return answer;
    }
    
    int AlphaToNum(string alpha)
{
    switch (alpha)
    {
        case ""zero"":
            return 0;
        case ""one"":
            return 1;
        case ""two"":
            return 2;
        case ""three"":
            return 3;
        case ""four"":
            return 4;
        case ""five"":
            return 5;
        case ""six"":
            return 6;
        case ""seven"":
            return 7;
        case ""eight"":
            return 8;
        case ""nine"":
            return 9;
    }
    return -1;
}
    
}

",https://github.com/leesy015599/AlgorithmCodeKata/blob/master/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/81301.%E2%80%85%EC%88%AB%EC%9E%90%E2%80%85%EB%AC%B8%EC%9E%90%EC%97%B4%EA%B3%BC%E2%80%85%EC%98%81%EB%8B%A8%EC%96%B4/%EC%88%AB%EC%9E%90%E2%80%85%EB%AC%B8%EC%9E%90%EC%97%B4%EA%B3%BC%E2%80%85%EC%98%81%EB%8B%A8%EC%96%B4.cs,2023. 9. 4,36,2
2023. 9. 4 오전 10:54:35,신해준,Unity,16 - 음양 더하기,"using System;

public class Solution 
{
    public int solution(int[] absolutes, bool[] signs)
    {
        int sum = 0;

        for (int i = 0; i < absolutes.Length; i++)
        {
            if (signs[i])
            {
                // 부호가 양수인 경우
                sum += absolutes[i];
            }
            else
            {
                // 부호가 음수인 경우
                sum -= absolutes[i];
            }
        }

        return sum;
    }
}",,2023. 9. 4,16,1
2023. 9. 4 오전 10:55:50,김민태,Unity,43 - 명예의 전당 (1),"using System;
using System.Collections.Generic;
using System.Linq;

public class Solution {
    public int[] solution(int k, int[] score) {
        int[] answer = new int[score.Length];
        List<int> board = new List<int>();
        
        for(int i = 0; i < score.Length; i++)
        {
            if(board.Count == k)
            {
                if(board[0] > score[i])
                {
                    answer[i] = board[0];
                    continue;
                }
                board.RemoveAt(0);
            }
            board.Add(score[i]);
            board.Sort();
            answer[i] = board[0];
        }
        return answer;
    }
}",https://github.com/rlaalsxo/CodingTest,2023. 9. 4,43,2
2023. 9. 4 오전 10:56:16,김명식,Unity,19 - 제일 작은 수 제거하기,"using System;
using System.Linq;
using System.Collections.Generic;

public class Solution {
    public int[] solution(int[] arr) {
        if(arr.Length==1)return new int[] {-1};
        int[] answer = new int[] {};
        int min = arr.Min();
        List<int> list = new List<int>();
        list.AddRange(arr);
        list.Remove(min);
        
        answer = list.ToArray();
        
        
        
        return answer;
    }
}",https://github.com/D0ryeon/Algorithm-Code-Kata,2023. 9. 4,19,1
2023. 9. 4 오전 10:56:52,김진규,Unity,42 - 콜라 문제,"using System;

public class Solution {
   private static int answer = 0;

    public int solution(int a, int b, int n) {
        answer = 0;
        return cola(a, b, n);
    }

    private int cola(int a, int b, int n) {
        if (n >= a) {
            int addCola = (n / a) * b;
            answer += addCola;
            n = (n % a) + addCola;
            return cola(a, b, n);
        } else {
            return answer;
        }
    }
}",,2023. 9. 4,42,2
2023. 9. 4 오전 10:57:03,박지원,Unity,27 - 행렬의 덧셈,"public class Solution {
    public int[,] solution(int[,] arr1, int[,] arr2) {
        for(int i = 0; i < arr1.GetLength(0); i++){
            for(int j = 0; j < arr1.GetLength(1); j++)
                arr1[i, j] += arr2[i, j];
        }
        return arr1;
    }
}",https://github.com/jwonp9127/AlgorithmStudy/tree/aa2a19f8be0471a97c9b163c6164450074cdfeae/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12950.%E2%80%85%ED%96%89%EB%A0%AC%EC%9D%98%E2%80%85%EB%8D%A7%EC%85%88,2023. 9. 4,27,1
2023. 9. 4 오전 10:57:19,김진,Unity,16 - 음양 더하기,"using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Algorithm_006
{
    public class Solution
    {
        public int solution(int[] absolutes, bool[] signs)
        {
            int answer = 0;

            for (int i = 0; i < signs.Length; i++)
            {
                if (signs[i])
                {
                    answer += absolutes[i];
                }
                else
                {
                    answer -= absolutes[i];
                }
            }
            return answer;
        }
    }
}
",https://github.com/GYALLERHORN/ALGORITHM,2023. 9. 4,16,1
2023. 9. 4 오전 10:57:54,김진성,Unity,17 - 핸드폰 번호 가리기,"using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Algorithm_006
{
    public class Solution3
    {
        
        public string solution(string phone_number)
        {
            string answer = """";

            answer = phone_number.Substring(phone_number.Length - 4); // 일단 answer에 전화번호의 뒷 4자리만 할당한다.
            answer = answer.PadLeft(phone_number.Length, '*'); // answer의 문자열 길이를 전화번호 길이만큼 자리를 두고 빈 인덱스에는 *를 넣는다.

            return answer;
        }
    }
}
",https://github.com/GYALLERHORN/ALGORITHM,2023. 9. 4,17,1
2023. 9. 4 오전 10:58:40,김호연,Unity,28 - 직사각형 별찍기,"using System;

public class Example
{
    public static void Main()
    {
        String[] s;

        Console.Clear();
        s = Console.ReadLine().Split(' ');

        int a = Int32.Parse(s[0]);
        int b = Int32.Parse(s[1]);

        for(int i = 0; i < b; i++)
        {
            for(int j = 0; j < a; j++)
            {
                Console.Write(""*"");
            }
            Console.WriteLine();
        }
    }
}",,2023. 9. 4,28,1
2023. 9. 4 오전 10:58:55,김형수,Unity,8 - 문자열을 정수로 바꾸기,"using System;

public class Solution {
    public int solution(string s) {
        
        int number = Int32.Parse(s);

        return number;
        
        //int answer = 0;
        //return answer;
    }
}",https://github.com/Kim-H-S/Programmers/blob/main/%EB%AC%B8%EC%9E%90%EC%97%B4%EC%9D%84%20%EC%A0%95%EC%88%98%EB%A1%9C%20%EB%B0%94%EA%BE%B8%EA%B8%B0.cs,2023. 9. 4,8,1
2023. 9. 4 오전 10:59:27,박민호,Unity,35 - 시저 암호,"public class Solution {
    public string solution(string s, int n) {
        string answer = """";
        char[] arr = s.ToCharArray();
        for(int i=0;i<arr.Length;i++){
            if((int)arr[i]>=65&&(int)arr[i]<=90){
                if((int)arr[i]+n>90){
                    arr[i] = (char)((int)arr[i]+n-26);
                }
                else{
                    arr[i] = (char)((int)arr[i]+n);
                }
            }
            if((int)arr[i]>=97&&(int)arr[i]<=122){
                if((int)arr[i]+n>122){
                    arr[i] = (char)((int)arr[i]+n-26);
                }
                else{
                    arr[i] = (char)((int)arr[i]+n);
                }
            }
        }
        answer = new string(arr);
                            
        return answer;
    }
}",,2023. 9. 4,35,2
2023. 9. 4 오전 10:59:55,최장범,Unity,29 - 최대공약수와 최소공배수,"using System;
public class Solution {
    public int[] solution(int n, int m) {
        int[] answer = new int[2];
        int min;
        int max;
        
        //유클리드 호제법 
        min = gcd(n, m);
        //최소공배수 
        max = (n * m) / min;
        
        answer[0] = min;
        answer[1] = max;
        return answer;
    }
    public int gcd(int n, int m)
    {    
        if(m==0) return n;
        else return gcd(m, n%m);
    }
}",,2023. 9. 4,29,1
2023. 9. 4 오전 11:00:05,진우성,Unity,7 - 자연수 뒤집어 배열로 만들기," public class Solution
    {
        public long[] solution(long n)
        {
            int size = n.ToString().Length;
            long[] answer = new long[size];

            for(int i = 0; i < size; i++)
            {
                answer[i] = n % 10;
                n /= 10;
            }
            return answer;
        }
    }",,2023. 9. 4,7,1
2023. 9. 4 오전 11:00:29,진우성,Unity,8 - 문자열을 정수로 바꾸기,"public class Solution
{
    public int solution(string s)
    {
        int answer = int.Parse(s);
        return answer;
    }
}",,2023. 9. 4,8,1
2023. 9. 4 오전 11:00:44,우성훈,Unity,6 - x만큼 간격이 있는 n개의 숫자,"using System.Linq;
public class Solution {
    public long[] solution(int x, int n) {
        long[] answer = new long[n];
        long a = (long)x;
        long sum = a;
        answer[0] = a;
        for( int i = 1; i < n ; i++){
            sum += a;
            answer[i] = sum;
        }
        return answer;
    }
}",,2023. 9. 4,6,1
2023. 9. 4 오전 11:01:22,김준범,Unity,10 - 정수 내림차순으로 배치하기,"using System;

public class Solution {

    public long solution(long n) 
    {
        long answer = 0;
        char[] temp = n.ToString().ToCharArray();
        
        Array.Sort(temp);
        Array.Reverse(temp);
        
        answer = Convert.ToInt64(new string(temp));

        return answer;
    }
}
 ",,2023. 9. 4,10,1
2023. 9. 4 오전 11:01:59,조용준,Unity,20 - 가운데 글자 가져오기,"public class Solution
{
    public string solution(string s)
    {
        string answer = """";
        char[] texts = s.ToCharArray();
        
        if (texts.Length % 2 == 0)
        {
            answer = $""{texts[(texts.Length/2) - 1]}""+$""{texts[(texts.Length/2)]}"";
        }
        else
        {
            answer = $""{texts[(texts.Length/2)]}"";
        }
        
        return answer;
    }
}",,2023. 9. 4,20,1
2023. 9. 4 오전 11:02:06,박지원,Unity,28 - 직사각형 별찍기,"using System;

public class Example
{
    public static void Main()
    {
        String[] s;

        Console.Clear();
        s = Console.ReadLine().Split(' ');

        int a = Int32.Parse(s[0]);
        int b = Int32.Parse(s[1]);

        for(int i = 0; i < b; i++){
           for(int j = 0; j < a; j++)
               Console.Write(""*"");
            Console.WriteLine();
        }
    }
}",https://github.com/jwonp9127/AlgorithmStudy/tree/5e44229612c54d20b90dcef6faca27c8e6656449/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12969.%E2%80%85%EC%A7%81%EC%82%AC%EA%B0%81%ED%98%95%E2%80%85%EB%B3%84%EC%B0%8D%EA%B8%B0,2023. 9. 4,28,1
2023. 9. 4 오전 11:02:08,우민규,Unity,21 - 수박수박수박수박수박수?,"public class Solution {
    public string solution(int n) {
        
        int Length = n / 2;

        string answer = """";

        //받아온 n의 절반만큼 반복 (0or1인 경우 동작 x)
        for (int i = 0; i < Length; i++)
        {
            answer += ""수박""; //문자열 끝에 '수박' 을 추가한다.
        }

        if (n%2 ==1) // 나머지 1이 존재하는 경우(홀)
        {
            answer += ""수""; // 문자열 끝에 '수' 를 추가한다.
        }
        
        return answer;
    }
}",https://github.com/Woomingyu/Programmers,2023. 9. 4,21,1
2023. 9. 4 오전 11:02:16,윤지연,Unity,19 - 제일 작은 수 제거하기,"using System.Linq;
public class Solution {
    public int[] solution(int[] arr) {
        int[] none = {-1};
        if(arr.Length == 1)
        {
            return none;
        }
        
        int min = arr[0];    
        foreach(int num in arr)
        {
            if(num < min)
            {
                min = num;
            }
        }
        int[] answer = arr.Where(num => num != min).ToArray();
        return answer;
    }
}",https://github.com/jungbosong/Codekata/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12935.%E2%80%85%EC%A0%9C%EC%9D%BC%E2%80%85%EC%9E%91%EC%9D%80%E2%80%85%EC%88%98%E2%80%85%EC%A0%9C%EA%B1%B0%ED%95%98%EA%B8%B0,2023. 9. 4,19,1
2023. 9. 4 오전 11:02:21,조용준,Unity,21 - 수박수박수박수박수박수?,"public class Solution {
    public string solution(int n)
    {
        string answer = """";
        
        for (int i = 1; i <= n; i++)
        {
            if (i % 2 == 1)
            {
                answer += '수';
            }
            else
            {
                answer += '박';
            }
        }
        
        return answer;
    }
}",,2023. 9. 4,21,1
2023. 9. 4 오전 11:02:29,김주형,Unity,24 - 문자열 내림차순으로 배치하기,"using System;

public class Solution 
{
    public string solution(string s) 
    {
        string answer;
        char[] sArray = s.ToCharArray();
        Array.Sort(sArray);
        Array.Reverse(sArray);
        answer = new string(sArray);

        return answer;
    }
}",https://github.com/kjuhyung/Algorithm.git,2023. 9. 4,24,1
2023. 9. 4 오전 11:02:40,조용준,Unity,22 - 내적,"using System;

public class Solution {
    public int solution(int[] a, int[] b) {
        int answer = 0;
        for (int i = 0; i < a.Length; i++)
        {
            answer += a[i]*b[i];
        }
        return answer;
    }
}",,2023. 9. 4,22,1
2023. 9. 4 오전 11:03:02,조용준,Unity,23 - 약수의 개수와 덧셈,"using System;

public class Solution
{
    public int solution(int left, int right)
    {
        int answer = 0;
        
        for (int i = left; i <= right; i++)
        {
            int sqrt = (int)Math.Sqrt(i);
            if (sqrt * sqrt == i)
            {
                answer -= i;
            }
            else
            {
                answer += i;
            }
        }
        return answer;
    }
}",,2023. 9. 4,23,1
2023. 9. 4 오전 11:03:07,조성훈,Unity,17 - 핸드폰 번호 가리기,"public class Solution {
    public string solution(string phone_number) 
    {
        string answer = """";
        char[] phone_number_char = phone_number.ToCharArray();
        for(int i = 0; i < phone_number_char.Length - 4; i ++)
        {
            phone_number_char[i] = '*' ;
        }
                for(int i = 0; i < phone_number_char.Length; i ++)
        {
            answer += phone_number_char[i];
        }
        return answer;
    }
}",,2023. 9. 4,17,1
2023. 9. 4 오전 11:03:12,윤지연,Unity,18 - 없는 숫자 더하기,"using System;

public class Solution {
    public int solution(int[] numbers) {
        int answer = 0;
        bool[] exist = {false, false, false, false, false, false, false, false, false, false};
        
        foreach(int num in numbers)
        {
            exist[num] = true;
        }
        
        for(int i = 1; i <= 9; i++)
        {
            if(!exist[i])
            {
                answer += i;
            }
        }
        return answer;
    }
}",https://github.com/jungbosong/Codekata/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/86051.%E2%80%85%EC%97%86%EB%8A%94%E2%80%85%EC%88%AB%EC%9E%90%E2%80%85%EB%8D%94%ED%95%98%EA%B8%B0,2023. 9. 4,18,1
2023. 9. 4 오전 11:03:16,지민규,Unity,31 - 이상한 문자 만들기,"public class Solution {
    public string solution(string s) {
        string answer = """";
        string[] inputArray = s.Split("" "");
        for (int i = 0; i < inputArray.Length; i++)
        {
            if (s.IndexOf(inputArray[i]) != answer.Length)
            {
                answer += "" "";
            }
            for (int j = 0; j < inputArray[i].Length; j++)
            {
                string temp = (j % 2 == 0)? inputArray[i][j].ToString().ToUpper():inputArray[i][j].ToString().ToLower();
                answer += temp;
            }
        }
        return answer;
    }
}",,2023. 9. 4,31,2
2023. 9. 4 오전 11:03:22,조용준,Unity,24 - 문자열 내림차순으로 배치하기,"using System;

public class Solution {
    public string solution(string s) {
        string answer = """";
        char[] chars = s.ToCharArray();
        Array.Sort(chars);
        Array.Reverse(chars);
        answer = new string(chars);
        return answer;
    }
}",,2023. 9. 4,24,1
2023. 9. 4 오전 11:03:32,조성훈,Unity,18 - 없는 숫자 더하기,"using System;

public class Solution 
{
    public int solution(int[] numbers) 
    {
        int answer = 45;
        for(int i = 0; i < numbers.Length; i++)
        {
            answer -= numbers[i];
        }
        return answer;
    }
}",,2023. 9. 4,18,1
2023. 9. 4 오전 11:03:43,조용준,Unity,25 - 부족한 금액 계산하기,"using System;

class Solution
{
    public long solution(int price, int money, int count)
    {
        long amount = money;
        for (int i = count; i > 0; i--)
        {
            amount -= price*(count - i + 1);
        }
        
        if (amount >= 0)
        {
            return 0;
        }
        return amount*(-1);
    }
}",,2023. 9. 4,25,1
2023. 9. 4 오전 11:04:04,조용준,Unity,26 - 문자열 다루기 기본,"public class Solution {
    public bool solution(string s) {
        char[] chars = s.ToCharArray();
        foreach(char element in chars)
        {
            if (element > '9' || element < '0')
            {
                return false;
            }
        }
        if (chars.Length == 4 || chars.Length == 6)
            return true;
        else
            return false;
    }
}",,2023. 9. 4,26,1
2023. 9. 4 오전 11:05:39,정주찬,Unity,48 - 소수 만들기,"using System;

class Solution
{
    public int solution(int[] nums)
    {
        int answer = 0;

        for (int i = 0; i < nums.Length - 2; i++)
        {
            for(int j = i + 1; j < nums.Length - 1; j++)
            {
                for (int k = j + 1; k < nums.Length; k++)
                {
                    int num = nums[i] + nums[j] + nums[k];
                    bool isPrime = true;
                    for (int l = 2; l < num; l++)
                    {
                        if (num % l == 0)
                        {
                            isPrime = false;
                        }
                    }

                    if (isPrime)
                    {
                        answer++;
                    }
                }
            }
        }
        return answer;
    }
}",https://github.com/JeongJuChan/Algorithm/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12977.%E2%80%85%EC%86%8C%EC%88%98%E2%80%85%EB%A7%8C%EB%93%A4%EA%B8%B0/%EC%86%8C%EC%88%98%E2%80%85%EB%A7%8C%EB%93%A4%EA%B8%B0.cs,2023. 9. 4,48,2
2023. 9. 4 오전 11:05:45,김정민,Unity,49 - 덧칠하기,"public class Solution
        {
            public static int solution(int n, int m, int[] section)
            {
                int answer = 0;

                int start = section[0];
                answer++;
                for (int i = 1; i < section.Length; i++)
                {
                    if (section[i] >= start + m)
                    {
                        start = section[i];
                        answer++;
                    }
                }

                return answer;
            }
        }",https://github.com/j-miiin/Algorithm_Study/blob/main/SPARTA_ALGORITHM_2023/Level2/49_PaintOver.cs,2023. 9. 4,49,2
2023. 9. 4 오전 11:06:08,정주찬,Unity,49 - 덧칠하기,"using System;

public class Solution {
    public int solution(int n, int m, int[] section) {
        int answer = 1;
        int index = 0;
        int preWidth = 0;
        preWidth = section[index] + m - 1;
        while (index < section.Length)
        {

            if (preWidth >= section[index]) 
            {
                index++;
            }
            else
            {
                preWidth = section[index] + m - 1;
                answer++;
            }
        }
        return answer;
    }
}",https://github.com/JeongJuChan/Algorithm/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/unrated/161989.%E2%80%85%EB%8D%A7%EC%B9%A0%ED%95%98%EA%B8%B0/%EB%8D%A7%EC%B9%A0%ED%95%98%EA%B8%B0.cs,2023. 9. 4,49,2
2023. 9. 4 오전 11:06:13,김정민,Unity,51 - 로또의 최고 순위와 최저 순위," public class Solution
        {
            public int[] solution(int[] lottos, int[] win_nums)
            {
                int[] answer = new int[2];

                int maxCount = 0;
                int zeroCount = 0;
                foreach(int i in lottos)
                {
                    if (i == 0) zeroCount++;
                    else if (win_nums.Contains(i)) maxCount++;
                }

                int minScore = maxCount;
                int maxScore = maxCount + zeroCount;

                answer[0] = (maxScore < 2) ? 6 : 6 - maxScore + 1;
                answer[1] = (minScore < 2) ? 6 : 6 - minScore + 1;

                return answer;
            }
        }",https://github.com/j-miiin/Algorithm_Study/blob/main/SPARTA_ALGORITHM_2023/Level2/51_LottoRank.cs,2023. 9. 4,51,2
2023. 9. 4 오전 11:06:44,김정민,Unity,52 - 옹알이 (2),"public class Solution
        {
            public int solution(string[] babbling)
            {
                int answer = 0;
                string[] possibleStr = { ""aya"", ""ye"", ""woo"", ""ma"" };

                foreach (string str in babbling)
                {
                    bool isPossible = true;
                    string curStr = """";
                    string prevStr = """";
                    for (int i = 0; i < str.Length; i++)
                    {
                        curStr += str[i];
                        if (curStr.Length > 3)
                        {
                            isPossible = false;
                            break;
                        }

                        if (possibleStr.Contains(curStr))
                        {
                            if (curStr != prevStr)
                            {
                                prevStr = curStr;
                                curStr = """";
                            }
                            else
                            {
                                isPossible = false;
                                break;
                            }
                        }
                        else if (!possibleStr.Contains(curStr) && i == str.Length - 1) isPossible = false;
                    }
                    if (isPossible) answer++;
                }
                return answer;
            }
        }",https://github.com/j-miiin/Algorithm_Study/blob/main/SPARTA_ALGORITHM_2023/Level2/52_Babbling.cs,2023. 9. 4,52,2
2023. 9. 4 오전 11:07:17,김정민,Unity,53 - 숫자 짝꿍,"public class Solution
        {
            public string solution(string X, string Y)
            {
                string answer = """";

                int[] numCountX = new int[10];
                int[] numCountY = new int[10];

                for (int i = 0; i < X.Length; i++)
                {
                    int curStrNum = int.Parse(X[i] + """");
                    numCountX[curStrNum]++;
                }

                for (int i = 0; i < Y.Length; i++)
                {
                    int curStrNum = int.Parse(Y[i] + """");
                    numCountY[curStrNum]++;
                }

                List<int> resultNumList = new List<int>();
                for (int i = 0; i < 10; i++)
                {
                    int curCnt = (numCountX[i] < numCountY[i]) ? numCountX[i] : numCountY[i];
                    for (int j = 0; j < curCnt; j++) resultNumList.Add(i);
                }
                resultNumList.Sort();
                resultNumList.Reverse();

                StringBuilder sb = new StringBuilder();
                if (resultNumList.Count == 0) sb.Append(""-1"");
                else foreach (int i in resultNumList) sb.Append(i);

                answer = sb.ToString();
                if (answer[0] == '0') answer = ""0"";

                return answer;
            }
        }",https://github.com/j-miiin/Algorithm_Study/blob/main/SPARTA_ALGORITHM_2023/Level2/53_NumPair.cs,2023. 9. 4,53,2
2023. 9. 4 오전 11:07:24,신우석,Unity,54 - 체육복,"using System;

public class Solution {
    public int solution(int n, int[] lost, int[] reserve) {
        int[] status = new int[n+2];
        foreach (int i in reserve)
            status[i] = 1;
        foreach (int i in lost)
            if (status[i] == 1) status[i] = -1;
        
        Array.Sort(lost);
        
        int answer = n;
        foreach (int i in lost)
            if (status[i - 1] == 1) status[i - 1] = 0;
            else if (status[i + 1] == 1) status[i + 1] = 0;
            else if (status[i] != -1) --answer;

        return answer;
    }
}",https://github.com/seoksii/AlgorithmCodeKata/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/42862.%E2%80%85%EC%B2%B4%EC%9C%A1%EB%B3%B5,2023. 9. 4,54,2
2023. 9. 4 오전 11:07:29,김경환,Unity,53 - 숫자 짝꿍,"using System.Text;
using System.Linq;

public class Solution
{
    public string solution(string X, string Y)
    {
        StringBuilder sb = new StringBuilder();
        int[] cnt = new int[10];
        int zero = 0;

        foreach (char ch in X)
        {
            cnt[ch - '0']++;
        }

        foreach (char ch in Y)
        {
            if (cnt[ch - '0'] != 0)
            {
                cnt[ch - '0']--;
                sb.Append((char)ch - '0');

                if (ch == '0')
                {
                    zero++;
                }
            }
        }

        if (sb.Length == 0)
            return ""-1"";

        if (sb.Length == zero)
            return ""0"";

        return string.Concat(sb.ToString().OrderByDescending(ch => ch));
    }
}",https://github.com/kkh9700/algorithm,2023. 9. 4,53,2
2023. 9. 4 오전 11:07:37,정주찬,Unity,50 - 기사단원의 무기,"using System;

public class Solution {
    public int solution(int number, int limit, int power) {
        int answer = 0;
        for (int i = 1; i <= number; i++)
        {
            int temp = 1;
            for (int j = 1; j <= i / 2; j++)
            {
                if (i % j == 0)
                {
                    temp++;
                }
            }


            answer += temp > limit? power : temp;

        }
        return answer;
    }
}",https://github.com/JeongJuChan/Algorithm/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/unrated/136798.%E2%80%85%EA%B8%B0%EC%82%AC%EB%8B%A8%EC%9B%90%EC%9D%98%E2%80%85%EB%AC%B4%EA%B8%B0/%EA%B8%B0%EC%82%AC%EB%8B%A8%EC%9B%90%EC%9D%98%E2%80%85%EB%AC%B4%EA%B8%B0.cs,2023. 9. 4,50,2
2023. 9. 4 오전 11:08:07,김정민,Unity,54 - 체육복,"public class Solution
        {
            public int solution(int n, int[] lost, int[] reserve)
            {
                int answer = 0;
                int[] suitNum = new int[n + 1];
                Array.Fill(suitNum, 1);

                for (int i = 0; i < reserve.Length; i++) suitNum[reserve[i]]++;

                for (int i = 0; i < lost.Length; i++) suitNum[lost[i]]--;

                for (int i = 1; i < suitNum.Length; i++)
                {
                    Console.WriteLine(suitNum[i]);
                    if (suitNum[i] == 1) continue;
                    else if (suitNum[i] > 1)
                    {
                        if (i > 1 && suitNum[i - 1] == 0)
                        {
                            suitNum[i]--;
                            suitNum[i - 1]++;
                        } else if (i < suitNum.Length - 1 && suitNum[i + 1] == 0)
                        {
                            suitNum[i]--;
                            suitNum[i + 1]++;
                        }
                    }
                }

                foreach (int i in suitNum)
                {
                    if (i > 0) answer++;
                }

                return answer - 1;
            }
        }",https://github.com/j-miiin/Algorithm_Study/blob/main/SPARTA_ALGORITHM_2023/Level2/54_GymSuit.cs,2023. 9. 4,54,2
2023. 9. 4 오전 11:11:52,김민태,Unity,44 - 2016년,"public class Solution {
    public string solution(int a, int b) {
        string answer = """";
        string[] day = new string[] { ""FRI"", ""SAT"", ""SUN"", ""MON"", ""TUE"", ""WED"", ""THU""};
        int[] days = new int[] {31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31};
        
        int totalDays = 0;
        for(int i=0; i<a-1; i++)
        {
            totalDays += days[i];
        }
        totalDays += b -1;
        
        answer = day[totalDays % 7];
        return answer;
    }
}",https://github.com/rlaalsxo/CodingTest,2023. 9. 4,44,2
2023. 9. 4 오전 11:11:53,이경현,Unity,33 - 크기가 작은 부분,"public int solution(string t, string p)
{
    int count = 0;
    char[] tchar = t.ToCharArray();
    char[] pchar = p.ToCharArray();

    for (long i = 0; i < tchar.Length - pchar.Length + 1; i++)
    {
        for (long j = 0; j < pchar.Length; j++) {
            if (tchar[i + j] < pchar[j])
            {
                count++;
                break;
            }
            else if (tchar[i + j] > pchar[j])
            {
                break;
            }
            else if (j == pchar.Length - 1) count++;
        }
    }

    return count;
}",https://github.com/516lkh/Algorithm,2023. 9. 4,33,2
2023. 9. 4 오전 11:13:01,신해준,Unity,17 - 핸드폰 번호 가리기,"public class Solution 
{
    public string solution(string phone_number) 
    {
        int length = phone_number.Length;
        
        // 뒷 4자리를 제외한 나머지 숫자를 '*'로 가립니다.
        string hiddenPart = new string('*', length - 4);
        
        // 가려진 부분과 뒷 4자리를 연결하여 결과 문자열을 생성합니다.
        string result = hiddenPart + phone_number.Substring(length - 4, 4);
        
        return result;
    }
}
",,2023. 9. 4,17,1
2023. 9. 4 오전 11:13:30,조범준,Unity,38 - K번째수정렬,"using System;

public class Solution {
    public int[] solution(int[] array, int[,] commands) {
        int[] answer = new int[commands.GetLength(0)];
        for(int i = 0; i < commands.GetLength(0); i++){
            int length = commands[i,1] -  commands[i,0] + 1;
            int[] temp = new int[length];
            Array.Copy(array,commands[i,0]-1,temp,0,length);
            Array.Sort(temp);
            answer[i] = temp[commands[i,2]-1];
        }
        return answer;
    }
}",https://github.com/KimMaYa1/BaekJoonEx,2023. 9. 4,38,2
2023. 9. 4 오전 11:25:03,김경환,Unity,54 - 체육복,"public class Solution
{
    public int solution(int n, int[] lost, int[] reserve)
    {
        int answer = 0;
        int[] students = new int[n + 1];

        foreach (int i in lost)
            students[i]--;

        foreach (int i in reserve)
            students[i]++;

        for(int i = 1; i <= n; i++)
        {
            bool flag = true;

            if (i != 1 && students[i] == -1 && students[i - 1] == 1)
            {
                students[i]++;
                students[i - 1]--;
            }

            if(i != n && students[i] == -1 && students[i + 1] == 1)
            {
                students[i]++;
                students[i + 1]--;
            }

            if (students[i] >= 0)
                answer++;
        }

        return answer;
    }
}",https://github.com/kkh9700/algorithm,2023. 9. 4,54,2
2023. 9. 4 오전 11:25:46,이경민,Unity,21 - 수박수박수박수박수박수?,"public class Solution {
    public string solution(int n) {
        string answer = """";
        for (int i = 1; i <= n; i++)
        {
            if (i%2 != 0)
            {
                answer += ""수"";
            }
            else
            {
                answer += ""박"";
            }
        }
        return answer;
    }
}",https://github.com/kminsmin/Algorithm_Test_Practice/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12922.%E2%80%85%EC%88%98%EB%B0%95%EC%88%98%EB%B0%95%EC%88%98%EB%B0%95%EC%88%98%EB%B0%95%EC%88%98%EB%B0%95%EC%88%98%EF%BC%9F,2023. 9. 4,21,1
2023. 9. 4 오전 11:26:10,남의서,AI,51 - 로또의 최고 순위와 최저 순위,"def solution(lottos, win_nums):
    answer = []
    while 0 in lottos:
        lottos.remove(0)
    count = 7 - sum(1 for i in lottos if i in win_nums)
    if count == 7 and len(lottos) > 4:
        return (6, 6)
    else:
        return (max(1, count - 6 + len(lottos)), min(6, count))",,2023. 9. 4,51,2
2023. 9. 4 오전 11:26:25,이경민,Unity,22 - 내적,"using System;

public class Solution {
    public int solution(int[] a, int[] b) {
        int answer = 0;
        int i = 0;
        foreach (int num in a)
        {
            answer += num * b[i];
            i++;
        }
        return answer;
    }
}",https://github.com/kminsmin/Algorithm_Test_Practice/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/70128.%E2%80%85%EB%82%B4%EC%A0%81,2023. 9. 4,22,1
2023. 9. 4 오전 11:26:35,송명근,Unity,16 - 음양 더하기,"using System;

public class Solution {
    public int solution(int[] absolutes, bool[] signs) {
        int answer = 0;
        for (int i = 0; i < signs.Length; i++)
        {
            if (signs[i] == true)
            {
                answer += absolutes[i];
            }
            else
            {
                answer -= absolutes[i];
            }
        }
        return answer;
    }
}",https://github.com/audrms6494/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/76501.%E2%80%85%EC%9D%8C%EC%96%91%E2%80%85%EB%8D%94%ED%95%98%EA%B8%B0,2023. 9. 4,16,1
2023. 9. 4 오전 11:26:45,김광수,Unity,66 - JadenCase 문자열 만들기,"public class Solution 
{
    public string solution(string s) 
    { 
        
        // 공백문자가 연속으로 나왔다면?
        // splitStr안에 공백문자가 들어가게된다. 그래서 길이가 0인경우를 스킵
        
        // => 공백 연속인 경우 공백연속도 출력해줘야됨
        // 길이가 0인경우 그냥 스킵이 아니라 공백문자를 입력해줘야된다.
        
        string[] splitStr = s.Split("" "");
        string answer = """";
        
        foreach(string str in splitStr)
        {
            if (str.Length ==0)
            {
                answer += "" "";
                continue;
            }
            string temp = str.Substring(0,1);
            
            answer += temp.ToUpper();
            
            answer += str.Substring(1,str.Length-1).ToLower();

            answer += "" "";
        }
        
        return answer.Substring(0, answer.Length-1);
    }
}",https://github.com/kksoo0131/Study/commit/5b378dee049dad70e9c4ee695381806606d02919,2023. 9. 4,66,3
2023. 9. 4 오전 11:27:13,이경민,Unity,23 - 약수의 개수와 덧셈,"using System;

public class Solution {
    public int solution(int left, int right) {
        int answer = 0;
        int fact = 0;
        for (int i = left; i <= right; i++)
        {
            for (int j = 1; j <= i; j++)
            {
                if (i % j == 0)
                {
                    fact++;
                }
            }
            if (fact % 2 == 0)
            {
                answer += i;
            }
            else
            {
                answer -= i;
            }
            fact = 0;
        }
        return answer;
    }
}",https://github.com/kminsmin/Algorithm_Test_Practice/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/77884.%E2%80%85%EC%95%BD%EC%88%98%EC%9D%98%E2%80%85%EA%B0%9C%EC%88%98%EC%99%80%E2%80%85%EB%8D%A7%EC%85%88,2023. 9. 4,23,1
2023. 9. 4 오전 11:27:38,송명근,Unity,17 - 핸드폰 번호 가리기,"public class Solution {
    public string solution(string phone_number) {
        string answer = """";
        for (int i = 0; i < phone_number.Length - 4; i++)
        {
            answer += ""*"";
        }
        answer += phone_number.Substring(phone_number.Length - 4);
        return answer;
    }
}",https://github.com/audrms6494/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12948.%E2%80%85%ED%95%B8%EB%93%9C%ED%8F%B0%E2%80%85%EB%B2%88%ED%98%B8%E2%80%85%EA%B0%80%EB%A6%AC%EA%B8%B0,2023. 9. 4,17,1
2023. 9. 4 오전 11:27:53,이경민,Unity,24 - 문자열 내림차순으로 배치하기,"using System.Linq;

public class Solution {
    public string solution(string s) {
        string answer = """";
        char[] arr = s.ToCharArray();
        arr = arr.OrderByDescending(x => x).ToArray();
        foreach (char letter in arr)
        {
            answer += letter.ToString();
        }
        return answer;
    }
}",https://github.com/kminsmin/Algorithm_Test_Practice/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12917.%E2%80%85%EB%AC%B8%EC%9E%90%EC%97%B4%E2%80%85%EB%82%B4%EB%A6%BC%EC%B0%A8%EC%88%9C%EC%9C%BC%EB%A1%9C%E2%80%85%EB%B0%B0%EC%B9%98%ED%95%98%EA%B8%B0,2023. 9. 4,24,1
2023. 9. 4 오전 11:28:14,송명근,Unity,19 - 제일 작은 수 제거하기,"using System.Linq;
public class Solution {
    public int[] solution(int[] arr) {
        if (arr.Length == 1)
        {
            arr[0] = -1;
            return arr;
        }
        int minimum = arr.Min();
        int[] answer = arr.Where(num => num != minimum).ToArray();
        return answer;
    }
}",https://github.com/audrms6494/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12935.%E2%80%85%EC%A0%9C%EC%9D%BC%E2%80%85%EC%9E%91%EC%9D%80%E2%80%85%EC%88%98%E2%80%85%EC%A0%9C%EA%B1%B0%ED%95%98%EA%B8%B0,2023. 9. 4,19,1
2023. 9. 4 오전 11:28:34,이경민,Unity,25 - 부족한 금액 계산하기,"using System;

class Solution
{
    public long solution(int price, long money, int count)
    {
        long newPrice = 0;
        for (int i = 1; i <= count; i ++)
        {
            newPrice += price * i;
        }
        if(money - newPrice >= 0)
            return 0;
        return newPrice - money;
    }
}",https://github.com/kminsmin/Algorithm_Test_Practice/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/82612.%E2%80%85%EB%B6%80%EC%A1%B1%ED%95%9C%E2%80%85%EA%B8%88%EC%95%A1%E2%80%85%EA%B3%84%EC%82%B0%ED%95%98%EA%B8%B0,2023. 9. 4,25,1
2023. 9. 4 오전 11:29:03,송명근,Unity,18 - 없는 숫자 더하기,"using System;
using System.Linq;

public class Solution {
    public int solution(int[] numbers) {
        return 45 - numbers.Sum();
    }
}",https://github.com/audrms6494/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/86051.%E2%80%85%EC%97%86%EB%8A%94%E2%80%85%EC%88%AB%EC%9E%90%E2%80%85%EB%8D%94%ED%95%98%EA%B8%B0,2023. 9. 4,18,1
2023. 9. 4 오전 11:33:55,송승훈,Unity,26 - 문자열 다루기 기본,"public class Solution {
    public bool solution(string s)
    {
          int result;
          
        
         
          if (int.TryParse(s, out result))
          {
              if(s.Length==4||s.Length==6)
              {                                  
                 return true;                
              }
              else
              {
                 return false;
              }
             
          }
         else
              {
                 return false;
              }
    
    }
}",https://github.com/DoDokang318,2023. 9. 4,26,1
2023. 9. 4 오전 11:34:24,송승훈,Unity,27 - 행렬의 덧셈,"public class Solution {
    public int[,] solution(int[,] arr1, int[,] arr2) {
        int num1 = arr1.GetLength(0);   
        int num2 = arr1.GetLength(1);

        int[,] answer = new int[num1,num2]; // 결과를 저장할 배열 생성
        
        for (int i = 0; i < num1; i++) {
            for (int j = 0; j < num2; j++) {
                answer[i, j] = arr1[i, j] + arr2[i, j]; 
            }
        }

        return answer;
    }
}",https://github.com/DoDokang318,2023. 9. 4,27,1
2023. 9. 4 오전 11:34:55,송승훈,Unity,28 - 직사각형 별찍기,"using System;

public class Example
{
    public static void Main()
    {
        String[] s;

        Console.Clear();
        s = Console.ReadLine().Split(' ');

        int a = Int32.Parse(s[0]);//세로
        int b = Int32.Parse(s[1]);//가로
        
        for(int i = 0;  i < b ; i++)
        {
            for(int j = 1; j <a; j++ )
            {
                 Console.Write('*');
            }
        Console.WriteLine('*');
        }
      
    }
}",https://github.com/DoDokang318,2023. 9. 4,28,1
2023. 9. 4 오전 11:45:14,박지원,Unity,29 - 최대공약수와 최소공배수,"
public class Solution {
    private static int GCD(int a, int b){
        if(a % b == 0)  return b;
        return GCD(b, a % b);
    }

    private static int LCM(int a, int b){
        return a * b / GCD(a, b);
    }
    
    public int[] solution(int n, int m) {
        return new int[2]{GCD(n, m), LCM(n, m)};
    }
}",https://github.com/jwonp9127/AlgorithmStudy/tree/3976b659d34b4b1f663e679d827c1489314e7f4a/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12940.%E2%80%85%EC%B5%9C%EB%8C%80%EA%B3%B5%EC%95%BD%EC%88%98%EC%99%80%E2%80%85%EC%B5%9C%EC%86%8C%EA%B3%B5%EB%B0%B0%EC%88%98,2023. 9. 4,29,1
2023. 9. 4 오전 11:47:05,김민상,Unity,53 - 숫자 짝꿍,"using System;

public class Solution
{
    public string solution(string X, string Y)
    {
        int[] xx = new int[10];
        int[] yy = new int[10];

        foreach (char s in X)
            xx[int.Parse(s.ToString())] += 1;

        foreach (char s in Y)
            yy[int.Parse(s.ToString())] += 1;

        string answer = """";

        for (int i = 9; i >= 0; i--)
            answer += new string((char)(i + '0'), Math.Min(xx[i], yy[i]));
        
        if (answer == """")
            return ""-1"";
        else if (answer[0] == '0')
            return ""0"";
        else
            return answer;
    }
}",,2023. 9. 4,53,2
2023. 9. 4 오전 11:47:23,신해준,Unity,18 - 없는 숫자 더하기,"using System;
using System.Linq;

public class Solution 
{
    public int solution(int[] numbers) 
    {
        int[] allNumbers = Enumerable.Range(0, 10).ToArray();
        int[] missingNumbers = allNumbers.Except(numbers).ToArray();
        
        int sum = missingNumbers.Sum();
        
        return sum;
    }
}
",,2023. 9. 4,18,1
2023. 9. 4 오전 11:51:59,남의서,AI,52 - 옹알이 (2),"def solution(babbling):
    answer = 0
    able = ['aya', 'ye', 'woo', 'ma'] 
    for i in babbling:
        for ab in able:
            if ab * 2 not in i:
                i = i.replace(ab, ' ')

        if i.isspace():
            answer += 1

    return (answer)",,2023. 9. 4,52,2
2023. 9. 4 오전 11:53:31,임현진,Unity,7 - 자연수 뒤집어 배열로 만들기,"public class Solution {
    public int[] solution(long n) {
        string sn = n.ToString();
        int[] answer = new int[sn.Length];

        for(int i=0; i < sn.Length; i++)
        {
            answer[i] = Convert.ToInt32(sn[i].ToString());
        }
        Array.Reverse(answer);
        
        return answer;
    }
}",https://github.com/pporrorro/CodeKata_programmers,2023. 8. 29,7,1
2023. 9. 4 오전 11:56:47,김윤경,Unity,9 - 정수 제곱근 판별,"public class Solution 
{
   public long solution(long n) 
   {
        long x = (long)Math.Sqrt(n);
            return (x*x == n) ? (x+1)*(x+1) : -1;
    }
}",,2023. 9. 4,9,1
2023. 9. 4 오후 12:01:17,김대민,Unity,78 - 행렬의 곱셈,"#include <string>
#include <vector>

using namespace std;

vector<vector<int>> solution(vector<vector<int>> arr1, vector<vector<int>> arr2) {
    vector<vector<int>> answer;
    //arr1의 행과 arr2의 열이 같아야함
    //arr1의 행과 arr2의 열의 크기만큼 answer의 크기가 나올거임
    //열은 세로고 행은 가로임
    
    for(int i = 0; i < arr1.size(); ++i)//열
    {
        answer.push_back(vector<int>());
        
        for(int j = 0; j < arr2[0].size(); ++j)
        {
            //j행 i열 = 
            int sum = 0;
            for(int k = 0; k < arr2.size(); ++k)
            {
                sum += arr1[i][k] * arr2[k][j];
            }
            answer[i].push_back(sum);
        }
    }
    return answer;
}",https://github.com/KimDaeMins/CodingTest/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv2/12949.%E2%80%85%ED%96%89%EB%A0%AC%EC%9D%98%E2%80%85%EA%B3%B1%EC%85%88/%ED%96%89%EB%A0%AC%EC%9D%98%E2%80%85%EA%B3%B1%EC%85%88.cpp,2023. 9. 4,78,3
2023. 9. 4 오후 12:01:40,김대민,Unity,79 - 할인 행사,"#include <string>
#include <vector>
#include <unordered_map>
using namespace std;

int solution(vector<string> want, vector<int> number, vector<string> discount) {
    int answer = 0;
    int allNum = 0;
    unordered_map<string, int> m;
     unordered_map<string, int> temp;
    for(int i = 0; i < want.size(); ++i)
    {
        m[want[i]] = number[i];
        allNum += number[i];
    }
    
    for(int i = 0; i <= discount.size() - allNum; ++i)
    {
        temp = m;
        for(int j = i; j < i + allNum; ++j)
        {
            --temp[discount[j]];
        }
        
        bool check = true;
        for(auto p : temp)
        {
            if(p.second != 0)
            {
                check = false;
                break;
            }
        }
        if(check)
            answer++;
    }
    return answer;
}",https://github.com/KimDaeMins/CodingTest/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv2/131127.%E2%80%85%ED%95%A0%EC%9D%B8%E2%80%85%ED%96%89%EC%82%AC/%ED%95%A0%EC%9D%B8%E2%80%85%ED%96%89%EC%82%AC.cpp,2023. 9. 4,79,3
2023. 9. 4 오후 12:02:01,김대민,Unity,75 - 연속 부분 수열 합의 개수,"#include <string>
#include <vector>
#include <map>
#include <set>
using namespace std;

int solution(vector<int> elements) {
    int answer = 0;
    //elements 의 i + 1을 더한수를 push_back
    int index = 0;
    int count = 1;
    int lock = elements.size();
    set<int> s;
    while(count < lock)
    {
        vector<int> temp;
        for(int i = 0; i < lock; ++i, ++index)
        {
            if(i + count >= lock)
                temp.push_back(elements[index] + elements[i + count - lock]);
            else
                temp.push_back(elements[index] + elements[i + count]);
        }
        
        for(int a : temp)
        {
            elements.push_back(a);
        }
        
        ++count;
    }
    for(int a : elements)
    {
        s.insert(a);
    }
    answer = s.size();
    return answer;
}",https://github.com/KimDaeMins/CodingTest/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv2/131701.%E2%80%85%EC%97%B0%EC%86%8D%E2%80%85%EB%B6%80%EB%B6%84%E2%80%85%EC%88%98%EC%97%B4%E2%80%85%ED%95%A9%EC%9D%98%E2%80%85%EA%B0%9C%EC%88%98/%EC%97%B0%EC%86%8D%E2%80%85%EB%B6%80%EB%B6%84%E2%80%85%EC%88%98%EC%97%B4%E2%80%85%ED%95%A9%EC%9D%98%E2%80%85%EA%B0%9C%EC%88%98.cpp,2023. 9. 4,75,3
2023. 9. 4 오후 12:02:39,김대민,Unity,80 - 의상,"#include <string>
#include <vector>
#include <unordered_map>
#include <cmath>
#include <iostream>
using namespace std;

int solution(vector<vector<string>> clothes) {
    
    unordered_map<string, int> Wears;
    for(auto& VEC : clothes)
    {
        Wears[VEC[1]] += 1;
    }
    int Kinds = Wears.size();
    int answer = 1;
    for(auto& Pair : Wears)
    {
        answer *= (Pair.second + 1);
    }
    return answer - 1;
}",https://github.com/KimDaeMins/CodingTest/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv2/42578.%E2%80%85%EC%9D%98%EC%83%81/%EC%9D%98%EC%83%81.cpp,2023. 9. 4,80,3
2023. 9. 4 오후 12:03:09,김대민,Unity,81 - 기능개발,"#include <string>
#include <vector>
#include <queue>
#include <deque>
using namespace std;

vector<int> solution(vector<int> progresses, vector<int> speeds) {
    vector<int> answer;
    deque<pair<int, int>> DQ;
    
    for(int i = 0; i < progresses.size(); ++i)
        DQ.push_back(pair(progresses[i], speeds[i]));
    
    
    while(!DQ.empty()) {
        for(int i = 0; i < DQ.size(); ++i) {
        DQ[i].first += DQ[i].second;
        }
       
        int Count = 0;
        while(!DQ.empty() && DQ.front().first >= 100) {
            ++Count;
            DQ.pop_front();
        }
        
        if(Count)
            answer.push_back(Count);
    }
    
    return answer;
}",https://github.com/KimDaeMins/CodingTest/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv2/42586.%E2%80%85%EA%B8%B0%EB%8A%A5%EA%B0%9C%EB%B0%9C/%EA%B8%B0%EB%8A%A5%EA%B0%9C%EB%B0%9C.cpp,2023. 9. 4,81,3
2023. 9. 4 오후 12:03:32,김대민,Unity,82 - 프로세스,"#include <string>
#include <vector>
#include <deque>
using namespace std;

int solution(vector<int> priorities, int location) {
    int answer = 1;
    int LocationIndex = location;
    int DQSize = priorities.size();
    deque<int> DQ;
    for(auto& INT : priorities)
        DQ.push_back(INT);
    //1.회전시킨다. 근데 중요한 문서가 빠졌는지 확인하려면 전체순회를 해야하는거 아닌가?
    
    while(true) {
        int Front = DQ.front();
        try {
            for(auto& INT : DQ) {
                if(INT > Front) throw 0;
            }
            
            if(LocationIndex == 0) throw 1;
            else throw 2;
        }
        catch (int a) {
            switch(a) {
                case 0:
                    DQ.pop_front();
                    DQ.push_back(Front);
                    --LocationIndex;
                    if(LocationIndex < 0) LocationIndex = DQSize - 1;
                    break;
                case 1:
                    return answer;
                    break;
                case 2:
                    DQ.pop_front();
                    --LocationIndex;
                    --DQSize;
                    ++answer;
                    break;
            }
        }
    }
    return answer;
}",https://github.com/KimDaeMins/CodingTest/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv2/42587.%E2%80%85%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4/%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4.cpp,2023. 9. 4,82,3
2023. 9. 4 오후 12:04:03,김대민,Unity,76 - H-Index,"#include <string>
#include <vector>
#include <algorithm>
using namespace std;

int solution(vector<int> citations) {
    int answer = 0;
    
    sort(citations.begin(), citations.end());
    
    int citSize = citations.size();
    for(int i = 0; i < citSize; ++i)
    {
        int H_Index = citSize - i;
        if(citations[i] >= H_Index) return H_Index;
        //나머지 논문이 h번 이하 인용되었다는건 특정인덱스의 크기만 대충 판단해도 알 수 있는 부분이구나
    }
    
    return answer;
}",https://github.com/KimDaeMins/CodingTest/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv2/42747.%E2%80%85H%EF%BC%8DIndex/H%EF%BC%8DIndex.cpp,2023. 9. 4,76,3
2023. 9. 4 오후 12:04:40,김대민,Unity,74 - 괄호 회전하기,"#include <string>
#include <vector>
#include <stack>
#include <algorithm>
using namespace std;

//1칸회전 왼쪽부터 탐색 -> 반복..?
int solution(string s) {
    int answer = 0;

    for (int i = 0; i < s.size(); ++i)
    {
        stack<char> st;
        for (int j = s.size() - 1; j >= 0; --j)
        {
            st.push(s[j]);
        }
        stack<char> temp;
        while (!st.empty())
        {
            temp.push(st.top());
            st.pop();

            while (!st.empty() && !temp.empty())
            {
                if ((st.top() == ']' && temp.top() == '[')
                    || (st.top() == '}' && temp.top() == '{')
                    || (st.top() == ')' && temp.top() == '('))
                {
                    st.pop();
                    temp.pop();
                }
                else
                    break;
            }
        }
        if (temp.empty())
            ++answer;
        //문자열 회전..
        string stemp = s.substr(1);
        char stemp2 = s[0];
        s = stemp + stemp2;
    }
    return answer;
}",https://github.com/KimDaeMins/CodingTest/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv2/76502.%E2%80%85%EA%B4%84%ED%98%B8%E2%80%85%ED%9A%8C%EC%A0%84%ED%95%98%EA%B8%B0/%EA%B4%84%ED%98%B8%E2%80%85%ED%9A%8C%EC%A0%84%ED%95%98%EA%B8%B0.cpp,2023. 9. 4,74,3
2023. 9. 4 오후 12:05:05,김대민,Unity,77 - n^2 배열 자르기,"#include <string>
#include <vector>
#include <cmath>
using namespace std;

vector<int> solution(int n, long long left, long long right) {
    vector<int> answer;
    
    //123223333   1234 2234 3334 4444  n = 4  7번째를 나타낸다면 
    int mincount = left / n + 1;
    int added = left % n;
    
    for(long long i = left; i < right + 1; ++i)
    {
        int mincount = i / n + 1;
        answer.push_back(max(int(i % n + 1), mincount));
    }
    return answer;
}",https://github.com/KimDaeMins/CodingTest/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv2/87390.%E2%80%85n%EF%BC%BE2%E2%80%85%EB%B0%B0%EC%97%B4%E2%80%85%EC%9E%90%EB%A5%B4%EA%B8%B0/n%EF%BC%BE2%E2%80%85%EB%B0%B0%EC%97%B4%E2%80%85%EC%9E%90%EB%A5%B4%EA%B8%B0.cpp,2023. 9. 4,77,3
2023. 9. 4 오후 12:05:19,김도현B,Unity,38 - K번째수정렬,"using System;

public class Solution {
    public int[] solution(int[] array, int[,] commands) {
        int commandsLength = commands.GetLength(0);
        int[] num;
        int[] answer = new int[commandsLength];
        for(int i = 0; i < commands.GetLength(0); i++)
        {
            num = new ArraySegment<int>(array, commands[i, 0] - 1, commands[i, 1] - commands[i, 0] +1).ToArray();
            Array.Sort(num);
            answer[i] = num[commands[i, 2]-1];
        }
        return answer;
    }
}",https://github.com/subscriptioncat/Algorithm,2023. 9. 4,38,2
2023. 9. 4 오후 12:05:27,김대민,Unity,83 - 피로도,"#include <string>
#include <vector>
#include <algorithm>
#include <iostream>
using namespace std;

int solution(int k, vector<vector<int>> dungeons) {
    int answer = 0;
    
    sort(dungeons.begin(), dungeons.end());
    
    do{
        int check = 0;
        int temp = k;
        for(int i = 0; i < dungeons.size() && temp - dungeons[i][0] >= 0 ; ++ i)
        {
            temp -= dungeons[i][1];
            ++check;
        }
        
        if(answer < check)
        {
            answer = check;
        }
        
    }while(next_permutation(dungeons.begin(), dungeons.end()));
           
    return answer;
}",https://github.com/KimDaeMins/CodingTest/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv2/87946.%E2%80%85%ED%94%BC%EB%A1%9C%EB%8F%84/%ED%94%BC%EB%A1%9C%EB%8F%84.cpp,2023. 9. 4,83,4
2023. 9. 4 오후 12:05:58,김대민,Unity,73 - 귤 고르기,"#include <string>
#include <vector>
#include <map>
#include <algorithm>
using namespace std;
bool cmp(const pair<int,int>& a, const pair<int,int>& b) 
{
    //비교함수는 true일때 그대로 false일때 돌린다
	return a.second > b.second;
}

int solution(int k, vector<int> tangerine) {
    int answer = 0;
    
    //처음엔 dp ㄴㄴ 그뭐냐그게 괜찮지않을까 싶었지.
    //왜냐? 만다린의 종류가 제일 많은 녀석을 찾았어야하니까.
    //근데 원소가 천만개네? 버틸수있을까? 그건 모르는거지
    //그래서 맵을 쓰기로 했다.
    map<int, int> a;
    
    for(int i = 0; i < tangerine.size(); ++i)
    {
        a[tangerine[i]]++; 
    }
    
    //밸류값으로 맵을 정렬하는건 말이안되나? 어렵나?
    vector<pair<int,int>> v(a.begin(), a.end());
    
    sort(v.begin(), v.end(), cmp);
    
    int index = 0;
    while(k > 0)
    {
        k -= v[index].second;
        ++index;
    }
    answer = index;
    
    return answer;
}",https://github.com/KimDaeMins/CodingTest/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/unrated/138476.%E2%80%85%EA%B7%A4%E2%80%85%EA%B3%A0%EB%A5%B4%EA%B8%B0/%EA%B7%A4%E2%80%85%EA%B3%A0%EB%A5%B4%EA%B8%B0.cpp,2023. 9. 4,73,3
2023. 9. 4 오후 12:19:25,채이환,Unity,41 - 푸드 파이트 대회,"using System;
using System.Text;
using System.Collections.Generic;
public class Solution {
    public string solution(int[] food) {
        StringBuilder answer = new StringBuilder();
        Stack<int> sFood = new Stack<int>();
        int i = 1;
        while (i < food.Length)
        {
            for (int j = food[i] / 2; j > 0; --j)
            {
                answer.Append(i);
                sFood.Push(i);
            }
            ++i;
        }
        answer.Append(0);
        while(sFood.Count > 0)
        {
            answer.Append(sFood.Pop());
        }
        return answer.ToString();
    }
}",,2023. 9. 4,41,2
2023. 9. 4 오후 12:19:45,채이환,Unity,40 - 가장 가까운 같은 글자,"using System;

public class Solution {
    public int[] solution(string s) {
        int[] answer = new int[s.Length];
        int[] flag = new int[(int)('z'-'a'+1)];
        
        for (int i = 0; i<flag.Length; ++i)
        {
            flag[i] = -1;
        }

        for (int i = 0; i < s.Length; ++i)
        {
            if (flag[(int)s[i]-'a'] == -1)
            {
                flag[(int)s[i]-'a'] = i;
                answer[i] = -1;
            }
            else
            {
                answer[i] = i - flag[(int)s[i]-'a'];
                flag[(int)s[i]-'a'] = i;
            }
        }
        return answer;
    }
}",,2023. 9. 4,40,2
2023. 9. 4 오후 12:20:05,채이환,Unity,39 - 두 개 뽑아서 더하기,"using System;
using System.Collections.Generic;

public class Solution {
    public int[] solution(int[] numbers) {
        List<int> answer = new List<int>();
        for (int i = 0; i < numbers.Length; ++i)
        {
            for (int j = i + 1; j < numbers.Length; ++j)
            {
                if (answer.Contains(numbers[i] + numbers[j]) == false)
                    answer.Add(numbers[i] + numbers[j]);
            }
        }
        answer.Sort();
        return answer.ToArray();
    }
}",,2023. 9. 4,39,2
2023. 9. 4 오후 12:30:47,박지원,Unity,30 - 3진법 뒤집기,"using System;

public class Solution {
    public int solution(int n) {
        string n_3 = """";
        while(n > 0){
            n_3 = (n % 3).ToString() + n_3;
            n = (n - n % 3) / 3;
        }
        int i = 1, answer = 0;
        foreach(char num in n_3){
            answer += int.Parse(num.ToString()) * i;
            i *= 3;
        }
        return answer;
    }
}",https://github.com/jwonp9127/AlgorithmStudy/tree/de17df4890c1b33582ec9769badb849f592f49fc/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/68935.%E2%80%853%EC%A7%84%EB%B2%95%E2%80%85%EB%92%A4%EC%A7%91%EA%B8%B0,2023. 9. 4,30,1
2023. 9. 4 오후 12:54:24,노동균,Unity,40 - 가장 가까운 같은 글자,"using System;
using System.Collections.Generic;
public class Solution {
    public int[] solution(string s) {
        int[] answer = new int[s.Length];
        Dictionary<char,int> charPos = new Dictionary<char,int>();
        
        for(int i=0;i<s.Length;++i)
        {
            char currentChar = s[i];
            int val;
            if(charPos.TryGetValue(currentChar,out val))
            {
                int pos = val;
                answer[i] = i-pos;
                charPos[currentChar] = i;
            }
            else
            {
                answer[i] = -1;
                charPos.Add(currentChar,i);
            }
        }
        
        
        return answer;
    }
    
    public int[] solve1(string s)
    {
        int[] answer = new int[s.Length];
        Dictionary<char,int> charCheckDic = new Dictionary<char,int>();
        
        for(int i=0;i<s.Length;i++)
        {
            char one = s[i];
            int pos = -1;
            if(charCheckDic.TryGetValue(one,out pos))
            {
                answer[i] = i - pos;
                charCheckDic[one] = i;   
            }
            else
            {
                answer[i] = -1;
                charCheckDic.Add(one,i);
            }
        }
        
        return answer;
    }
}",https://github.com/shehdrbs123/Sparta/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/unrated/142086.%E2%80%85%EA%B0%80%EC%9E%A5%E2%80%85%EA%B0%80%EA%B9%8C%EC%9A%B4%E2%80%85%EA%B0%99%EC%9D%80%E2%80%85%EA%B8%80%EC%9E%90,2023. 9. 4,40,2
2023. 9. 4 오후 12:55:02,노동균,Unity,41 - 푸드 파이트 대회,"using System;
using System.Text;
using System.Linq;
public class Solution {
    public string solution(int[] food) {
        string answer = """";
        StringBuilder sb = new StringBuilder(100);
        for(int i=1;i<food.Length;++i)
        {
            int foodCount = (int)food[i]/2;
            for(int j=0;j<foodCount;++j)
            {
                sb.Append(i);
            }
        }
        string tmp = new string(sb.ToString().Reverse().ToArray());
        sb.Append(0).Append(tmp);
        answer = sb.ToString();
        return answer;
    }
}",https://github.com/shehdrbs123/Sparta/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/unrated/134240.%E2%80%85%ED%91%B8%EB%93%9C%E2%80%85%ED%8C%8C%EC%9D%B4%ED%8A%B8%E2%80%85%EB%8C%80%ED%9A%8C,2023. 9. 4,41,2
2023. 9. 4 오후 12:55:33,노동균,Unity,42 - 콜라 문제,"using System;

public class Solution {
    public int solution(int a, int b, int n) {
        int answer = 0;
        
        int rest=0;
        int currentCount=n;
        int divide;
        int i=0;
        while(a <= currentCount)
        {
            divide = currentCount/a;
            currentCount = currentCount%a;
            int GetBottle = divide*b;
            currentCount += GetBottle;
            answer+=GetBottle;
        }
        
        return answer;
    }
}",https://github.com/shehdrbs123/Sparta/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/unrated/132267.%E2%80%85%EC%BD%9C%EB%9D%BC%E2%80%85%EB%AC%B8%EC%A0%9C,2023. 9. 4,42,2
2023. 9. 4 오후 12:56:06,노동균,Unity,43 - 명예의 전당 (1),"using System;
using System.Collections.Generic;
public class Solution {
    public int[] solution(int k, int[] score) 
    {
        int[] answer = new int[score.Length];
        int i=0;
        List<int> reward = new List<int>(k);
        
        
        for(;i<k&&i<score.Length;++i)
        {
            reward.Add(score[i]);
            reward.Sort( (x,y) => y-x );
            answer[i] = reward[reward.Count-1];
        }
        
        for(;i<score.Length;++i)
        {
            if(score[i] > reward[reward.Count-1])
            {
                reward.RemoveAt(reward.Count-1);
                reward.Add(score[i]);
            }
            reward.Sort((x,y) => y-x);
            answer[i] = reward[reward.Count-1];
        }
        
        
                
        return answer;
    }
}",https://github.com/shehdrbs123/Sparta/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/unrated/138477.%E2%80%85%EB%AA%85%EC%98%88%EC%9D%98%E2%80%85%EC%A0%84%EB%8B%B9%E2%80%85%EF%BC%881%EF%BC%89,2023. 9. 4,43,2
2023. 9. 4 오후 12:56:41,노동균,Unity,44 - 2016년,"using System;
public class Solution {
    public string solution(int a, int b) {
        string answer = """";
        DateTime date = new DateTime(2016,a,b);
        
        string DayOfWeek = date.DayOfWeek.ToString();
        DayOfWeek = DayOfWeek.ToUpper().Substring(0,3);
        
        return DayOfWeek;
    }
}",https://github.com/shehdrbs123/Sparta/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12901.%E2%80%852016%EB%85%84,2023. 9. 4,44,2
2023. 9. 4 오후 1:02:25,강성호,Unity,47 - 모의고사완전탐색,"using System;
using System.Collections.Generic;
using System.Linq;


	public class Solution
	{
		public int[] solution(int[] answers)
		{
			
			int[] arr1 = new int[] { 1, 2, 3, 4, 5 };
			int[] arr2 = new int[] { 2, 1, 2, 3, 2, 4, 2, 5 };
			int[] arr3 = new int[] { 3, 3, 1, 1, 2, 2, 4, 4, 5, 5 };
			List<int> list = new List<int>();

			int cnt1 = 0;
			int cnt2 = 0;
			int cnt3 = 0;
			int ans1 = 0;
			int ans2 = 0;
			int ans3 = 0;
			int max = 0;
			for (int i = 0; i < answers.Length; i++)
			{
				
				if (cnt1 > arr1.Length - 1)
				{
					cnt1 = 0;
				}
				if (cnt2 > arr2.Length - 1)
				{
					cnt2 = 0;
				}
				if (cnt3 > arr3.Length - 1)
				{
					cnt3 = 0;
				}
				if (answers[i] == arr1[cnt1])
				{
					ans1++;
				}

				if (answers[i] == arr2[cnt2])
				{
					ans2++;
				}

				if (answers[i] == arr3[cnt3])
				{
					ans3++;
				}
				cnt1++;
				cnt2++;
				cnt3++;
			}

			max = Math.Max(max, Math.Max(ans2, Math.Max(ans1, ans3)));

			if (ans1 == max && max != 0) list.Add(1);
			if (ans2 == max && max != 0) list.Add(2);
			if (ans3 == max && max != 0) list.Add(3);
			list.Sort();
			
            return list.ToArray();
		}
	}

",,2023. 9. 4,47,2
2023. 9. 4 오후 1:03:50,노동균,Unity,45 - 카드 뭉치,"using System;

public class Solution {
    public string solution(string[] cards1, string[] cards2, string[] goal) {
        int j=0,k=0;
        string Result = ""Yes"";
        for(int i=0;i<goal.Length;++i)
        {
            if(j< cards1.Length && goal[i] == cards1[j])
            {
                j++;
            }else if(k < cards2.Length && goal[i] == cards2[k])
            {
                k++;
            }else
            {
                Result = ""No"";
                break;
            }
                
        }
        return Result;
    }
}",https://github.com/shehdrbs123/Sparta/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/unrated/159994.%E2%80%85%EC%B9%B4%EB%93%9C%E2%80%85%EB%AD%89%EC%B9%98,2023. 9. 4,45,2
2023. 9. 4 오후 1:04:18,노동균,Unity,46 - 과일 장수,"using System;

public class Solution {
    public int solution(int k, int m, int[] score) {
        int answer = 0;
        
        Array.Sort(score,(x,y)=> x-y);
        
        for(int i=score.Length-1;i>=m-1;i-=m)
        {
            answer += score[i-m+1] * m;
        }
        return answer;
    }
}",https://github.com/shehdrbs123/Sparta/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/unrated/135808.%E2%80%85%EA%B3%BC%EC%9D%BC%E2%80%85%EC%9E%A5%EC%88%98,2023. 9. 4,46,2
2023. 9. 4 오후 1:04:58,노동균,Unity,47 - 모의고사완전탐색,"using System;
using System.Collections.Generic;
public class Solution {
    public int[] solution(int[] answers) {
        
        int[][] idiot = new int[3][] {
            new int[]{1,2,3,4,5},
            new int[]{2,1,2,3,2,4,2,5},
            new int[]{3,3,1,1,2,2,4,4,5,5}
        };
        int[] result = new int[]{0,0,0};
        List<int> answer = new List<int>(3);
        
        for(int i=0;i<idiot.GetLength(0);++i)
        {
            for(int j=0;j<answers.Length;++j)
            {
                int idiotIdx = j%idiot[i].Length;
                if(answers[j]==idiot[i][idiotIdx])
                    result[i]+=1;
            }
        }
        int max = result[0];
        for(int i=1;i<3;++i)
        {
            max = Math.Max(max,result[i]);
        }
        
        for(int i=0;i<3;++i)
        {
            if(max == result[i])
                answer.Add(i+1);
        }
        
        return answer.ToArray();
    }
}",https://github.com/shehdrbs123/Sparta/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/42840.%E2%80%85%EB%AA%A8%EC%9D%98%EA%B3%A0%EC%82%AC,2023. 9. 4,47,2
2023. 9. 4 오후 1:14:29,조성훈,Unity,19 - 제일 작은 수 제거하기,"public class Solution 
{
    public int[] solution(int[] arr) 
    {
    List<int> b = new List<int>(arr);
    List<int> c = new List<int>(arr);
    b.Sort();
    c.Remove(b[0]);
    if (c.Count == 0)
    {
        c.Add(-1);
    }
    return c.ToArray();
    }
}",,2023. 9. 4,19,1
2023. 9. 4 오후 1:30:01,김민상,Unity,54 - 체육복,"using System.Collections.Generic;
using System;
using System.Linq;
public class Solution
{
    public int solution(int n, int[] lost, int[] reserve)
    {
        Array.Sort(lost);
        List<int> l = lost.ToList();
        Array.Sort(reserve);
        List<int> r = reserve.ToList();

        List<int> g = new List<int>();

        foreach (int num in l)
        {
            if (r.Contains(num))
            {
                g.Add(num);
            }
        }

        foreach (int num in g)
        {
            l.Remove(num);
            r.Remove(num);
        }

        int answer = n;

        foreach (int num in l)
        {
            if (r.Contains(num - 1))
                r.Remove(num - 1);
            else if (r.Contains(num + 1))
                r.Remove(num + 1);
            else
                answer -= 1;
        }

        return answer;
    }
}",,2023. 9. 4,54,2
2023. 9. 4 오후 2:18:52,조영오,Unity,48 - 소수 만들기,"using System;
using System.Collections.Generic;

class Solution
{
    public int solution(int[] nums)
    {
        
        int answer = 0;
        //nums 의 원소 3개를 골라 더했을 때 소수가 되는 경우의 수 구하기.
        
        //지금까지 시도한 조합인지 체크해가며 해야 함 - string 리스트 사용, 문자열 변환 전에 오름차순 정렬하기
        //=> 실행시간 초과. 에라토스테네스의 체 알고리즘 쪽에서는 런타임 에러를 일으킬 정도로 실행시간을 잡아먹지 않음. 
        //시도한 조합 여부를 체크하는 부분에서 실행시간 이슈가 발생했을 가능성 높음. 
        //문자열 형변환이 시간을 많이 잡아먹는다고 가정, 편의성 때문에 사용했던 string 리스트 대신 
        //3차원 int 리스트를 사용함 => 여전히 실행시간 초과. 다른 테스트케이스의 실행시간도 약간 줄었을 뿐, 
        //여전히 비정상적으로 긴 편.
        //=> 사용한 자료형의 문제가 아님을 파악함. 반복 횟수 자체를 줄여야 함을 확인.
        //애초에 반복 과정 자체에서 조합의 중복을 배제할 방법이 있었음.
        //별도의 시도한 조합 여부를 체크하는 과정을 생략할 수 있었음.
        //=> 실행시간이 1/50 가량부터 심한 경우에는 1/1000 까지 감소함.
        
        //더한 값이 소수인지 빠르게 확인할 방법이 있는가? - 에라토스테네스의 체.
        //문제에서 나온 nums 의 도메인은 1000 이하의 자연수이다.
        //그렇다면 1000 의 약 3배를 에라토스테네스의 체 알고리즘으로 처리한
        //결과값들의 배열에 포함된 값인지 확인하면 될 것이다.
        
        List<int> primeList = getPrimeList(3000);//3000 이하의 소수들로 이루어진 리스트 구하기
        
        for(int i = 0; i < nums.Length - 2; i++){
            for(int j = i+1 ; j < nums.Length ; j++){
                for(int k = j+1; k < nums.Length ; k++){
                    //이렇게 하면 겹치는 조합은 없으므로?
                    //결과값이 소수인지 확인한다. 
                    if(primeList.Contains(nums[i] + nums[j] + nums[k])){
                        answer++;
                    }
                }   
            }
        }

        return answer;
    }
    
    public static List<int> getPrimeList(int num){
        int[] numbers = new int[num];
        
        //배열을 1~num 으로 초기화
        for(int i = 1 ;i <= numbers.Length ; i++){
            numbers[i-1] = i;
        }
        
        //에라토스테네스의 체 알고리즘.
        //2 부터 자연수 N 사이의 소수 구하기 => 2를 제외한 2의 배수 모두 제거 
        //=> 남은 값들 중 가장 작은 값 a 를 제외한 a의 배수 모두 제거 
        //=> ... N 에 도달할 때 까지 반복한다
        //여기서, 소수가 아닌 것은 0으로 만든다
        for(int i = 0 ; i < numbers.Length ; i++){
            if(i == 0){numbers[i] = 0;}//1은 소수가 아니므로
            else if(numbers[i] > 0){
                for(int j = i+1 ; j < numbers.Length ; j++){
                    if(numbers[j] % numbers[i] == 0){
                        numbers[j] = 0;
                    }
                }
            }
        }
        
        List<int> primes = new List<int>();
        
        foreach(int n in numbers){
            if(n > 0){
                primes.Add(n);
            }
        }
        
        return primes;
    }
}",,2023. 9. 4,48,2
2023. 9. 4 오후 4:33:48,이성권,Unity,8 - 문자열을 정수로 바꾸기,"using System;
public class Solution 
{
    public int solution(string s) 
    {
        //문자열을 그냥 정수형으로 바꿔주면 된다...
        //Int32.Parse(s); 또는 Convert.ToInt32(s); 모두 가능
        return Convert.ToInt32(s);
    }
}",https://github.com/LeeSeongGwon,2023. 9. 4,8,1
2023. 9. 4 오후 5:23:02,김정민,Unity,55 - 문자열 나누기,"public class Solution
        {
            public int solution(string s)
            {
                List<string> resultStr = new List<string>();
                string x = s[0] + """";
                int same = 0, diff = 0;
                for (int i = 0; i < s.Length; i++)
                {
                    string curStr = s[i] + """";
                    if (x == curStr) same++;
                    else diff++;

                    if (same > 0 && diff > 0 && same == diff)
                    {
                        resultStr.Add(x);
                        same = 0;
                        diff = 0;
                        if (i != s.Length - 1) x = s[i + 1] + """";
                    }
                }

                if (same != diff) resultStr.Add(x);

                int answer = resultStr.Count;
                return answer;
            }
        }",https://github.com/j-miiin/Algorithm_Study/blob/main/SPARTA_ALGORITHM_2023/Level3/55_SplitStr.cs,2023. 9. 4,55,3
2023. 9. 4 오후 6:06:10,이재윤,AI,10 - 정수 내림차순으로 배치하기,"def solution(n):
    sn = str(n)
    n_li = []
    for i in range(0, len(sn)):
        n_li.append(sn[i])
    n_li.sort()
    sum = 0
    for j in range(0, len(n_li)):
        sum = sum + (int(n_li[j]) * 10 ** (j))
    answer = sum
    return answer


print(solution(118372))",https://github.com/JaeYoonAI/coding_test/blob/c8754e076bef376d114eb5abdbf5fbe868822119/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12933.%E2%80%85%EC%A0%95%EC%88%98%E2%80%85%EB%82%B4%EB%A6%BC%EC%B0%A8%EC%88%9C%EC%9C%BC%EB%A1%9C%E2%80%85%EB%B0%B0%EC%B9%98%ED%95%98%EA%B8%B0/%EC%A0%95%EC%88%98%E2%80%85%EB%82%B4%EB%A6%BC%EC%B0%A8%EC%88%9C%EC%9C%BC%EB%A1%9C%E2%80%85%EB%B0%B0%EC%B9%98%ED%95%98%EA%B8%B0.py,2023. 9. 4,10,1
2023. 9. 4 오후 7:44:55,박지원,Unity,31 - 이상한 문자 만들기,"public class Solution {
    public string solution(string s) {
        string[] sp = s.Split("" "");
        string answer = """";

        foreach(string st in sp){
            for(int i = 0; i < st.Length; i++){
                answer += (i % 2 == 1) ? char.ToLower(st[i]) : char.ToUpper(st[i]);
            }
            if(s.Length != answer.Length)
                answer += "" "";
        }
        return answer;
    }
}",https://github.com/jwonp9127/AlgorithmStudy/tree/895411702cc6e060018e6a884ec7fbc4056b6cb2/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12930.%E2%80%85%EC%9D%B4%EC%83%81%ED%95%9C%E2%80%85%EB%AC%B8%EC%9E%90%E2%80%85%EB%A7%8C%EB%93%A4%EA%B8%B0,2023. 9. 4,31,2
2023. 9. 4 오후 8:29:12,최석준,Unity,9 - 정수 제곱근 판별,"#include <stdio.h>
#include <stdbool.h>
#include <stdlib.h>
#include <math.h>

long long solution(long long n) {
    long long answer = 0;

    if ((int)sqrt(n) == sqrt(n))
        answer = pow((sqrt(n) + 1), 2);
    else
        answer = -1;

    return answer;
}",,2023. 9. 4,9,1
2023. 9. 4 오후 9:27:27,서재민,Unity,6 - x만큼 간격이 있는 n개의 숫자,"public class Solution 
{
    public long[] solution(int x, int n) 
    {
            long[] answer = new long[n];

            for (int i = 0; i < n; i++)
            {
                if (i == 0)
                    answer[i] = x;
                else
                    answer[i] = x + answer[i - 1];
            }

            return answer;

    }
}",https://github.com/SeoJaeMin619/algorithm,2023. 9. 4,6,1
2023. 9. 4 오후 11:29:24,김대열,Unity,128 - 교점에 별 만들기,"#include <string>
#include <vector>
#include <climits>

using namespace std;
typedef struct Point{
    int x;
    int y;
}Point;
vector<vector<long long>> intersects;
vector<string> solution (vector<vector<int>> line){
    
    vector<string> solution;
    long long minX = 10000000001;
    long long maxX = -10000000001;
    long long minY = 10000000001;
    long long maxY = -10000000001;

    long long width = 1;
    long long height = 1;
    int len = line.size();
    for (int i = 0; i < len-1; i++) {
        long long a = (long long)line[i][0];
        long long b = (long long)line[i][1];
        long long e = (long long)line[i].size() > 2 ? line[i][2] : 0;

        for (int j = i + 1; j < len; j++) {
            long long c = (long long) line[j][0];
            long long d = (long long) line[j][1];
            long long f =  line[j].size() > 2 ?  (long long) line[j][2] : 0;

            long long ad_bc = a * d - b * c;
            long long bf_ed = b * f - e * d;
            long long ec_af = e * c - a * f;
            if (ad_bc == 0) continue;
            vector<long long> intersect;

            long long x = bf_ed / ad_bc ;
            long long y = ec_af / ad_bc ;
            if(bf_ed % ad_bc || ec_af % ad_bc) continue;
            
            minX = min(minX, x);
            maxX = max(maxX, x);
            minY = min(minY, y);
            maxY = max(maxY, y);

            intersect.push_back(x);
            intersect.push_back(y);
            intersects.push_back(intersect);
        }
    }
    
    width = maxX - minX + 1;
    height = maxY - minY + 1;

    string temp(width, '.');
    solution.assign(height, temp);

    for (int i = 0; i < intersects.size(); i++) {
        long long x = abs(intersects[i][0] - minX);
        long long y = abs(maxY - intersects[i][1]);

        solution[y][x] = '*';
    }

    return solution;
}
",,2023. 9. 4,128,5
2023. 9. 5 오전 12:22:40,임전혁,Unity,46 - 과일 장수,"using System;

public class Solution {
    public int solution(int k, int m, int[] score) {
        int answer = 0;
        int scoreLength = score.Length;
        
        int boxNum = scoreLength / m;
        int indexNum = scoreLength - m;
        Array.Sort(score);
        for (int i = 0; i < boxNum; i++)
        {
            answer += score[indexNum] * m;
            indexNum -= m;
        }
        return answer;
    }
}",https://github.com/yarogono/Algorithm_CSharp/blob/master/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/unrated/135808.%E2%80%85%EA%B3%BC%EC%9D%BC%E2%80%85%EC%9E%A5%EC%88%98/%EA%B3%BC%EC%9D%BC%E2%80%85%EC%9E%A5%EC%88%98.cs,2023. 9. 5,46,2
2023. 9. 5 오전 6:53:44,임전혁,Unity,47 - 모의고사완전탐색,"using System;
using System.Collections.Generic;
using System.Linq;

public class Solution {
    public int[] solution(int[] answers) {
        int[] answer = new int[3];

        int[] personOne = { 1, 2, 3, 4, 5 };
        int[] personTwo = { 2, 1, 2, 3, 2, 4, 2, 5 };
        int[] personThree = { 3, 3, 1, 1, 2, 2, 4, 4, 5, 5 };

        int[] scores = { 0, 0, 0 };


        for (int i = 0; i < answers.Length; i++)
        {
            int tempNum = answers[i];
            if(personOne[i % 5] == tempNum){ scores[0]++;}
            if(personTwo[i % 8] == tempNum){ scores[1]++;}
            if(personThree[i % 10] == tempNum){ scores[2]++;}      
        }

        int maxNum = scores.Max();
        List<int> list = new List<int>();
        for (int i = 0; i <  scores.Length; i++)
        {
            if (maxNum == scores[i])
                list.Add(i + 1);
        }
        
        return answer = list.ToArray();
    }
}",https://github.com/yarogono/Algorithm_CSharp/blob/master/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/42840.%E2%80%85%EB%AA%A8%EC%9D%98%EA%B3%A0%EC%82%AC/%EB%AA%A8%EC%9D%98%EA%B3%A0%EC%82%AC.cs,2023. 9. 5,47,2
2023. 9. 5 오전 8:59:01,김경환,Unity,55 - 문자열 나누기,"using System;

public class Solution055
{
    public int solution(string s)
    {
        int answer = 0;

        int cnt = 0;
        char x = ' ';


        foreach (char ch in s)
        {
            if (cnt == 0)
            {
                x = ch;
                cnt++;
                answer++;
            }
            else
            {
                if (ch == x)
                {
                    cnt++;
                }
                else
                {
                    cnt--;
                }
            }
        }

        return answer;
    }
}",https://github.com/kkh9700/algorithm,2023. 9. 5,55,3
2023. 9. 5 오전 9:00:35,기현빈,Unity,33 - 크기가 작은 부분,"using System;

public class Solution {
    public int solution(string t, string p) {
        int answer = 0;
        
        for (int i = 0; i <= t.Length - p.Length; i++) {
            if (string.Compare(t.Substring(i, p.Length), p) <= 0) answer++;
        }
        
        return answer;
    }
}",,2023. 9. 5,33,2
2023. 9. 5 오전 9:01:35,김경원,Unity,32 - 삼총사,"public class Solution {
    public int solution(int[] number) {
        int answer = 0;
          
        for(int i = 0; i < number.Length; i++)
        {
            for(int j = i + 1; j < number.Length; j++)
            {
                for(int k = j + 1; k < number.Length; k++)
                {
                    if(number[i] + number[j] + number[k] == 0)
                    {
                        answer++;
                    }
                }
            }
        }
        return answer;
    }
}",,2023. 9. 5,32,2
2023. 9. 5 오전 9:02:44,김경,Unity,33 - 크기가 작은 부분,"public class Solution {
    public int solution(string t, string p) {
        int answer = 0;
        string str = """";
        long num = 0;
        
        for(int i = 0; i < t.Length - p.Length + 1; i++)
        {
            num = long.Parse(t.Substring(i, p.Length));
            if(num <= long.Parse(p))
            {
                answer++;
            }
            
        }
        return answer;
    }
}",,2023. 9. 5,33,2
2023. 9. 5 오전 9:02:57,이세진,Unity,24 - 문자열 내림차순으로 배치하기,"using System;
 
public class Solution {
    public string solution(string s) {
        string answer = """";
        
        char[] arr = s.ToCharArray();

        Array.Sort(arr);
        Array.Reverse(arr);

        answer = new string(arr);
        
        return answer;
    }
}",,2023. 9. 5,24,1
2023. 9. 5 오전 9:03:54,김경원,Unity,33 - 크기가 작은 부분,"public class Solution {
    public int solution(string t, string p) {
        int answer = 0;
        string str = """";
        long num = 0;
        
        for(int i = 0; i < t.Length - p.Length + 1; i++)
        {
            num = long.Parse(t.Substring(i, p.Length));
            if(num <= long.Parse(p))
            {
                answer++;
            }
            
        }
        return answer;
    }
}",,2023. 9. 5,33,2
2023. 9. 5 오전 9:05:03,김경원,Unity,34 - 최소직사각형,"using System;

public class Solution {
    public int solution(int[,] sizes) {        
        for(var i=0; i< sizes.GetLength(0); i++)
        {
            var tmp = 0;
            if(sizes[i, 0] < sizes[i, 1])
            {
                tmp = sizes[i, 0];
                sizes[i, 0] = sizes[i, 1];
                sizes[i, 1] = tmp;
            }   
        }
        
        int max1 = 0;
        int max2 = 0;

        for (var i = 0; i < sizes.GetLength(0); i++)
        {
            if (max1 < sizes[i, 0]) max1 = sizes[i, 0];
            if (max2 < sizes[i, 1]) max2 = sizes[i, 1];
        }
        
        int answer = max1 * max2;

        return answer;
    }
}",,2023. 9. 5,34,2
2023. 9. 5 오전 9:05:52,김경원,Unity,35 - 시저 암호,"using System;
public class Solution {
    public string solution(string s, int n) {
        string answer = """";
        foreach(char c in s)
        {
            if(c!=' ')
            {
                int tmp = 0;
                
                //ASCII 코드
                //A=65, Z=90, a=97, z=122
                
                //대문자
                if((int)c<91)
                {
                    tmp = (int)c + n;
                    if(tmp>90) tmp = 64 + (tmp-90);
                }
                //소문자
                else
                {
                    tmp = (int)c + n;
                    if(tmp>122) tmp = 96 + (tmp-122);
                }
                
                answer += Convert.ToChar(tmp);    
            }else
                answer += ' ';    
        }
        return answer;
    }
}",,2023. 9. 5,35,2
2023. 9. 5 오전 9:06:06,김명식,Unity,20 - 가운데 글자 가져오기,"using System;

public class Solution {
    public string solution(string s) {
        string answer = """";
        int leng = s.Length;
        if(leng%2==0){
            answer= s.Substring(leng/2-1,2);
        }
        else
        {
            answer= s.Substring(leng/2,1);
        }

        return answer;
    }
}",https://github.com/D0ryeon/Algorithm-Code-Kata,2023. 9. 5,20,1
2023. 9. 5 오전 9:06:22,김민태,Unity,45 - 카드 뭉치,"public class Solution {
    public string solution(string[] cards1, string[] cards2, string[] goal) {
        string answer = ""Yes"";
        int index1 = 0;
        int index2 = 0;
        
        for(int i = 0; i < goal.Length; i++)
        {
            if(index1 < cards1.Length && goal[i] == cards1[index1])
            {
                index1++;
            }
            else if(index2 < cards2.Length && goal[i] == cards2[index2])
            {
                index2++;
            }
            else
            {
                return ""No"";
            }         
        }
        
        return answer;
    }
}",https://github.com/rlaalsxo/CodingTest,2023. 9. 5,45,2
2023. 9. 5 오전 9:06:52,김경원,Unity,36 - 숫자 문자열과 영단어,"using System;

public class Solution {
    public int solution(string s) {
        int answer = 0;
        
        //string.Replace(""해당 문자열을"", ""해당 문자열로"");
        s = s.Replace(""zero"", ""0"");
        s = s.Replace(""one"", ""1"");
        s = s.Replace(""two"", ""2"");
        s = s.Replace(""three"", ""3"");
        s = s.Replace(""four"", ""4"");
        s = s.Replace(""five"", ""5"");
        s = s.Replace(""six"", ""6"");
        s = s.Replace(""seven"", ""7"");
        s = s.Replace(""eight"", ""8"");
        s = s.Replace(""nine"", ""9"");

        int k;
        bool strToInt = int.TryParse(s, out k);     //변환 후 해당 문자열이 숫자이면
        if(strToInt) answer = k;                    //answer에 숫자 대입
        
        return answer;                              //answer 반환
    }
}",,2023. 9. 5,36,2
2023. 9. 5 오전 9:07:46,김경원,Unity,37 - 문자열 내 마음대로 정렬하기,"using System;
public class Solution {
    public string[] solution(string[] strings, int n) {
        int len = strings.Length;
        string[] answer = new string[len];
        
        //각 문자열의 n번째 글자를 앞으로 더한 문자열을 저장
        for(int i=0; i<len; i++)
        {
            answer[i] = (strings[i][n]) + strings[i];
        }
        
        //오름차순 정렬
        Array.Sort(answer);
        
        //정렬된 문자열에 더했던 n번째 글자를 Substring(1)으로 제거
        for(int j=0; j<len; j++)
        {
            answer[j] = answer[j].Substring(1);
        }
        
        return answer;
    }
}",,2023. 9. 5,37,2
2023. 9. 5 오전 9:08:33,신우석,Unity,55 - 문자열 나누기,"using System;

public class Solution {
    public int solution(string s) {
        int answer = 0;
        int target = 1;
        int other = 0;
        char x = '\0';
        foreach (char c in s)
            if (x == '\0') x = c;
            else {
                if (c == x) ++target;
                else ++other;
                if (target == other) {
                    answer += 1;
                    target = 1;
                    other = 0;
                    x = '\0';
                }
            }
        if (x != '\0') answer += 1;
        
        return answer;
    }
}",https://github.com/seoksii/AlgorithmCodeKata/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/unrated/140108.%E2%80%85%EB%AC%B8%EC%9E%90%EC%97%B4%E2%80%85%EB%82%98%EB%88%84%EA%B8%B0,2023. 9. 5,55,3
2023. 9. 5 오전 9:08:40,박지원,Unity,32 - 삼총사,"using System;

public class Solution {
    public int solution(int[] number) {
        int answer = 0;
        for(int i = 0; i < number.Length; i++){
            for(int j = i+1; j < number.Length; j++){
                for(int k = j+1; k < number.Length; k++){
                    if(number[i]+number[j]+number[k] == 0)  answer++;
                }
            }
        }
        return answer;
    }
}",https://github.com/jwonp9127/AlgorithmStudy/tree/79558f5183b25ff20b3a21a5877a12a8ecfc67ce/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/131705.%E2%80%85%EC%82%BC%EC%B4%9D%EC%82%AC,2023. 9. 5,32,2
2023. 9. 5 오전 9:08:48,김경원,Unity,38 - K번째수정렬,"using System;

public class Solution {
    public int[] solution(int[] array, int[,] commands) 
    {
        //commands 2차원 배열의 행 갯수만큼 answer 배열 초기화
        int[] answer = new int[commands.GetLongLength(0)];
        
        //0부터 commands 2차원 배열의 행 갯수까지 반복
        for(int n = 0; n < commands.GetLongLength(0); n++)
        {
            //각 i, j, k의 원소를 매 횟수마다 초기화
            int i = commands[n, 0];
            int j = commands[n, 1];
            int k = commands[n, 2];
            
            //i 번째 부터 j 번째 까지 자른 배열 선언
            int[] temp = new int[j - i + 1];
            
            //자른 배열 크기 만큼 반복하여 자른 i 번째 부터 숫자 대입
            for(int a = 0; a<temp.Length; a++)
            {
                temp[a] = array[a+i-1];
            }
            //자른 배열 정렬
            Array.Sort(temp);
            
            //k 번째 숫자를 answer배열에 대입
            answer[n] = temp[k-1];
        }
        return answer;
    }
   
}",,2023. 9. 5,38,2
2023. 9. 5 오전 9:09:32,김경원,Unity,39 - 두 개 뽑아서 더하기,"using System;
using System.Collections.Generic;

public class Solution
    {
        public int[] solution(int[] numbers)
        {
        	// 정답을 담아둘 리스트를 하나 생성한다.
            List<int> answer = new List<int>();
            
            // 이중 for문을 돌린다. 첫번째는 numbers.Length-1까지다.
            for (int i = 0; i < numbers.Length-1; i++)
            {
            	// 두번째 for문은 i+1 번 부터 시작한다.
                for (int j = i+1; j < numbers.Length; j++)
                {
                	// i번째와 j번째를 더해서 temp에 담는다.
                    int temp = numbers[i] + numbers[j];
                    // 리스트에 temp와 동일한 값이 있는지 검사
                    if (answer.Contains(temp) == false)
                    {
                    	// 동일한 값이 없으면 넣어준다 
                        answer.Add(temp);
                    }
                }
            }
           	// 리스트를 정렬해준다.
            answer.Sort();
            // 배열로 뽑아줌.
            return answer.ToArray();
        }
    }",,2023. 9. 5,39,2
2023. 9. 5 오전 9:10:55,김명식,Unity,21 - 수박수박수박수박수박수?,"public class Solution {
    public string solution(int n) {
        string answer = """";
        for(int i=0;i<n;i++){
            if(i%2==0){
                answer +=""수"";    
            }else{
                answer +=""박"";
            }
        }
        return answer;
    }
}",https://github.com/D0ryeon/Algorithm-Code-Kata,2023. 9. 5,21,1
2023. 9. 5 오전 9:11:07,지민규,Unity,32 - 삼총사,"using System;

public class Solution {
    public int solution(int[] number) {
        int answer = 0;
        for (int i = 0; i < number.Length; i++)
        {
            for (int j = 1; j < number.Length; j++)
            {
                if (i >= j)
                {
                    continue;
                }
                for (int k = 2; k < number.Length; k++)
                {
                    if (i >= k || j >= k)
                    {
                        continue;
                    }
                    if (number[i] + number[j] + number[k] == 0)
                    {
                        answer += 1;
                    }
                }
            }
        }
        return answer;
    }
}",,2023. 9. 5,32,2
2023. 9. 5 오전 9:11:07,김민태,Unity,46 - 과일 장수,"using System;
using System.Linq;

public class Solution {
    public int solution(int k, int m, int[] score) {
        int answer = 0;
        int index = m - 1;
        Array.Sort(score);
        Array.Reverse(score);
        
        for(int i = 0; i < score.Length / m; i++)
        {
            answer += score[index] * m;
            index += m;
        }
        return answer;
    }
}",https://github.com/rlaalsxo/CodingTest,2023. 9. 5,46,2
2023. 9. 5 오전 9:11:18,김경환,Unity,56 - 대충 만든 자판,"using System;

public class Solution {
    public int[] solution(string[] keymap, string[] targets) {
        int[] answer = new int[targets.Length];
        
        int[] alphabet = new int[26];
        Array.Fill(alphabet, Int32.MaxValue);
        
        foreach(string s in keymap)
        {
            for(int i = 0; i < s.Length; i++)
            {
                int index = s[i] - 'A';
                
                if(alphabet[index] > i + 1)
                    alphabet[index] = i + 1;
            }
        }
        
        for(int i = 0; i < targets.Length; i++)
        {
            int sum = 0;
            
            foreach(char ch in targets[i])
            {
                int index = ch - 'A';
                
                if(alphabet[index] == Int32.MaxValue)
                {
                    answer[i] = -1;
                    break;
                } else {
                    sum += alphabet[index];
                }
            }
            
            if(answer[i] != -1)
                answer[i] = sum;
        }
        
        
        return answer;
    }
}",https://github.com/kkh9700/algorithm,2023. 9. 5,56,3
2023. 9. 5 오전 9:12:31,이세진,Unity,25 - 부족한 금액 계산하기,"{
    public long solution(int price, int money, int count)
    {
        long answer = 0;
        for(long i = 0 ; i <= count ; i++)
        {
            answer += (price * i);
        }
        if(answer - money < 0)
        {
          return 0;  
        }
       
        return answer - money;
    }
}",,2023. 9. 5,25,1
2023. 9. 5 오전 9:13:21,차명경,AI,22 - 내적,"def solution(a, b):
    answer=0
    for i in range(len(a)):
        answer+= a[i] * b[i]
    return answer",,2023. 9. 5,22,1
2023. 9. 5 오전 9:13:46,이현지,Unity,40 - 가장 가까운 같은 글자,"using System;

public class Solution {
    public int[] solution(string s) {
        int[] answer = new int[s.Length];
        for (int i = 0; i < s.Length; i++)
        {
            int sameLetterIndex = -1;
            for (int j = 0; j < i; j++)
            {
                if (s[j] == s[i]) sameLetterIndex = j;
            }
            if (sameLetterIndex != -1) answer[i] = i - sameLetterIndex;
            else answer[i] = sameLetterIndex;
        }
        return answer;
    }
}",https://github.com/szlovelee/Programmers-Algorithm,2023. 9. 5,40,2
2023. 9. 5 오전 9:13:48,조범준,Unity,39 - 두 개 뽑아서 더하기,"using System;
using System.Collections.Generic;
using System.Linq;

public class Solution {
    public int[] solution(int[] numbers) {
        List<int> answer = new List<int>();
        for(int i = 0; i < numbers.Length; i++){
            for(int j = i+1; j < numbers.Length; j++){
                answer.Add(numbers[i] + numbers[j]);
            }
        }
        
        int[] temp = answer.Distinct().ToArray();
        Array.Sort(temp);
        return temp;
    }
}",https://github.com/KimMaYa1/BaekJoonEx/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4,2023. 9. 5,39,2
2023. 9. 5 오전 9:14:05,장성림,Unity,38 - K번째수정렬,"using System;

public class Solution {
    public int[] solution(int[] array, int[,] commands) {
        int[] answer = new int[commands.GetLength(0)];
       
        for(int i = 0; i < commands.GetLength(0); i ++){
            int tmplength = commands[i, 1] - commands[i, 0] + 1;
            int [] temp = new int[tmplength];
            Array.Copy(array, commands[i, 0] - 1, temp, 0,tmplength);
            Array.Sort(temp);
            answer[i] = temp[commands[i, 2] - 1];
        }
        return answer;
    }
}",https://github.com/hoobhoob,2023. 9. 5,38,2
2023. 9. 5 오전 9:15:05,김예준,Unity,46 - 과일 장수,"using System;
using System.Linq;

public class Solution {
    public int solution(int k, int m, int[] score) {
        int answer = 0;
        
        Array.Sort(score);
        Array.Reverse(score);
        
        for (int i = 0; i < score.Length / m; i++)
        {
            answer += score[i * m + m - 1] * m;
        }
        
        return answer;
    }
}",,2023. 9. 5,46,2
2023. 9. 5 오전 9:15:21,김명식,Unity,22 - 내적,"using System;

public class Solution {
    public int solution(int[] a, int[] b) {
        int answer = 0;
        for(int i=0;i<a.Length;i++){
            answer += a[i]*b[i];
        }
        return answer;
    }
}",https://github.com/D0ryeon/Algorithm-Code-Kata,2023. 9. 5,22,1
2023. 9. 5 오전 9:15:35,우민규,Unity,22 - 내적,"using System;

public class Solution {
    public int solution(int[] a, int[] b) {
        int answer = 0;
        
        //내적 이라고 하니 애매하고 어떻게 계산해야할지 모르겠지만
        //식 자체는 a[0]*b[0]+a[1]*b[1]+ ... +a[n-1]*b[n-1] 을 진행하고, 
        //그 값을 반환하면 된다. 코드로 바꾸면 어렵지 않다.
        
        //반복문으로 해당 배열순서의 정수를 곱해 answer에 더함.
        for(int i=0; i<a.Length; i++)
        {
            answer += a[i] * b[i];
        }
        
        return answer;
    }
}",https://github.com/Woomingyu/Programmers.git,2023. 9. 5,22,1
2023. 9. 5 오전 9:15:51,김주형,Unity,25 - 부족한 금액 계산하기,"class Solution
{
    public long solution(int price, int money, int count)
    {
        long sum = 0; 
        for (int i =1; i<= count; i++)
        {
            sum += price * i; // 필요한 금액
        }
        if (money > sum)
        {
            return 0; // 부족하지 않으면 0
        }
        else return sum - money; // 부족한 금액
    }
}",https://github.com/kjuhyung/Algorithm.git,2023. 9. 5,25,1
2023. 9. 5 오전 9:16:26,문준권,Unity,9 - 정수 제곱근 판별,"using System;
public class Solution {
    public long solution(long n) {
        long x = (long)Math.Sqrt(n);
            return (x*x == n) ? (x+1)*(x+1) : -1;
    }
}",,2023. 9. 5,9,1
2023. 9. 5 오전 9:17:17,신현주,Unity,34 - 최소직사각형,"using System;

public class Solution {
    public int solution(int[,] sizes) {
        int max1 = 0;
        int max2 = 0;
        for( int i = 0; i < sizes.GetLength(0); i++){
            int tmp = 0;
            if( sizes[i,0] < sizes[i,1]){
                tmp = sizes[i,0];
                sizes[i, 0] = sizes[i, 1];
                sizes[i, 1] = tmp;
            }
            if( max1 < sizes[i,0])
                max1 = sizes[i,0];
            if(max2 < sizes[i,1])
                max2 = sizes[i,1];
            
        }
        
        return max1 * max2;
    }
}",https://github.com/Shyunju/codeKata,2023. 9. 5,34,2
2023. 9. 5 오전 9:17:57,심우진,Unity,16 - 음양 더하기,"    //음양 더하기
    using System;

public class Solution
    {
        public int solution(int[] absolutes, bool[] signs)
        {
            int sum = 0;

            for (int i = 0; i < absolutes.Length; i++)
            {
                if (signs[i])
                {
                    sum += absolutes[i];
                }
                else
                {
                    sum -= absolutes[i];
                }
            }

            return sum;
        }
    }",https://github.com/agasa0624/at,2023. 9. 5,16,1
2023. 9. 5 오전 9:18:08,우성훈,Unity,7 - 자연수 뒤집어 배열로 만들기,"using System;
public class Solution {
    public int[] solution(long n) {
        //자연수 n 을 문자 배열 arr에 초기화
        char[] arr = Convert.ToString(n).ToCharArray();
        //answer를 arr의 크기에 맞추어 선언
        int[] answer = new int[arr.Length];
        
        int count=0;
        //배열 크기에 맞게 거꾸로 부터 시작하여 0보다 같거나 큰동안 반복
        for(int i=arr.Length-1; i>=0; i--)
        {
            //answer[i] 즉 배열 크기 뒤에서 부터 arr[count]을 넣어주고, count 더하기
            answer[i] = Convert.ToInt32(arr[count].ToString());
            count++;
        }

        return answer;
    }
}",,2023. 9. 5,7,1
2023. 9. 5 오전 9:18:28,심우진,Unity,15 - 나누어 떨어지는 숫자,"    //나누어 떨어지는 숫자 배열
    using System;
using System.Collections.Generic;
using System.Linq;

public class Solution
    {
        public int[] solution(int[] arr, int divisor)
        {
            List<int> answer = new List<int>();

            foreach (var num in arr)
            {
                if (num % divisor == 0)
                {
                    answer.Add(num);
                }
            }

            if (answer.Count == 0)
            {
                return new int[] { -1 };
            }

            return answer.OrderBy(x => x).ToArray();
        }
    }",https://github.com/agasa0624/at,2023. 9. 5,15,1
2023. 9. 5 오전 9:18:47,이경현,Unity,34 - 최소직사각형,"public int solution(int[,] sizes)
{
    int w = 0, h = 0;

    for(int i =0; i<sizes.GetLength(0); i++)
    {
        if (sizes[i, 0] < sizes[i, 1])
        {
            int tmp = sizes[i, 0];
            sizes[i, 0] = sizes[i, 1];
            sizes[i, 1] = tmp;
        }

        if (w < sizes[i, 0])
        {
            w = sizes[i, 0];
        }

        if (h < sizes[i, 1])
        {
            h = sizes[i, 1];
        }
    }

    return w * h;
}",https://github.com/516lkh/Algorithm,2023. 9. 5,34,2
2023. 9. 5 오전 9:18:48,이주연,Unity,44 - 2016년,"#include <string>
#include <vector>

using namespace std;

string solution(int a, int b) {
    string answer = """";
    string day[7] = {""FRI"", ""SAT"", ""SUN"", ""MON"", ""TUE"", ""WED"", ""THU""};
    int month[13] = {0, 31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31};
    int sum = 0;
    for(int i = 0; i < a; i++) {
        sum += month[i];
    }
    sum += b-1;
    answer = day[sum%7];
    return answer;
}",,2023. 9. 5,44,2
2023. 9. 5 오전 9:19:01,김하늘,Unity,29 - 최대공약수와 최소공배수,"public class Solution 
{
    public int[] solution(int n, int m) 
    {
        if (n < m)
        {
            int temp = n;
            n = m;
            m = temp;
        }
        
        int[] answer = new int[] {getGCD(n,m), n * m / getGCD(n, m)};
        return answer;
    }
    
    static int getGCD(int a, int b) //최대공약수
    {
        if (a % b == 0)
            return b;
        else
            return getGCD(b, a % b);
    }
}",,2023. 9. 5,29,1
2023. 9. 5 오전 9:19:25,임전혁,Unity,48 - 소수 만들기,"using System;

class Solution
{
    public int solution(int[] nums)
    {
        int answer = 0;
        
        for (int i = 0; i < nums.Length; i++)
        {
            for (int j = i + 1; j < nums.Length; j++)
            {
                for (int k = j + 1; k < nums.Length; k++)
                {
                    int sumNum = nums[i] + nums[j] + nums[k];
                    
                    if (IsPrime(sumNum))
                        answer++;
                }
            }
        }
        
        return answer;
    }
    
    private bool IsPrime(int num)
    {
        bool result = true;
        
        for (int i = 2; i <= num / 2; i++)
        {
            if (num % i == 0)
                result = false;
        }
        
        return result;
    }
}",https://github.com/yarogono/Algorithm_CSharp/blob/master/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12977.%E2%80%85%EC%86%8C%EC%88%98%E2%80%85%EB%A7%8C%EB%93%A4%EA%B8%B0/%EC%86%8C%EC%88%98%E2%80%85%EB%A7%8C%EB%93%A4%EA%B8%B0.cs,2023. 9. 5,48,2
2023. 9. 5 오전 9:19:47,노재우,Unity,29 - 최대공약수와 최소공배수,"public class Solution
{
    public int[] solution(int n, int m)
    {
        int[] answer = new int[] { 0, 0 };
        List<List<int>> temp = new List<List<int>>
        {
            new List<int>(),
            new List<int>()
        };

        int tempNum;
        if (n >= m)
        {
            tempNum = m;
        }else
        {
            tempNum = n;
        }


        for (int i = 1; i <= tempNum; i++)
        {
            if (n%i ==0)
            {
                temp[0].Add(i);
            }
            if (m % i == 0)
            {
                temp[1].Add(i);
            }
        }

        for (int i = 0; i < temp[1].Count; i++)
        {
            if (temp[0].Contains(temp[1][i]) == false)
                continue;
            if (temp[1][i] > answer[0])
            {
                answer[0] = temp[1][i];
                answer[1] = n * m / answer[0];
            }
        }


        return answer;
    }
}",,2023. 9. 5,29,1
2023. 9. 5 오전 9:20:09,김예준,Unity,47 - 모의고사완전탐색,"using System;
using System.Collections.Generic;
using System.Linq;

public class Solution {
    public List<int> solution(int[] answers) {
        List<int> answer = new List<int>();
        int[] student1 = {1,2,3,4,5};
        int[] student2 = {2,1,2,3,2,4,2,5};
        int[] student3 = {3,3,1,1,2,2,4,4,5,5};
        int[] score = new int[3];
        int max = 0;
        
        for (int i = 0; i < answers.Length; i++)
        {
            if (answers[i] == student1[i%5]) score[0]++;
            if (answers[i] == student2[i%8]) score[1]++;
            if (answers[i] == student3[i%10]) score[2]++;
        }
        
        max = score.Max();
        
        for (int i = 0; i < 3; i++)
        {
            if (score[i] == max)
            {
                answer.Add(i+1);
            }
        }
        
        return answer;
    }
}",,2023. 9. 5,47,2
2023. 9. 5 오전 9:20:13,이정환,Unity,32 - 삼총사,"using System;

public class Solution {
    private int count = 0;

    public int solution(int[] number) {
        FindSumZeroCombinations(number, 0, 0, 0);
        return count;
    }

    private void FindSumZeroCombinations(int[] number, int currentIndex, int currentSum, int selectedCount) {
        if (selectedCount == 3) {
            if (currentSum == 0) {
                count++;
            }
            return;
        }

        if (currentIndex >= number.Length) {
            return;
        }

        // 현재 학생을 선택하는 경우
        FindSumZeroCombinations(number, currentIndex + 1, currentSum + number[currentIndex], selectedCount + 1);

        // 현재 학생을 선택하지 않는 경우
        FindSumZeroCombinations(number, currentIndex + 1, currentSum, selectedCount);
    }
}",,2023. 9. 5,32,2
2023. 9. 5 오전 9:20:17,신우석,Unity,56 - 대충 만든 자판,"using System;

public class Solution {
    public int[] solution(string[] keymap, string[] targets) {
        int[] minCost = new int[26];
        foreach (string s in keymap)
            for (int i = 0; i < s.Length; ++i)
                if (minCost[(int)(s[i] - 'A')] == 0) minCost[(int)(s[i] - 'A')] = i + 1;
                else if (i + 1 < minCost[(int)(s[i] - 'A')]) minCost[(int)(s[i] - 'A')] = i + 1;
        
        int[] answer = new int[targets.Length];
        
        for (int i = 0; i < targets.Length; ++i) {
            int cost = 0;
            foreach (char c in targets[i])
                if (minCost[(int)(c - 'A')] == 0) {
                    cost = -1;
                    break;
                }
                else cost += minCost[(int)(c - 'A')];
            answer[i] = cost;
        }
        
        return answer;
    }
}",https://github.com/seoksii/AlgorithmCodeKata/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/unrated/160586.%E2%80%85%EB%8C%80%EC%B6%A9%E2%80%85%EB%A7%8C%EB%93%A0%E2%80%85%EC%9E%90%ED%8C%90,2023. 9. 5,56,3
2023. 9. 5 오전 9:20:23,최장범,Unity,30 - 3진법 뒤집기,"using System;
using static System.Math;
using System.Collections.Generic;

public class Solution {
    public int solution(int n) {
        int answer = 0;
        List<int> list = new List<int>();
        
        while(true)
        {
            if(n==0) break;
            int d = n%3;
            list.Add(d);
            n=n/3;
        }
        list.Reverse();
        
        for(int i =0; i<list.Count; i++)
        {
            answer += (int)(list[i] * Math.Pow(3,i));
        }
        return answer;
    }
}",,2023. 9. 5,30,1
2023. 9. 5 오전 9:20:31,장성림,Unity,39 - 두 개 뽑아서 더하기,"using System;
using System.Collections.Generic;

public class Solution {
    public int[] solution(int[] numbers) {
        int[] answer = new int[] {};
        List<int> list = new List<int>();
        for (int i = 0; i < numbers.Length - 1; i++){
            for (int j = i + 1; j < numbers.Length; j++){
                int tmp = numbers[i] + numbers[j];
                if(!list.Contains(tmp))
                    list.Add(tmp);
            }
        }
        list.Sort();
        answer = list.ToArray();
        return answer;
    }
}",https://github.com/hoobhoob,2023. 9. 5,39,2
2023. 9. 5 오전 9:20:43,김형중,Unity,26 - 문자열 다루기 기본,"using System;

public class Solution {
    public bool solution(string s) {
        bool answer = false;
        int num = 0;
        
        if (s.Length==4 || s.Length==6) 
        {
            answer = Int32.TryParse(s, out num);
            //Int32.TryParse로 정수인지 확인 정수면 true 아니면 false
        }
         
        return answer;
    }
}",,2023. 9. 5,26,1
2023. 9. 5 오전 9:20:49,문현우,Unity,18 - 없는 숫자 더하기,"using System;
using System.Linq;
using System.Collections.Generic;

public class Solution {
    public int solution(int[] numbers) {
        int[] compare = {1,2,3,4,5,6,7,8,9,0};
        IEnumerable<int> ret = compare.Except(numbers);
        int answer = 0;
        foreach (int num in ret)
            answer += num;
        return answer;
    }
}",https://github.com/Munch310/Algorithm-Csharp/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/86051.%E2%80%85%EC%97%86%EB%8A%94%E2%80%85%EC%88%AB%EC%9E%90%E2%80%85%EB%8D%94%ED%95%98%EA%B8%B0,2023. 9. 5,18,1
2023. 9. 5 오전 9:21:31,김호연,Unity,29 - 최대공약수와 최소공배수,"using System;
public class Solution {
    public int[] solution(int n, int m) {
        int[] answer = new int[2];
        int min;
        int max;
        
        //최대공약수 -> 유클리드 호제법 gcd(n, m) = gcd(m, n%m)
        min = gcd(n, m);
        //최소공배수 -> 두수의 곱 / 최대 공약수
        max = (n * m) / min;
        
        answer[0] = min;
        answer[1] = max;
        return answer;
    }
    public int gcd(int n, int m)
    {
        //두 수 n, m 이 있을 때 어느 한 수가 0이 될 때 까지
        //gcd(m, n%m) 의 재귀함수 반복
        if(m==0) return n;
        else return gcd(m, n%m);
    }
}",,2023. 9. 5,29,1
2023. 9. 5 오전 9:21:48,손병의,Unity,18 - 없는 숫자 더하기,"using System;

public class Solution
{
    public int solution(int[] numbers)
    {
        int answer = 0;
        int temp = 0;
        for(int i = 0; i < numbers.Length; i++)
        {
            temp += numbers[i];
        }
        answer = 45 - temp; // 0~9까지의 합 45 - numbers의 입력값의 합
        
        return answer;
    }
}",https://github.com/Son-BE/CodeKata1,2023. 9. 5,18,1
2023. 9. 5 오전 9:22:39,김형중,Unity,28 - 직사각형 별찍기,"using System;

public class Example
{
    public static void Main()
    {
        String[] s;

        Console.Clear();
        s = Console.ReadLine().Split(' ');

        int n = Int32.Parse(s[0]);
        int m = Int32.Parse(s[1]);

        for (int i = 0; i < m; i++)
        {
            for (int j = 0; j < n; j++)
            {
                Console.Write(""*"");
            }
            Console.WriteLine();
        }

    }
}",,2023. 9. 5,28,1
2023. 9. 5 오전 9:22:42,차요한,Unity,37 - 문자열 내 마음대로 정렬하기,"using System.Collections.Generic;
using System;
using System.Linq;
public class Solution {
    public string[] solution(string[] strings, int n) {
        string[] answer = new string[strings.Length];
        
        
        for(int i = 0; i<strings.Length; i++)
        {
            answer[i] = (strings[i][n]) + strings[i];
        }
        Array.Sort(answer);
        
        for(int j=0; j<strings.Length; j++)
        {
            answer[j] = answer[j].Substring(1);
        }
        
        return answer;
    }
}",https://github.com/HOHOJO/Algorithm_test,2023. 9. 5,37,2
2023. 9. 5 오전 9:22:46,김광수,Unity,67 - 이진 변환 반복하기,"using System;

public class Solution 
{
    // 1. 모든 0을 제거
    // 2. 그때의 길이를 2진법으로 변환
    // 3. s가 1이 될때까지 반복
    // 4. return 횟수, 제거된 0의 개수
    int[] answer = new int[2];
    public int[] solution(string s) 
    {
        while (s != ""1"")
        {
            s = BinaryConversion(s);
            s = LengthToBinary(s);
            s = ReverseString(s);
            answer[0] += 1;
        }
          
        return answer;
    }
    
    public string BinaryConversion(string s)
    {
        string temp = """";
        foreach(char c in s)
        {
            if (c == '1')
            {
                temp +=c;
            }
            else
            {
                answer[1] +=1;    
            }
        }
        
        return temp;
    }
    
    public string LengthToBinary(string s)
    {
        int length = s.Length;
        
        string binary = """";
        
        while(length > 0)
        {
            binary += length % 2;
            length /=2;
        }
        
        return binary;
        
    }
    
    public string ReverseString(string s)
    {
        char[] cArray = s.ToCharArray();
        Array.Reverse(cArray);
        return new string(cArray);
    }
        
}
",https://github.com/kksoo0131/Study/commit/75154b4ed28f86095a34e806d8c5915894d22406,2023. 9. 5,67,3
2023. 9. 5 오전 9:23:03,강상찬,AI,45 - 카드 뭉치,"def solution(cards1, cards2, goal):
    while (len(goal) != 0):
        if (len(cards1)== 0):
            cards1 = [0]
        if (len(cards2) == 0):
            cards2 = [0]   
        if (goal[0] != cards1[0] and goal[0] != cards2[0]):
            return 'No'
        else:
            if (goal[0] == cards1[0]):
                cards1.pop(0)
            else:
                cards2.pop(0)
            goal.pop(0)
    return 'Yes'",,2023. 9. 5,45,2
2023. 9. 5 오전 9:23:22,박지원,Unity,33 - 크기가 작은 부분,"using System;

public class Solution {
    public int solution(string t, string p) {
        int answer = 0, t_l = t.Length, p_l = p.Length;
        
        for(int i = 0; i < t_l - p_l + 1; i++){
            if(long.Parse(t.Substring(i, p_l)) <= long.Parse(p)){
                answer++;
            }
        }
        return answer;
    }
}",https://github.com/jwonp9127/AlgorithmStudy/tree/fbae45847a5862c668b17f7873c38d2a41e14645/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/unrated/147355.%E2%80%85%ED%81%AC%EA%B8%B0%EA%B0%80%E2%80%85%EC%9E%91%EC%9D%80%E2%80%85%EB%B6%80%EB%B6%84%EB%AC%B8%EC%9E%90%EC%97%B4,2023. 9. 5,33,2
2023. 9. 5 오전 9:23:23,박준규,Unity,26 - 문자열 다루기 기본,"public class Solution 
{
    public bool solution(string s) 
    {
        long i = 0;
        bool answer = true;
        if(s.Length ==4 || s.Length == 6){
            answer = long.TryParse(s, out i);
        }else{
            answer = false;
        }
        return answer;
    }
}",,2023. 9. 5,26,1
2023. 9. 5 오전 9:23:54,김도현B,Unity,39 - 두 개 뽑아서 더하기,"using System;
using System.Linq;
using System.Collections.Generic;
public class Solution {
    public int[] solution(int[] numbers) {
        List<int> list = new List<int>();
        int MaxCount = numbers.Length;
        for(int i = 0; i < MaxCount; i++)
        {
            for(int j = i+1; j < MaxCount; j++)
                list.Add(numbers[j] + numbers[i]);
        }
        list.Sort();
        return list.Distinct().ToArray();
    }
}",https://github.com/subscriptioncat/Algorithm,2023. 9. 5,39,2
2023. 9. 5 오전 9:24:40,강성호,Unity,48 - 소수 만들기,"using System;
using System.Collections.Generic;
using System.Linq;

class Solution
{
    public int solution(int[] nums)
    {
      int answer = 0;
		bool[]arr = new bool[3000];
		arr[0] = true;
		arr[1] = true;
		for(int i = 2; i < Math.Sqrt(arr.Length); i++)
		{
			if (!arr[i])
			{
				for(int j = i * i; j < arr.Length; j += i)
				{
					arr[j] = true;
				}
			}
		}

		for(int i = 0; i < nums.Length - 2; i++)
		{
			for(int j = 1 + i; j < nums.Length - 1; j++)
			{
				for(int k = 1 + j; k < nums.Length; k++)
				{
					if (!arr[nums[i] + nums[j] + nums[k]])
					{
						answer++;
					}
				}
			}
		}
		

		return answer;
    }
}",,2023. 9. 5,48,2
2023. 9. 5 오전 9:25:09,조범준,Unity,40 - 가장 가까운 같은 글자,"using System;

public class Solution {
    public int[] solution(string s) {
        int[] answer = new int[s.Length];
        string str = """";
        
        for(int i = 0; i < s.Length; i++){
            bool y = str.Contains(s[i]);
            if(y){
                int j = i - str.LastIndexOf(s[i]);
                answer[i] = j;
            }
            else{
                answer[i] = -1;
            }
            str += s[i];
        }
        return answer;
    }
}",https://github.com/KimMaYa1/BaekJoonEx/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4,2023. 9. 5,40,2
2023. 9. 5 오전 9:25:50,이형빈,Unity,14 - 서울에서 김서방 찾기,"public class Solution {
    public string solution(string[] seoul) 
    {
       string answer = """";
        
        for(int i = 0; i<seoul.Length; i++)
        {
            if(seoul[i] == ""Kim"")
            {
                answer = ""김서방은 "" + i + ""에 있다"";
                break;
            }            
        }
        return answer;
    }
}",,2023. 9. 5,14,1
2023. 9. 5 오전 9:25:54,김강현,Unity,18 - 없는 숫자 더하기,"using System;

public class Solution {
    public int solution(int[] numbers) 
    {
        Array.Sort(numbers);
        int sum = 0;
        int[] arr = {0,1,2,3,4,5,6,7,8,9};
        for(int i = 0; i < numbers.Length ; i++)
        {
            sum += numbers[i];    
        }
        
        int answer = 45-sum;
        return answer;
    }
}",,2023. 9. 5,18,1
2023. 9. 5 오전 9:26:00,최성원,Unity,10 - 정수 내림차순으로 배치하기,"using System;
using System.Linq;


public class Solution {
    public long solution(long n) {
        long answer = 0;

        string strN = n.ToString();

        char[] charArray = strN.ToCharArray();
        Array.Sort(charArray);
        Array.Reverse(charArray);

        string sortedStr = new string(charArray);

        long sortedNum = long.Parse(sortedStr);

        return answer = sortedNum;
    }
}",,2023. 9. 5,10,1
2023. 9. 5 오전 9:27:04,김해찬,Unity,85 - k진수에서 소수 개수 구하기,"using System;

public class Solution {

    public bool CalcPrime(long num)
    {   
        if(num == 1)
        {
            return false;
        }
        
        long nr = (long)Math.Sqrt(num);
        for (long i = 2; i <= nr; i++)
        {
            if (num % i == 0)
            {
                return false;
            }
        }
        
        return true;
    }

    string ConvertJ(int n, int j, string str = """")
    {
        if (j < 2) return null;
        int k = n / j;
        str = (n % j).ToString() + str;   

        if (k >= j) return ConvertJ(k, j, str);
        else str = k.ToString() + str;
        return str;
    }


    public int solution(int n, int k)
    {
        int answer = 0;
        string converted = ConvertJ(n, k);

        string[] temp = converted.Split('0');

        for(int i = 0; i < temp.Length; i++)
        {
            temp[i] = temp[i].Trim('0', ' ');
            temp[i] = temp[i].Replace("" "", string.Empty);
        }

        for (int i = 0; i < temp.Length; i++)
        {
            if (temp[i] == """" || temp[i].Length == 0)
            {
                continue;
            }

            long num = long.Parse(temp[i]);
            
            if(CalcPrime(num) == false)
            {
                continue;
            }

            if (temp.Length == 1)
            {
                answer++;
            }
            else if(i + 1 == temp.Length)
            {
                answer++;
            }
            else if(i == 0 && temp.Length >= 2)
            {
                answer++;
            }
            else if(i != 0 && i + 1 != temp.Length)
            {
                answer++;
            }
        }

        return answer;
    }
}",,2023. 9. 5,85,4
2023. 9. 5 오전 9:27:41,김정규,AI,28 - 직사각형 별찍기,"a, b = map(int, input().strip().split(' '))
for i in range(1, b+1):
    print('*' * a)",https://github.com/JungGyu00/algorithm,2023. 9. 5,28,1
2023. 9. 5 오전 9:28:11,김경환,Unity,57 - 둘만의 암호,"using System;
using System.Text;

public class Solution {
    public string solution(string s, string skip, int index) {
        StringBuilder sb = new StringBuilder();
        bool[] alphabet = new bool[26];
        
        foreach(char ch in skip)
        {
            alphabet[charToInt(ch)] = true;
        }
        
        foreach(char ch in s)
        {
            int num = charToInt(ch);
            
            for(int i = 0; i < index; i++)
            {
                num = increase(num);
                
                while(alphabet[num])
                    num = increase(num);
            }
            
            sb.Append(intToChar(num));
        }
        
        return sb.ToString();
    }
    
    public int charToInt(char ch)
    {
        return ch - 'a';
    }
    
    public char intToChar(int i)
    {
        return (char)('a' + i);
    }
    
    public int increase(int num)
    {
        num++;
        
        if(num >= 26)
            num -=26;
        
        return num;
    }
}",https://github.com/kkh9700/algorithm,2023. 9. 5,57,3
2023. 9. 5 오전 9:28:43,조병우,Unity,10 - 정수 내림차순으로 배치하기,"using System;

public class Solution {
    public long solution(long n) {
        long answer = 0;
        char[] temp = n.ToString().ToCharArray();
         Array.Sort(temp);
        Array.Reverse(temp);
        answer = long.Parse(new String(temp));
        return answer;
    }
}",,2023. 9. 5,10,1
2023. 9. 5 오전 9:28:57,정재훈,Unity,20 - 가운데 글자 가져오기,"public class Solution {
    public string solution(string s) {
        string answer = """";
        int a  = s.Length/2;
        if(s.Length%2 == 1)
        {
            answer = s.Substring(a, 1);
        }
        else
        {
            answer = s.Substring(a-1, 2);
        }
        
        return answer;
    }
}",https://github.com/toadsam/Algorithm,2023. 9. 5,20,1
2023. 9. 5 오전 9:29:26,김명식,Unity,23 - 약수의 개수와 덧셈,"using System;

public class Solution {
    public int solution(int left, int right) {
        int answer =0;
        for(int i=left; i<=right;i++){
            int count=0;
            for(int z=1; z<=i; z++){
                if(i%z==0){
                    count++;
                }
            }
            if(count%2==0){
                answer+=i;
            }else{
                answer-=i;
            }
        }
        return answer;
    }
}",https://github.com/D0ryeon/Algorithm-Code-Kata/tree/main,2023. 9. 5,23,1
2023. 9. 5 오전 9:29:41,김민태,Unity,47 - 모의고사완전탐색,"using System;
using System.Collections.Generic;
using System.Linq;

public class Solution {
    public int[] solution(int[] answers) {
        int[] math1 = new int[] {1,2,3,4,5};
        int[] math2 = new int[] {2,1,2,3,2,4,2,5};
        int[] math3 = new int[] {3,3,1,1,2,2,4,4,5,5};
        int[] counts = new int[] {0,0,0}; 
        List<int> answer = new List<int>();
        for(int i = 0; i < answers.Length; i++)
        {
            if(answers[i] == math1[i%math1.Length])
            {
                counts[0]++;
            }
            if(answers[i] == math2[i%math2.Length])
            {
                counts[1]++;
            }
            if(answers[i] == math3[i%math3.Length])
            {
                counts[2]++;
            }
        }
        int max = counts.Max();
        for(int i = 0; i< counts.Length; i++)
        {
            if(max == counts[i])
            {
                answer.Add(i+1);
            }
        }
        answer.Sort();
        return answer.ToArray();
    }
}",https://github.com/rlaalsxo/CodingTest,2023. 9. 5,47,2
2023. 9. 5 오전 9:30:54,공혜진,AI,24 - 문자열 내림차순으로 배치하기,"def solution(s):
    answer = ''.join(sorted(s, reverse=True))
    return answer
",,2023. 9. 5,24,1
2023. 9. 5 오전 9:31:10,김예준,Unity,48 - 소수 만들기,"using System;

class Solution
{
    public int solution(int[] nums)
    {
        int answer = 0;
        int[] prime = new int[3000];

        for (int i = 1; i < prime.Length; i++)
        {
            prime[i] = i;
        }
        
        
        for (int i = 2; i * i < prime.Length; i++)
        {
            if (prime[i] == 0) continue;
            
            for (int j = i + i; j < prime.Length; j += i)
            {
                prime[j] = 0;
            }
        }
        
        int len = nums.Length;
        for (int i = 0; i < len; i++)
        {
            for (int j = i + 1; j < len; j++)
            {
                for (int k = j + 1; k < len; k++)
                {
                    if (prime[nums[i] + nums[j] + nums[k]] != 0) answer++;
                }
            }
        }

        return answer;
    }
}",,2023. 9. 5,48,2
2023. 9. 5 오전 9:31:22,장성림,Unity,40 - 가장 가까운 같은 글자,"using System;
using System.Collections.Generic;

public class Solution {
    public int[] solution(string s) {
        int[] answer = new int[] {};
        List<int> list = new List<int>();
        list.Add(-1);
        for(int i = 1; i < s.Length; i++){
            int lastI = -1;
            for(int j = 0; j < i; j++){
                if (s[j] == s[i])
                    lastI = j;
            }
            if(lastI != -1)
                list.Add(i - lastI);
            else
                list.Add(lastI);
        }
        answer = list.ToArray();
        return answer;
    }
}",https://github.com/hoobhoob,2023. 9. 5,40,2
2023. 9. 5 오전 9:31:45,지민규,Unity,33 - 크기가 작은 부분,"using System;

public class Solution {
    public int solution(string t, string p) {
        int answer = 0;
        long pNum = long.Parse(p);
        for (int i = 0; i < t.Length - p.Length + 1; i++)
        {
            long tNum = long.Parse(t.Substring(i, p.Length));
            answer += (tNum <= pNum)? 1 : 0;
        }
        return answer;
    }
}",,2023. 9. 5,33,2
2023. 9. 5 오전 9:32:16,기현빈,Unity,34 - 최소직사각형,"using System;

public class Solution {
    public int solution(int[,] sizes) {
        int answer = 0;
        int maxR = 1, maxC = 1;
        
        for (int i = 0; i < sizes.GetLength(0); i++) {
            if(sizes[i,0] < sizes[i,1]) {
                int temp = sizes[i,0];
                sizes[i,0] = sizes[i,1];
                sizes[i,1] = temp;
            }
            if(sizes[i,0] > maxR) maxR = sizes[i,0];
            if(sizes[i,1] > maxC) maxC = sizes[i,1];
        }
        
        answer = maxR*maxC;
        
        return answer;
    }
}",,2023. 9. 5,34,2
2023. 9. 5 오전 9:32:38,권선영,Unity,11 - 하샤드 수,"public class Solution {
    public bool solution(int x) {
        bool answer = true;

        string s = x.ToString();
        int sum = 0;
        foreach (char c in s) {
            sum += int.Parse(c.ToString());
        }
        if (x % sum != 0) {
            answer = false;
        }
        return answer;
    }
}",https://github.com/Tealss,2023. 9. 5,11,1
2023. 9. 5 오전 9:33:28,김하늘,Unity,30 - 3진법 뒤집기,"using System;
using System.Collections.Generic;

public class Solution 
{
    public int solution(int n) 
    {
        List<int> list = new List<int>();
        int temp = n;
        while (temp > 0)
        {
            list.Add(temp % 3);
            temp /= 3;
        }

        int answer = 0;
        for (int i = 0; i < list.Count; i++)
            answer += (int)Math.Pow(3, list.Count - i - 1) * list[i];
        return answer;
    }
}",,2023. 9. 5,30,1
2023. 9. 5 오전 9:33:36,김도현A,Unity,9 - 정수 제곱근 판별,"public class Solution {
    public long solution(long n) {
        long answer = 0;
        
              for(long i=1; i<=n; i++)
        {
            if(i*i==n)
            {
                answer =(i+1)*(i+1);
                break;
            }
            else if(i*i>=n)
            {
                break;
            }
        }
        if(answer ==0)
        {
            answer =-1;
        }
  
        
        
        
        
        return answer;
    }
}",,2023. 9. 5,9,1
2023. 9. 5 오전 9:34:11,박민호,Unity,36 - 숫자 문자열과 영단어,"using System;

public class Solution {
    public int solution(string s) {
        string[] numbers = new string[]
        {
            ""zero"",
            ""one"",
            ""two"",
            ""three"",
            ""four"",
            ""five"",
            ""six"",
            ""seven"",
            ""eight"",
            ""nine"",
        };

        for (int i = 0; i < numbers.Length; i++)
        {
            if (s.Contains(numbers[i]))
                s = s.Replace(numbers[i], $""{i}"");
        }

        int answer = int.Parse(s);
        return answer;
    }
}",,2023. 9. 5,36,2
2023. 9. 5 오전 9:34:30,조호진,AI,31 - 이상한 문자 만들기,"def solution(s):
    a = s.split("" "")
    answer = []

    for word in a:
        b = ''
        for i in range(len(word)):
            if i % 2 == 0:
                b += word[i].upper()
            else:
                b += word[i].lower()
        answer.append(b)
    return "" "".join(answer)
",https://github.com/bm4706/Algorithm_practice/commit/b6b34cc50d9c0cb37d0b1251b240238ccf49710a,2023. 9. 5,31,2
2023. 9. 5 오전 9:34:54,박민혁,Unity,32 - 삼총사,"using System;

public class Solution {
    public int solution(int[] number) {
        int answer = 0;
        for(int i=0;i<number.Length-2;++i)
    {
        for(int j=i+1;j<number.Length-1;++j)
        {
            for(int k=j+1;k<number.Length;++k)
                if(number[i]+number[j]+number[k]==0)
                {
                    answer++;
                }
        }
    }
        return answer;
    }
}",,2023. 9. 5,32,2
2023. 9. 5 오전 9:35:14,신해준,Unity,19 - 제일 작은 수 제거하기,"using System;
using System.Linq;

public class Solution 
{
    public int[] solution(int[] arr) 
    {
        if (arr.Length <= 1)
        {
            // 배열의 길이가 1 이하인 경우, 배열에 -1을 채워서 반환
            return new int[] { -1 };
        }
        else
        {
            // 배열에서 가장 작은 수를 찾음
            int minValue = arr.Min();
            
            // 가장 작은 수를 제외한 배열을 생성
            int[] answer = arr.Where(x => x != minValue).ToArray();
            
            return answer;
        }
    }
}
",,2023. 9. 5,19,1
2023. 9. 5 오전 9:36:00,이성권,Unity,9 - 정수 제곱근 판별,"using System;
public class Solution {
    public long solution(long n) {
        long answer = 0;
        
        //지정된 숫자의 제곱근 반환
        double x = Math.Sqrt(n);
        
        //반환된 제곱근이 실수가 아니고 자연수이면 1로 나눈 나머지가 0이다.
        if(x%1==0) return (long)((x+1)*(x+1));
        else return -1;
    }
}",https://github.com/LeeSeongGwon,2023. 9. 5,9,1
2023. 9. 5 오전 9:36:01,이선재,Unity,52 - 옹알이 (2),"#include <string>
#include <vector>

using namespace std;

bool Speak(string s){
    string prev = """";
    
    while(true){
        
        if(s.length() == 0)
            return true;
        
        string s1 = s.substr(0, 2);
        string s2 = s.substr(0, 3);
        
        if(prev == s1 || prev == s2)
            return false;
        
        if(s2 == ""aya""){
            s.erase(0, 3);
            prev = ""aya"";
            continue;
        }
        else if(s2 == ""woo""){
            s.erase(0, 3);
            prev = ""woo"";
            continue;
        }
        
        if(s1 == ""ye""){
            s.erase(0, 2);
            prev = ""ye"";
            continue;
        }
        else if(s1 == ""ma""){
            s.erase(0, 2);
            prev = ""ma"";
            continue;
        }
        
        return false;
    }
}

int solution(vector<string> babbling) {
    int answer = 0;
    
    for(int i = 0; i < babbling.size(); i++){
        if(Speak(babbling[i])){
            answer += 1;
        }
    }
    
    return answer;
}",https://github.com/Lyrwhitt/Algorithm/blob/main/Programmers/LEVEL1/%EC%98%B9%EC%95%8C%EC%9D%B4%20(2),2023. 9. 5,52,2
2023. 9. 5 오전 9:36:16,박준규,Unity,27 - 행렬의 덧셈,"public class Solution 
{
    public int[,] solution(int[,] arr1, int[,] arr2)
    {
        int[,] answer = new int[arr1.GetLength(0),arr1.GetLength(1)];
        for (int i = 0; i < arr1.GetLength(0); i++)
        {
            for (int j = 0; j < arr1.GetLength(1); j++)
            {
                answer[i,j] = arr1[i, j] + arr2[i, j];
            }
        }
        return answer;
    }
}",,2023. 9. 5,27,1
2023. 9. 5 오전 9:36:18,김명식,Unity,24 - 문자열 내림차순으로 배치하기,"using System;

public class Solution {
    public string solution(string s) {
        string answer = """";
        char[] chr = s.ToString().ToCharArray();
        Array.Sort(chr);
        Array.Reverse(chr);
        answer=string.Join("""", chr);
        return answer;
    }
}",https://github.com/D0ryeon/Algorithm-Code-Kata/tree/main,2023. 9. 5,24,1
2023. 9. 5 오전 9:38:19,차명경,AI,23 - 약수의 개수와 덧셈,"def solution(left, right):
    answer = 0
    for i in range(left,right+1):
        cnt = 0
        for a in range(1,i+1):
            if (i%a == 0):
                cnt+=1	#약수의 개수 count
        if cnt%2==0:	#약수의 개수가 짝수면 더하기
            answer += i
        else:		#약수의 개수가 홀수면 더하기
            answer -= i
    return answer",,2023. 9. 5,23,1
2023. 9. 5 오전 9:38:46,이승연,Unity,16 - 음양 더하기,"using System;

public class Solution {
    public int solution(int[] absolutes, bool[] signs) {
        int answer = 0;
        
        for(int i=0;i<absolutes.Length;i++)
        {
            
            if(signs[i]==true)
            {
                answer+=absolutes[i];
            }
            else
                answer-=absolutes[i];
                
            
        }
        
        return answer;
    }
}",,2023. 9. 5,16,1
2023. 9. 5 오전 9:39:24,이기호,AI,23 - 약수의 개수와 덧셈,"def solution(left, right):
    answer = 0
    
    for i in range(left, right+1):
        count = 0
        for i2 in range(1, i+1):
            if i % i2 == 0:
                count += 1
        if count % 2==0:
            answer += i
        else:
            answer -= i
    return(answer)",,2023. 9. 5,23,1
2023. 9. 5 오전 9:39:41,우민규,Unity,23 - 약수의 개수와 덧셈,"using System;

public class Solution {
    public int solution(int left, int right) {
        
        int answer = 0;
        
        //left~right
        for(int i=left; i<=right; i++)
        {
            int count=0;
            
            //약수의 개수 count 구하기
            for(int j=1; j<=i; j++)
            {
                //약수 구하기 (i : 주어진 수, j : 해당 수의 약수 후보)
                if(i%j==0) count++;
            }
            
            //내부 반복문(약수의 개수 count 구하기) 종료 후 결과값에 가감하기
            
            
            //해당 반복의 수가 짝수인 경우 + (i의 약수가 짝수로 존재)
            if(count%2==0) answer += i;
            //해당 반복의 수가 홀수인 경우 - (i의 약수가 홀수로 존재)
            else answer -= i;
        }
        return answer;
    }
}",https://github.com/Woomingyu/Programmers.git,2023. 9. 5,23,1
2023. 9. 5 오전 9:39:51,이경현,Unity,35 - 시저 암호,"public string solution(string s, int n)
{
    char[] chars = s.ToCharArray();
    for (int i = 0; i < chars.Length; i++)
    {
        if (n >= 26)
        {
            while (n < 26)
            {
                n -= 26;
            }
        }

        if (chars[i] != ' ')
        {
            if (chars[i] > 96)
            {
                chars[i] = (char)(chars[i] + n);

                if (chars[i] > 122)
                {
                    chars[i] = (char)(chars[i] - 26);
                }
            }

            else
            {
                chars[i] = (char)(chars[i] + n);

                if (chars[i] > 90)
                {
                    chars[i] = (char)(chars[i] - 26);
                }
            }
        }
    }

    return new string(chars);
}",https://github.com/516lkh/Algorithm,2023. 9. 5,35,2
2023. 9. 5 오전 9:39:57,윤지연,Unity,20 - 가운데 글자 가져오기,"public class Solution {
    public string solution(string s) {
        int start = s.Length/2;
        int end = 1;
        if(s.Length % 2 == 0)
        {
            start--;
            end++;
        }
        return s.Substring(start, end);
    }
}",https://github.com/jungbosong/Codekata/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12903.%E2%80%85%EA%B0%80%EC%9A%B4%EB%8D%B0%E2%80%85%EA%B8%80%EC%9E%90%E2%80%85%EA%B0%80%EC%A0%B8%EC%98%A4%EA%B8%B0,2023. 9. 5,20,1
2023. 9. 5 오전 9:40:16,김민태,Unity,48 - 소수 만들기,"public class Solution
{
    public int solution(int[] nums)
    {
        int answer = 0;
        
        for(int i = 0; i < nums.Length - 2; ++i)
        {
            for(int j = i + 1; j < nums.Length - 1; ++j)
            {
                for(int k = j + 1; k < nums.Length; ++k)
                {
                    int sum = nums[i] + nums[j] + nums[k];
                    if (IsPrimeNumber(sum))
                    {
                        answer++;
                    }
                }
            }
        }
        return answer;
    }
    // 소수 판별 메서드
    bool IsPrimeNumber(int number)
    {
        for(int i = 2; i < number; ++i)
        {
            if (number % i == 0)
            {
                return false;
            }
        }
        return true;
    }
}",https://github.com/rlaalsxo/CodingTest,2023. 9. 5,48,2
2023. 9. 5 오전 9:40:17,송명헌,AI,5 - 나머지가 1이 되는 수 찾기," 

def solution(n):
   
    for i in range(2,n):
   
      
        if(n % i == 1):
 
           
            return i",,2023. 9. 5,5,1
2023. 9. 5 오전 9:40:17,장현교,Unity,14 - 서울에서 김서방 찾기,"public string solution(string[] seoul)
{
    string answer = """";
    answer = $""김서방은 {Array.IndexOf(seoul, ""Kim"")}에 있다"";
    return answer;
}",,2023. 9. 5,14,1
2023. 9. 5 오전 9:40:58,기현빈,Unity,35 - 시저 암호,"public class Solution {
    public string solution(string s, int n) {
        string answer = """";
        
        foreach(char c in s) {
            answer += pushChar(c, n);
        }
        
        return answer;
    }
    
    public char pushChar(char c, int n) {
        if('a' <= c && c <= 'z') {
            return (char)((c + n - 'a') % 26 + 'a');
        }
        else if('A' <= c && c <= 'Z') {
            return (char)((c + n - 'A') % 26 + 'A');
        }
        else {
            return ' ';
        }
    }
}",,2023. 9. 5,35,2
2023. 9. 5 오전 9:41:20,김민석,Unity,15 - 나누어 떨어지는 숫자,"using System.Collections.Generic;

public class Solution {
    public int[] solution(int[] arr, int divisor) {
        List<int> answer = new List<int>();
        for(int i = 0; i < arr.Length; i++)
        {
            if(arr[i] % divisor == 0)
            {
                answer.Add(arr[i]);
            }
        }

        if(answer.Count == 0)
            return new int[] { -1 };

        answer.Sort();

        return answer.ToArray();
    }
}",https://github.com/ms0753/codekata/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12910.%E2%80%85%EB%82%98%EB%88%84%EC%96%B4%E2%80%85%EB%96%A8%EC%96%B4%EC%A7%80%EB%8A%94%E2%80%85%EC%88%AB%EC%9E%90%E2%80%85%EB%B0%B0%EC%97%B4/%EB%82%98%EB%88%84%EC%96%B4%E2%80%85%EB%96%A8%EC%96%B4%EC%A7%80%EB%8A%94%E2%80%85%EC%88%AB%EC%9E%90%E2%80%85%EB%B0%B0%EC%97%B4.cs,2023. 9. 5,15,1
2023. 9. 5 오전 9:41:27,김나운,Unity,25 - 부족한 금액 계산하기,"using System;

class Solution
{
    public long solution(int price, int money, int count)
    {
        long answer = 0;
        long sum = 0;
        
        for(int i=1;i<count+1;i++)
        {
            sum += (long)price * i;
        }
        answer = sum-money;
        
        if(answer < 0)
            return 0;
        
        return answer;
    }
}",,2023. 9. 5,25,1
2023. 9. 5 오전 9:41:29,지민규,Unity,34 - 최소직사각형,"using System;

public class Solution {
    public int solution(int[,] sizes) {
        int answer = 0;
        int maxCol = 0;
        int maxRow = 0;
        for (int i = 0; i < sizes.GetLength(0); i++)
        {
            int eachCol = (sizes[i, 0] > sizes[i, 1]) ? sizes[i, 0] : sizes[i, 1];
            int eachRow = (sizes[i, 0] > sizes[i, 1]) ? sizes[i, 1] : sizes[i, 0];
            maxCol = (maxCol > eachCol) ? maxCol : eachCol;
            maxRow = (maxRow > eachRow) ? maxRow : eachRow;
        }
        answer = maxCol * maxRow;
        return answer;
    }
}",,2023. 9. 5,34,2
2023. 9. 5 오전 9:41:41,배인호,Unity,47 - 모의고사완전탐색,"using System.Collections.Generic;
using System;
using System.Linq;

public class Solution
{
    public int[] solution(int[] answers)
    {
        int answersIndex = answers.Length;

        List<int> winner = new List<int>();
        int[] score = new int[3];

        int[] student1 = { 1, 2, 3, 4, 5 };
        int[] student2 = { 2, 1, 2, 3, 2, 4, 2, 5 };
        int[] student3 = { 3, 3, 1, 1, 2, 2, 4, 4, 5, 5 };

        for (int i = 0; i < answersIndex; i++)
        {
            if (student1[i % 5] == answers[i])
            {
                score[0]++;
            }
            if (student2[i % 8] == answers[i])
            {
                score[1]++;
            }
            if (student3[i % 10] == answers[i])
            {
                score[2]++;
            }
        }

        List<int> compareScore = score.ToList();
        compareScore = compareScore.OrderByDescending(x => x).ToList();

        for (int i = 0; i < 3; i++)
        {
            if (score[i] == compareScore[0])
            {
                winner.Add(i + 1);
            }
        }

        return winner.OrderBy(p => p).ToArray();
    }
}
",https://github.com/cutlake2000/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/42840.%E2%80%85%EB%AA%A8%EC%9D%98%EA%B3%A0%EC%82%AC,2023. 9. 5,47,2
2023. 9. 5 오전 9:41:47,김광수,Unity,68 - 피보나치 수,"using System;
public class Solution 
{
    int[] dp = new int[100001];
    
    public int solution(int n) 
    {
        return Fibo(n);
    }
    
    public int Fibo(int n)
    {
        if (n < 2) return n;
        
        
        if (dp[n] == 0)
        {
            dp[n] = Fibo(n-2) + Fibo(n-1);
        }
            
        return dp[n]% 1234567;
    }
}",https://github.com/kksoo0131/Study/commit/c437e0e9e8fb1b64c5402d4ab0a92805fccb72c3,2023. 9. 5,68,3
2023. 9. 5 오전 9:41:55,강상찬,AI,47 - 모의고사완전탐색,"def solution(answers):
    lis1 = [1, 2, 3, 4, 5]
    lis2 = [2, 1, 2, 3, 2, 4, 2, 5]
    lis3 = [3, 3, 1, 1, 2, 2, 4, 4, 5, 5]
    answer = []
    a1 = 0
    a2 = 0
    a3 = 0
    
    for i, ans in enumerate(answers):
        if (lis1[i%5] == ans):
            a1 += 1
        if (lis2[i%8] == ans):
            a2 += 1
        if (lis3[i%10] == ans):
            a3 += 1
    if (max(a1, a2, a3) == a1):
        answer.append(1)
    if (max(a1, a2, a3) == a2):
        answer.append(2)
    if (max(a1, a2, a3) == a3):
        answer.append(3)
        
    return answer",,2023. 9. 5,47,2
2023. 9. 5 오전 9:42:04,최수용,Unity,113 - 하노이의 탑,"using System;
using System.Collections.Generic;

public class Solution
{
    public int[,] solution(int n)
    {

        List<List<int>> forAnswer = new List<List<int>>();
        forAnswer = TowerOfHanoi(1, 3, 2, n);
        int[,] answer = new int[forAnswer.Count,2];

        for ( int i=0; i < forAnswer.Count; i++)
        {
            answer[i,0] = forAnswer[i][0];
            answer[i,1] = forAnswer[i][1];
        }

        return answer;
    }

    public List<List<int>> TowerOfHanoi(int start, int end, int sub, int num)
    {
        List<List<int>> result = new List<List<int>>();
        if (num == 1)
        {
            List<int> temp = new List<int> { start, end };
            result.Add(temp);
        }
        else
        {
            result.AddRange(TowerOfHanoi(start, sub, end, num - 1));
            List<int> temp = new List<int> { start, end };
            result.Add(temp);
            result.AddRange(TowerOfHanoi(sub, end, start, num - 1));
        }
        return result;
    }
}",,2023. 9. 5,113,5
2023. 9. 5 오전 9:42:36,신우석,Unity,57 - 둘만의 암호,"using System;
using System.Collections.Generic;
using System.Text;

public class Solution {
    public string solution(string s, string skip, int index) {
        bool[] isSkipped = new bool[26];
        foreach (char c in skip)
            isSkipped[(int)(c - 'a')] = true;
        
        List<char> charList = new List<char>();
        List<int> order = new List<int>();
        char candidate = 'a';
        int orderCount = 0;
        foreach (bool b in isSkipped) {
            if (b == false) { 
                charList.Add(candidate);
                order.Add(orderCount++);
            }
            else order.Add(orderCount);
            ++candidate;
        }
        
        StringBuilder answer = new StringBuilder();
        foreach (char c in s)
            answer.Append(charList[(order[(int)(c - 'a')] + index) % charList.Count]);
        
        return answer.ToString();
    }
}",https://github.com/seoksii/AlgorithmCodeKata/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/unrated/155652.%E2%80%85%EB%91%98%EB%A7%8C%EC%9D%98%E2%80%85%EC%95%94%ED%98%B8,2023. 9. 5,57,3
2023. 9. 5 오전 9:42:46,김민상,Unity,55 - 문자열 나누기,"public class Solution {
    public int solution(string s) {
        int answer = 0;
        int count = 0;
        string now = """";
        
        foreach (char c in s)
        {
            now += c;
            
            if (c == now[0])
                count += 1;
            
            else if (count != 0 && now.Length >= 2 * count)
            {
                count = 0;
                now = """";
                answer += 1;
            }
        }
        
        return (now.Length > 0)? answer + 1 : answer;
    }
}",,2023. 9. 5,55,3
2023. 9. 5 오전 9:43:37,이현지,Unity,41 - 푸드 파이트 대회,"using System;
using System.Linq;


public class Solution 
{
    public string solution(int[] food) 
    {
        string answer = """";
        
        for (int i = 1; i < food.Length; i++)
        {
            int count = 0;
            if (food[i] % 2 == 1) count = (food[i] - 1) / 2;
            else count = food[i] / 2;
            answer += new string(' ', count).Replace("" "", i.ToString());
        }
        string copy = new string(answer.Reverse().ToArray());
        answer = answer + ""0"" + copy;
        
        return answer;
    }
}",https://github.com/szlovelee/Programmers-Algorithm,2023. 9. 5,41,2
2023. 9. 5 오전 9:43:40,차명경,AI,24 - 문자열 내림차순으로 배치하기,"def solution(s):
    answer=''
    s= list(s)
    s.sort(reverse=True)
    for i in s:
        answer+=i
    return answer

        ",,2023. 9. 5,24,1
2023. 9. 5 오전 9:43:40,우성훈,Unity,8 - 문자열을 정수로 바꾸기,"using System;
public class Solution {
    public int solution(string s) {
        int answer = 0;
        answer = Convert.ToInt32(s);
        return answer;
    }
}",,2023. 9. 5,8,1
2023. 9. 5 오전 9:44:45,최장범,Unity,31 - 이상한 문자 만들기,"public class Solution {
    public string solution(string s) {
        string answer = """";
        int num = 0;

        for(int i = 0; i < s.Length; i++)
        {
            answer += num % 2 == 0 ? s[i].ToString().ToUpper() : s[i].ToString().ToLower();

            num = s[i] == ' '? 0 : num + 1;

        }


        return answer;
    }
}",,2023. 9. 5,31,2
2023. 9. 5 오전 9:45:12,문현우,Unity,19 - 제일 작은 수 제거하기,"using System;
using System.Linq;
using System.Collections.Generic;

public class Solution {
    public int[] solution(int[] arr) {
        List<int> answer = new List<int>();
        foreach (int num in arr)
            answer.Add(num);
        int minValue = answer.Min();
        answer.Remove(minValue);
        if(answer.Count == 0){
            answer.Add(-1);
        }
        return answer.ToArray();
    }
}",https://github.com/Munch310/Algorithm-Csharp/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12935.%E2%80%85%EC%A0%9C%EC%9D%BC%E2%80%85%EC%9E%91%EC%9D%80%E2%80%85%EC%88%98%E2%80%85%EC%A0%9C%EA%B1%B0%ED%95%98%EA%B8%B0,2023. 9. 5,19,1
2023. 9. 5 오전 9:45:57,장성림,Unity,41 - 푸드 파이트 대회,"using System;
using System.Linq;
public class Solution {
    public string solution(int[] food) {
        string answer = """";
        string tmp = """";
        for(int i = 1; i < food.Length; i++){
            for(int j = 0; j < food[i] / 2; j++)
                tmp += i.ToString();
        }
        answer = tmp + ""0"" + new string(tmp.ToCharArray().Reverse().ToArray());
        return answer;
    }
}",https://github.com/hoobhoob,2023. 9. 5,41,2
2023. 9. 5 오전 9:46:19,손병의,Unity,19 - 제일 작은 수 제거하기,"using System;
using System.Collections.Generic;
using System.Linq;

public class Solution 
{
    public int[] solution(int[] arr)
    {
        // 배열 arr을 List로 변환
        List<int> answer = arr.ToList();
        
        // 리스트에서 최소값 찾기
        int min = answer.Min();
        
        // 리스트에서 최소값 제거
        answer.Remove(min);
        
        // 리스트가 비어있다면 -1을 추가
        if(answer.Count < 1)
            answer.Add(-1);
        
        // 리스트를 배열로 변환
        return answer.ToArray();
    }
}",https://github.com/Son-BE/CodeKata1,2024. 9. 5,19,1
2023. 9. 5 오전 9:47:04,강성호,Unity,49 - 덧칠하기,"using System;

public class Solution {
    public int solution(int n, int m, int[] section) {
     int answer = 0;
		int num = 0;
		for(int i = 0; i < section.Length; i++)
		{
			if (section[i] > num)
			{
				num = section[i] + m - 1;
				answer++;
			}
		}
		return answer;
    }
}",,2023. 9. 5,49,2
2023. 9. 5 오전 9:47:11,한병권,Unity,53 - 숫자 짝꿍,"using System;
using System.Collections.Generic;
using System.Linq;

public class Solution {
    public string solution(string X, string Y) {
        string answer = """";
        List<char> listX = X.ToCharArray().ToList();
        List<char> listY = Y.ToCharArray().ToList();

        listX = listX.OrderByDescending(i=>i).ToList();
        listY = listY.OrderByDescending(i=>i).ToList();
        
        int indexX = -1;
        int indexY = -1;
        int r = 0;
        
        for(int i = 9; i > -1; i--)
        {
            int tempX = listX.FindLastIndex(c => c == (char)(i + '0'));
            int tempY = listY.FindLastIndex(c => c == (char)(i + '0'));

            if(tempX > -1 && tempY > -1)
            {
                if(tempX - indexX >= tempY - indexY)
                {
                    r = tempY - indexY;
                }
                else
                {
                    r = tempX - indexX;
                }

                string str = new string((char)(i + '0'), r);
                answer = answer + str;
            }
              
            if(tempX > -1)
            {
                indexX = tempX;
            }
            
            if(tempY > -1)
            {
                indexY = tempY;
            }
            
        }
        
        if(answer == """") answer = ""-1"";
        if(answer.Substring(0,1) == ""0"") answer = ""0"";
        
        return answer;
    }
}",https://github.com/hbg9212/AlgorithmCodekata,2023. 9. 5,53,2
2023. 9. 5 오전 9:47:30,신해준,Unity,20 - 가운데 글자 가져오기,"public class Solution
{
    public string solution(string s) 
    {
        string answer = """";
        int length = s.Length;
        int middleN= 0;
        if (length %2 ==1)
        {
            middleN = length / 2 ;
            return answer=s.Substring(middleN, 1);
            
        }
        else
        {
            middleN = length / 2 -1;
            return answer=s.Substring(middleN, 2);
            
        }
        return answer;
    }
}",,2023. 9. 5,20,1
2023. 9. 5 오전 9:47:55,송유섭,Unity,10 - 정수 내림차순으로 배치하기,"using System;

public class Solution
{
        public long solution(long n)
        {
            long answer = 0;

            string n_str = n.ToString();

            char[] n_arr = n_str.ToCharArray();

            Array.Sort(n_arr);
            Array.Reverse(n_arr);

            n_str = new string(n_arr);

            answer = long.Parse(n_str);

            return answer;
        }
}",https://github.com/SongJinx3512/codeKata/blob/main/codeKata%20lv%201%20%23010%20%EC%A0%95%EC%88%98%20%EB%82%B4%EB%A6%BC%EC%B0%A8%EC%88%9C%EC%9C%BC%EB%A1%9C%20%EB%B0%B0%EC%B9%98%ED%95%98%EA%B8%B0,2023. 9. 5,10,1
2023. 9. 5 오전 9:48:32,공혜진,AI,25 - 부족한 금액 계산하기,"def solution(price, money, count):
    answer = 0
    for i in range(1, count+1):
        answer += price * i
    if answer < money:
        answer = 0
    else:
        answer = answer - money
    return answer",,2023. 9. 5,25,1
2023. 9. 5 오전 9:48:37,김도현B,Unity,40 - 가장 가까운 같은 글자,"using System;
using System.Collections.Generic;
public class Solution {
    public int[] solution(string s) {
        List<char> chars = new List<char>();
        int[] answer = new int[s.Length];
        chars.Add(s[0]);
        answer[0] = -1;
        for (int i = 1; i < s.Length; i++)
        {
            int n = chars.LastIndexOf(s[i]);
            chars.Add(s[i]);
            if (n == -1)
                answer[i] = -1;
            else
                answer[i] = i - n;
        }
        return answer;
    }
}",https://github.com/subscriptioncat/Algorithm,2023. 9. 5,40,2
2023. 9. 5 오전 9:48:41,조호진,AI,32 - 삼총사,"
def solution(number):
    answer = 0
    a = len(number)
    for i in range(a):
        for j in range(i+1,a):
            for k in range(j+1,a):
                if number[i] + number[j] + number[k] == 0:
                    answer += 1
        
    return answer",https://github.com/bm4706/Algorithm_practice/commit/f7b01505e8ef82ec5c46c6a0600a5642a5835f07,2023. 9. 5,32,2
2023. 9. 5 오전 9:48:44,김어진,Unity,17 - 핸드폰 번호 가리기,"public class Solution {
    public string solution(string phone_number) {
        string answer = """";
        answer = phone_number.Substring(phone_number.Length-4, 4);
        for (int i=0; i < phone_number.Length-4; i++){
            answer = answer.Insert(i,""*"");
        }
        
        return answer;
    }
}",https://github.com/KimEoJin24/ProgrammersCodingTests/commit/d535d80911bef264f519e45f69007194452d321b,2023. 9. 5,17,1
2023. 9. 5 오전 9:49:30,김연우,Unity,8 - 문자열을 정수로 바꾸기,"#include <stdio.h>
#include <stdbool.h>
#include <stdlib.h>

int solution(const char* s) {
    int index = 0;
    int sign = 1; 

    if (s[0] == '-') {
        sign = -1; 
        index = 1; 
    } else if (s[0] == '+') {
        index = 1; 
    }

    int result = 0;
    while (s[index] != '\0') {
        char current_char = s[index];

        if (current_char >= '0' && current_char <= '9') {
            result = result * 10 + (current_char - '0');
        } else {
            break;
        }

        index++; 
    }

    return result * sign;
}

int main() {
    const char* str1 = ""1234"";
    const char* str2 = ""-1234"";

    int result1 = solution(str1);
    int result2 = solution(str2);

    printf(""%d\n"", result1); 
    printf(""%d\n"", result2); 

    return 0;
}
",,2023. 9. 5,8,1
2023. 9. 5 오전 9:50:05,김예준,Unity,49 - 덧칠하기,"using System;
using System.Collections.Generic;

public class Solution {
    public int solution(int n, int m, int[] section) {
        int answer = 0;
        
        Dictionary<int, bool> check = new Dictionary<int, bool>();
        int len = section.Length;
        
        if (m == 1) return len;
        
        for (int i = 0; i < len; i++) check[section[i]] = false;
        
        for (int i = 0; i < len; i++)
        {
            if (check[section[i]]) continue;
            
            if (i == len - 1)
            {
                if (!check[section[i]])
                {
                    check[section[i]] = true;
                    answer++;
                }
            }
            else
            {
                if (!check[section[i]])
                {
                    check[section[i]] = true;
                    answer++;
                    
                    for (int j = len - 1; j > i; j--)
                    {
                        if (section[j] - section[i] < m)
                        {
                            check[section[j]] = true;
                        }
                    }
                }
            }
        }
        
        return answer;
    }
}",,2023. 9. 5,49,2
2023. 9. 5 오전 9:50:09,박민호,Unity,37 - 문자열 내 마음대로 정렬하기,"using System.Linq;
public class Solution {
    public string[] solution(string[] strings, int n) {
        return strings.OrderBy(str => str[n]).ThenBy(str => str).ToArray();
    }
}",,2023. 9. 5,37,2
2023. 9. 5 오전 9:50:40,이기호,AI,24 - 문자열 내림차순으로 배치하기,"def solution(s):
    s2 = sorted(s, reverse=True)
    s3 = """".join(s2)
    
    return(s3)",,2023. 9. 5,24,1
2023. 9. 5 오전 9:50:45,김민태,Unity,49 - 덧칠하기,"public class Solution {
    public int solution(int n, int m, int[] section) {
        int answer = 0;
        int num = 0;
        
        for(int i = 0; i < section.Length; i++)
        {
            if(section[i] > num)
            {
                num = (section[i] + m) - 1;
                answer++;
            }
        }
        
        return answer;
    }
}",https://github.com/rlaalsxo/CodingTest,2023. 9. 5,49,2
2023. 9. 5 오전 9:50:54,이장원,Unity,10 - 정수 내림차순으로 배치하기,"namespace codekata
{
    using System;
    public class Solution
    {
        public long solution(long k)
        {
            char[] arr = k.ToString().ToCharArray();
            Array.Sort(arr);
            Array.Reverse(arr);
            long answer = Convert.ToInt64(new string(arr));

            return answer;
        }
    }
}",,2023. 9. 5,10,1
2023. 9. 5 오전 9:50:58,이솔,AI,28 - 직사각형 별찍기,"a, b = map(int, input().strip().split(' '))

for i in range(b):
    print('*'*a)",,2023. 9. 5,28,1
2023. 9. 5 오전 9:51:24,이솔,AI,29 - 최대공약수와 최소공배수,"from math import gcd

def solution(n, m): 
    return [gcd(n,m), (n*m)/gcd(n,m)]",,2023. 9. 5,29,1
2023. 9. 5 오전 9:51:30,김종훈,Unity,51 - 로또의 최고 순위와 최저 순위,"using System;
using System.Linq;

public class Solution {
    public int[] solution(int[] lottos, int[] win_nums) {
        int right = 0;
        int zeroCount =0;
        for(int i=0; i<lottos.Length; i++)
        {
            if(lottos[i]==0) 
            {
                zeroCount++;
            }
            if(lottos.Contains(win_nums[i]))
            {
                right++;
            }
        }
        int MaxCollect = zeroCount+right;
        int MinCollect = right;
        if(MinCollect==0) MinCollect++;
        if(MaxCollect==0) MaxCollect++;
        int[] answer = new int[] {7-MaxCollect,7-MinCollect};
        return answer;
    }
}",,2023. 9. 5,51,2
2023. 9. 5 오전 9:51:33,박준규,Unity,28 - 직사각형 별찍기,"using System;

public class Example
{
    public static void Main()
    {
        String[] s;

        Console.Clear();
        s = Console.ReadLine().Split(' ');

        int a = Int32.Parse(s[0]); // 첫번째 값(예시에서는 5)
        int b = Int32.Parse(s[1]); // 두번째 값(예시에서는 3)
        for(int j = 0; j<b;j++){
            for(int i =0;i<a;i++){
                Console.Write(""*"");
            }
            Console.WriteLine("" "");
        }

        //Console.WriteLine(""{0}"", a + b);
    }
}",,2023. 9. 5,28,1
2023. 9. 5 오전 9:51:43,윤지연,Unity,21 - 수박수박수박수박수박수?,"public class Solution {
    public const string WATER_MELLON = ""수박"";
    public string solution(int n) {
        string answer = """";
        
        answer = Repeat(n/2);
        if(n % 2 != 0)
        {
            answer += ""수"";
        }
        
        return answer;
    }
    
    public string Repeat(int count)
    {
        string result = """";
        for(int i = 0; i < count; i++)
        {
            result += WATER_MELLON;
        }
        return result;
    }
}",https://github.com/jungbosong/Codekata/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12922.%E2%80%85%EC%88%98%EB%B0%95%EC%88%98%EB%B0%95%EC%88%98%EB%B0%95%EC%88%98%EB%B0%95%EC%88%98%EB%B0%95%EC%88%98%EF%BC%9F,2023. 9. 5,21,1
2023. 9. 5 오전 9:51:48,이솔,AI,30 - 3진법 뒤집기,"def solution(n):
    answer = ''
    while n > 0:
        n, mod = divmod(n,3)
        answer += str(mod)
    answer = int(answer,3)
    return answer",,2023. 9. 5,30,1
2023. 9. 5 오전 9:51:50,기현빈,Unity,36 - 숫자 문자열과 영단어,"using System;

public class Solution {
    public int solution(string s) {
        int answer = 0;
        
        for(int i = 0; i < s.Length;) {
            int n;
            answer *= 10;
            
            if(int.TryParse(s[i].ToString(), out n)) {
                answer += n;
                i++;
                continue;
            }
            switch(s[i]) {
                case 'z':
                    i += 4;
                    break;
                case 'o':
                    answer += 1;
                    i += 3;
                    break;
                case 't':
                    if(s[i+1] == 'w') {
                        answer += 2;
                        i += 3;
                    }
                    else {
                        answer += 3;
                        i += 5;
                    }
                    break;
                case 'f':
                    if(s[i+1] == 'o') {
                        answer += 4;
                        i += 4;
                    }
                    else {
                        answer += 5;
                        i += 4;
                    }
                    break;
                case 's':
                    if(s[i+1] == 'i') {
                        answer += 6;
                        i += 3;
                    }
                    else {
                        answer += 7;
                        i += 5;
                    }
                    break;
                case 'e':
                    answer += 8;
                    i += 5;
                    break;
                case 'n':
                    answer += 9;
                    i += 4;
                    break;
            }
        }
        
        return answer;
    }
}",,2023. 9. 5,36,2
2023. 9. 5 오전 9:52:03,이승연,Unity,17 - 핸드폰 번호 가리기,"public class Solution {
    public string solution(string phone_number) {
        string answer = """";
        char[] numberList=phone_number.ToCharArray();
        for(int i=0;i<phone_number.Length-4;i++)
        {

                numberList[i]='*';
        }
        
        answer=new string(numberList);
        return answer;
    }
}",,2023. 9. 5,17,1
2023. 9. 5 오전 9:52:06,김나운,Unity,26 - 문자열 다루기 기본,"public class Solution {
    public bool solution(string s) {
        bool answer = true;
        char[] a = s.ToCharArray();
        
        foreach (char c in a) { 
            if (c < '0' || c > '9')
            {
                answer = false; 
            }
        }
        
        if (a.Length == 4 || a.Length == 6) {
            return answer; 
        }
        
        return false; 
    }
}
",,2023. 9. 5,26,1
2023. 9. 5 오전 9:52:14,이현지,Unity,42 - 콜라 문제,"using System;

public class Solution 
{
    public int solution(int a, int b, int n) 
    {
        int answer = 0;
        while (n >= a)
        {
            int left = n % a;
            n -= left;
            int added = (n / a) * b;
            answer += added;
            n = left + added;
        }
        return answer;
    }
}",https://github.com/szlovelee/Programmers-Algorithm,2023. 9. 5,42,2
2023. 9. 5 오전 9:52:18,김종훈,Unity,52 - 옹알이 (2),"using System;

public class Solution {
    public int solution(string[] babbling) {
        int answer = 0;
        string str = """";
        
        for(int i = 0; i < babbling.Length; i++)
        {
            babbling[i] = babbling[i].Replace(""aya"", ""1"");
            babbling[i] = babbling[i].Replace(""ye"", ""2"");
            babbling[i] = babbling[i].Replace(""woo"", ""3"");
            babbling[i] = babbling[i].Replace(""ma"", ""4"");
            
            babbling[i] = babbling[i].Replace(""11"", ""x"");
            babbling[i] = babbling[i].Replace(""22"", ""x"");
            babbling[i] = babbling[i].Replace(""33"", ""x"");
            babbling[i] = babbling[i].Replace(""44"", ""x"");
            
            str = babbling[i].Replace(""1"", string.Empty).Replace(""2"", string.Empty).Replace(""3"", string.Empty).Replace(""4"", string.Empty);
            
            if(str == """")
            {
                answer++;
            }
        }
        return answer;
    }
}",,2023. 9. 5,52,2
2023. 9. 5 오전 9:52:23,김지수,AI,23 - 약수의 개수와 덧셈,"def solution(left,right):
    answer = 0
    for i in range(left, right+1):
        count = 0 
        for x in range(1, i+1):
            if i%x ==0:
                count += 1
        if count%2 == 0:
            answer += i
        else:
            answer -= i
    return answer
                ",,2023. 9. 5,23,1
2023. 9. 5 오전 9:52:35,이민열,Unity,12 - 두 정수 사이의 합,"public class Solution {
    public long solution(int a, int b) {
        long answer = 0;
        long sum = 0;
        if(a > b)
        {
            while(a >= b)
            {
                sum += b;
                b++;
            }

        } else
        {
            while (b >= a)
            {
                sum += a;
                a++;
            }

        }
        answer = sum;
        return answer;
    }
}",https://github.com/LeeMinyeol/Algorithm,2023. 9. 5,12,1
2023. 9. 5 오전 9:52:43,이경현,Unity,36 - 숫자 문자열과 영단어,"public int solution(string s)
{
    s = s.Replace(""zero"", ""0"");
    s = s.Replace(""one"", ""1"");
    s = s.Replace(""two"", ""2"");
    s = s.Replace(""three"", ""3"");
    s = s.Replace(""four"", ""4"");
    s = s.Replace(""five"", ""5"");
    s = s.Replace(""six"", ""6"");
    s = s.Replace(""seven"", ""7"");
    s = s.Replace(""eight"", ""8"");
    s = s.Replace(""nine"", ""9"");

    return int.Parse(s);

}",https://github.com/516lkh/Algorithm,2023. 9. 5,36,2
2023. 9. 5 오전 9:52:50,김종훈,Unity,53 - 숫자 짝꿍,"using System;
using System.Text;

public class Solution {
    public string solution(string X, string Y) {
        string answer = """";
        int[] a = new int[10];
        int[] b = new int[10];

        for(int i = 0; i < X.Length; i++)
        {
            a[(int)(X[i] - 48)]++;
        }
        for(int i = 0; i < Y.Length; i++)
        {
            b[(int)(Y[i] - 48)]++;
        }
        StringBuilder sb = new StringBuilder();

        for(int i = 9; i >= 0; i--)
        {
            while(a[i] > 0 && b[i] > 0){
                sb.Append(i);
                a[i]--;
                b[i]--;
            }
        }
        if("""".Equals(sb.ToString()))
        {
            answer = ""-1"";
        }
        else if(""0"".Equals(sb.ToString().Substring(0, 1)))
        {
            answer = ""0"";
        }
        else
        {
            answer = sb.ToString();
        }
        return answer;
    }
}",,2023. 9. 5,53,2
2023. 9. 5 오전 9:53:19,차요한,Unity,38 - K번째수정렬,"using System;

public class Solution {
    public int[] solution(int[] array, int[,] commands) {
        int[] answer = new int[commands.GetLongLength(0)];
        
        for(int n = 0; n < commands.GetLongLength(0); n++)
        {
            int i = commands[n, 0];
            int j = commands[n, 1];
            int k = commands[n, 2];
            
            int[] num = new int[j - i + 1];
            
            for(int a = 0; a<num.Length; a++)
            {
                num[a] = array[a+i-1];
            }

            Array.Sort(num);
            
            answer[n] = num[k-1];
        }
        
        return answer;
    }
}",https://github.com/HOHOJO/Algorithm_test,2023. 9. 5,38,2
2023. 9. 5 오전 9:53:33,김주형,Unity,26 - 문자열 다루기 기본,"public class Solution 
{
    public bool solution(string s) 
    {
        bool answer;
        int test = 0;
        if (4== s.Length || s.Length ==6)
            answer = int.TryParse(s, out test);
        else answer = false;
        return answer;
    }
}",https://github.com/kjuhyung/Algorithm.git,2023. 9. 5,26,1
2023. 9. 5 오전 9:53:33,김종,Unity,54 - 체육복,"using System;
using System.Linq;

public class Solution {
    public int solution(int n, int[] lost, int[] reserve) {
        Array.Sort(lost);
        Array.Sort(reserve);
        
        foreach (int l in lost)
        {
            foreach (int r in reserve)
            {
                if (l == r)
                {
                    lost = lost.Where(x => x != l).ToArray();
                    reserve = reserve.Where(x => x != r).ToArray();
                    break;
                }
            }
        }
        
        int count=0;
        foreach (int l in lost)
        {
            for (int i = 0; i < reserve.Length; i++)
            {
                if (l - 1 == reserve[i] && reserve[i]!=0 
                     || l + 1 == reserve[i] && reserve[i]!=0)
                {
                    reserve[i]=0;
                    count++;
                    break;
                }
            }
        }
        return n - lost.Length + count;
    }
}",,2023. 9. 5,54,2
2023. 9. 5 오전 9:53:38,김형수,Unity,9 - 정수 제곱근 판별,"using System;

public class Solution {
    public long solution(long n) {
        long answer = 0;
        
        double sqrt = Math.Sqrt(n);

        if(sqrt % 1 == 0)
        {
            answer = (long)Math.Pow(sqrt + 1, 2);
        }
        else
        {
            answer = -1;
        }
        
        return answer;
    }
}",https://github.com/Kim-H-S/Programmers/blob/main/%EC%A0%95%EC%88%98%20%EC%A0%9C%EA%B3%B1%EA%B7%BC%20%ED%8C%90%EB%B3%84.cs,2023. 9. 5,9,1
2023. 9. 5 오전 9:53:40,윤지연,Unity,22 - 내적,"using System;

public class Solution {
    public int solution(int[] a, int[] b) {
        int answer = 0;
        
        for(int i = 0; i < a.Length; i++)
        {
            answer += a[i] * b[i];
        }
        return answer;
    }
}",https://github.com/jungbosong/Codekata/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/70128.%E2%80%85%EB%82%B4%EC%A0%81,2023. 9. 5,22,1
2023. 9. 5 오전 9:53:43,이홍준,Unity,36 - 숫자 문자열과 영단어,"using System;

public class Solution {
    public int solution(string s) {
        int answer = 0;
        char[] s_array = s.ToCharArray();
        string temp = """";
        string digit = """";
        int i = 0;
        
        while (i < s.Length)
        {
            bool isDigit = Char.IsNumber(s, i);
            if (isDigit == true)
            {
                temp = """";
                digit += s_array[i];
                i++;
            }
            else
            {
                temp += s_array[i];
                i++;
            }
            
            if (temp.Length == 3)
            {
                switch (temp)
                {
                    case ""zer"":
                        digit += ""0"";
                        i++;
                        break;
                    case ""one"":
                        digit += ""1"";
                        break;
                    case ""two"":
                        digit += ""2"";
                        break;
                    case ""thr"":
                        digit += ""3"";
                        i += 2;
                        break;
                    case ""fou"":
                        digit += ""4"";
                        i++;
                        break;
                    case ""fiv"":
                        digit += ""5"";
                        i++;
                        break;
                    case ""six"":
                        digit += ""6"";
                        break;
                    case ""sev"":
                        digit += ""7"";
                        i += 2;
                        break;
                    case ""eig"":
                        digit += ""8"";
                        i += 2;
                        break;
                    case ""nin"":
                        digit += ""9"";
                        i++;
                        break;
                }
                temp = """";
            }
        }
        answer = Int32.Parse(digit);
        return answer;
    }
}",https://github.com/dlghdwns97/Study/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/81301.%E2%80%85%EC%88%AB%EC%9E%90%E2%80%85%EB%AC%B8%EC%9E%90%EC%97%B4%EA%B3%BC%E2%80%85%EC%98%81%EB%8B%A8%EC%96%B4,2023. 9. 5,36,2
2023. 9. 5 오전 9:54:09,김종훈,Unity,55 - 문자열 나누기,"using System;

public class Solution {
    public int solution(string s) {
        int answer = 0;
        int sameIndex = 0;
        int diffIndex = 0;
        char word = ' ';
        bool start = true; 
        
        for(int i = 0; i < s.Length; i++)
        {
            if(start == true)
            {
                word = s[i];
                sameIndex++;
                start = false;
            }
            else
            {
                if(s[i] == word)
                {
                    sameIndex++;
                }
                else
                {
                    diffIndex++;
                }
            }
            
            if(sameIndex == diffIndex)
            {
                answer++;
                sameIndex = 0;
                diffIndex = 0;
                start = true;
            }
            
            if(i == s.Length - 1)
            {
                if(start == false)
                {
                    answer++;
                }
            }
        }
        return answer;
    }
}",,2023. 9. 5,55,3
2023. 9. 5 오전 9:54:17,박희원,Unity,32 - 삼총사,"using System;

public class Solution {
    public int solution(int[] numbers)
            {
                int answer = 0;
                int n = numbers.Length;
                for (int i = 0; i < n; i++)
                {
                    for (int j = i + 1; j < n; j++)
                    {
                        for (int k = j + 1; k < n; k++)
                        {
                            if (numbers[i] + numbers[j] + numbers[k] == 0)
                            {
                                answer++;
                            }
                        }
                    }

                }
                return answer;
            }
}",,2023. 9. 5,32,2
2023. 9. 5 오전 9:54:44,박희원,Unity,33 - 크기가 작은 부분,"using System;
using System.Collections.Generic; 

public class Solution {
    public int solution(string t, string p)
            {
                int answer = 0;

                List<long> tList = new List<long>(); 

                for (int i = 0;i<t.Length- p.Length+1; i++)
                {
                    tList.Add(long.Parse(t.Substring(i, p.Length))); 
                }
                
                foreach(var a in tList)
                {
                    if (a <= long.Parse(p))
                        answer += 1; 
                }

                return answer;
            }
}",,2023. 9. 5,33,2
2023. 9. 5 오전 9:54:48,어하림,Unity,8 - 문자열을 정수로 바꾸기,"using System;

public class Instance{
    public static void Main(){
        bool result;
        string str_var = ""111"";
        int num_var;
        result = Int32.TryParse(str_var, out num_var);
        if(result)
            System.Console.WriteLine(num_var);
        else
            System.Console.WriteLine(""Invalid String"");
    }
    
}
//못풀었습니다.. 이거를 3일짼가 못풀고 있습니다...배운것은 toint32인데 응용을 못합니다",,2023. 9. 5,8,1
2023. 9. 5 오전 9:54:57,김종훈,Unity,56 - 대충 만든 자판,"using System;

public class Solution {
    public int[] solution(string[] keymap, string[] targets) {
        int[] answer = new int[targets.Length] ;
        int sum = 0;
        int count = 0;
        
        for(int i = 0; i < targets.Length; i++)
        {
            for(int j = 0; j < targets[i].Length; j++)
            {
                count = press(keymap, targets[i][j]);
                if(count == -1)
                {
                    sum = -1;
                    break;
                }
                sum += count;
            }
            answer[i] = sum;
            sum = 0;
        }
        return answer;
    }
    
    public int press(string[] keymap, char ch)
    {
        int min = -1;
        
        for(int i = 0; i < keymap.Length; i++)
        {
            for(int j = 0; j < keymap[i].Length; j++)
            {
                if(keymap[i][j] == ch)
                {
                    if(min == -1)   min = j + 1;
                    else if(min > j)    min = j + 1;
                    break;
                }
            }
        }
        return min;
    }
}",,2023. 9. 5,56,3
2023. 9. 5 오전 9:55:15,김명식,Unity,25 - 부족한 금액 계산하기,"using System;

class Solution
{
    public long solution(int price, int money, int count)
    {
        long sum=0;
        for(int i=0;i<count;i++){
            sum+=price*(i+1);
        }
        long answer=sum-money;
        if(answer<=0){
            return 0;
        }
        return answer;
    }
}",https://github.com/D0ryeon/Algorithm-Code-Kata/tree/main,2023. 9. 5,25,1
2023. 9. 5 오전 9:55:25,진우성,Unity,9 - 정수 제곱근 판별,"using System;
public class Solution 
{
    public long solution(long n) 
    {
        long answer = (long)Math.Sqrt(n);

        if (answer * answer == n)
        {
            return (answer + 1) * (answer + 1);
        }
        else
        {
            return -1;
        }

        return answer;
    }
}",,2023. 9. 5,9,1
2023. 9. 5 오전 9:56:32,이도현,Unity,10 - 정수 내림차순으로 배치하기,"using System.Linq;

public class Solution {
    public long solution(long n) {
            string temp = n.ToString();

            long answer = long.Parse(temp.ToCharArray().OrderByDescending(x=>x).ToArray());
            return answer;
    }
}",,2023. 9. 5,10,1
2023. 9. 5 오전 9:56:44,김강현,Unity,19 - 제일 작은 수 제거하기,"using System.Collections.Generic;
public class Solution {
    public int[] solution(int[] arr) 
    {
        List<int> num = new List<int>{};
        int min = 9999;
        for(int i=0 ;i < arr.Length;i++)
        {
            num.Add(arr[i]);
            if(min >arr[i])
            {
                min = arr[i];
            }
        }
      
         num.Remove(min);
          if(num.Count ==0)
        {
            num.Add(-1);
        }
        int[] answer = new int[] {};
        return num.ToArray();
    }
}",,2023. 9. 5,19,1
2023. 9. 5 오전 9:57:05,조범준,Unity,41 - 푸드 파이트 대회,"using System;
using System.Linq;

public class Solution {
    public string solution(int[] food) {
        string answer = """";
        string str = """";
        for(int i = 1; i < food.Length; i++){
                if(food[i] % 2 == 1){
                    food[i]--;
                }
            for(int j = 0; j < food[i]/2; j++){
                answer += i;
            }
        }
        str = string.Concat(answer.Reverse());
        answer += ""0"" + str;
        return answer;
    }
}",https://github.com/KimMaYa1/BaekJoonEx/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4,2023. 9. 5,41,2
2023. 9. 5 오전 9:57:06,김준범,Unity,11 - 하샤드 수,"using System;

public class Solution
    {
        public bool solution(int x)
        {
        // x를 문자열로 변환한다.
            string temp = x.ToString();
            // for문을 돌려서 각 자리수의 합을 구한다.
            int sum = 0;
            for (int i = 0; i < temp.Length; i++)
            {
                sum += (int)Char.GetNumericValue(temp[i]);
            }
            // x가 자리수 합으로 나눠떨어지면 참, 아니면 거짓
            bool answer = x % sum==0 ? true:false;
            return answer;
        }
    }",,2023. 9. 5,11,1
2023. 9. 5 오전 9:57:18,문현우,Unity,20 - 가운데 글자 가져오기,"public class Solution {
    public string solution(string s) {
        string answer = """";
        string sSub = """";
        int middle = s.Length / 2;
        if (s.Length % 2 == 0){
            sSub = s.Substring(middle - 1, 2);
            answer = sSub;
        }
        else{
            sSub = s.Substring(middle, 1);
            answer = sSub;
        }
        return answer;
    }
}",https://github.com/Munch310/Algorithm-Csharp/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12903.%E2%80%85%EA%B0%80%EC%9A%B4%EB%8D%B0%E2%80%85%EA%B8%80%EC%9E%90%E2%80%85%EA%B0%80%EC%A0%B8%EC%98%A4%EA%B8%B0,2023. 9. 5,20,1
2023. 9. 5 오전 9:57:18,김경환,Unity,58 - 햄버거 만들기,"using System;
using System.Collections.Generic;

public class Solution {
    public int solution(int[] ingredient) {
        int answer = 0;
        int[] orders = new int[] {1, 3, 2, 1};
        Stack<int> wait = new Stack<int>();
        
        foreach(int i in ingredient)
        {
            wait.Push(i);
            
            int order = 0;
            
            while(true)
            {
                int peek = 0;
                
                if(wait.TryPeek(out peek) && orders[order] == peek)
                {
                    wait.Pop();
                    order++;
                } else {
                    for(int j = order - 1; j >= 0; j--)
                        wait.Push(orders[j]);
                    
                    break;
                }
                
                if(order == 4)
                {
                    answer++;
                    order = 0;
                }
            }
        }
        
        return answer;
    }
}",https://github.com/kkh9700/algorithm,2023. 9. 5,58,3
2023. 9. 5 오전 9:57:39,김예준,Unity,50 - 기사단원의 무기,"using System;

public class Solution {
    public int solution(int number, int limit, int power) {
        int answer = 0;
        int[] divisor = new int[100001];
        
        for (int j = 1; j <= number; j++)
        {
            for (int i = 1; i * i <= j; i++)
            {
                if (j % i == 0)
                {
                    divisor[j]++;
                    if (j / i != i) divisor[j]++;
                }
            }
        }
        
        for(int i = 1; i <= number; i++)
        {
            if (divisor[i] > limit) divisor[i] = power;
            answer += divisor[i];
        }
        
        return answer;
    }
}",,2023. 9. 5,50,2
2023. 9. 5 오전 9:58:07,이정환,Unity,33 - 크기가 작은 부분,"using System;

public class Solution
{
    public int solution(string t, string p)
    {
        int pLength = p.Length;
        int count = 0;

        for (int i = 0; i < t.Length - pLength + 1; i++)
        {
            string num = t.Substring(i, pLength);
            if (string.Compare(num, p) <= 0)
            {
                // 부분 문자열이 p와 비교하여 작거나 같으면 count 증가
                count++;
            }
        }

        return count;
    }
}",,2023. 9. 5,33,2
2023. 9. 5 오전 9:58:10,공혜진,AI,26 - 문자열 다루기 기본,"def solution(s):
    if len(s) == 4 or len(s) == 6 :
        if s.isdigit()==True:
            return True
        else:
            return False
    else:
        return False",,2023. 9. 5,26,1
2023. 9. 5 오전 9:58:23,우민규,Unity,24 - 문자열 내림차순으로 배치하기,"using System;

public class Solution {
    public string solution(string s) {
        string answer = """";
        
        //char와 string은 서로 간단하게 변환 가능하다.
        char[] temp = s.ToCharArray(); 
        
        //오름차순 정렬 후 내림차순 정렬 (Array.Sort & Array.Reverse 메서드를 사용하면 간단하다.)
        Array.Sort(temp);
        Array.Reverse(temp);
    
        
        answer = new string(temp);
        
        return answer;
    }
}",https://github.com/Woomingyu/Programmers.git,2023. 9. 5,24,1
2023. 9. 5 오전 9:58:33,노재우,Unity,30 - 3진법 뒤집기,"public class Solution
{
    public int solution(int n)
    {
        if(n <3)
            return n;
        
        List<int> three = new List<int>(0);

        threeJinsu(three, n);

        int answer = 0;

        for (int i = 0; i < three.Count; i++)
        {
            answer += three[i] * (int)(Math.Pow(3,i));
        }

        return answer;
    }

    void threeJinsu(List<int> jinsu, int n)
    {
        if (jinsu.Count == 0)
            jinsu.Add(0);
        int temp = n;
        jinsu[0] = temp % 3;
        temp = (temp - (jinsu[0])) / 3;
        jinsu.Insert(0, temp);

        if (jinsu[0] <3)
            return;

        threeJinsu(jinsu, temp);
    }
}",,2023. 9. 5,30,1
2023. 9. 5 오전 9:59:02,김형중,Unity,30 - 3진법 뒤집기,"using System;

public class Solution {
    public int solution(int n) {
        int answer = 0;
        
        while (n > 0)
        {
            answer *= 3;
            answer += n % 3;
            n /= 3;
        }
        return answer;
        
    }
}",,2023. 9. 5,30,1
2023. 9. 5 오전 9:59:20,명세인,AI,27 - 행렬의 덧셈,"def solution(arr1, arr2):
    answer = []
    
    
    if not len(arr1) == len(arr2):
        pass
    
    for i in range(len(arr1)):
        if not len(arr1[i]) == len(arr2[i]):
            pass
        else:
            answer1 =[]
            for a in range(len(arr1[i])):
                answer1.append(arr1[i][a] + arr2[i][a])
            answer.append(answer1)
    
    return answer",https://github.com/playersein/Coding_Test/commit/209fa43837de109add0d56960eb58d180c2a6fe4,2023. 9. 5,27,1
2023. 9. 5 오전 9:59:20,유채연,Unity,35 - 시저 암호,"        string answer = """";
        char[] arr=s.ToCharArray();
        foreach(char c in arr){
            if(c==' ') answer+="" "";
            else{
                int charNum = (int)c+n;
                if((int)c>64&&(int)c<91&&charNum>90){
                    charNum-=26;
                }
                if((int)c>96&&(int)c<123&&charNum>122){
                    charNum-=26;
                }
                answer+=(char)charNum; 
            }
        }
        return answer;",https://github.com/ychy0006?tab=repositories,2023. 9. 5,35,2
2023. 9. 5 오전 9:59:32,김나운,Unity,27 - 행렬의 덧셈,"public class Solution {
    public int[,] solution(int[,] arr1, int[,] arr2) {
        int rows = arr1.GetLength(0);
        int cols = arr1.GetLength(1);
        int[,] answer = new int[rows, cols];

        for (int i = 0; i < rows; i++) {
            for (int j = 0; j < cols; j++) {
                answer[i, j] = arr1[i, j] + arr2[i, j];
            }
        }

        return answer;
    }
}
",,2023. 9. 5,27,1
2023. 9. 5 오전 9:59:34,신해준,Unity,21 - 수박수박수박수박수박수?,"using System.Linq;


public class Solution 
{
    public string solution(int n) {
        string answer = """";
        return string.Join("""", Enumerable.Repeat(""수박"", n / 2)) + (n % 2 == 1 ? ""수"" : """");
        
    }
}",,2023. 9. 5,21,1
2023. 9. 5 오전 9:59:52,김민상,Unity,56 - 대충 만든 자판,"using System;
using System.Collections.Generic;

public class Solution {
    public int[] solution(string[] keymap, string[] targets) {
        Dictionary<char, int> d = new Dictionary<char, int>();
        
        foreach (string key in keymap)
        {
            for (int i = 0; i < key.Length; i++)
            {
                if (d.ContainsKey(key[i]))
                    d[key[i]] = Math.Min(d[key[i]], i + 1);
                else
                    d[key[i]] = i + 1;
            }
        }
        
        List<int> answer = new List<int>();
        
        foreach (string target in targets)
        {
            int temp = 0;
            
            foreach (char c in target)
            {
                if (d.ContainsKey(c))
                    temp += d[c];
                else
                {
                    temp = -1;
                    break;
                }
            }
            
            answer.Add(temp);
        }
        
        return answer.ToArray();
    }
}",,2023. 9. 5,56,3
2023. 9. 5 오전 9:59:53,장성림,Unity,42 - 콜라 문제,"using System;

public class Solution {
    public int solution(int a, int b, int n) {
        int answer = 0;
        answer = coke(a, b, n, 0);
        return answer;
    }
    
    public int coke(int a, int b, int n, int count){
        count += (n / a) * b;
        if ((n / a) * b != 0)
            count = coke(a, b, (n / a) * b + (n % a), count);
        return count;
    }
}",https://github.com/hoobhoob,2023. 9. 5,42,2
2023. 9. 5 오전 10:00:19,유채연,Unity,37 - 문자열 내 마음대로 정렬하기,"    public string[] solution(string[] strings, int n) {
        string[] answer = strings.OrderBy(x=>x[n]).ThenBy(x=>x).ToArray();
        
        return answer;
}",https://github.com/ychy0006?tab=repositories,2023. 9. 5,37,2
2023. 9. 5 오전 10:00:36,김민재,AI,14 - 서울에서 김서방 찾기,"def solution(seoul):
    answer = ''
    for i, x in enumerate(seoul):
        if x == 'Kim':
            answer = f'김서방은 {i}에 있다'
    return answer


seoul = [""Jane"", ""Kim""]
busan = [""Lee"", ""Son"", ""Park"", ""Kim""]",https://github.com/Kim-Minjae9872/Code_Kata,2023. 9. 5,14,1
2023. 9. 5 오전 10:00:37,박도현,Unity,11 - 하샤드 수,"public class Solution {
    public bool solution(int x) {
        bool answer = true;
        int value = 0;
        int get = x;
        while(get > 0)
        {
            value += get % 10;
            get = get / 10;
        }
        if(x % value == 0)
        {
            answer = true;
        }else
        {
            answer = false;
        }
        return answer;
    }
}",,2023. 9. 5,11,1
2023. 9. 5 오전 10:00:54,유채연,Unity,36 - 숫자 문자열과 영단어,"    public int solution(string s) {
        string[] stArr = {""zero"",""one"",""two"",""three"",""four"",""five"",""six"",""seven"",""eight"",""nine""};
        string[] nArr = {""0"",""1"",""2"",""3"",""4"",""5"",""6"",""7"",""8"",""9""};
        for(int i=0;i<10;i++){
            if(s.IndexOf(stArr[i])>=0){
                s=s.Replace(stArr[i],nArr[i]);
            }
        }
        return int.Parse(s);",https://github.com/ychy0006?tab=repositories,2023. 9. 5,36,2
2023. 9. 5 오전 10:01:20,정범수,AI,83 - 피로도,"from functools import cmp_to_key

def comp(a, b):
    a_gap = a[0]-a[1]
    b_gap = b[0]-b[1]
    if a_gap == b_gap:
        return b[0]-a[0]
    else:
        return a_gap-b_gap

    
def solution(k, dungeons):
    dp = {0: 0}
    for a, b in sorted(dungeons, key=cmp_to_key(comp)):
        for cur_fati in list(dp):
            next_fati = max(a, cur_fati + b)
            if next_fati > k:
                continue
            if next_fati in dp:
                dp[next_fati] = max(dp[next_fati], dp[cur_fati]+1)
            else:
                dp[next_fati] = dp[cur_fati]+1
    return max(dp.values())",https://github.com/sudog1/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv2/87946.%E2%80%85%ED%94%BC%EB%A1%9C%EB%8F%84,2023. 9. 5,83,4
2023. 9. 5 오전 10:01:47,정범수,AI,84 - 타겟 넘버,"def solution(numbers, target):
    dp = {0: 1}
    for num in numbers:
        items = dp.items()
        dp = {}
        for acc, cnt in items:
            if acc+num in dp:
                dp[acc+num] += cnt
            else:
                dp[acc+num] = cnt
            if acc-num in dp:
                dp[acc-num] += cnt
            else:
                dp[acc-num] = cnt
    return dp[target] if target in dp else 0",https://github.com/sudog1/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv2/43165.%E2%80%85%ED%83%80%EA%B2%9F%E2%80%85%EB%84%98%EB%B2%84,2023. 9. 5,84,4
2023. 9. 5 오전 10:02:04,맹주한,Unity,9 - 정수 제곱근 판별,"long long solution(long long n) {
    if (n <= 0) {
        return -1;
    }
    
    for (long long x = 1; x * x <= n; x++) {
        if (x * x == n) {
            return (x + 1) * (x + 1);
        }
    }
    
    return -1;
}

int main() {
    long long n;
    printf(""Enter a positive integer: "");
    scanf(""%lld"", &n);
    
    long long result = solution(n);
    
    if (result == -1) {
        printf(""%lld is not a square of any positive integer.\n"", n);
    } else {
        printf(""%lld is a square of a positive integer, and (%lld + 1)^2 = %lld\n"", n, (long long)sqrt(n), result);
    }
    
    return 0;
}",,2023. 9. 5,9,1
2023. 9. 5 오전 10:02:28,김정민,Unity,56 - 대충 만든 자판,"public class Solution
        {
            public int[] solution(string[] keymap, string[] targets)
            {
                int[] answer = new int[targets.Length];

                for (int i = 0; i < targets.Length; i++)
                {
                    bool isPossible = true;
                    int sum = 0;
                    for (int j = 0; j < targets[i].Length; j++)
                    {
                        int minCnt = int.MaxValue;
                        foreach (string key in keymap)
                        {
                            int cnt = key.IndexOf(targets[i][j]);
                            if (minCnt > cnt && cnt >= 0) minCnt = cnt + 1;
                        }

                        if (minCnt == int.MaxValue)
                        {
                            isPossible = false;
                            break;
                        }
                        else sum += minCnt;
                    }
                    if (isPossible) answer[i] = sum;
                    else
                    {
                        answer[i] = -1;
                        isPossible = true;
                    }
                }

                return answer;
            }
        }",https://github.com/j-miiin/Algorithm_Study/blob/main/SPARTA_ALGORITHM_2023/Level3/56_RoughKeyboard.cs,2023. 9. 5,56,3
2023. 9. 5 오전 10:02:53,곽민규,Unity,9 - 정수 제곱근 판별,"using System;

public class Solution {
    public long solution(long n) {
        long answer = 0;
        answer = (long)Math.Pow((long)Math.Sqrt(n), 2) == n ? (long)Math.Pow((long)Math.Sqrt(n) + 1, 2) : -1;
        
        return answer;
    }
}",,2023. 9. 5,9,1
2023. 9. 5 오전 10:03:00,정범수,AI,85 - k진수에서 소수 개수 구하기,"function isPrimeNumber(num) {
    if(num === 2) return true;
    if(num % 2 === 0 || num < 2) return false;
    for(var i=3; i<=Math.floor(Math.sqrt(num)); i++) {
        if(num % i === 0) return false;
    }
    return true;
}

function solution(n, k) {
    var numbers = n.toString(k).split('0').filter(e => (e !== '')).map(e => Number(e)).filter(e => isPrimeNumber(e));
    return numbers.length;
}",https://github.com/sudog1/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv2/92335.%E2%80%85k%EC%A7%84%EC%88%98%EC%97%90%EC%84%9C%E2%80%85%EC%86%8C%EC%88%98%E2%80%85%EA%B0%9C%EC%88%98%E2%80%85%EA%B5%AC%ED%95%98%EA%B8%B0,2023. 9. 5,85,4
2023. 9. 5 오전 10:03:01,김정민,Unity,57 - 둘만의 암호,"public class Solution
        {
            public string solution(string s, string skip, int index)
            {
                string answer = """";

                for (int i = 0; i < s.Length; i++)
                {
                    char curStr = s[i];

                    for (int j = 0; j < index; j++)
                    {
                        curStr = (char)(curStr + 1);
                        if (curStr.CompareTo('z') > 0) curStr = (char)(curStr - 26);
                        while (skip.Contains(curStr))
                        {
                            curStr = (char)(curStr + 1);
                            if (curStr.CompareTo('z') > 0) curStr = (char)(curStr - 26);
                        }
                    }
                    answer += curStr;
                }

                return answer;
            }
        }",https://github.com/j-miiin/Algorithm_Study/blob/main/SPARTA_ALGORITHM_2023/Level3/57_CodeOfUs.cs,2023. 9. 5,57,3
2023. 9. 5 오전 10:03:03,윤지연,Unity,23 - 약수의 개수와 덧셈,"using System;

public class Solution {
    public int solution(int left, int right) {
        int answer = 0;
        
        for(int i = left; i <= right; i++)
        {
            if(GetDivisorCount(i) % 2 == 0)
            {
                answer += i;
            }
            else
            {
                answer -= i;
            }
        }
        return answer;
    }
    
    public int GetDivisorCount(int num)
    {
        int count = 0;
        for(int i = 1; i <= num; i++)
        {
            if(num % i == 0)
            {
                count++;
            }
        }
        return count;
    }
}",https://github.com/jungbosong/Codekata/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/77884.%E2%80%85%EC%95%BD%EC%88%98%EC%9D%98%E2%80%85%EA%B0%9C%EC%88%98%EC%99%80%E2%80%85%EB%8D%A7%EC%85%88,2023. 9. 5,23,1
2023. 9. 5 오전 10:04:11,김진성,Unity,18 - 없는 숫자 더하기,"using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Algorithm_007
{
    public class _018_NotExistNUmberAddition
    {
        public int solution(int[] numbers)
        {
            int answer = 45;
            foreach (int n in numbers)
            {
                answer -= n;
            }
            return answer;
        }
    }
}
",https://github.com/GYALLERHORN/ALGORITHM,2023. 9. 5,18,1
2023. 9. 5 오전 10:04:41,김진성,Unity,19 - 제일 작은 수 제거하기,"using System;
using System.Collections.Generic;
using System.Linq;

namespace Algorithm_007
{
    public  class _019_RemoveMinimum
    {
        public int[] solution(int[] arr)
        {
            List<int> answer = new List<int>();

            foreach (int i in arr)
            {
                answer.Add(i);
            }
            answer.Remove(arr.Min());

            if (arr.Length <= 1)
            {
                answer.Add(-1);
            }
            return answer.ToArray();
        }
    }
}
",https://github.com/GYALLERHORN/ALGORITHM,2023. 9. 5,19,1
2023. 9. 5 오전 10:05:19,김진성,Unity,20 - 가운데 글자 가져오기,"namespace Algorithm_007
{
    public class _020_BringMiddleWord
    {
        public string solution(string s)
        {
            string answer = """";


            if (s.Length % 2 == 1)
            {
                answer = s[s.Length / 2].ToString();
            }
            else
            {
                answer = s[s.Length / 2 - 1].ToString();
                answer += s[s.Length / 2].ToString(); 
            }

            return answer;
        }
    }
}
",https://github.com/GYALLERHORN/ALGORITHM,2023. 9. 5,20,1
2023. 9. 5 오전 10:06:05,김지수,AI,24 - 문자열 내림차순으로 배치하기,"def solution(s):
    
    return (''.join(reversed(sorted(s))))
    ",,2023. 9. 5,24,1
2023. 9. 5 오전 10:06:21,강상찬,AI,48 - 소수 만들기,"def solution(nums):
    answer = 0
    for n,i in enumerate(nums[:-2]):
        for m,j in enumerate(nums[n+1:-1]):
            for k in nums[n+m+2:]:
                sumn = i+j+k
                for x in range(2,((sumn+2)//2)+1):
                    if (sumn%x == 0):
                        break
                    if ((x == (sumn+2)//2)) and (sumn%x != 0):
                        answer += 1
    return answer",,2023. 9. 5,48,2
2023. 9. 5 오전 10:09:01,김도현B,Unity,41 - 푸드 파이트 대회,"using System;

public class Solution {
    public string solution(int[] food) {
        string answer = """";
        answer = Arrangement(food, answer, 1);
        return answer;
    }
    public string Arrangement(int[] food, string answer ,int Index)
    {
        for(int i = 0; i < food[Index]/2 ; i++) 
            answer += Index;

        if(Index== food.Length -1)
            answer += 0;
        else
            answer = Arrangement(food, answer, Index + 1);

        for (int i = 0; i < food[Index] / 2; i++)
            answer += Index;

        return answer;
    }
}",https://github.com/subscriptioncat/Algorithm,2023. 9. 5,41,2
2023. 9. 5 오전 10:10:07,지민규,Unity,35 - 시저 암호,"using System;

public class Solution {
    public string solution(string s, int n) {
        string answer = """";
        string[] capital = new string[] {""A"",""B"",""C"",""D"",""E"",""F"",""G"",""H"",""I"",""J"",""K"",""L"",""M"",""N"",""O"",""P"",""Q"",""R"",""S"",""T"",""U"",""V"",""W"",""X"",""Y"",""Z""};
        string[] small = new string[] {};
        for (int i = 0; i < capital.Length; i++)
        {
            Array.Resize(ref small, small.Length+1);
            small[small.Length-1] = capital[i].ToLower();
        }

        for (int i = 0; i < s.Length; i++)
        {
            if (s[i] == ' ')
            {
                answer += ' '.ToString();
            }
            else
            {
                answer += (char.IsUpper(s[i])) ? capital[((Array.IndexOf(capital, s[i].ToString())) + n) % capital.Length] :small[((Array.IndexOf(small, s[i].ToString())) + n) % small.Length];
            }
        }
        return answer;
    }
}",,2023. 9. 5,35,2
2023. 9. 5 오전 10:13:26,김민상,Unity,57 - 둘만의 암호,"using System;
using System.Collections.Generic;

public class Solution {
    public string solution(string s, string skip, int index) {
        
        List<char> alphabet = new List<char>();
        
        foreach (char c in ""abcdefghijklmnopqrstuvwxyz"")
        {
            if (!skip.Contains(c))
                alphabet.Add(c);
        }
        
        string answer = """";
        
        foreach (char c in s)
        {
            answer += alphabet[(alphabet.IndexOf(c) + index) % alphabet.Count];
        }
        
        return answer;
    }
}",,2023. 9. 5,57,3
2023. 9. 5 오전 10:17:19,신해준,Unity,22 - 내적,"using System;

public class Solution {
    public int solution(int[] a, int[] b) {
        int answer = 0;
        int length = a.Length;
       
        for( int i =0; i < length; i++)
        {
           answer += a[i]*b[i];
        }
        return answer;
    }
}",,2023. 9. 5,22,1
2023. 9. 5 오전 10:20:41,김민태,Unity,50 - 기사단원의 무기,"public class Solution {
    public int solution(int number, int limit, int power) {
        int answer = 0;
        int num = 0;
        int[] count = new int[number + 1];
        
        for(int i = 1; i <= number; i++)
        {
            for(int j = i; j <= number; j += i)
            {
                count[j]++;
            }
        }
        for(int i = 1; i <= number; i++)
        {
            if(count[i] > limit)
            {
                answer += power;
            }
            else
            {
                answer += count[i];
            }
        }
        return answer;
    }
}",https://github.com/rlaalsxo/CodingTest,2023. 9. 5,50,2
2023. 9. 5 오전 10:21:07,조영오,Unity,49 - 덧칠하기,"using System;
using System.Collections.Generic;

public class Solution {
    public int solution(int n, int m, int[] section) {
        
        int answer = 0;
        
        bool[] sections = new bool[n];
        
        foreach(int sec in section){
            sections[sec-1] = true;
        }
        
        for(int i = 0 ; i < n; i++){
            if(sections[i] == true){
                answer++;
                i += (m-1);
            }
        }
        
        return answer;
    }
}",,2023. 9. 5,49,2
2023. 9. 5 오전 10:21:58,김민재,AI,15 - 나누어 떨어지는 숫자,"def solution(arr, divisor):
    answer = []
    for x in arr:
        if x % divisor == 0:
            answer.append(x)

    if answer == []:
        answer.append(-1)
    return sorted(answer)",https://github.com/Kim-Minjae9872/Code_Kata,2023. 9. 5,15,1
2023. 9. 5 오전 10:23:31,이재윤,AI,11 - 하샤드 수,"def solution(n):
    string = str(n)
    sum = 0
    for i in range(0, len(string)):
        sum = sum + int(string[i])
    if n % sum == 0:
        return True
    else:
        return False",https://github.com/JaeYoonAI/coding_test/blob/e4140fa4d4322fb208c4696951f68244d03c98ac/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12947.%E2%80%85%ED%95%98%EC%83%A4%EB%93%9C%E2%80%85%EC%88%98/%ED%95%98%EC%83%A4%EB%93%9C%E2%80%85%EC%88%98.py,2023. 9. 5,11,1
2023. 9. 5 오전 10:23:47,이경민,Unity,26 - 문자열 다루기 기본,"public class Solution {
    public bool solution(string s) {
        bool answer = true;
        char[] arr = s.ToCharArray();
        
        if (arr.Length != 4 && arr.Length != 6)
            return false;
        foreach (char item in arr)
        {
            if(char.IsDigit(item) == false)
                return false;
        }
        
        return answer;
    }
}",https://github.com/kminsmin/Algorithm_Test_Practice/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12918.%E2%80%85%EB%AC%B8%EC%9E%90%EC%97%B4%E2%80%85%EB%8B%A4%EB%A3%A8%EA%B8%B0%E2%80%85%EA%B8%B0%EB%B3%B8,2023. 9. 5,26,1
2023. 9. 5 오전 10:24:34,이경민,Unity,27 - 행렬의 덧셈,"public class Solution {
    public int[,] solution(int[,] arr1, int[,] arr2) {
        int[,] answer = new int[,] {{}};
        for (int i = 0; i<arr1.GetLength(0); i++)
        {
            for (int j = 0; j<arr1.GetLength(1); j++)
            {
                arr1[i,j] += arr2[i,j];
            }
        }
        answer = arr1;
        
        
        return answer;
    }
}",https://github.com/kminsmin/Algorithm_Test_Practice/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12950.%E2%80%85%ED%96%89%EB%A0%AC%EC%9D%98%E2%80%85%EB%8D%A7%EC%85%88,2023. 9. 5,27,1
2023. 9. 5 오전 10:25:18,이경민,Unity,28 - 직사각형 별찍기,"using System;

public class Example
{
    public static void Main()
    {
        String[] s;

        Console.Clear();
        s = Console.ReadLine().Split(' ');
        int a = Int32.Parse(s[0]);
        int b = Int32.Parse(s[1]);

        for(int i = 0; i < b; i++)
        {
            for (int j = 0; j < a; j++)
            {
                Console.Write(""*"");
            }
            Console.WriteLine();
        }
    }
}",https://github.com/kminsmin/Algorithm_Test_Practice/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12969.%E2%80%85%EC%A7%81%EC%82%AC%EA%B0%81%ED%98%95%E2%80%85%EB%B3%84%EC%B0%8D%EA%B8%B0,2023. 9. 5,28,1
2023. 9. 5 오전 10:26:00,조용준,Unity,27 - 행렬의 덧셈,"public class Solution 
{
    public int[,] solution(int[,] arr1, int[,] arr2) 
    {
        int[,] answer = new int[arr1.GetLength(0),arr1.GetLength(1)];
        for (int i = 0; i < arr1.GetLength(0); i++)
        {
            for (int j = 0; j < arr1.GetLength(1); j++)
            {
                answer[i,j] = arr1[i,j] + arr2[i,j];
            }
        }
        return answer;
    }
}",,2023. 9. 5,27,1
2023. 9. 5 오전 10:26:02,이경민,Unity,29 - 최대공약수와 최소공배수,"public class Solution {
    public int[] solution(int n, int m) {
        int max = (n > m) ? n : m;
        int min = (n < m) ? n : m;
        int gcd = 0;
        int lcm = 0;

        for (int i = 1; i <= min; i++)
        {
            gcd = (n%i==0&&m%i==0) ? i : gcd;
        }
        for (int j = n*m; j>=max; j--)
        {
            lcm = (j%n==0&&j%m==0) ? j : lcm;
        }
        int[] answer = new int[] {gcd, lcm};

        return answer;
    }
}",https://github.com/kminsmin/Algorithm_Test_Practice/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12940.%E2%80%85%EC%B5%9C%EB%8C%80%EA%B3%B5%EC%95%BD%EC%88%98%EC%99%80%E2%80%85%EC%B5%9C%EC%86%8C%EA%B3%B5%EB%B0%B0%EC%88%98,2023. 9. 5,29,1
2023. 9. 5 오전 10:26:22,조용준,Unity,28 - 직사각형 별찍기,"using System;

public class Example
{
    public static void Main()
    {
        String[] s;

        Console.Clear();
        s = Console.ReadLine().Split(' ');

        int a = Int32.Parse(s[0]);
        int b = Int32.Parse(s[1]);

        for (int i = 0; i < b; i++)
        {
            for (int j = 0; j < a; j++)
            {
                Console.Write(""*"");
            }
            Console.WriteLine();
        }
    }
}",,2023. 9. 5,28,1
2023. 9. 5 오전 10:26:25,윤지연,Unity,24 - 문자열 내림차순으로 배치하기,"using System;
using System.Linq;

public class Solution {
    public string solution(string s) {

        return new String(s.ToCharArray().OrderByDescending(x=>x).ToArray());
    }
}",https://github.com/jungbosong/Codekata/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12933.%E2%80%85%EC%A0%95%EC%88%98%E2%80%85%EB%82%B4%EB%A6%BC%EC%B0%A8%EC%88%9C%EC%9C%BC%EB%A1%9C%E2%80%85%EB%B0%B0%EC%B9%98%ED%95%98%EA%B8%B0,2023. 9. 5,24,1
2023. 9. 5 오전 10:26:43,최수용,Unity,33 - 크기가 작은 부분,"using System;

public class Solution {
    public int solution(string t, string p) {
        int answer = 0;
        int tLength = t.Length;
        int pLength = p.Length;
        long b = long.Parse(p);
        for (int i=0; i < tLength-pLength+1 ; i++)
        {
            var a = long.Parse(t.Substring(i,p.Length));
            if (a<=b) answer += 1;
        }
        return answer;
    }
}",,2023. 9. 5,33,2
2023. 9. 5 오전 10:29:10,김광수,Unity,69 - 카펫,"using System;

public class Solution {
    // 노랑색 격자의 수는? 가로 -2 * 세로 -2
    // 갈색 격자의 수는 가로 * 세로 - 노란색 격자
    
    // 갈색 격자 + 노란색 격자 = 가로 * 세로
    
    // 가로길이가 더길다.
    
    public int[] solution(int brown, int yellow) 
    {

        int total = brown + yellow;
        int sqrt = (int)Math.Sqrt(total);
        
        
        
        while(sqrt > 1)
        {
            if (total % sqrt == 0)
            {
                int width = total/sqrt;
                int height = sqrt;
                
                if (brown == (width - 2 + height -2) * 2 + 4)
                {
                    // 조합이 브라운 갯수를 만족하는지 확인
                    break;
                }
            }
            
            sqrt--;   
               
        }
        
        
        return new int[] {total/sqrt , sqrt};
    }
}

/* 테스트케이스 4,6,7 실패
public class Solution {
    // 노랑색 격자의 수는? 가로 -2 * 세로 -2
    // 갈색 격자의 수는 가로 * 세로 - 노란색 격자
    
    // 갈색 격자 + 노란색 격자 = 가로 * 세로
    
    // 가로길이가 더길다.
    
    public int[] solution(int brown, int yellow) 
    {
        int total = brown + yellow;
        
        int sqrt = (int)Math.Sqrt(total);
        
        
        while(total % sqrt != 0)
        {
            sqrt--;   
               
        }
        
        
        return new int[] {total/sqrt , sqrt};
    }
}
*/",https://github.com/kksoo0131/Study/commit/353a3c8411c30daf1e8d2b1820fb56ff5a6db7eb,2023. 9. 5,69,3
2023. 9. 5 오전 10:34:55,정주찬,Unity,51 - 로또의 최고 순위와 최저 순위,"using System;

public class Solution {
    public int[] solution(int[] lottos, int[] win_nums) {
            int correct = 0;
            int zeroCount = 0;

            int[] ints = new int[7] { 6, 5, 4, 3, 2, 1, 0 };

            for (int i = 0; i < lottos.Length; i++)
            {
                if (Array.Exists(win_nums, x => x == lottos[i]))
                {
                    correct++;
                }

                if (lottos[i] == 0)
                {
                    zeroCount++;
                }
            }

            // 최대 correct + zeroCount
            // 최소 correct

            int max = correct + zeroCount;
            int min = correct;

            if (max < 2)
            {
                return new int[] { 6, 6 };
            }
            else
            {
                if (min < 2)
                {
                    int maxIndex = Array.IndexOf(ints, max);
                    return new int[] { maxIndex + 1, 6 };
                }
                else
                {
                    int maxIndex = Array.IndexOf(ints, max);
                    int minIndex = Array.IndexOf(ints, min);
                    return new int[] { maxIndex + 1, minIndex + 1 };
                }
            }
    }
}",https://github.com/JeongJuChan/Algorithm/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/77484.%E2%80%85%EB%A1%9C%EB%98%90%EC%9D%98%E2%80%85%EC%B5%9C%EA%B3%A0%E2%80%85%EC%88%9C%EC%9C%84%EC%99%80%E2%80%85%EC%B5%9C%EC%A0%80%E2%80%85%EC%88%9C%EC%9C%84/%EB%A1%9C%EB%98%90%EC%9D%98%E2%80%85%EC%B5%9C%EA%B3%A0%E2%80%85%EC%88%9C%EC%9C%84%EC%99%80%E2%80%85%EC%B5%9C%EC%A0%80%E2%80%85%EC%88%9C%EC%9C%84.cs,2023. 9. 5,51,2
2023. 9. 5 오전 10:35:36,정주찬,Unity,52 - 옹알이 (2),"using System;

public class Solution {
    public int solution(string[] babbling) {
        int result = 0;
        string[] speech = new string[] { ""aya"", ""ye"", ""woo"", ""ma"" };
        
        for (int i = 0; i < babbling.Length; i++)
        {
            string word = babbling[i];
            string preStr = """";
            for (int j = 0; j < speech.Length; j++)
            {
                if (preStr != speech[j] && word.StartsWith(speech[j]))
                {
                    preStr = speech[j];
                    word = word.Remove(0, speech[j].Length);
                    if (word.Length == 0)
                    {
                        result++;
                        break;
                    }

                    j = -1;
                }
            }
        }
        return result;
    }
}",https://github.com/JeongJuChan/Algorithm/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/unrated/133499.%E2%80%85%EC%98%B9%EC%95%8C%EC%9D%B4%E2%80%85%EF%BC%882%EF%BC%89/%EC%98%B9%EC%95%8C%EC%9D%B4%E2%80%85%EF%BC%882%EF%BC%89.cs,2023. 9. 5,52,2
2023. 9. 5 오전 10:36:10,정주찬,Unity,53 - 숫자 짝꿍,"using System;
using System.Text;

public class Solution {
    public string solution(string X, string Y) {
        string answer = """";
        StringBuilder stringBuilder = new StringBuilder();
        int[] xArr = new int[10];
        int[] yArr = new int[10];

        for (int i = 0; i < X.Length; i++)
        {
            xArr[X[i] - '0']++;
        }

        for (int i = 0; i < Y.Length; i++)
        {
            yArr[Y[i] - '0']++;
        }


        for (int i = 0; i < xArr.Length; i++)
        {
            int min = xArr[i] > yArr[i] ? yArr[i] : xArr[i];
            for (int j = 0; j < min; j++)
            {
                stringBuilder.Append(i);
            }
        }

        if (stringBuilder.Length > 0)
        {
            char[] cArr = stringBuilder.ToString().ToCharArray();

            Array.Sort(cArr, (x, y) => -x.CompareTo(y));

            answer = new string(cArr);
            bool isOnlyZero = true;
            for (int i = 1; i < 10; i++)
            {
                if (answer.Contains(i.ToString()))
                {
                    isOnlyZero = false;
                    break;
                }
            }

            if (isOnlyZero)
            {
                answer = ""0"";
            }
        }
        else
        {
            answer = ""-1"";
        }
        
        return answer;
    }
}",https://github.com/JeongJuChan/Algorithm/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/131128.%E2%80%85%EC%88%AB%EC%9E%90%E2%80%85%EC%A7%9D%EA%BF%8D/%EC%88%AB%EC%9E%90%E2%80%85%EC%A7%9D%EA%BF%8D.cs,2023. 9. 5,53,2
2023. 9. 5 오전 10:36:26,송승훈,Unity,29 - 최대공약수와 최소공배수,"public class Solution {
    public int[] solution(int n, int m) {
        int[] answer = new int[2];
        int num1 = n*m;
        
        int a = n;
        int b = m;
        while (b != 0) {
            int temp = a % b;
            a = b;
            b = temp;
        }
        
        // 최대공약수와 최소공배수 계산
        answer[0] = a; // 최대공약수
        answer[1] = num1 / a; // 최소공배수
        
        return answer;
        
        
        return answer;
    }
}",https://github.com/DoDokang318,2023. 9. 5,29,1
2023. 9. 5 오전 10:36:57,송승훈,Unity,30 - 3진법 뒤집기,"using System;
using System.Collections.Generic;

public class Solution {
    public int solution(int n) {
        int answer = 0;
        List<int> myList = new List<int>();
        while (n > 0)
        {
         int a = n / 3; 
         int b = n % 3; 
         myList.Add(b);  // 00
         n = a; 
        }
        
        myList.Reverse();
       for(int i = 0 ; i < myList.Count; i++)    
       {
            answer += myList[i] * (int)Math.Pow(3, i);
       }
        return answer;
    }
}
              
//10진법 ->3진법 -> 리버스-> 10진법으로 변환 
",https://github.com/DoDokang318,2023. 9. 5,30,1
2023. 9. 5 오전 10:47:11,한병권,Unity,54 - 체육복,"using System;
using System.Collections.Generic;
using System.Linq;

public class Solution {
    public int solution(int n, int[] lost, int[] reserve) {

        List<int> lostList = lost.ToList();
        List<int> reserveList = reserve.ToList();
        List<int> tempReserveList = reserve.ToList();

        reserveList = reserveList.Except(lostList).ToList();
        lostList = lostList.Except(tempReserveList).ToList();
        lostList = lostList.OrderBy(i => i).ToList();
        int answer = n - lostList.Count;
        int a = -1;
        int b = 0;
                
        if(reserveList.Count > 0)
        {
            for(int i = 0; i < lostList.Count; i++)
            {
                b = lostList[i];
                if(a < b - 1 && reserveList.Contains(b - 1))
                {
                    a = b - 1;
                    answer++;
                }
                else if(reserveList.Contains(b + 1))
                {
                    a = b + 1;
                    answer++;
                }
            }
        }

        return answer;
    }
}",https://github.com/hbg9212/AlgorithmCodekata,2023. 9. 5,54,2
2023. 9. 5 오전 10:48:00,윤지연,Unity,25 - 부족한 금액 계산하기,"using System;

class Solution
{
    public long solution(long price, long money, long count)
    {
        long sum = (count * (2*price + (count-1)*price)) / 2;
        
        if(sum - (long)money <= 0)
        {
            return 0;
        }
        return sum - (long)money;
    }
}",https://github.com/jungbosong/Codekata/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/82612.%E2%80%85%EB%B6%80%EC%A1%B1%ED%95%9C%E2%80%85%EA%B8%88%EC%95%A1%E2%80%85%EA%B3%84%EC%82%B0%ED%95%98%EA%B8%B0,2023. 9. 5,25,1
2023. 9. 5 오전 10:48:48,김윤경,Unity,10 - 정수 내림차순으로 배치하기,"using System.Linq;

public class Solution {
    public long solution(long n) {
        long answer = long.Parse(n.ToString().OrderByDescending(c => (int)c).ToArray());
        return answer;
    }
}",,2023. 9. 5,10,1
2023. 9. 5 오전 11:00:28,임규한,AI,32 - 삼총사,"from itertools import combinations

def solution(number):
    
    answer = 0
    for a in combinations(number,3):
        if sum(a) == 0:
            answer += 1
    return answer",,2023. 9. 5,32,2
2023. 9. 5 오전 11:02:11,정재호,Unity,43 - 명예의 전당 (1),"using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.Linq;

public class Solution
{
    public int[] solution(int k, int[] score)
    {
        int[] answer = new int[score.Length];

        List<int> result = new List<int>();

        int min = 2000;

        for (int i = 0; i < score.Length; i++) //k번째까지는 answer배열에 min값을 넣고,
                                               //이후로는 수를 비교하여 넣기
        {
            result.Add(score[i]);

            if (i < k)
            {
                if (min > score[i])
                {
                    min = score[i];
                }

                answer[i] = min;
            }

            if(i >= k)
            {
                if (score[i] >= min)
                {
                    result.Sort();
                    result.RemoveAt(0);
                    min = result[0];
                    answer[i] = min;
                }
                else
                {
                    result.Remove(score[i]);
                    answer[i] = min;
                }
            }
        }

        return answer;
    }
}",,2023. 9. 5,43,2
2023. 9. 5 오전 11:09:29,신해준,Unity,23 - 약수의 개수와 덧셈,"public class Solution {
    public int solution(int left, int right) 
    {
        int sum = 0;
        for (int num = left; num <= right; num++)
        {
            int count = CountDivisors(num);
            
            if (count % 2 == 0)
            {
                sum += num;
            }
            else
            {
                sum -= num;
            }
        }
        
        return sum;
    }
    
    // 주어진 숫자의 약수 개수를 세는 함수
    private int CountDivisors(int n)
    {
        int count = 0;
        for (int i = 1; i <= n; i++)
        {
            if (n % i == 0)
            {
                count++;
            }
        }
        return count;
    }
}
",,2023. 9. 5,23,1
2023. 9. 5 오전 11:14:15,김진규,Unity,43 - 명예의 전당 (1),"using System;
using System.Collections.Generic;

public class Solution {
    public int[] solution(int k, int[] score) {
        int[] answer = new int[score.Length];
        List<int> award = new List<int>();
        int count = 0;
        foreach(int s in score)
        {
            award.Add(s);
            award.Sort();
            if(award.Count>k)
                award.RemoveAt(0);
            answer[count++] = award[0];
        }
        return answer;
    }
}",,2023. 9. 5,43,2
2023. 9. 5 오전 11:48:56,최지연,AI,27 - 행렬의 덧셈,"def solution(arr1, arr2):
    answer = []
    for i in range(len(arr1)):
        new_list = []
        for y in range(len(arr1[i])):
            new_list.append(arr1[i][y] + arr2[i][y])
        answer.append(new_list)
    return answer",https://github.com/jiyeonCoder/algorithmPractice/blob/main/27.%20%ED%96%89%EB%A0%AC%EC%9D%98%20%EB%8D%A7%EC%85%88.py,2023. 9. 5,27,1
2023. 9. 5 오후 1:52:07,노동균,Unity,48 - 소수 만들기,"using System;

class Solution
{
    public int solution(int[] nums)
    {
        int answer = 0;
        int length = nums.Length;

        for(int i=0;i<length-2;++i)
        {
            for(int j=i+1;j<length-1;++j)
            {
                for(int k=j+1;k<length;++k)
                {
                    int checkNum = nums[i]+nums[j]+nums[k];
                    if(isPrime(checkNum))
                    {
                        answer+=1;
                    }
                }
            }
        }

        return answer;
    }
    
    private bool isPrime(int num)
    {
        double targetNum = Math.Sqrt(num);
        for(int i=2;i<=targetNum;++i)
        {
            if(num %i == 0)
                return false;
        }
        return true;
    }
}",https://github.com/shehdrbs123/Sparta/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12977.%E2%80%85%EC%86%8C%EC%88%98%E2%80%85%EB%A7%8C%EB%93%A4%EA%B8%B0,2023. 9. 5,48,2
2023. 9. 5 오후 1:52:55,노동균,Unity,49 - 덧칠하기,"using System;
using System.Collections.Generic;

public class Solution {
    public int solution(int n, int m, int[] section) {
        int answer = 1;
        
        int start = section[0];
        int end = start+m;
        
        for(int i=0;i<section.Length;++i)
        {
            if(start>section[i] || section[i] < end)
                continue;
            else
            {
                start = section[i];
                end = start+m;
                answer++;
            }
        }
        return answer;
    }
}",https://github.com/shehdrbs123/Sparta/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/unrated/161989.%E2%80%85%EB%8D%A7%EC%B9%A0%ED%95%98%EA%B8%B0,2023. 9. 5,49,2
2023. 9. 5 오후 1:53:25,노동균,Unity,50 - 기사단원의 무기,"using System;

public class Solution {
    public int solution(int number, int limit, int power) {
        int answer = 0;
        
        for(int i=1;i<=number;++i)
        {
            int weapon = GetCommonCount(i);
            if(weapon > limit)
                weapon = power;
            answer += weapon;
        }
        return answer;
    }
    
    public int GetCommonCount(int num)
    {
        int tmp = (int)Math.Sqrt(num);
        int count = 0;
        for(int i=1;i<=tmp;++i)
        {
            if(num%i == 0)
            {
                count++;
                if(i!=num/i)
                    count++;
            }
        }
        return count;
    }
}",https://github.com/shehdrbs123/Sparta/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/unrated/136798.%E2%80%85%EA%B8%B0%EC%82%AC%EB%8B%A8%EC%9B%90%EC%9D%98%E2%80%85%EB%AC%B4%EA%B8%B0,2023. 9. 5,50,2
2023. 9. 5 오후 1:53:56,노동균,Unity,51 - 로또의 최고 순위와 최저 순위,"using System;

public class Solution {
    public int[] solution(int[] lottos, int[] win_nums) {
        int[] answer = new int[] {0,0};
        int rightNum=0;
        int empty=0;
        for(int i=0;i<lottos.Length;++i)
        {
            if(Array.Find(win_nums,(x) => x == lottos[i]) != 0)
                rightNum++;
            if(lottos[i] == 0)
                empty++;
        }
            
        answer[0] = Math.Clamp(6-(rightNum+empty)+1,1,6);
        answer[1] = Math.Clamp(6-rightNum+1,1,6);
       
        
        return answer;
    }
}",https://github.com/shehdrbs123/Sparta/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/77484.%E2%80%85%EB%A1%9C%EB%98%90%EC%9D%98%E2%80%85%EC%B5%9C%EA%B3%A0%E2%80%85%EC%88%9C%EC%9C%84%EC%99%80%E2%80%85%EC%B5%9C%EC%A0%80%E2%80%85%EC%88%9C%EC%9C%84,2023. 9. 5,51,2
2023. 9. 5 오후 1:54:34,노동균,Unity,52 - 옹알이 (2),"using System;

public class Solution {
    public int solution(string[] babbling) {
        int answer = 0;
        string[] bab = {""aya"",""ye"",""woo"",""ma""};
        string[] babReplace = {""   "",""  "",""   "",""  ""};
        for(int i=0;i<babbling.Length;++i)
        {
            string tmp = babbling[i];
            bool isComplete = true;
            for(int j=0;j<bab.Length&&isComplete;++j)
            {
                int start = tmp.IndexOf(bab[j]);
                int end = start+bab[j].Length;
                while(start!= -1)
                {
                    //Console.WriteLine(tmp);
                    tmp = tmp.Remove(start,bab[j].Length);
                    tmp = tmp.Insert(start,babReplace[j]);
                    //Console.WriteLine(tmp);
                    start = tmp.IndexOf(bab[j]);
                    if(start == end)
                    {
                        isComplete = false;
                        break;
                    }
                    end = start+bab[j].Length;
                }
            }
            
            foreach(var v in tmp)
            {
                if(v != ' ')
                {
                    isComplete = false;
                    break;
                }
            }
            answer += isComplete ? 1 : 0;
        }
        return answer;
    }
}",https://github.com/shehdrbs123/Sparta/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/unrated/133499.%E2%80%85%EC%98%B9%EC%95%8C%EC%9D%B4%E2%80%85%EF%BC%882%EF%BC%89,2023. 9. 5,52,2
2023. 9. 5 오후 1:55:09,노동균,Unity,53 - 숫자 짝꿍,"using System;
using System.Collections.Generic;
public class Solution {
    public string solution(string X, string Y) {
        string answer = """";
        Dictionary<int,int> XCounter = new Dictionary<int,int>();
        Dictionary<int,int> YCounter = new Dictionary<int,int>();
        List<char> s = new List<char>();
        int i=0;
        if(X.Length > Y.Length)
        {
            string tmp = X;
            X = Y;
            Y = tmp;
        }
        
        for(;i<X.Length;i++)
        {
            int val;
            if(XCounter.TryGetValue(X[i],out val))
            {
                val += 1;
                XCounter[X[i]] = val;
            }else
                XCounter.Add(X[i],1);
            
            if(YCounter.TryGetValue(Y[i],out val))
            {
                val += 1;
                YCounter[Y[i]] = val;
            }else
                YCounter.Add(Y[i],1);
            
        }
        
        for(;i<Y.Length;i++)
        {
            int val;
            if(YCounter.TryGetValue(Y[i],out val))
            {
                val += 1;
                YCounter[Y[i]] = val;
            }else
                YCounter.Add(Y[i],1);
        }
        
        foreach(var a in XCounter)
        {
            int yVal;
            if(YCounter.TryGetValue(a.Key,out yVal))
            {
                int count = Math.Min(yVal,a.Value);
                while(count>0)
                {
                    s.Add((char)a.Key);
                    count--;
                }
            }
        }
        
        s.Sort((x,y) => y-x);
        if(s.Count==0)
            answer = ""-1"";
        else if (s[0] == '0')
            answer = ""0"";
        else
            answer = new string(s.ToArray());
        
        return answer;
    }
}",https://github.com/shehdrbs123/Sparta/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/131128.%E2%80%85%EC%88%AB%EC%9E%90%E2%80%85%EC%A7%9D%EA%BF%8D,2023. 9. 5,53,2
2023. 9. 5 오후 1:55:40,노동균,Unity,54 - 체육복,"using System;
using System.Collections.Generic;
public class Solution {
    public int solution(int n, int[] lost, int[] reserve) {
        int answer = 0;
        int lostCount = 0;
        HashSet<int> reserves = new HashSet<int>();
        HashSet<int> losts = new HashSet<int>();
        for(int i=0;i<reserve.Length;++i)
        {
            reserves.Add(reserve[i]);
        }
        
        foreach(var a in lost)
        {
            losts.Add(a);
        }
        Array.Sort(lost);
        for(int i=0;i<lost.Length;++i)
        {
            int num = lost[i];
            if(reserves.Contains(num))
            {
                reserves.Remove(num);
                losts.Remove(num);
            }else if(reserves.Contains(num-1)&& !losts.Contains(num-1))
            {
                reserves.Remove(num-1);
                losts.Remove(num-1);
            }else if(reserves.Contains(num+1) && !losts.Contains(num+1))
            {
                reserves.Remove(num+1);
                losts.Remove(num+1);
            }else
            {
                ++lostCount;
            }
        }
        
        answer = n-lostCount;
    
        return answer;
    }
}",https://github.com/shehdrbs123/Sparta/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/42862.%E2%80%85%EC%B2%B4%EC%9C%A1%EB%B3%B5,2023. 9. 5,54,2
2023. 9. 5 오후 2:29:02,최지연,AI,28 - 직사각형 별찍기,"a, b = map(int, input().strip().split(' '))
for i in range(b):
    print(a*('*'))",https://github.com/jiyeonCoder/algorithmPractice/blob/main/28.%20%EC%A7%81%EC%82%AC%EA%B0%81%ED%98%95%20%EB%B3%84%EC%B0%8D%EA%B8%B0.py,2023. 9. 5,28,1
2023. 9. 5 오후 3:20:03,채이환,Unity,42 - 콜라 문제,"using System;

public class Solution {
    public int solution(int a, int b, int n) {
        int answer = 0;
        while (n>=a)
        {
            answer += n / a * b;
            n = n / a * b + n % a;
        }
        return answer;
    }
}",,2023. 9. 5,42,2
2023. 9. 5 오후 4:42:23,박지원,Unity,34 - 최소직사각형,"using System;

public class Solution {
    public int solution(int[,] sizes) {
        int w = 0, h = 0;
        for(int i = 0; i < sizes.GetLength(0); i++){
            int bigger = sizes[i, 0] > sizes[i, 1] ? sizes[i, 0] : sizes[i, 1];
            int smaller = sizes[i, 0] > sizes[i, 1] ? sizes[i, 1] : sizes[i, 0];
            
            if(bigger > w)  w = bigger;
            if(smaller > h) h = smaller;
        }   

        return w*h;
    }
}",https://github.com/jwonp9127/AlgorithmStudy/tree/f6696f4cf6ceaf444ef21cfca076f88c1a7a37c5/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/86491.%E2%80%85%EC%B5%9C%EC%86%8C%EC%A7%81%EC%82%AC%EA%B0%81%ED%98%95,2023. 9. 5,34,2
2023. 9. 5 오후 4:58:20,박지원,Unity,35 - 시저 암호,"using System;

public class Solution {
    public string solution(string s, int n) {
        string answer = """";
        
        for(int i = 0; i < s.Length; i++){
            if(s[i] == ' ')
                answer += ' ';
            else if((s[i] + n) > (int)'z')
                answer += ((char)(s[i] + n - ('z' - 'a' + 1))).ToString();
            else if(s[i] <= (int)'Z' && (s[i] + n) > (int)'Z')
                answer += ((char)(s[i] + n - ('Z' - 'A' + 1))).ToString();
            else
                answer += ((char)(s[i] + n)).ToString();
        }
        return answer;
    }
}",https://github.com/jwonp9127/AlgorithmStudy/tree/dd8bbb4b1f89201e35887a67ddef7c4eb5a8cb4f/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12926.%E2%80%85%EC%8B%9C%EC%A0%80%E2%80%85%EC%95%94%ED%98%B8,2023. 9. 5,35,2
2023. 9. 5 오후 5:15:29,김대민,Unity,96 - 택배상자,"#include <string>
#include <vector>
#include <stack>
using namespace std;

int solution(vector<int> order) {
    int answer = 0;
    int inputCount = 0;
    stack<int> st;
    for(int i = 1; i <= order.size(); ++i)
    {
        if(order[inputCount] == i)
        {
            inputCount++;
        }
        else 
        {
            while(!st.empty() && st.top() == order[inputCount])
            {
                inputCount++;
                st.pop();
            }
            st.push(i);
        }
    }
    while(!st.empty() && st.top() == order[inputCount])
    {
        inputCount++;
        st.pop();
    }
    answer = inputCount;
    return answer;
}",https://docs.google.com/forms/d/e/1FAIpQLSf24FbTyD7MTN1tVPCRV1-qzqBJvzIxaoX9QmfJlw0HTu-P0A/viewform,2023. 9. 5,96,4
2023. 9. 5 오후 5:15:58,김대민,Unity,92 - 다리를 지나는 트럭,"#include <string>
#include <vector>
#include <queue>
using namespace std;

int solution(int bridge_length, int weight, vector<int> truck_weights) {
    int answer = 0;
    
    queue<int> Bridge;
    queue<int> wait;
    for(int i = 0; i < bridge_length; ++i)
        Bridge.push(0);
    for(auto& INT : truck_weights)
        wait.push(INT);
    
    int nowWeight = 0;
    do {
        nowWeight -= Bridge.front();
        Bridge.pop();
        
        if(!wait.empty() && weight >= nowWeight + wait.front()) {
            Bridge.push(wait.front());
            nowWeight += wait.front();
            wait.pop();
        }
        else {
            Bridge.push(0);
        }
        ++answer;
    }while(nowWeight != 0);
    //다르게 사용한다면 남은차가 없을 때 마지막 이동시간은 무조건 다리길이니까
    //while문을 추가로 돌 필요가 없게끔 만들 수 있다는 점을 이용한 연산방식도 있다.
    return answer;
}",https://github.com/KimDaeMins/CodingTest/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv2/42583.%E2%80%85%EB%8B%A4%EB%A6%AC%EB%A5%BC%E2%80%85%EC%A7%80%EB%82%98%EB%8A%94%E2%80%85%ED%8A%B8%EB%9F%AD/%EB%8B%A4%EB%A6%AC%EB%A5%BC%E2%80%85%EC%A7%80%EB%82%98%EB%8A%94%E2%80%85%ED%8A%B8%EB%9F%AD.cpp,2023. 9. 5,92,4
2023. 9. 5 오후 5:16:27,김대민,Unity,93 - 가장 큰 수,"#include <string>
#include <vector>
#include <algorithm>
using namespace std;

bool cmp(string A, string B) {
    return A + B > B + A;
}

string solution(vector<int> numbers) {
    string answer = """";
    
    vector<string> numbers_str;
    for(auto& I : numbers)
    { 
        numbers_str.push_back(to_string(I));
    }
    
    sort(numbers_str.begin(), numbers_str.end(), cmp);
    
    for(auto& STR: numbers_str)
    {
        answer += STR;
    }
    
    if(answer[0] == '0') 
        return ""0"";
    
    return answer;
}",https://github.com/KimDaeMins/CodingTest/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv2/42746.%E2%80%85%EA%B0%80%EC%9E%A5%E2%80%85%ED%81%B0%E2%80%85%EC%88%98/%EA%B0%80%EC%9E%A5%E2%80%85%ED%81%B0%E2%80%85%EC%88%98.cpp,2023. 9. 5,93,4
2023. 9. 5 오후 5:17:01,김대민,Unity,94 - 소수 찾기,"#include <string>
#include <vector>
#include <unordered_map>
#include <algorithm>
#include <math.h>
using namespace std;

bool isPrime(unordered_map<int, bool>* _pm, int _num)
{
    if((*_pm)[_num])
        return false;
    
    (*_pm)[_num] = true;
    
    if ( _num < 2) return false;
    
    int CheckMax = sqrt(_num);
    for(int i = 2; i <= CheckMax; ++i)
    {
        if(_num % i == 0) return false;
    }
    
    return true;
}

int solution(string numbers) {
    int answer = 0;
    unordered_map<int, bool> m;
    
    sort(numbers.begin(), numbers.end());
    
    do{
        for(int i = 0; i < numbers.size(); ++i)
        {
            if(isPrime(&m, stoi(numbers.substr(0, i + 1))))
            {
                ++answer;
            }
        }
    }while(next_permutation(numbers.begin(), numbers.end()));
    
    return answer;
}",https://github.com/KimDaeMins/CodingTest/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv2/42839.%E2%80%85%EC%86%8C%EC%88%98%E2%80%85%EC%B0%BE%EA%B8%B0/%EC%86%8C%EC%88%98%E2%80%85%EC%B0%BE%EA%B8%B0.cpp,2023. 9. 5,94,4
2023. 9. 5 오후 5:17:32,김대민,Unity,97 - 큰 수 만들기,"#include <string>
#include <vector>

using namespace std;

string solution(string number, int k) {
    string answer = """";

    int biggest = 0;
    int idx = 0;

    for (int i = 0; i < number.length(); ++i)
    {
        if (biggest < number[i])
        {
            biggest = number[i];
            idx = i;
        }

        if (i == k)
        {
            i = idx;
            ++k;
            answer.push_back(biggest);
            biggest = 0;
        }
    }

    return answer;
}",https://github.com/KimDaeMins/CodingTest/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv2/42883.%E2%80%85%ED%81%B0%E2%80%85%EC%88%98%E2%80%85%EB%A7%8C%EB%93%A4%EA%B8%B0/%ED%81%B0%E2%80%85%EC%88%98%E2%80%85%EB%A7%8C%EB%93%A4%EA%B8%B0.cpp,2023. 9. 5,97,4
2023. 9. 5 오후 5:18:28,김대민,Unity,84 - 타겟 넘버,"#include <string>
#include <vector>

using namespace std;

//조합을 이용하면 될것같은데..
//조합을 이용하기가 애매한게 + or -거든
//그래서 전부 +인경우랑 하나씩 - 해가는 경우를 나타내야하는데
//그럼 하나를 -할때마다 1번씩 순회를 해야한다는거임
//그래서 도서관에서 하는 방식으로다가 한번 해볼까 싶음 근데이게 참 애매하네
//도서관방식은 중복이 가능해서 좋지못함 이게나은듯
int Combi(int start, int k, vector<int>& numbers,int count, int checkNum)
{
    if(count == k)
    {
        if(checkNum == 0)
            return 1;
        return 0;
    }
    
    int num = 0;
    for(int i = start + 1; i < numbers.size(); ++i)
    {
        num += Combi(i, k, numbers, count + 1, checkNum - numbers[i] * 2);
    }
    return num;
}
int solution(vector<int> numbers, int target) {
    int answer = 0;
    
    int checkNum = -target;
    for(int a : numbers)
    {
        checkNum += a;
    }
    for(int i = 0; i < numbers.size(); ++i)
    {
        answer += Combi(-1, i + 1, numbers, 0, checkNum);
    }
    return answer;
}",https://github.com/KimDaeMins/CodingTest/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv2/43165.%E2%80%85%ED%83%80%EA%B2%9F%E2%80%85%EB%84%98%EB%B2%84/%ED%83%80%EA%B2%9F%E2%80%85%EB%84%98%EB%B2%84.cpp,2023. 9. 5,84,4
2023. 9. 5 오후 5:19:04,김대민,Unity,98 - 삼각 달팽이,"#include <string>
#include <vector>

using namespace std;
    int input[1001][1001] = {};

vector<int> solution(int n) {
    vector<int> answer;

    int mY[3] = {1, 0, -1};
    int mX[3] = {0, 1, -1};
    long count = 1;
    
    int size = n;
    if(n == 1)
    {
     answer.push_back(1);   
    }
    else if(n == 2)
    {
             answer.push_back(1);
             answer.push_back(2);
             answer.push_back(3);
    }
    else
    {
    for(int i = 0; i < size; ++i)
    {
        input[i][0] = count++;
    }
    for(int i = 1; i < size ; ++i)
    {
        input[size - 1][i] = count++;
    }
    for(int i = 1; i < size - 1; ++i)
    {
        input[size - 1 - i][size - 1 - i] = count++;
    }
    
    int nY = 1;
    int nX = 1;
    int dir = 0;
    while(true)
    {
        if(input[nY + mY[dir]][nX + mX[dir]] != 0)
        {
            ++dir;
            dir %= 3;
        }
        
        if(input[nY + mY[dir]][nX + mX[dir]] != 0)
            break;
        
        nY += mY[dir];
        nX += mX[dir];
        input[nY][nX] = count++;
    }
    
    for(int i = 0; i < size; ++i)
    {
        for(int j = 0; j <= i; ++j)
        {
            answer.push_back(input[i][j]);
        }
    }
    }
    return answer;
}",https://github.com/KimDaeMins/CodingTest/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv2/68645.%E2%80%85%EC%82%BC%EA%B0%81%E2%80%85%EB%8B%AC%ED%8C%BD%EC%9D%B4/%EC%82%BC%EA%B0%81%E2%80%85%EB%8B%AC%ED%8C%BD%EC%9D%B4.cpp,2023. 9. 5,98,4
2023. 9. 5 오후 5:19:28,김대민,Unity,95 - 쿼드압축 후 개수 세기,"#include <string>
#include <vector>

using namespace std;

void QuadTree(int startX, int startY, int endX, int endY, vector<vector<int>>* arr, vector<int>& answer)
{
    int firstNum = (*arr)[startY][startX];
    bool isAll = true;
    for (int i = startY; i < endY; ++i)
    {
        for (int j = startX; j < endX; ++j)
        {
            if (firstNum != (*arr)[i][j])
            {
                isAll = false;
                break;
            }
        }
        if (!isAll)
            break;
    }

    if (isAll)
    {
        answer[firstNum]++;
        return;
    }

    int midX = startX + (endX - startX) / 2;
    int midY = startY + (endY - startY) / 2;

    QuadTree(startX, startY, midX, midY, arr, answer);
    QuadTree(midX, startY, endX, midY, arr, answer);
    QuadTree(startX, midY, midX, endY, arr, answer);
    QuadTree(midX, midY, endX, endY, arr, answer);
}
vector<int> solution(vector<vector<int>> arr) {
    vector<int> answer(2, 0);
    int startX = 0;
    int startY = 0;
    int endX = arr.size();
    int endY = arr.size();

    QuadTree(startX, startY, endX, endY, &arr, answer);

    int a = 0;

    return answer;
}",https://github.com/KimDaeMins/CodingTest/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv2/68936.%E2%80%85%EC%BF%BC%EB%93%9C%EC%95%95%EC%B6%95%E2%80%85%ED%9B%84%E2%80%85%EA%B0%9C%EC%88%98%E2%80%85%EC%84%B8%EA%B8%B0/%EC%BF%BC%EB%93%9C%EC%95%95%EC%B6%95%E2%80%85%ED%9B%84%E2%80%85%EA%B0%9C%EC%88%98%E2%80%85%EC%84%B8%EA%B8%B0.cpp,2023. 9. 5,95,4
2023. 9. 5 오후 5:19:51,김대민,Unity,91 - 2개 이하로 다른 비트,"#include <string>
#include <vector>
#include <cmath>
#include <unordered_map>
using namespace std;
// 7과 6의 차이점이 뭘까?
// 7 >> 1 = 3
// 6 >> 1 = 3
//
vector<long long> solution(vector<long long> numbers) {
    vector<long long> answer;
    unordered_map<int, long long> m;
     m[0] = 1;
    for (int i = 1; i < 1000000; ++i)
    {
         m[i] = m[i - 1] * 2;
     }
    for(int i = 0; i < numbers.size(); ++i)
    {
        long long num = numbers[i];
        long long count = 0;
        while(num)
        {
            if(num >> 1 == (num - 1) >> 1)//마지막숫자가 1인경우 카운트증가
            {
                ++count;
                num >>= 1;
            }
            else//0인경우
            {
                if(count == 0)
                    answer.push_back(numbers[i] +   m[count]);
                else
                    answer.push_back(numbers[i] + m[count]- m[count - 1]);
                break;
            }
        }
        if(answer.size() - 1 != i)
        {
            answer.push_back((numbers[i] << 1) + 1 - m[count - 1]);
        }
    }
    
    return answer;
}",https://github.com/KimDaeMins/CodingTest/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv2/77885.%E2%80%852%EA%B0%9C%E2%80%85%EC%9D%B4%ED%95%98%EB%A1%9C%E2%80%85%EB%8B%A4%EB%A5%B8%E2%80%85%EB%B9%84%ED%8A%B8/2%EA%B0%9C%E2%80%85%EC%9D%B4%ED%95%98%EB%A1%9C%E2%80%85%EB%8B%A4%EB%A5%B8%E2%80%85%EB%B9%84%ED%8A%B8.cpp,2023. 9. 5,91,4
2023. 9. 5 오후 5:20:26,김대민,Unity,87 - 모음사전,"#include <string>
#include <vector>
#include <algorithm>
#include<bits/stdc++.h>

using namespace std;

//내가 쓴 단어 갯수를 구한다. -> 연관성을 찾는다
//A AA AAA AAAA AAAAA AAAAE AAAAI AAAAO AAAAU
//AAAE AAAEA AAAEE AAAEI AAAEO AAAEU
//AAAI AAAIA AAAIE AAAII AAAIO AAAIU
//AAAO AAAOA AAAOE AAAOI AAAOO AAAOU
//AAAU AAAUA AAAUE AAAUI AAAUO AAAUU
//AAE AAEA AAEAA AAEAE AAEAI AAEAO AAEAU
//AAEE AAEEA AAEEE AAEEI AAEEO AAEEU
//모르겠다

void Input(int _maxLen, string _s, string _t[], vector<string>* _v)
{
    if(_maxLen == _s.size())
    {
        _v->push_back(_s);
        return;
    }
    
    for(int i = 0 ; i < 5; ++i)
    {
        Input(_maxLen, _s + _t[i], _t, _v);
    }
}
int solution(string word) {
    int answer = 0;
    string t[5] = {""A"", ""E"" , ""I"", ""O"" , ""U""}; 
    vector<string> v;
    
    for(int i = 0; i < 5; ++i)
    {
        Input(i + 1, """", t, &v);
    }
    
    // 사전 순으로 정렬한다 문자열 소팅
    sort(v.begin(), v.end());

    answer = find(v.begin(), v.end(), word) - v.begin() + 1;
    return answer;
}",https://github.com/KimDaeMins/CodingTest/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv2/84512.%E2%80%85%EB%AA%A8%EC%9D%8C%E2%80%85%EC%82%AC%EC%A0%84/%EB%AA%A8%EC%9D%8C%E2%80%85%EC%82%AC%EC%A0%84.cpp,2023. 9. 5,87,4
2023. 9. 5 오후 5:20:46,김대민,Unity,85 - k진수에서 소수 개수 구하기,"#include <string>
#include <vector>
#include <algorithm>
using namespace std;

bool isPrime(unsigned long long num)
{
    if( num <= 1)
    {
        return false;
    }
    
    for(long long i = 2; i * i <= num; ++i)
        if(num % i == 0)
            return false;
    return true;
}
int solution(int n, int k) {
    int answer = 0;

    string a;

    while (n)
    {
        a.insert(0, to_string(n % k));
        n /= k;
    }

    long start = 0;
    long end = 0;
    while (end != std::string::npos)
    {
        end = a.find('0', start);
        unsigned long long num = 0;
        if(start != end && start != a.size())
            num = stoull(a.substr(start, end - start));
    
        start = end + 1;


        if (isPrime(num))
            answer++;
    }
    return answer;
}",https://github.com/KimDaeMins/CodingTest/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv2/92335.%E2%80%85k%EC%A7%84%EC%88%98%EC%97%90%EC%84%9C%E2%80%85%EC%86%8C%EC%88%98%E2%80%85%EA%B0%9C%EC%88%98%E2%80%85%EA%B5%AC%ED%95%98%EA%B8%B0/k%EC%A7%84%EC%88%98%EC%97%90%EC%84%9C%E2%80%85%EC%86%8C%EC%88%98%E2%80%85%EA%B0%9C%EC%88%98%E2%80%85%EA%B5%AC%ED%95%98%EA%B8%B0.cpp,2023. 9. 5,85,4
2023. 9. 5 오후 5:21:05,김대민,Unity,86 - 주차 요금 계산,"#include <string>
#include <vector>
#include <cmath>
#include <map>
using namespace std;

vector<int> solution(vector<int> fees, vector<string> records) {
    vector<int> answer;
    map<int, int> m;
    for(int i = 0; i < records.size(); ++i)
    {
        int num = stoi(records[i].substr(0, 2)) * 60;
        num += stoi(records[i].substr(3, 2));
        int carnum = stoi(records[i].substr(6, 4));
        string inout = records[i].substr(11);
        
        if(inout == ""IN"")
        {
            m[carnum] -= num;
        }
        else
        {
            m[carnum] += num;
        }
    }
    
    for(auto p : m)
    {
        if(p.second <= 0)
            p.second += 23 * 60 + 59; 
        if(p.second - fees[0] < 0)
        {
             answer.push_back(fees[1]);
        }
        else
        {
            if((p.second - fees[0]) % fees[2])
                answer.push_back(fees[1] + max(0, p.second - fees[0]) / fees[2] * fees[3] + fees[3]);
            else
                answer.push_back(fees[1] + max(0, p.second - fees[0]) / fees[2] * fees[3]);           
              
        }
       
    }
    return answer;
}",https://github.com/KimDaeMins/CodingTest/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv2/92341.%E2%80%85%EC%A3%BC%EC%B0%A8%E2%80%85%EC%9A%94%EA%B8%88%E2%80%85%EA%B3%84%EC%82%B0/%EC%A3%BC%EC%B0%A8%E2%80%85%EC%9A%94%EA%B8%88%E2%80%85%EA%B3%84%EC%82%B0.cpp,2023. 9. 5,86,4
2023. 9. 5 오후 5:21:27,김대민,Unity,89 - 롤케이크 자르기,"#include <string>
#include <vector>
#include <map>
using namespace std;

int solution(vector<int> topping) {
    int answer = 0;
    map<int, int> leftmap;
    map<int, int> rightmap;
    for(int a  : topping)
    {
        rightmap[a]++;
    }
    
    for(int i = 0; i < topping.size(); ++i)
    {
        int t = topping[i];
        leftmap[t]++;
        rightmap[t]--;
        if(rightmap[t] == 0)
        {
            rightmap.erase(t);
        }
        if(leftmap.size() == rightmap.size())
            answer++;
    }
    return answer;
}",https://github.com/KimDaeMins/CodingTest/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/unrated/132265.%E2%80%85%EB%A1%A4%EC%BC%80%EC%9D%B4%ED%81%AC%E2%80%85%EC%9E%90%EB%A5%B4%EA%B8%B0/%EB%A1%A4%EC%BC%80%EC%9D%B4%ED%81%AC%E2%80%85%EC%9E%90%EB%A5%B4%EA%B8%B0.cpp,2023. 9. 5,89,4
2023. 9. 5 오후 5:21:50,김대민,Unity,90 - 숫자 변환하기,"#include <string>
#include <vector>
#include <cmath>
#include <algorithm>
using namespace std;
//그니까 내 논리는 이거야 
//특정숫자에 도달했어 3가지방법으로
//그랬을때 그녀석의 인덱스를 숫자로 저장해
//
int ys[1000001] = {};
void Search(int y, int count, int n, int x)
{
    if(y <= x)
        return;
    
    if(y % 3 == 0)
    {
        ys[y / 3] = min(count, ys[y / 3]);
        if(ys[y / 3] == count)
            Search(y / 3, count + 1, n , x);
    }
    if(y % 2 == 0)
    {
        ys[y / 2] = min(count, ys[y / 2]);
        if(ys[y / 2] == count)
            Search(y / 2, count + 1, n , x);
    }
    if(y - n >= x)
    {
        ys[y - n] = min(count, ys[y - n]);
        if(ys[y - n] == count)
            Search(y - n, count + 1, n , x);
    }   
}
int solution(int x, int y, int n) {
    int answer = 0;

    if(x == y)
        return 0;
    fill(ys, ys + 1000001, 99999);
    
    Search(y, 1 , n, x);
    if(ys[x] == 99999)
        answer = -1;
    else
        answer = ys[x];
    
    return answer;
}",https://github.com/KimDaeMins/CodingTest/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/unrated/154538.%E2%80%85%EC%88%AB%EC%9E%90%E2%80%85%EB%B3%80%ED%99%98%ED%95%98%EA%B8%B0/%EC%88%AB%EC%9E%90%E2%80%85%EB%B3%80%ED%99%98%ED%95%98%EA%B8%B0.cpp,2023. 9. 5,90,4
2023. 9. 5 오후 5:22:13,김대민,Unity,88 - 뒤에 있는 큰 수 찾기,"#include <string>
#include <vector>
#include <stack>
using namespace std;

vector<int> solution(vector<int> numbers) {
    vector<int> answer;
    answer.resize(numbers.size(), -1);
    stack<pair<int, int>> st;
    
    st.push(pair<int,int>(0, numbers[0]));
    for(int i = 1; i < numbers.size(); ++i)
    {
        while(!st.empty() && numbers[i] > st.top().second)
        {
            answer[st.top().first] = numbers[i];
            st.pop();
        }
        st.push(pair<int, int> (i, numbers[i]));
    }
  
    return answer;
}",https://github.com/KimDaeMins/CodingTest/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/unrated/154539.%E2%80%85%EB%92%A4%EC%97%90%E2%80%85%EC%9E%88%EB%8A%94%E2%80%85%ED%81%B0%E2%80%85%EC%88%98%E2%80%85%EC%B0%BE%EA%B8%B0/%EB%92%A4%EC%97%90%E2%80%85%EC%9E%88%EB%8A%94%E2%80%85%ED%81%B0%E2%80%85%EC%88%98%E2%80%85%EC%B0%BE%EA%B8%B0.cpp,2023. 9. 5,88,4
2023. 9. 5 오후 5:23:23,김대민,Unity,99 - 연속된 부분 수열의 합,"#include <string>
#include <vector>
#include <algorithm>
using namespace std;
bool comp(const pair<int, int>& a, const pair<int, int>& b)
{
    if(a.second - a.first < b.second - b.first)
    {
        return true;
    }
    else if((a.second - a.first) == (b.second - b.first))
    {
        return a.first<b.first;
    }
    return false;
}
vector<int> solution(vector<int> sequence, int k) {
    vector<int> answer;
    vector<pair<int, int>> v;
    int num = 0;
    //어떤방식이냐면 지렁이가듯이
    int left = 0;
    for(int right  = 0; right < sequence.size(); ++right)
    {
        num += sequence[right];
       
        while(num > k)
        {
            num -= sequence[left++];
        }
        
         if(num == k)
            v.push_back(pair<int, int>(left, right));
    }
   
    std::sort(v.begin(), v.end(), comp);
    answer.push_back(v[0].first);
    answer.push_back(v[0].second);
    return answer;
}",https://github.com/KimDaeMins/CodingTest/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/unrated/178870.%E2%80%85%EC%97%B0%EC%86%8D%EB%90%9C%E2%80%85%EB%B6%80%EB%B6%84%E2%80%85%EC%88%98%EC%97%B4%EC%9D%98%E2%80%85%ED%95%A9/%EC%97%B0%EC%86%8D%EB%90%9C%E2%80%85%EB%B6%80%EB%B6%84%E2%80%85%EC%88%98%EC%97%B4%EC%9D%98%E2%80%85%ED%95%A9.cpp,2023. 9. 5,99,4
2023. 9. 5 오후 5:24:18,김대민,Unity,103 - 전력망을 둘로 나누기,"#include <string>
#include <vector>
#include <set>
#include <queue>

using namespace std;

//1. 서로 연결된 전력망을 하나 만든다. -> 멀티셋이였나? 셋배열을 이용함
int LinkNum(vector<set<int>> _graph, int _n, int _wireNumber)
{
    int length = 0;
    queue<int> q;
    q.push(_wireNumber);
    
   vector<bool> Visit(_n);
    Visit[_wireNumber] = true;
    
    while(!q.empty())
    {
        int front = q.front();
        q.pop();
        ++length;
        
        for(auto& Link : _graph[front])
        {
            if(Visit[Link])
                continue;
            
            q.push(Link);
            Visit[Link] = true;
        }
    }
    return length;
}
int solution(int n, vector<vector<int>> wires) {
    int answer = 100;
    
    vector<set<int>> graph;
    graph.resize(n + 1);
    
    //서로 연결된 와이어들을 셋에 담아뒀음.
    for(auto& wire : wires)
    {
        graph[wire[0]].insert(wire[1]);
        graph[wire[1]].insert(wire[0]);
    }
    
    for(auto& wire : wires)
    {
        graph[wire[0]].erase(wire[1]);
        graph[wire[1]].erase(wire[0]);
        
        //체크한다 무엇을? 이 선이 끊어졌을 때 이 두놈을 기준으로 나온 송전탑 갯수의 차이의 최솟값을
        answer = min(answer, abs(LinkNum(graph ,n, wire[0]) - LinkNum(graph, n, wire[1])));
        
        graph[wire[0]].insert(wire[1]);
        graph[wire[1]].insert(wire[0]);
    }
    
    
    
    
    
    return answer;
}",https://github.com/KimDaeMins/CodingTest/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv2/86971.%E2%80%85%EC%A0%84%EB%A0%A5%EB%A7%9D%EC%9D%84%E2%80%85%EB%91%98%EB%A1%9C%E2%80%85%EB%82%98%EB%88%84%EA%B8%B0/%EC%A0%84%EB%A0%A5%EB%A7%9D%EC%9D%84%E2%80%85%EB%91%98%EB%A1%9C%E2%80%85%EB%82%98%EB%88%84%EA%B8%B0.cpp,2023. 9. 5,103,4
2023. 9. 5 오후 8:35:35,이소이,Unity,37 - 문자열 내 마음대로 정렬하기,"using System.Linq;

public class Solution {
    public string[] solution(string[] strings, int n) {
        strings = strings.OrderBy(str => str).ToArray();
        strings = strings.OrderBy(str => (str.Substring(n))[0]).ToArray();
        return strings;
    }
}",https://github.com/leesy015599/AlgorithmCodeKata/blob/master/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12915.%E2%80%85%EB%AC%B8%EC%9E%90%EC%97%B4%E2%80%85%EB%82%B4%E2%80%85%EB%A7%88%EC%9D%8C%EB%8C%80%EB%A1%9C%E2%80%85%EC%A0%95%EB%A0%AC%ED%95%98%EA%B8%B0/%EB%AC%B8%EC%9E%90%EC%97%B4%E2%80%85%EB%82%B4%E2%80%85%EB%A7%88%EC%9D%8C%EB%8C%80%EB%A1%9C%E2%80%85%EC%A0%95%EB%A0%AC%ED%95%98%EA%B8%B0.cs,2023. 9. 5,37,2
2023. 9. 5 오후 10:08:58,서재민,Unity,8 - 문자열을 정수로 바꾸기,"public class Solution {
    public int solution(string s)
    {
        int answer = int.Parse(s);
        return answer;
    }
}",https://github.com/SeoJaeMin619/algorithm,2023. 9. 5,8,1
2023. 9. 6 오전 3:09:58,조성훈,Unity,20 - 가운데 글자 가져오기,"public class Solution 
{
    public string solution(string s) 
    {   
        string answer = """";
        int odd_number = s.Length/2;
        int even_number = s.Length/2;

        if(s.Length%2 != 0)
        {
            answer += s[odd_number];
        }
        else if(s.Length%2 == 0)
        {
            answer += s[even_number-1];
            answer += s[even_number];
        }


        return answer;
    }
}",,2023. 9. 5,20,1
2023. 9. 6 오전 9:01:07,이세진,Unity,11 - 하샤드 수,"public class Solution {
    public bool solution(int x) {
        bool answer = false;
        int add = 0;
        int x_ = x;
        
        for(int i = 0; x > 0; i++)
        {
            add += x % 10;
            x /= 10;
        }
        
        if( x_ % add == 0)
        {
            answer = true;
        }

        return answer;
    }
}",,2023. 9. 6,11,1
2023. 9. 6 오전 9:01:27,김경,Unity,40 - 가장 가까운 같은 글자,"public class Solution {
    public int[] solution(string s) {
        int[] answer = new int[s.Length];
        int index = -1;
        
        for(int i = 0; i < s.Length; i++)
        {
            index = -1;
            for(int j = i - 1; j >= 0; j--)
            {
                if(s[i] == s[j])
                {
                    index = i - j;
                    break;
                }
            }
            answer[i] = index;
        }
        return answer;
    }
}",,2023. 9. 6,40,2
2023. 9. 6 오전 9:01:49,김경원,Unity,41 - 푸드 파이트 대회,"using System;
using System.Linq;

public class Solution {
    public string solution(int[] food) {
        string answer = """";
        string str = """";
        
        for(int i = 1; i < food.Length; i++)
        {
            for(int j = 0; j < food[i] / 2; j++)
            {
                answer += i.ToString();
            }
        }
        str = String.Concat(answer.Reverse());
        answer += ""0"" + str;
        return answer;
    }
}",,2023. 9. 6,41,2
2023. 9. 6 오전 9:02:13,김경원,Unity,42 - 콜라 문제,"public class Solution {
    public int solution(int a, int b, int n) {
        int answer = 0;
        
        while(n > a - 1)
        {
            answer += (n / a) * b;
            n = (n / a) * b + n % a;
        }
        
        // 다른 사람의 풀이
        // return (n > b ? n - b : 0) / (a - b) * b;
        return answer;
    }
}",,2023. 9. 6,42,2
2023. 9. 6 오전 9:02:45,김경,Unity,43 - 명예의 전당 (1),"using System;
using System.Collections.Generic;
using System.Linq;

public class Solution {
    public int[] solution(int k, int[] score) {
        int[] answer = new int[score.Length];
        List<int> board = new List<int>();
        
        for(int i = 0; i < score.Length; i++)
        {
            if(board.Count == k)
            {
                if(board[0] > score[i])
                {
                    answer[i] = board[0];
                    continue;
                }
                board.RemoveAt(0);
            }
            board.Add(score[i]);
            board.Sort();
            answer[i] = board[0];
        }
        return answer;
    }
}",,2023. 9. 6,43,2
2023. 9. 6 오전 9:02:47,최장범,Unity,31 - 이상한 문자 만들기,"public class Solution {
    public string solution(string s) {
        string answer = """";
        int num = 0;

        for(int i = 0; i < s.Length; i++)
        {
            answer += num % 2 == 0 ? s[i].ToString().ToUpper() : s[i].ToString().ToLower();

            num = s[i] == ' '? 0 : num + 1;

        }


        return answer;
    }
}",,2023. 9. 6,31,2
2023. 9. 6 오전 9:04:24,김경원,Unity,44 - 2016년,"public class Solution {
    public string solution(int a, int b) {
        string answer = """";
        //1월 1일이 금요일부터 시작
        string[] day = new string[] { ""FRI"", ""SAT"", ""SUN"", ""MON"", ""TUE"", ""WED"", ""THU""};
        //1월부터 12월까지 해당 일 수
        int[] days = new int[] {31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31};
        
        int totalDays = 0;
        //해당 월까지 반복해서 totalDays에 더하기 ex) 5월 24일 이면 4월까지 더함
        for(int i=0; i<a-1; i++)
        {
            totalDays += days[i];
        }
        //totalDays에 일수를 더하고 -1을 뺌 -> (배열 크기 떄문에)
        totalDays += b -1;
        
        //총 일수 % 7 의 나머지로 해당 요일 구해서 리턴
        answer = day[totalDays % 7];
        return answer;
    }
}",,2023. 9. 6,44,2
2023. 9. 6 오전 9:08:17,김진규,Unity,44 - 2016년,"using System;

public class Solution {
    public string solution(int a, int b) {
        string answer = """";
        string[] daysOfWeek = { ""SUN"", ""MON"", ""TUE"", ""WED"", ""THU"", ""FRI"", ""SAT"" };
        DateTime date = new DateTime(2016, a, b);
        answer = daysOfWeek[(int)date.DayOfWeek];
        return answer;
    }
}",,2023. 9. 6,44,2
2023. 9. 6 오전 9:08:30,심명희,AI,22 - 내적,"def solution(a, b):
    answer = 0
    for i in range(len(a)):
        answer += a[i]*b[i]
    return answer",,2023. 9. 6,22,1
2023. 9. 6 오전 9:09:20,김명식,Unity,26 - 문자열 다루기 기본,"using System;

public class Solution {
    public bool solution(string s) {
        bool answer = false;
        char[] chr = s.ToString().ToCharArray();
        int check=0;
        for(int i=0;i<chr.Length;i++){
            if(chr.Length==4 || chr.Length==6){
                if(chr[i]>='0'&&chr[i]<='9'){
                    check++;
                } else {
                    return false; 
                }
            }else{
                return false;
            }
        }
        if(check==4||check==6){
            return true;
        }
        return false;
        
    }
}",https://github.com/D0ryeon/Algorithm-Code-Kata,2023. 9. 6,26,1
2023. 9. 6 오전 9:09:52,신해준,Unity,24 - 문자열 내림차순으로 배치하기,"using System;
using System.Linq;

public class Solution {
    public string solution(string s) {
        // 문자열을 배열로 변환하고, 각 문자의 ASCII 값을 기준으로 정렬
        char[] charArray = s.ToCharArray();
        Array.Sort(charArray, (a, b) => b.CompareTo(a));
        
        // 정렬된 문자 배열을 문자열로 변환하여 반환
        return new string(charArray);
    }
}
",,2023. 9. 6,24,1
2023. 9. 6 오전 9:10:55,이홍준,Unity,37 - 문자열 내 마음대로 정렬하기,"using System;
using System.Linq;

public class Solution {
    public string[] solution(string[] strings, int n) {
        string[] answer = new string[] {};
        
        answer = strings.OrderBy(x => x).OrderBy(x => x[n]).ToArray();
        
        return answer;
    }
}",https://github.com/dlghdwns97/Study/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12915.%E2%80%85%EB%AC%B8%EC%9E%90%EC%97%B4%E2%80%85%EB%82%B4%E2%80%85%EB%A7%88%EC%9D%8C%EB%8C%80%EB%A1%9C%E2%80%85%EC%A0%95%EB%A0%AC%ED%95%98%EA%B8%B0,2023. 9. 6,37,2
2023. 9. 6 오전 9:11:02,김민태,Unity,51 - 로또의 최고 순위와 최저 순위,"using System;
using System.Linq;

public class Solution {
    public int[] solution(int[] lottos, int[] win_nums) {
        int[] answer = new int[2];
        int[] newarray = lottos.Where(index => index != 0).ToArray();
        int count = 0;
        int zerocount = lottos.Length - newarray.Length;
        if(newarray.Length > 0)
        {
            for(int i = 0; i < newarray.Length; i++)
            {
                for(int j = 0; j < win_nums.Length; j++)
                {
                    if(newarray[i] == win_nums[j])
                    {
                        count++;
                    }
                }
            }
        }
        answer[0] = (7 - (count + zerocount)) != 7 ? 7 - (count + zerocount) : 6;
        answer[1] = (7 - count) != 7 ? 7 - count : 6;
        return answer;
    }
}",https://github.com/rlaalsxo/CodingTest,2023. 9. 6,51,2
2023. 9. 6 오전 9:11:17,김예준,Unity,51 - 로또의 최고 순위와 최저 순위,"using System;

public class Solution {
    public int[] solution(int[] lottos, int[] win_nums) {
        int[] answer = new int[2];
        
        int cnt = 0;
        int zero_cnt = 0;
        
        for (int i = 0; i < 6; i++)
        {
            if (lottos[i] == 0)
            {
                zero_cnt++;
                continue;
            }
            
            if (Array.Exists(win_nums, x => x == lottos[i]))
            {
                cnt++;
            }
        }
        
        if (cnt + zero_cnt <= 1)
        {
            answer[0] = 6;
            answer[1] = 6;
        }
        else
        {
            answer[0] = 7 - (cnt + zero_cnt);
            
            if (cnt <= 1) answer[1] = 6;
            else answer[1] = 7 - cnt;
        }
        
        return answer;
    }
}",,2023. 9. 6,51,2
2023. 9. 6 오전 9:11:50,신우석,Unity,58 - 햄버거 만들기,"using System;
using System.Collections.Generic;

public class Solution {
    Stack<int> ingreStack = new Stack<int>();
    public bool check() {
        // check only when the peak is 1.
        if (ingreStack.Count < 4) return false;
        ingreStack.Pop();
        if (ingreStack.Peek() != 3) {
            ingreStack.Push(1);
            return false;
        }
        ingreStack.Pop();
        if (ingreStack.Peek() != 2) {
            ingreStack.Push(3);
            ingreStack.Push(1);
            return false;
        }
        ingreStack.Pop();
        if (ingreStack.Peek() != 1) {
            ingreStack.Push(2);
            ingreStack.Push(3);
            ingreStack.Push(1);
            return false;
        }
        ingreStack.Pop();
        return true;
    }
    
    public int solution(int[] ingredient) {
        int answer = 0;
        foreach (int i in ingredient) {
            ingreStack.Push(i);
            if (i == 1 && check() == true) ++answer;
        }
            
        return answer;
    }
}",https://github.com/seoksii/AlgorithmCodeKata/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/unrated/133502.%E2%80%85%ED%96%84%EB%B2%84%EA%B1%B0%E2%80%85%EB%A7%8C%EB%93%A4%EA%B8%B0,2023. 9. 6,58,3
2023. 9. 6 오전 9:11:54,최장범,Unity,32 - 삼총사,"using System;

public class Solution {
    public int solution(int[] number) {
        int answer = 0;
        for (int i = 0; i <number.Length; i++)
        {
            for(int j= i+1; j<number.Length; j++)
            {
                for (int k = j+1; k<number.Length; k++)
                {
                    if(number[i]+number[j]+number[k]== 0)
                    {
                        answer++;
                    }
                }
            }
        }
        return answer;
    }
}",,2023. 9. 6,32,2
2023. 9. 6 오전 9:12:51,김형중,Unity,29 - 최대공약수와 최소공배수,"public class Solution {
    public int[] solution(int n, int m) {
        int[] answer = new int[2];
        int a =n;
        int b =m;
        int temp=0;
        while(m>0) //유클리드 호제법
        {
            temp =n%m;
            n=m;
            m=temp;
        }
        answer[0]=n;
        answer[1]=a*b/n;
        return answer;
    }
}",,2023. 9. 6,29,1
2023. 9. 6 오전 9:13:02,강성호,Unity,50 - 기사단원의 무기,"using System;

public class Solution {
    public int solution(int number, int limit, int power) {
        int answer = 0;
		int[] num = new int[number + 1];
	
		for (int i = 1; i <= number; i++)
		{
			for (int j = 1; j <= number / i; j++)
			{
				num[i * j]++;
			}

		}

		for (int i = 1; i < num.Length; i++)
		{

			if (num[i] > limit)
			{
				answer += power;
				continue;
			}
			answer += num[i];
		}
		return answer;
    }
}",,2023. 9. 6,50,2
2023. 9. 6 오전 9:14:07,장성림,Unity,43 - 명예의 전당 (1),"using System;
using System.Collections.Generic;
public class Solution {
    public int[] solution(int k, int[] score) {
        int[] answer = new int[score.Length];
        List<int> list = new List<int>();
        for(int i = 0; i < score.Length; i++){
            list.Add(score[i]);
            list.Sort();
            list.Reverse();
            if(list.Count <= k)
                answer[i] = list[list.Count - 1];
            else
                answer[i] = list[k - 1];
        }
        return answer;
    }
}",https://github.com/hoobhoob,2023. 9. 6,43,2
2023. 9. 6 오전 9:14:10,이세진,Unity,26 - 문자열 다루기 기본,"using System;

public class Solution {
    public bool solution(string s) {
        int i = 0;
        if(int.TryParse(s, out i))
        {
            if(s.Length == 6 || s.Length == 4)
            {
                return true;
            }
            
        }
        return false;
    }
}",,2023. 9. 6,26,1
2023. 9. 6 오전 9:15:57,신현주,Unity,35 - 시저 암호,"using System;
public class Solution {
    public string solution(string s, int n) {
        string answer = """";
        for( int i = 0; i < s.Length; i++){
            char value = s[i];
            int plus = n % 26;
            if(value == ' '){
                answer += "" "";
                continue;
            }
            value = Convert.ToChar(value + plus);    //대문자가 소문자영역안에 들어갔을 경우
            if( s[i] <= 90 && value >= 97){
                value = Convert.ToChar(value - 26);
                answer += value.ToString();
                continue;
            }
            if(value < 97 && value > 90){
                value = Convert.ToChar(value - 26);
            }
            if(value > 122){
                value = Convert.ToChar(value - 26);
            }
            answer += value.ToString();
        }
        return answer;
    }
}",https://github.com/Shyunju/codeKata,2023. 9. 6,35,2
2023. 9. 6 오전 9:16:26,김어진,Unity,18 - 없는 숫자 더하기,"using System;

public class Solution {
    public int solution(int[] numbers) {
        int answer = -1;
        for (int i=0; i<numbers.Length; i++){
            answer += numbers[i];
        }
        answer = 44 - answer;
        return answer;
    }
}",https://github.com/KimEoJin24/ProgrammersCodingTests/commit/38d1a172cf74b2e407ac7113c4c1a5d5252bd4e1,2023. 9. 6,18,1
2023. 9. 6 오전 9:16:42,노재우,Unity,31 - 이상한 문자 만들기,"using System.Linq;

public class Solution
{
    public string solution(string s)
    {
        string answer = """";
        char[] temp = s.ToArray();
        int addnum = 0;
        for (int i = 0; i < s.Length; i++)
        {
            if (temp[i] == ' ')
            {
                addnum=0;
                answer += s[i];
                continue;
            }
            if (addnum % 2 == 0)
            {
                answer += temp[i].ToString().ToUpper();
            }
            else 
            {
                answer += temp[i].ToString().ToLower();
            }
            addnum++;
        }
        return answer;
    }
}",,2023. 9. 6,31,2
2023. 9. 6 오전 9:17:35,김지수,AI,25 - 부족한 금액 계산하기,"def solution(price, money, count):
    s = 0
    for i in range(1,count+1):
        s += price*i
    if s <= money:
        answer = 0
    else: 
        answer = s-money
    return answer",,2023. 9. 6,25,1
2023. 9. 6 오전 9:18:50,이성,Unity,10 - 정수 내림차순으로 배치하기,"using System;

public class Solution {

    public long solution(long n) {
        long answer = 0;
        char[] temp = n.ToString().ToCharArray();
        
        Array.Sort(temp);
        
        Array.Reverse(temp);
        
        answer = Convert.ToInt64(new string(temp));
        
        return answer;
    }
}",https://github.com/LeeSeongGwon,2023. 9. 6,10,1
2023. 9. 6 오전 9:19:15,우민규,Unity,25 - 부족한 금액 계산하기,"using System;

class Solution
{
    public long solution(int price, int money, int count)
    {
        long result = 0;
        
        for(int i = 1; i <= count; i++)
        {
            result += (long)price * i; // 현재 price에 i를 곱하고 결과에 더합니다.
        }
        
        if(result<=money)
            return 0;
        else
            return result-money;
    }
}",https://github.com/Woomingyu/Programmers,2023. 9. 6,25,1
2023. 9. 6 오전 9:19:44,김민태,Unity,52 - 옹알이 (2),"using System;
using System.Linq;

public class Solution {
    public int solution(string[] babbling) {
        int answer = 0;
        string[] temp = new string[4]{""aya"", ""ye"", ""woo"", ""ma""};
        string str = """";
        
        for(int i = 0; i < babbling.Length; i++)
        {
            for(int j = 0; j < temp.Length; j++)
            {
                str = temp[j] + temp[j];
                babbling[i] = babbling[i].Replace(str, ""1"");
                babbling[i] = babbling[i].Replace(temp[j], "" "");
            }
            if(babbling[i].Trim().Length == 0)
            {
                answer++;
            }
        }
        return answer;
    }
}",https://github.com/rlaalsxo/CodingTest,2023. 9. 6,52,2
2023. 9. 6 오전 9:19:56,이정환,Unity,34 - 최소직사각형,"using System;

public class Solution {
    public int solution(int[,] sizes) {
        int xMax=int.MinValue;
        int yMax=int.MinValue;
        int index=0;
        while(index<=sizes.GetUpperBound(0))
        {
           if(sizes[index,0]<sizes[index,1])
           {
                int temp=sizes[index,0];
                sizes[index,0]=sizes[index,1];
                sizes[index,1] = temp;
           }
         if(sizes[index,0]>xMax) xMax=sizes[index,0];
         if(sizes[index,1]>yMax) yMax=sizes[index,1];
            
            index++;
        }
        int answer = xMax*yMax;
        return answer;
    }
}",,2023. 9. 6,34,2
2023. 9. 6 오전 9:20:37,정재훈,Unity,21 - 수박수박수박수박수박수?,"public class Solution {
    public string solution(int n) {
        string answer = """";
        for(int i = 1; i <= n ; i ++)
        {
            if(i%2 == 0)
            {
                answer+=""박"";
            }
            else
            {
                answer+=""수"";
            }
        }
        return answer;
    }
}",https://github.com/toadsam/Algorithm,2023. 9. 6,21,1
2023. 9. 6 오전 9:21:07,신해준,Unity,26 - 문자열 다루기 기본,"public class Solution {
    public bool solution(string s) {
        // 문자열의 길이가 4 또는 6이 아니면 false 반환
        if (s.Length != 4 && s.Length != 6) {
            return false;
        }
        
        // 문자열의 모든 문자가 숫자인지 확인
        foreach (char c in s) {
            if (!char.IsDigit(c)) {
                return false;
            }
        }
        
        // 모든 조건을 통과하면 true 반환
        return true;
    }
}
",,2023. 9. 6,26,1
2023. 9. 6 오전 9:21:11,김정민,Unity,58 - 햄버거 만들기,"public class Solution
        {
            static Stack<int> burgerStack;
            public int solution(int[] ingredient)
            {
                int answer = 0;
                burgerStack = new Stack<int>();
                for (int i = 0; i < ingredient.Length; i++)
                {
                    int cur = ingredient[i];
                    if (cur == 1)
                    {
                        if (burgerStack.Count > 0 && burgerStack.Peek() == 3)
                        {
                            RemoveBurgerStack();
                            answer++;
                        } else
                        {
                            burgerStack.Push(cur);
                        }
                    } else 
                    {
                        if (burgerStack.Count > 0) {
                            if (burgerStack.Peek() == cur - 1)
                            {
                                burgerStack.Push(cur);
                            } else
                            {
                                burgerStack.Clear();
                            }
                        }
                    } 
                }
                return answer;
            }

            static void RemoveBurgerStack()
            {
                int prev = 0;
                do
                {
                    prev = burgerStack.Pop();
                } while (prev != 1);
            }
        }",https://github.com/j-miiin/Algorithm_Study/blob/main/SPARTA_ALGORITHM_2023/Level3/58_MakeHamburger.cs,2023. 9. 6,58,3
2023. 9. 6 오전 9:21:12,김도현B,Unity,42 - 콜라 문제,"using System;

public class Solution {
    public int solution(int a, int b, int n) {
        int answer = 0;
        int result = 0;
        int remain = 0;
        while(n >= a){
            remain = n % a;
            result = (n / a) * b;
            answer += result;
            n = result + remain;
        }
        return answer;
    }",https://github.com/subscriptioncat/Algorithm,2023. 9. 6,42,2
2023. 9. 6 오전 9:21:13,이현지,Unity,43 - 명예의 전당 (1),"using System;

public class Solution {
    public int[] solution(int k, int[] score) {
        int[] answer = new int[score.Length];
        int[] honored = new int[k];
        for (int i = 0; i < score.Length; i++)
        {
            int index = 0;
            for (int j = 0; j < k; j++)
            {
                if (score[i] >= honored[j])
                {
                    honored[j] = score[i];
                    break;
                }
            }
            Array.Sort(honored);
            if (i < k) answer[i] = honored[k - i - 1];
            else answer[i] = honored[0];
        }
        
        return answer;
    }
}",https://github.com/szlovelee/Programmers-Algorithm,2023. 9. 6,43,2
2023. 9. 6 오전 9:21:37,이기호,AI,25 - 부족한 금액 계산하기,"def solution(price, money, count):
    sum = 0
    for i in range(1, count+1):
        p = i*price
        sum += p
    answer = sum-money
    if answer>0 :
        return(answer)
    else :
        return(0)",,2023. 9. 6,25,1
2023. 9. 6 오전 9:22:16,박민호,Unity,38 - K번째수정렬,"using System;
using System.Collections.Generic;
public class Solution {
    public int[] solution(int[] array, int[,] commands) {
        int[] answer = new int[commands.GetLength(0)];
        
        for(int i=0;i<commands.GetLength(0);i++){
            List<int> lst = new List<int>{};
            for(int j=commands[i,0];j<=commands[i,1];j++){
                lst.Add(array[j-1]);
            }
            lst.Sort();
            answer[i]=lst[commands[i,2]-1];
        }
        
        return answer;
    }
}",,2023. 9. 6,38,2
2023. 9. 6 오전 9:23:53,이도현,Unity,11 - 하샤드 수,"using System;

public class Solution {
    public bool solution(int x) {
            string str = x.ToString();

            int total = 0;
            foreach(char temp in str)
            {
                total += (int)(temp-'0');
            }

            if ((x%total)==0)
                return true;
            return false;
    }
}",,2023. 9. 6,11,1
2023. 9. 6 오전 9:24:16,김명식,Unity,27 - 행렬의 덧셈,"using System;

public class Solution {
    public int[,] solution(int[,] arr1, int[,] arr2) {
        int[,] answer = new int[arr1.GetLength(0),arr1.GetLength(1)];
        for(int i=0; i<arr1.GetLength(0); i++){
            for(int y=0; y<arr1.GetLength(1);y++){
                answer[i,y]=arr1[i,y]+arr2[i,y];
            }
        }
        return answer;
    }
}",https://github.com/D0ryeon/Algorithm-Code-Kata,2023. 9. 6,27,1
2023. 9. 6 오전 9:24:35,김경환,Unity,59 - 성격 유형 검사하기,"using System;
using System.Text;

public class Solution {
    public string solution(string[] survey, int[] choices) {
        StringBuilder sb = new StringBuilder();
        int[] alphabet = new int[26];
        char[,] mbti = new char[,] { {'R', 'T'}, {'C', 'F'}, {'J', 'M'}, {'A', 'N'} };
        
        for(int i = 0; i < survey.Length; i++)
        {
            char ch1 = survey[i][0];
            char ch2 = survey[i][1];
            
            int score = choices[i] - 4;
                
            if(ch1 < ch2)
            {
                char tmp = ch1;
                ch1 = ch2;
                ch2 = tmp;
                
                score = -score;
            }
            
            if(score > 0) 
            {
                alphabet[ch2-'A'] += score;
            }
            else
            {
                alphabet[ch1-'A'] += score;
            }
        }
        
        
        for(int i = 0; i < 4; i++)
        {
            int sum = alphabet[mbti[i, 0] - 'A'] + alphabet[mbti[i, 1] - 'A'];
                
            if(sum < 0 )
                sb.Append(mbti[i, 1]);
            else
                sb.Append(mbti[i, 0]);
        }
        
        return sb.ToString();
    }
}",https://github.com/kkh9700/algorithm,2023. 9. 6,59,3
2023. 9. 6 오전 9:24:44,신현주,Unity,36 - 숫자 문자열과 영단어,"using System;

public class Solution {
    public int solution(string s) {
        int answer = 0;
        s = s.Replace(""zero"", ""0"");
        s = s.Replace(""one"", ""1"");
        s = s.Replace(""two"", ""2"");
        s = s.Replace(""three"", ""3"");
        s = s.Replace(""four"", ""4"");
        s = s.Replace(""five"", ""5"");
        s = s.Replace(""six"", ""6"");
        s = s.Replace(""seven"", ""7"");
        s = s.Replace(""eight"", ""8"");
        s = s.Replace(""nine"", ""9"");
        
        int num;
        bool IsInt = int.TryParse(s, out num);
        if(IsInt){
            answer = num;
        }

        return answer;
    }
}",https://github.com/Shyunju/codeKata,2023. 9. 6,36,2
2023. 9. 6 오전 9:25:03,차요한,Unity,39 - 두 개 뽑아서 더하기,"using System;
using System.Collections.Generic;
using System.Linq;

public class Solution {
    public int[] solution(int[] numbers) {
        
        List<int> list = new List<int>();
        
            for (int i = 0; i < numbers.Length-1; i++)
            {
                for (int j = i+1; j < numbers.Length; j++)
                {
                int temp = numbers[i] + numbers[j];
                if (list.Contains(temp) == false)
                {
                    list.Add(temp);
                }
            }
        }
        list.Sort();
        
        int[] answer = list.Distinct().ToArray();
        return answer;
    }
}",https://github.com/HOHOJO/Algorithm_test,2023. 9. 6,39,2
2023. 9. 6 오전 9:25:43,공혜진,AI,27 - 행렬의 덧셈,"def solution(arr1, arr2):
    answer = []
    for i, j in zip(arr1, arr2):
        c = []
        for a, b in zip(i, j):
            s = a+b
            c.append(s)
        answer.append(c)
    return answer",,2023. 9. 6,27,1
2023. 9. 6 오전 9:25:52,차명경,AI,25 - 부족한 금액 계산하기,"def solution(price, money, count):
    answer=0
    for i in range(1,count+1):
        answer+=price*i
        
    if answer < money:
        return 0 
    else:
        return answer - money
    
    return answer
    ",,2023. 9. 6,25,1
2023. 9. 6 오전 9:26:07,정재훈,Unity,22 - 내적,"using System;

public class Solution {
    public int solution(int[] a, int[] b) {
        int answer = 0;
        for(int i = 0 ; i < a.Length ; i ++)
        {
            answer+=a[i]*b[i];
        }
        return answer;
    }
}",https://github.com/toadsam/Algorithm,2023. 9. 6,22,1
2023. 9. 6 오전 9:26:13,심우진,Unity,17 - 핸드폰 번호 가리기,"    using System;

public class Solution
    {


        public string solution(string phone_number)
        {
            int len = phone_number.Length;

            // 전화번호의 뒷 4자리를 제외한 나머지를 '*'로 변환
            string hiddenPart = new String('*', len - 4);

            // 숨겨진 부분과 원래 전화번호의 뒷 4자리를 합쳐서 반환
            return hiddenPart + phone_number.Substring(len - 4);
        }

    }",https://github.com/agasa0624/at,2023. 9. 6,17,1
2023. 9. 6 오전 9:26:39,심우진,Unity,18 - 없는 숫자 더하기,"    using System;
using System.Linq;

public class Solution
    {
        public int solution(int[] numbers)
        {
            // 0부터 9까지의 합은 45이므로
            int total = 45;

            // numbers에 포함된 숫자들을 전체 합에서 빼면
            // numbers에 없는 숫자들의 합을 얻을 수 있습니다.
            return total - numbers.Sum();
        }
    }",https://github.com/agasa0624/at,2023. 9. 6,18,1
2023. 9. 6 오전 9:27:02,김강현,Unity,20 - 가운데 글자 가져오기,"public class Solution {
    public string solution(string s)
    {
        string answer = """";
        int i = s.Length;
        if(i%2 ==0)
        {
            answer =""""+s[i/2-1]+s[i/2];
        }
        else if(i%2 ==1)
        {
            answer = """"+s[i/2];
        }
        
        return answer;
    }
}",,2023. 9. 6,20,1
2023. 9. 6 오전 9:27:41,문현우,Unity,21 - 수박수박수박수박수박수?,"public class Solution {
    public string solution(int n) {
        string answer = """";
        char[] watermelon = {'수', '박'};
        
        for (int i = 0; i < n; i++) {
            answer += watermelon[i % 2];
        }
        
        return answer;
    }
}",https://github.com/Munch310/Algorithm-Csharp/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12922.%E2%80%85%EC%88%98%EB%B0%95%EC%88%98%EB%B0%95%EC%88%98%EB%B0%95%EC%88%98%EB%B0%95%EC%88%98%EB%B0%95%EC%88%98%EF%BC%9F,2023. 9. 6,21,1
2023. 9. 6 오전 9:28:18,김지수,AI,26 - 문자열 다루기 기본,"def solution(s):
    if len(s) == 4 or len(s) ==6:
        if s.isdigit() == True:
            return True
        else: 
            return False
    return answer",,2023. 9. 6,26,1
2023. 9. 6 오전 9:29:08,노재우,Unity,32 - 삼총사,"public class Solution
{
    public int solution(int[] number)
    {
        int answer = 0;

        for (int i = 0; i < number.Length-2; i++)
        {
            for (int j = i+1; j < number.Length-1; j++)
            {
                for (int k = j + 1; j < number.Length; j++)
                {
                    if (i+j+k ==0)
                    {
                        answer++;
                    }

                }
            }
        }

        return answer;
    }
}",,2023. 9. 6,32,2
2023. 9. 6 오전 9:29:08,정재호,Unity,44 - 2016년,"using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.Linq;

public class Solution
{
    public string solution(int a, int b)
    {
        //1 fri 2 sat 3 sun 4 mon 5 tue 6 wed 7 thu

        string answer = """";

        int[] daysInMonths = { 0, 31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 };
        string[] dia = { ""THU"", ""FRI"", ""SAT"", ""SUN"", ""MON"", ""TUE"", ""WED"" };

        int days = 0;
        for (int i = 0; i < a; i++)
        {
            days += daysInMonths[i];
        }
        days += b;

        int whichDay = days % 7;

        return answer = dia[whichDay];
    }
}",,2023. 9. 6,44,2
2023. 9. 6 오전 9:29:26,장성림,Unity,44 - 2016년,"public class Solution {
    public string solution(int a, int b) {
        string answer = """";
        string[] days = {""SUN"",""MON"",""TUE"",""WED"",""THU"",""FRI"",""SAT""};
        int totaldays = b - 1;
        for(int i = 1; i < a; i++){
            switch(i){
                case 1:
                case 3:
                case 5:
                case 7:
                case 8:
                case 10:
                    totaldays += 31;
                    break;
                case 2:
                    totaldays += 29;
                    break;
                case 4:
                case 6:
                case 9:
                case 11:
                    totaldays += 30;
                    break;
            }
        }
        answer = days[(totaldays + 5) % 7];
        
        return answer;
    }
}",https://github.com/hoobhoob,2023. 9. 6,44,2
2023. 9. 6 오전 9:30:58,이형빈,Unity,15 - 나누어 떨어지는 숫자,"using System.Collections.Generic;
public class Solution {
    public int[] solution(int[] arr, int divisor) 
    {
         List<int> answer = new List<int> ();
        for(int i = 0; i<arr.Length; i++)
        {
            if(arr[i]%divisor==0)
            {
                answer.Add(arr[i]);
            }
            
        }
        if(answer.Count==0)
        {
            answer.Add(-1);
        }
        answer.Sort();
        return answer.ToArray();
    }
}",,2023. 9. 6,15,1
2023. 9. 6 오전 9:31:02,지민규,Unity,36 - 숫자 문자열과 영단어,"using System;
using System.Collections.Generic;
using System.Linq;

public class Solution {
    public static Dictionary<string, int> wordsToNum = new Dictionary<string, int>() 
        {
            {""zero"", 0},
            {""one"", 1},
            {""two"", 2},
            {""three"", 3},
            {""four"", 4},
            {""five"", 5},
            {""six"", 6},
            {""seven"", 7},
            {""eight"", 8},
            {""nine"", 9},
            {""ten"", 10}
        };
    
    public int solution(string s) {
        int answer = 0;
        foreach (string word in wordsToNum.Keys)
        {
            while (s.Contains(word))
            {
                s = s.Replace(word, wordsToNum[word].ToString());
            }
        }
        answer = int.Parse(s);
        return answer;
    }
}",,2023. 9. 6,36,2
2023. 9. 6 오전 9:31:04,김진규,Unity,45 - 카드 뭉치,"using System;

public class Solution {
    public string solution(string[] cards1, string[] cards2, string[] goal) {
        int index1 = 0, index2 = 0;

        foreach (var word in goal) {
            if (index1 < cards1.Length && word == cards1[index1]) {
                index1++;
            } else if (index2 < cards2.Length && word == cards2[index2]) {
                index2++;
            } else {
                return ""No"";
            }
        }

        return ""Yes"";
    }
}",,2023. 9. 6,45,2
2023. 9. 6 오전 9:31:20,박민호,Unity,39 - 두 개 뽑아서 더하기,"using System;
using System.Collections.Generic;
using System.Linq;
public class Solution {
    public int[] solution(int[] numbers) {
        List<int> lst = new List<int>{};
        
        for(int i=0;i<numbers.Length-1;i++){
            for(int j=i+1;j<numbers.Length;j++){
                lst.Add(numbers[i]+numbers[j]);
            }
        }
        List<int> newLst = lst.Distinct().ToList();
        newLst.Sort();
        int[] answer = newLst.ToArray();
        return answer;
    }
}",,2023. 9. 6,39,2
2023. 9. 6 오전 9:31:29,최장범,Unity,33 - 크기가 작은 부분,"using System;

public class Solution {
    public int solution(string t, string p) {
        int answer = 0;
        long ip = long.Parse(p);
        
        for(int i=0; i<=t.Length - p.Length; i++)
        {
            long it = long.Parse(t.Substring(i, p.Length));
            
            if (it <=ip)
                answer++;
        }
        return answer;
    }
}",,2023. 9. 6,33,2
2023. 9. 6 오전 9:32:36,이장원,Unity,12 - 두 정수 사이의 합,"namespace codekata
{
    public class Solution
    {
        public long solution(int a, int b)
        {
            long answer = 0;

            if (a < b)
            {
                for (int i = a; i <= b; i++)
                {
                    answer += i;
                }
            }
           
            else
            {
                for (int i = a; i >= b; i--)
                {
                    answer += i;
                }
            }

            return answer;
        }
    }
}",,2023. 9. 6,12,1
2023. 9. 6 오전 9:32:40,손병의,Unity,20 - 가운데 글자 가져오기,"public class Solution 
{
    public string solution(string s) 
    {
        string answer = """";
        if(s.Length % 2 == 0)
        {
            answer += s[s.Length / 2 -1];
            answer += s[s.Length / 2];
        }
        
        else
        {
            answer += s[s.Length / 2];
        }
        return answer;
    }
}",https://github.com/Son-BE/CodeKata1,2023. 9. 6,20,1
2023. 9. 6 오전 9:32:53,조병우,Unity,11 - 하샤드 수,"using System;

public class Solution
    {
        public bool solution(int x)
        {
            string temp = x.ToString(); //x를 문자열로 변경
            int sum = 0;
            for (int i = 0; i < temp.Length; i++) 
            {
                sum += (int)Char.GetNumericValue(temp[i]); //정수 x의 각 자릿수를 출력, 각 자릿수를 모두 더하여 합을 출력
            }
            bool answer = x % sum==0 ? true:false; //x가 자릿수 합으로 나웠을때 나머지가 0인가에 따라 true false 출력
            return answer;
        }
    }",,2023. 9. 6,11,1
2023. 9. 6 오전 9:33:12,강성호,Unity,51 - 로또의 최고 순위와 최저 순위,"using System;
using System.Collections.Generic;
using System.Linq;


public class Solution {
    public int[] solution(int[] lottos, int[] win_nums) {
       List<int> answer = new List<int>();
		int cnt = 0;
		int zeroCnt = 0;
		int first = 0;
		for(int i = 0; i < lottos.Length; i++)
		{
			if (lottos[i] == 0)
			{
				zeroCnt++;
			}
			if (win_nums.Contains(lottos[i]))
			{
				cnt++;
			}
		}
		first = zeroCnt + cnt;
		if (first != 0) answer.Add(7 - first);
		else answer.Add(6);


		if (cnt != 0) answer.Add(7 - cnt);
		else answer.Add(6);

		return answer.ToArray();
    }
}",,2023. 9. 6,51,2
2023. 9. 6 오전 9:33:25,김경환,Unity,60 - 바탕화면 정리,"using System;

public class Solution {
    public int[] solution(string[] wallpaper) {
        int[] answer = new int[4];
        
        answer[0] = Int32.MaxValue;
        answer[1] = Int32.MaxValue;
        answer[2] = Int32.MinValue;
        answer[3] = Int32.MinValue;
        
        for(int i = 0; i < wallpaper.Length; i++)
        {
            string str = wallpaper[i];
            
            for(int j = 0; j < str.Length; j++)
            {
                char ch = str[j];
                
                if(ch == '#')
                {                    
                    if(i < answer[0])
                        answer[0] = i;
                    if(j < answer[1])
                        answer[1] = j;
                    if(i + 1 > answer[2])
                        answer[2] = i + 1;
                    if(j + 1 > answer[3])
                        answer[3] = j + 1;
                }
            }
        }
        return answer;
    }
}",https://github.com/kkh9700/algorithm,2023. 9. 6,60,3
2023. 9. 6 오전 9:33:36,문현우,Unity,22 - 내적,"using System;

public class Solution {
    public int solution(int[] a, int[] b) {
        int answer = 0;
        for(int i = 0; i < a.Length; i++){
            answer += (a[i] * b[i]);
        }
        return answer;
    }
}",https://github.com/Munch310/Algorithm-Csharp/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/70128.%E2%80%85%EB%82%B4%EC%A0%81,2023. 9. 6,22,1
2023. 9. 6 오전 9:33:50,김형중,Unity,31 - 이상한 문자 만들기,"using System;

public class Solution {
    public string solution(string s) {
        string answer = """";
        string[] temp = s.Split(); //공백을 기준으로 문자를 배열로 넣음
        
        for (int i = 0; i < temp.Length; i++) //문자열 호출 문자열=i
        {
            for (int j = 0; j < temp[i].Length; j++) //문자열 안의 문자 호출 문자=j
            {
                if (j == 0)
                {
                    answer += Char.ToUpper(temp[i][j]); //대문자로 ToUpper
                    continue;
                }
                if (j % 2 == 0)
                {
                    answer += Char.ToUpper(temp[i][j]);
                }
                else
                {
                    answer += Char.ToLower(temp[i][j]); //소문자로 ToLower
                }
            }
            if (i != temp.Length - 1) //마지막에 띄어쓰기가 추가되지 않게 -1
            {
                answer += "" ""; //공백넣기
            }
        }
        
        return answer;
    }
}",,2023. 9. 6,31,2
2023. 9. 6 오전 9:34:49,조호진,AI,33 - 크기가 작은 부분,"def solution(t, p):
    answer = 0
    a = len(t)
    b = len(p)
    for i in range(a-b+1):
        if t[i:i+b]<= p:
            answer+=1
                    
    return answer",https://github.com/bm4706/Algorithm_practice/commit/1152d60053088abebea7b307dfe309e6eaf704fa,2023. 9. 6,33,2
2023. 9. 6 오전 9:35:40,신우석,Unity,59 - 성격 유형 검사하기,"using System;

public class Solution {
    public string solution(string[] survey, int[] choices) {
        int[] scores = new int[4];
        for (int i = 0; i < survey.Length; ++i)
            switch (survey[i][0]) {
                case 'R':
                    scores[0] += choices[i] - 4;
                    break;
                case 'T':
                    scores[0] += 4 - choices[i];
                    break;
                case 'C':
                    scores[1] += choices[i] - 4;
                    break;
                case 'F':
                    scores[1] += 4 - choices[i];
                    break;
                case 'J':
                    scores[2] += choices[i] - 4;
                    break;
                case 'M':
                    scores[2] += 4 - choices[i];
                    break;
                case 'A':
                    scores[3] += choices[i] - 4;
                    break;
                case 'N':
                    scores[3] += 4 - choices[i];
                    break;
            }

        char[] answer = new char[4];
        if (scores[0] <= 0) answer[0] = 'R'; else answer[0] = 'T';
        if (scores[1] <= 0) answer[1] = 'C'; else answer[1] = 'F';
        if (scores[2] <= 0) answer[2] = 'J'; else answer[2] = 'M';
        if (scores[3] <= 0) answer[3] = 'A'; else answer[3] = 'N';
        return new String(answer);
    }
}",https://github.com/seoksii/AlgorithmCodeKata/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/118666.%E2%80%85%EC%84%B1%EA%B2%A9%E2%80%85%EC%9C%A0%ED%98%95%E2%80%85%EA%B2%80%EC%82%AC%ED%95%98%EA%B8%B0,2023. 9. 6,59,3
2023. 9. 6 오전 9:36:35,김호연,Unity,30 - 3진법 뒤집기,"using System;
using static System.Math;
using System.Collections.Generic;

public class Solution {
    public int solution(int n) {
        int answer = 0;
        // 3진법은 n을 3으로 나눈 나머지를 역순으로 나열하면 됨 -> 리스트 사용
        // 나눈 나머지를 저장 후 몫을 다시 나누고 0이될 때까지 반복
        // 그 후 리스트 뒤집고 자릿수마다 3의 거듭 제곱 해주면 10진수로 변환 완성
        List<int> list = new List<int>();
        
        //자연수 n이 0이 될 때 까지 나눈 나머지를 list에 저장
        while(true)
        {
            if(n==0) break;
            int d = n%3;
            list.Add(d);
            n = n/3;
        }
        //앞뒤 뒤집기 list.Reverse()
        list.Reverse();
        
        //뒤집은 list의 나머지 값 * 3의 거듭 제곱을 곱해 answer에 더하기
        for(int i = 0; i<list.Count; i++)
        {
            answer += (int)(list[i] * Math.Pow(3,i));
        }
        return answer;
    }
   
}",,2023. 9. 6,30,1
2023. 9. 6 오전 9:36:37,김예준,Unity,52 - 옹알이 (2),"using System;

public class Solution {
    public int solution(string[] babbling) {
        int answer = 0;
        
        foreach (string s in babbling)
        {
            int bab = 0;
            bool flag = true;
            
            for (int i = 0; i < s.Length; i++)
            {
                if (i + 2 < s.Length && s.Substring(i,3) == ""aya"" && bab != 1)
                {
                    bab = 1;
                    i += 2;
                }
                else if (i + 1 < s.Length && s.Substring(i,2) == ""ye"" && bab != 2)
                {
                    bab = 2;
                    i += 1;
                }
                else if (i + 2 < s.Length && s.Substring(i,3) == ""woo"" && bab != 3)
                {
                    bab = 3;
                    i += 2;
                }
                else if (i + 1 < s.Length && s.Substring(i,2) == ""ma"" && bab != 4)
                {
                    bab = 4;
                    i += 1;
                }
                else
                {
                    flag = false;
                    break;
                }
            }
            if (flag) answer++;
        }
        
        return answer;
    }
}",,2023. 9. 6,52,2
2023. 9. 6 오전 9:36:42,김명식,Unity,28 - 직사각형 별찍기,"using System;

public class Example
{
    public static void Main()
    {
        String[] s;

        Console.Clear();
        s = Console.ReadLine().Split(' ');

        int a = Int32.Parse(s[0]);
        int b = Int32.Parse(s[1]);
        
        for(int i=0; i<b;i++){
            for(int z=0; z<a;z++){
            Console.Write(""*"");    
            }
            Console.Write(""\n"");
        }
    }
}",https://github.com/D0ryeon/Algorithm-Code-Kata,2023. 9. 6,28,1
2023. 9. 6 오전 9:38:58,기현빈,Unity,37 - 문자열 내 마음대로 정렬하기,"using System.Linq;
using System.Collections.Generic;

public class Solution {
    public string[] solution(string[] strings, int n) {
        List<string> list = new List<string>(strings);
        
        list = list.OrderBy(x => x[n]).ThenBy(x => x).ToList();
        
        return list.ToArray();
    }
}",,2023. 9. 6,37,2
2023. 9. 6 오전 9:39:06,신해준,Unity,25 - 부족한 금액 계산하기,"public class Solution
{
    public long solution(int price, int money, int count)
    {
        long sum = 0; // 총 비용을 저장하는 long 변수로 변경
        
        for (int i = 1; i <= count; i++) // i를 1부터 시작하도록 수정
        {
            sum += price * i; // 각 반복에서 비용을 누적
        }
        
        // 금액 부족 시에만 양수 반환, 그 외에는 0 반환
        return (money >= sum) ? 0 : sum - money;
    }
}
",,2023. 9. 6,25,1
2023. 9. 6 오전 9:39:57,손병의,Unity,21 - 수박수박수박수박수박수?,"public class Solution
{
    public string solution(int n) 
    {
        string answer = """";
        string[] arr = new string[] {""수"",""박""};
        
        for(int i = 2; i< n+2; ++i)
        {
            answer += arr[i%2];
        }
        
        return answer;
    }
}",https://github.com/Son-BE/CodeKata1,2023. 8. 6,21,1
2023. 9. 6 오전 9:40:45,신현주,Unity,37 - 문자열 내 마음대로 정렬하기,"using System;
public class Solution {
    public string[] solution(string[] strings, int n) {
        int len = strings.Length;
        string[] answer = new string[len];
        
        //각 문자열의 n번째 글자를 앞으로 더한 문자열을 저장
        for(int i=0; i<len; i++)
        {
            answer[i] = (strings[i][n]) + strings[i];
        }
        
        //오름차순 정렬
        Array.Sort(answer);
        
        //정렬된 문자열에 더했던 n번째 글자를 Substring(1)으로 제거
        for(int j=0; j<len; j++)
        {
            answer[j] = answer[j].Substring(1);
        }
        
        return answer;
    }
}",https://github.com/Shyunju/codeKata,2023. 9. 6,37,2
2023. 9. 6 오전 9:40:57,박지원,Unity,36 - 숫자 문자열과 영단어,"using System;

public class Solution {
    public int solution(string s) {
        string answer = """";
        for(int i = 0; i < s.Length; i++){
            // isNumber
            if(int.TryParse(s[i].ToString(), out int _)){
                answer += s[i];
                continue;
            }

            switch(s[i]){
                case 'z':
                    answer += ""0"";
                    i += 3;
                    break;
                case 'o':
                    answer += ""1""; 
                    i += 2;
                    break;
                case 't':
                    answer += s[i+1] == 'w' ? ""2"" : ""3"";
                    i += s[i+1] == 'w' ? 2 : 4;
                    break;
                case 'f':
                    answer += s[i+1] == 'o' ? ""4"" : ""5"";
                    i += 3;
                    break;
                case 's':
                    answer += s[i+1] == 'i' ? ""6"" : ""7"";
                    i += s[i+1] == 'i' ? 2 : 4;
                    break;
                case 'e':
                    answer += ""8"";
                    i += 4;
                    break;
                case 'n':
                    answer += ""9"";
                    i += 3;
                    break;
            }  
        }
        return int.Parse(answer);
    }
}",https://github.com/jwonp9127/AlgorithmStudy/tree/996fcb9a8e0fe4f2c319322822c092c7bad509a9/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/81301.%E2%80%85%EC%88%AB%EC%9E%90%E2%80%85%EB%AC%B8%EC%9E%90%EC%97%B4%EA%B3%BC%E2%80%85%EC%98%81%EB%8B%A8%EC%96%B4,2023. 9. 6,36,2
2023. 9. 6 오전 9:41:31,김민석,Unity,16 - 음양 더하기,"using System;

public class Solution {
    public int solution(int[] absolutes, bool[] signs) {
        int answer = 0;
        
        for (int i = 0; i < absolutes.Length; i++)
        {
            answer += absolutes[i] = signs[i] ? absolutes[i] : absolutes[i] * -1;
        }
        
        return answer;
    }
}",https://github.com/ms0753/codekata/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/76501.%E2%80%85%EC%9D%8C%EC%96%91%E2%80%85%EB%8D%94%ED%95%98%EA%B8%B0/%EC%9D%8C%EC%96%91%E2%80%85%EB%8D%94%ED%95%98%EA%B8%B0.cs,2023. 9. 6,16,1
2023. 9. 6 오전 9:41:54,김하늘,Unity,31 - 이상한 문자 만들기,"public class Solution 
{
    public string solution(string s) 
    {
        string answer = """";
        string[] strings = s.Split(' ');
        for (int i = 0; i < strings.Length; i++)
        {
            for (int j = 0; j < strings[i].Length; j++)
            {
                if (j == 0 || j % 2 == 0)
                    answer += char.ToUpper(strings[i][j]);
                else
                    answer += char.ToLower(strings[i][j]);
            }
            if (i != strings.Length - 1)
            {
                answer += "" "";
            }
        }
        return answer;
    }
}",,2023. 9. 6,31,2
2023. 9. 6 오전 9:42:25,이홍준,Unity,38 - K번째수정렬,"using System;
using System.Linq;
using System.Collections.Generic;

public class Solution {
    public int[] solution(int[] array, int[,] commands) {
        List<int> answer = new List<int>();
        
        for (int i = 0; i < commands.GetLength(0); i++)
        {
            int[] newarray = array.Skip(commands[i, 0] - 1).Take(commands[i, 1] - commands[i, 0] + 1).ToArray();
            Array.Sort(newarray);
            answer.Add(newarray[commands[i, 2] - 1]);
        }
        
        return answer.ToArray();
    }
}",https://github.com/dlghdwns97/Study/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/42748.%E2%80%85K%EB%B2%88%EC%A7%B8%EC%88%98,2023. 9. 6,38,2
2023. 9. 6 오전 9:42:41,이선재,Unity,55 - 문자열 나누기,"#include <string>
#include <vector>

using namespace std;

int solution(string s) {
    int answer = 0;
    
    char currentC = 'X';
    int countC[2] = {0,};
    
    for(int i = 0; i < s.length(); i++)
    {
        if(currentC == 'X')
        {
            currentC = s[i];
            countC[0] += 1;
            
            continue;
        }
        
        if(s[i] == currentC)
        {
            countC[0] += 1;
        }
        else
        {
            countC[1] += 1;
            
            if(countC[0] == countC[1])
            {
                currentC = 'X';
                countC[0] = 0; countC[1] = 0;
                answer += 1;
            }
        }
    }
    
    
    // 마지막까지 못쪼개질때
    if(currentC != 'X')
    {
        answer += 1;
    }
    
    
    return answer;
}",https://github.com/Lyrwhitt/Algorithm/blob/main/Programmers/LEVEL1/%EB%AC%B8%EC%9E%90%EC%97%B4%20%EB%82%98%EB%88%84%EA%B8%B0,2023. 9. 6,55,3
2023. 9. 6 오전 9:43:09,김광수,Unity,70 - 예상 대진표,"class Solution
{
    //  n명이 토너먼트에 참가
    // 1~n번을 배정 받고 진출한 사람은 다시 1~N/2번을 배정받는다.
    // 게임은 최종 한명이 남을때 까지 진행된다.
    // A와 B가 주어질때 A와 B가 언제만날까?
    
    // 7 ,9, 27, 33 실패
    
    // 원인은 a-b의 절댓값이 1인지를 판단한다면
    // 예를 들어 2,3 일때도 만난다고 생각하게됨
    public int solution(int n, int a, int b)
    {
        int answer = 0;
        
        while ( a != b)
        {
            a = (a + 1) /2;
            b = (b + 1) /2;    
            answer++;
        }


        return answer;
    }
}

/*
class Solution
{
    //  n명이 토너먼트에 참가
    // 1~n번을 배정 받고 진출한 사람은 다시 1~N/2번을 배정받는다.
    // 게임은 최종 한명이 남을때 까지 진행된다.
    // A와 B가 주어질때 A와 B가 언제만날까?
    
    // 7 ,9, 27, 33 실패
    public int solution(int n, int a, int b)
    {
        int answer = 1;
        
        while ( Math.Abs(a-b) > 1)
        {
            a = (a + 1) /2;
            b = (b + 1) /2;    
            answer++;
        }


        return answer;
    }
}
*/",https://github.com/kksoo0131/Study,2023. 9. 6,70,3
2023. 9. 6 오전 9:44:06,김형중,Unity,32 - 삼총사,"using System;

public class Solution {
    public int solution(int[] number) {
        int answer = 0;
        
        for (int i = 0; i < number.Length; i++)
        {
            for (int j = i + 1; j < number.Length; j++)
            {
                for (int k = j+1; k < number.Length; k++)
                {
                    if(number[i] + number[j] + number[k] == 0)
                    {
                        answer++;
                    }
                }
            }
        }
        return answer;
    }
}",,2023. 9. 6,32,2
2023. 9. 6 오전 9:45:54,이기호,AI,26 - 문자열 다루기 기본,"def solution(s):
    try:
        int(s)
    except:
        return False
    
    if len(s) == 4 or len(s)== 6:
        return True
    else:
        return False",,2023. 9. 6,26,1
2023. 9. 6 오전 9:46:19,장현교,Unity,15 - 나누어 떨어지는 숫자,"public class Solution
{
    public List<int> solution(int[] arr, int divisor)
    {
        List<int> answer = new List<int> { };
        for (int i = 0; i < arr.Length; i++)
        {
            if (arr[i] % divisor == 0)
            {
                answer.Add(arr[i]);
            }
        }
        if (answer.Count > 0)
        {
            answer.Sort();
        }
        else
        {
            answer.Add(-1);
        }
        return answer;
    }
}",,2023. 9. 6,15,1
2023. 9. 6 오전 9:46:20,박준규,Unity,29 - 최대공약수와 최소공배수,"public class Solution 
{
    public int[] solution(int n, int m) 
    {
        int[] answer = new int[2];
        long min = 0;
        long max = 0;
        for(long l = m;;l--){
            if(n%l == 0 && m%l == 0){
                min = l;
                break;
            }
        }
        if(n<=m){
            for(long i = 1;i<=n*m ;i++){
                for(long j =1;j<=n*m;j++){
                    if(n*j==m*i){
                        max = n*j;
                        break;
                    }
                }
                if(max > 0){
                    break;
                }
            }
        }else if(n>m){
            for(int i = 1;i<=n*m ;i++){
                for(int j =1;j<=n*m;j++){
                    if(m*j==n*i){
                        max = m*j;
                        break;
                    }
                }
                if(max > 0){
                    break;
                }
            }
        }
        answer[0] = (int)min;
        answer[1] = (int)max;
        return answer;
    }
}",,2023. 9. 6,29,1
2023. 9. 6 오전 9:46:39,이경현,Unity,37 - 문자열 내 마음대로 정렬하기,"public string[] solution(string[] strings, int n)
{

    Array.Sort(strings, (x, y) => (x.ToCharArray()[n] == y.ToCharArray()[n]) ? x.CompareTo(y) : x.ToCharArray()[n].CompareTo(y.ToCharArray()[n]));

    return strings;

}",https://github.com/516lkh/Algorithm,2023. 9. 6,37,2
2023. 9. 6 오전 9:47:15,차명경,AI,26 - 문자열 다루기 기본,"def solution(s):
    if (len(s)==4 or len(s)==6)and s.isdigit():
        return True
    else:
        return False
    
    ",,2023. 9. 6,26,1
2023. 9. 6 오전 9:47:35,배인호,Unity,48 - 소수 만들기,"using System;
using System.Text.RegularExpressions;

class Solution
{
    public int solution(int[] nums)
    {
        int answer = 0;

        int index = nums.Length;
        int primeNum;

        for (int i = 0; i < index - 2; i++)
        {
            for (int j = i + 1; j < index - 1; j++)
            {
                for (int k = j + 1; k < index; k++)
                {
                    primeNum = nums[i] + nums[j] + nums[k];

                    if (IsPrime(primeNum))
                    {
                        answer++;
                    }
                }
            }
        }

        return answer;
    }

    public bool IsPrime(int num)
    {
        bool primeNum = true;
        int index = (int)Math.Sqrt(num);

        for (int i = 2; i <= index; i++)
        {
            if (num % i == 0)
            {
                primeNum = false;
            }
        }

        return primeNum;
    }
}
",https://github.com/cutlake2000/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12977.%E2%80%85%EC%86%8C%EC%88%98%E2%80%85%EB%A7%8C%EB%93%A4%EA%B8%B0,2023. 9. 6,48,2
2023. 9. 6 오전 9:47:48,김경원,Unity,45 - 카드 뭉치,"public class Solution {
    public string solution(string[] cards1, string[] cards2, string[] goal) {
        string answer = ""Yes"";
        int index1 = 0;
        int index2 = 0;
        
        for(int i = 0; i < goal.Length; i++)
        {
            if(index1 < cards1.Length && goal[i] == cards1[index1])
            {
                index1++;
                continue;
            }
            else if(index2 < cards2.Length && goal[i] == cards2[index2])
            {
                index2++;
                continue;
            }
            else
            {
                return ""No"";
            }         
        }
        
        return answer;
    }
}",,2023. 9. 6,45,2
2023. 9. 6 오전 9:47:58,이선재,Unity,56 - 대충 만든 자판,"#include <string>
#include <vector>
#include <map>

using namespace std;

vector<int> solution(vector<string> keymap, vector<string> targets) {
    vector<int> answer;
    map<char, int> alphabetMap;
    
    for(int i = 65; i < 91; i++)
    {
        alphabetMap[(char)i] = 100;
    }
    
    for(int i = 0; i < keymap.size(); i++)
    {
        for(int j = 0; j < keymap[i].length(); j++)
        {
            if(alphabetMap[keymap[i][j]] > j+1)
                alphabetMap[keymap[i][j]] = j+1;
        }
    }
    
    for(int i = 0; i < targets.size(); i++)
    {
        int add = 0;
        
        for(int j = 0; j < targets[i].length(); j++)
        {
            // 작성할 수 없는 문자열일 경우
            if(alphabetMap[targets[i][j]] == 100)
            {
                add = -1;
                break;
            }
            
            add += alphabetMap[targets[i][j]];
        }
        
        answer.push_back(add);
    }
    
    return answer;
}",https://github.com/Lyrwhitt/Algorithm/blob/main/Programmers/LEVEL1/%EB%8C%80%EC%B6%A9%20%EB%A7%8C%EB%93%A0%20%EC%9E%90%ED%8C%90,2023. 9. 6,56,3
2023. 9. 6 오전 9:48:11,김경,Unity,46 - 과일 장수,"using System;
using System.Linq;

public class Solution {
    public int solution(int k, int m, int[] score) {
        int answer = 0;
        int index = m - 1;
        Array.Sort(score);
        Array.Reverse(score);
        
        for(int i = 0; i < score.Length / m; i++)
        {
            answer += score[index] * m;
            index += m;
        }
        return answer;
    }
}",,2023. 9. 6,46,2
2023. 9. 6 오전 9:48:35,조병우,Unity,12 - 두 정수 사이의 합,"public class Solution {
    public long solution(int a, int b) {
        long answer = 0;
        
        if(a<=b)
        {
            for(a=a; a<=b; a++)
            {
                answer += a;
            }
        }
        
        else
        {
            for(a=a; a>=b; a--)
            {
                answer += a;
            }
        }
        return answer;
    }
}",,2023. 9. 6,12,1
2023. 9. 6 오전 9:49:33,신해준,Unity,28 - 직사각형 별찍기,"using System;

public class Example
{
    public static void Main()
    {
        String[] s;

        Console.Clear();
        s = Console.ReadLine().Split(' ');

        int a = Int32.Parse(s[0]);
        int b = Int32.Parse(s[1]);
        
        for( int i = 1 ; i <= b; i++)
        {
            for (int j= 1; j<=a; j++)
            {
                Console.Write(""*"");
            }
            Console.WriteLine();
        }
        
    }
}",,2023. 9. 6,28,1
2023. 9. 6 오전 9:49:34,김광수,Unity,71 - N개의 최소공배수,"using System;

public class Solution 
{
    // 최소공배수는
    
    // a * b / gcd(a,b) 임
    
    public int solution(int[] arr) 
    {
        int pivot = arr[0];
        
        foreach(int i in arr)
        {
            int max = Math.Max(pivot, i);
            int min = Math.Min(pivot, i);
            
            pivot = max * min / gcd(max,min);
        }
        
        return pivot;
    }
    
    public int gcd(int a,int b)
    {
        int r = a % b;
        
        return r == 0 ? b : gcd(b,r);        
    }
}",https://github.com/kksoo0131/Study/commit/9c0fc8d33d0949d135234c36f492c4ed20d048f4,2023. 9. 6,71,3
2023. 9. 6 오전 9:50:10,김종훈,Unity,57 - 둘만의 암호,"using System;

public class Solution {
    public string solution(string s, string skip, int index) {
        string answer = """";
        char temp;
      
        for(int  i = 0; i < s.Length; i++)
        {
            temp = s[i];
            for(int j = 0; j < index; )
            {
                temp = (char)((int)temp + 1);
                if(temp > 'z')
                {
                    temp = 'a';
                }
                if(skip.Contains(temp) == true)
                {
                    continue;
                }
                j++;
            }
            answer += temp;
        }
        return answer;
    }
}",,2023. 9. 6,57,3
2023. 9. 6 오전 9:50:19,김경원,Unity,47 - 모의고사완전탐색,"using System;
using System.Collections.Generic;

public class Solution
{
    public int[] solution(int[] answers)
    {
        Man[] mans = new Man[3]
        {
            new Man(new int[] { 1, 2, 3, 4, 5 }),
            new Man(new int[] { 2, 1, 2, 3, 2, 4, 2, 5 }),
            new Man(new int[] { 3, 3, 1, 1, 2, 2, 4, 4, 5, 5 })
        };
        
        int bestAnswer = 0;
        for (int i = 0; i < answers.Length; ++i)
        {
            for (int j = 0; j < mans.Length; ++j)
            {
                mans[j].CheckAnswer(answers[i], i);
                bestAnswer = Math.Max(bestAnswer, mans[j].Answer);
            }
        }
        
        List<int> bestMans = new List<int>();
        for(int i =0; i<mans.Length; ++i)
        {
            if(mans[i].Answer == bestAnswer)
                bestMans.Add(i + 1);
        }
        
        return bestMans.ToArray();
    }
}

public class Man
{
    public int Answer { get; private set; }
    private int[] selectPattern;

    public Man(int[] selectPattern)
    {
        Answer = 0;
        this.selectPattern = selectPattern;
    }

    public void CheckAnswer(int answer, int index)
    {
        if (selectPattern[index % selectPattern.Length] == answer)
            Answer++;
    }
}",,2023. 9. 6,47,2
2023. 9. 6 오전 9:50:33,김연우,Unity,9 - 정수 제곱근 판별,"#include <stdio.h>
#include <stdbool.h>
#include <stdlib.h>
#include <math.h>

long long solution(long long n) {
    if (n <= 0) {
        return -1;
    }
    
    double sqrt_n = sqrt(n);
    
    if (sqrt_n == (long long)sqrt_n) {
        return pow(sqrt_n + 1, 2);
    } else {
        return -1;
    }
}",,2023. 9. 6,9,1
2023. 9. 6 오전 9:50:41,박민호,Unity,40 - 가장 가까운 같은 글자,"using System;

public class Solution {
    public int[] solution(string s) {
        char[] charArr = s.ToCharArray();
        int[] answer = new int[charArr.Length];
        for(int i=0;i<charArr.Length;i++){
            for(int j=i;j>=0;j--){
                if(charArr[i]==charArr[j]){
                    answer[i]=i-j;
                }
                if(answer[i]!=0){
                    break;
                }
            }
            if (answer[i]==0){
                answer[i]=-1;
            }
        }      
        return answer;
    }
}",,2023. 9. 6,40,2
2023. 9. 6 오전 9:50:49,김종,Unity,58 - 햄버거 만들기,"using System;
using System.Collections.Generic;

public class Solution {
    public int solution(int[] ingredient) {
        int answer = 0;
        List<int> list = new List<int>();
        
        foreach(int burger in ingredient)
        {
            list.Add(burger);
            
            if(list.Count >= 4)
            {           
                if(list[list.Count - 4] == 1 && list[list.Count - 3] == 2 && list[list.Count - 2] == 3 && list[list.Count - 1] == 1)
                {
                    answer++;
                    list.RemoveRange(list.Count - 4, 4);
                }
            }
        }
        return answer;
    }
}",,2023. 9. 6,58,3
2023. 9. 6 오전 9:50:50,노재우,Unity,32 - 삼총사,"using System;

public class Solution
{
    public int solution(int[] number)
    {
        int answer = 0;

        for (int i = 0; i < number.Length-2; i++)
        {
            for (int j = i+1; j < number.Length-1; j++)
            {
                for (int k = j + 1; k < number.Length; k++)
                {
                    if (number[i]+ number[j] + number[k] ==0 )
                    {
                        answer++;
                    }

                }
            }
        }

        return answer;
    }
}",,2023. 9. 6,32,2
2023. 9. 6 오전 9:50:53,신우석,Unity,60 - 바탕화면 정리,"using System;

public class Solution {
    public int[] solution(string[] wallpaper) {
        int lux = 50;
        int luy = 50;
        int rdx = 0;
        int rdy = 0;
        for (int i = 0; i < wallpaper.Length; ++i) {
            bool hasFile = false;
            for (int j = 0; j < wallpaper[i].Length; ++j)
                if (wallpaper[i][j] == '#') {
                    if (j < luy) luy = j;
                    if (j + 1 > rdy) rdy = j + 1;
                    hasFile = true;
                }
                    
            if (hasFile == true) {
                if (i < lux) lux = i;
                if (i + 1 > rdx) rdx = i + 1;
            } 
            
        }
            
        
        return new int[] {lux, luy, rdx, rdy};
    }
}",https://github.com/seoksii/AlgorithmCodeKata/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/unrated/161990.%E2%80%85%EB%B0%94%ED%83%95%ED%99%94%EB%A9%B4%E2%80%85%EC%A0%95%EB%A6%AC,2023. 9. 6,60,3
2023. 9. 6 오전 9:51:50,김지수,AI,27 - 행렬의 덧셈,"def solution(arr1,arr2):
    for i in range(len(arr1)) :
        for j in range(len(arr1[0])):
            arr1[i][j] += arr2[i][j] 
    return arr1",,2023. 9. 6,27,1
2023. 9. 6 오전 9:51:58,김종훈,Unity,59 - 성격 유형 검사하기,"using System;

public class Solution {
    public string solution(string[] survey, int[] choices) {
        string answer = """";
        string[,] keys = new string[4, 2]
        {
                {""R"", ""T"" }, {""C"", ""F"" }, {""J"",""M""}, {""A"",""N""}
        };
        int[,] values = new int[4, 2];

        for (int i = 0; i < survey.Length; i++)
        {
            string sSurvey = """";
            int choice = 0;

            if (choices[i] > 4)
            {
                sSurvey = survey[i][1].ToString();
                choice = (-1) * (4 - choices[i]);
            }
            else
            {
                sSurvey = survey[i][0].ToString();
                choice = 4 - choices[i];
            }
            for (int j = 0; j < 4; j++)
            {
                for (int k = 0; k < 2; k++)
                {
                    if (keys[j, k] == sSurvey)
                    {
                        values[j, k] += choice;
                    }
                }
            }
        }

        for (int i = 0; i < 4; i++)
        {
            if (values[i, 0] >= values[i, 1])
                answer += keys[i, 0];
            else if (values[i, 0] < values[i, 1])
                answer += keys[i, 1];
        }
        return answer;
    }
}",,2023. 9. 6,59,3
2023. 9. 6 오전 9:52:04,김주형,Unity,27 - 행렬의 덧셈,"public class Solution 
{
    public int[,] solution(int[,] arr1, int[,] arr2) {
        int rows = arr1.GetLength(0); // 행 길이
        int cols = arr1.GetLength(1); // 열 길이

        int[,] answer = new int[rows, cols];
        for (int i = 0; i < rows; i++) // 행의 길이만큼 반복
        {
            for (int j = 0; j < cols; j++) // 열의 길이 만큼 반복
            {
                answer[i, j] = 
                    arr1[i, j] + arr2[i, j]; // 각 행, 열의 인덱스 더하기
            }
        }
        return answer;
    }
}",https://github.com/kjuhyung/Algorithm.git,2023. 9. 6,27,1
2023. 9. 6 오전 9:52:11,심명희,AI,16 - 음양 더하기,"def solution(absolutes, signs):
    answer = 0
    for i in range(len(absolutes)):
        if signs[i] ==True:
            answer += absolutes[i]
        else:
            answer -= absolutes[i]
    return answer",,2023. 9. 6,16,1
2023. 9. 6 오전 9:52:32,임전혁,Unity,49 - 덧칠하기,"using System;

public class Solution {
    public int solution(int n, int m, int[] section) {
        int answer = 0;
        int nowSectionNum = 0;
        
        for (int i = 0; i < section.Length; i++)
        {
            if (nowSectionNum <= section[i])
            {
                nowSectionNum = section[i] + m;
                answer++;
            }
        }
        return answer;
    }
}",https://github.com/yarogono/Algorithm_CSharp/blob/master/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/unrated/161989.%E2%80%85%EB%8D%A7%EC%B9%A0%ED%95%98%EA%B8%B0/%EB%8D%A7%EC%B9%A0%ED%95%98%EA%B8%B0.cs,2023. 9. 6,49,2
2023. 9. 6 오전 9:52:35,김하늘,Unity,32 - 삼총사,"using System;

public class Solution 
{
    public int solution(int[] number) 
    {
        int answer = 0;
        for (int i = 0; i < number.Length; i++)
        {
            for (int j = i + 1; j < number.Length; j++)
            {
                for (int k = j + 1; k < number.Length; k++)
                {
                    if (number[i] + number[j] + number[k] == 0)
                        answer++;
                }
            }
        }
        return answer;
    }
}",,2023. 9. 6,32,2
2023. 9. 6 오전 9:52:38,김종훈,Unity,60 - 바탕화면 정리,"using System;

public class Solution {
    public int[] solution(string[] wallpaper) {
        int top = 50;
        int left = 50;
        int right = 0;
        int bottom = 0;
        
        for(int i = 0; i < wallpaper.Length; i++)
        {
            string str = wallpaper[i];
            for(int j = 0; j < str.Length; j++)
            {
                if(str[j] == '#')
                {                 
                    top = top > i ? i : top;
                    left = left > j ? j : left;
                    right = right < j ? j : right;
                    bottom = bottom < i ? i : bottom;
                }
            }
        }
        
        int[] answer = new int[4] {top, left, bottom + 1, right + 1};
        return answer;
    }
}",,2023. 9. 6,60,3
2023. 9. 6 오전 9:52:56,지민규,Unity,37 - 문자열 내 마음대로 정렬하기,"using System.Linq;

public class Solution {
    public string[] solution(string[] strings, int n) {
        string[] answer = new string[] {};
        answer = strings.OrderBy(words => words).OrderBy(words => words[n]).ToArray();
        return answer;
    }
}",,2023. 9. 6,37,2
2023. 9. 6 오전 9:53:11,김종훈,Unity,61 - 개인정보 수집 유효기간,"using System;
using System.Collections.Generic;

public class Solution {
    public int[] solution(string today, string[] terms, string[] privacies) {
        List<int> list = new List<int>();
        int todayYear = int.Parse(today.Split('.')[0]);
        int todayMonth = int.Parse(today.Split('.')[1]);
        int todayDay = int.Parse(today.Split('.')[2]);
        int todaySum = (todayYear * 12 * 28) + (todayMonth * 28) + todayDay;
        
        string[] termsCode = new string[terms.Length];
        int[] termsMonth = new int[terms.Length];
        
        for(int i = 0; i < terms.Length; i++)
        {
            termsCode[i] = terms[i].Split(' ')[0];
            termsMonth[i] = int.Parse(terms[i].Split(' ')[1]);
        }
        
        for(int i = 0; i < privacies.Length; i++)
        {
            string[] temp = privacies[i].Split('.', ' ');
            int year = int.Parse(temp[0]);
            int month = int.Parse(temp[1]);
            int day = int.Parse(temp[2]);
            int num = Array.IndexOf(termsCode, temp[3]);
            month += Convert.ToInt32(termsMonth[num]);
            int sum = (year * 12 * 28) + (month* 28) + day - 1;
            
            if(todaySum > sum)
            {
                list.Add(i + 1);
            }
        }
        
        int[] answer = list.ToArray();
        return answer;
    }
}",,2023. 9. 6,61,3
2023. 9. 6 오전 9:53:23,송유섭,Unity,11 - 하샤드 수,"public class Solution 
{
    public bool solution(int x) 
    {
        string s = x.ToString();
        
        int sum = 0;
        foreach(char c in s)
        {
            sum += int.Parse(c.ToString());
        }
        if(x%sum==0) return true;
        else return false;
    }
}",https://github.com/SongJinx3512/codeKata/blob/main/codeKata%20lv%201%20%23011%20%ED%95%98%EC%83%A4%EB%93%9C%20%EC%88%98,2023. 9. 6,11,1
2023. 9. 6 오전 9:53:45,김종훈,Unity,62 - 달리기 경주,"using System;
using System.Collections.Generic;

public class Solution {
    public string[] solution(string[] players, string[] callings) {
        Dictionary<string, int> dic = new Dictionary<string, int>();
        
        for(int i = 0; i < players.Length; i++)
        {
            dic.Add(players[i], i);
        }
        
        foreach(string call in callings)
        {
            int rank = dic[call];
            string overtake = players[rank - 1];
            
            players[rank - 1] = call;
            players[rank] = overtake;
            
            dic[call] = rank - 1;
            dic[overtake] = rank;
        }
        return players;
    }
}",,2023. 9. 6,62,3
2023. 9. 6 오전 9:54:04,진우성,Unity,10 - 정수 내림차순으로 배치하기,"using System;
using System.Linq;
public class Solution 
{
    public long solution(long n) 
    {
        long answer = 0;
        char[] aa = n.ToString().ToCharArray();
        Array.Sort(aa);
        Array.Reverse(aa);
        answer = int.Parse(aa);
        return answer;
    }
}",,2023. 9. 6,10,1
2023. 9. 6 오전 9:54:10,박도현,Unity,12 - 두 정수 사이의 합,"using System;
public class Solution {
    public long solution(int a, int b) {
        long answer = 0;
        int num = Math.Abs(a-b);
        answer = a;
        bool pm = true;
        if(a <= b) {pm = true;}
            else pm = false;
        for(int i = 0; i < num; i++)
        {
            if(pm)
            {a = a+1;}
            else {a = a-1;}
            answer += a;
        }
        return answer;
    }
}
",,2023. 9. 6,12,1
2023. 9. 6 오전 9:54:31,김종훈,Unity,63 - 공원 산책,"using System;

public class Solution {
    public int[] solution(string[] park, string[] routes) {
        int w = park[0].Length;
        int h = park.Length;
        int x = 0;
        int y = 0;
        
        for(int i = 0; i < h; i++)
        {
            for(int j = 0; j < w; j++)
            {
                if(park[i][j] == 'S')
                {
                    x = j;
                    y = i;
                    break;
                }
            }
        }
        
        for(int i = 0; i < routes.Length; i++)
        {
            int tempX = x;
            int tempY = y;
            
            if(routes[i][0] == 'N')
            {
                tempY -= routes[i][2] - '0'; 
            }
            else if(routes[i][0] == 'S')
            {
                tempY += routes[i][2] - '0'; 
            }
            else if(routes[i][0] == 'W')
            {
                tempX -= routes[i][2] - '0'; 
            }
            else if(routes[i][0] == 'E')
            {
                tempX += routes[i][2] - '0'; 
            }
            
            if(tempX < w && tempX > -1 && tempY < h && tempY > -1)
            {
                bool check = true;
                
                if(tempX > x)
                {
                    for(int j = x; j <= tempX; j++)
                    {
                        if(park[y][j] == 'X')
                        {
                            check = false;
                            break;
                        }
                    }
                }
                else if(tempX < x)
                {
                    for(int j = tempX; j <= x; j++)
                    {
                        if(park[y][j] == 'X')
                        {
                            check = false;
                            break;
                        }
                    }
                }
                else if(tempY > y)
                {
                    for(int j = y; j <= tempY; j++)
                    {
                        if(park[j][x] == 'X')
                        {
                            check = false;
                            break;
                        }
                    }
                }
                else if(tempY < y)
                {
                    for(int j = tempY; j <= y; j++)
                    {
                        if(park[j][x] == 'X')
                        {
                            check = false;
                            break;
                        }
                    }
                }
                
                if(check == true)
                {
                    x = tempX;
                    y = tempY;
                }
            }
            
        }
        
        int[] answer = new int[2]{y, x};
        return answer;
    }
}",,2023. 9. 6,63,3
2023. 9. 6 오전 9:54:50,이하택,Unity,21 - 수박수박수박수박수박수?,"public class Solution 
{
    public string solution(int n) 
    {
        string wMelon = ""수박"";
		string su = ""수"";
		string answer = """";
		for(int i = 0; i < n/2; i++)
    		answer += wMelon;
		
		if(n%2==1)
    		answer += su;
		
		return answer;
    }
}",https://github.com/LeeHataeg/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12922.%E2%80%85%EC%88%98%EB%B0%95%EC%88%98%EB%B0%95%EC%88%98%EB%B0%95%EC%88%98%EB%B0%95%EC%88%98%EB%B0%95%EC%88%98%EF%BC%9F,2023. 9. 6,21,1
2023. 9. 6 오전 9:54:51,김나운,Unity,28 - 직사각형 별찍기,"using System;

public class Example
{
    public static void Main()
    {
        String[] s;

        Console.Clear();
        s = Console.ReadLine().Split(' ');

        int a = Int32.Parse(s[0]);
        int b = Int32.Parse(s[1]);
        
        for(int i=0;i<b;i++){
            for(int j=1;j<a;j++){
                Console.Write(""*"");
            }
            Console.WriteLine(""*"");
        }

        
    }
}",,2023. 9. 6,28,1
2023. 9. 6 오전 9:54:54,이선재,Unity,54 - 체육복,"#include <string>
#include <vector>
#include <map>
#include <algorithm>

using namespace std;

int solution(int n, vector<int> lost, vector<int> reserve) {
    int answer = 0;   
    
    sort(lost.begin(), lost.end());
    sort(reserve.begin(), reserve.end());

    map<int, int> student_check;

    for(int i = 0; i < lost.size(); i++)
    {
        student_check[lost[i]] = -1;
    }
    for(int i = 0; i < reserve.size(); i++)
    {
        if(student_check[reserve[i]] == -1)
        {
            student_check[reserve[i]] = 0;
        }
        else
        {
            student_check[reserve[i]] = 1;
        }
    }

    for(int i = 0; i < reserve.size(); i++)
    {
        if(student_check[reserve[i]] == 1 && student_check[reserve[i] - 1] == -1)
        {
            student_check[reserve[i]] = 0;
            student_check[reserve[i] - 1] = 1;
        }
        else if(student_check[reserve[i]] == 1 && student_check[reserve[i] + 1] == -1)
        {
            student_check[reserve[i]] = 0;
            student_check[reserve[i] + 1] = 1;
        }
    }

    for(map<int, int>::iterator iter = student_check.begin(); iter != student_check.end(); iter++)
    {
        if(iter->second == -1)
        {
            answer -= 1;
        }
    }

    return answer + n;
}",https://github.com/Lyrwhitt/Algorithm/blob/main/Programmers/LEVEL1/%EC%B2%B4%EC%9C%A1%EB%B3%B5,2023. 9. 6,54,2
2023. 9. 6 오전 9:54:58,박민혁,Unity,33 - 크기가 작은 부분,"using System;

public class Solution {
    public long solution(string t, string p) {
        long answer = 0;
        for(int i=0;i<t.Length-p.Length+1;++i)
        {
            long test =long.Parse(t.Substring(i,p.Length));
            Console.WriteLine(""회"");
                if(test<=long.Parse(p))
                {
                    answer++;
                }
        }
        return answer;
    }
}",,2023. 9. 6,33,2
2023. 9. 6 오전 9:55:25,김도현B,Unity,43 - 명예의 전당 (1),"using System;
using System.Linq;
using System.Collections.Generic;

public class Solution {
    public int[] solution(int k, int[] score) {
        int[] answer = new int[score.Length];

        List<int> list = new List<int>();
        for(int i = 0; i < score.Length; i++)
        {
            if( i < k)
            {
                list.Add(score[i]);
                list.Sort((n1, n2) => n2.CompareTo(n1));
            }
            else
            {
                for (int j = 0; j < list.Count; j++)
                {
                    if (list[j] < score[i])
                    {
                        list.Insert(j, score[i]);
                        break;
                    }
                }
                if(list.Count > k)
                    list.Remove(list.Last());
            }
            answer[i] = list.Last();
        }
        return answer;
    }
}",https://github.com/subscriptioncat/Algorithm,2023. 9. 6,43,2
2023. 9. 6 오전 9:55:27,이하택,Unity,24 - 문자열 내림차순으로 배치하기,"using System.Collections;
using System.Collections.Generic;
public class Solution 
{
    public string solution(string s) 
    {
        List<char> smallStr = new List<char>();
        List<char> bigStr = new List<char>();
        
        for(int i = 0; i < s.Length; i++)
        {
            if(s[i] >= 'A' && s[i] <= 'Z')
                bigStr.Add(s[i]);
            else
                smallStr.Add(s[i]);
        }
        
        bigStr.Sort();
        smallStr.Sort();
        bigStr.Reverse();
        smallStr.Reverse();
        
        string answer = """";
        
        foreach(char c in smallStr)
            answer += c.ToString();
        
        foreach(char c in bigStr)
            answer += c.ToString();
        
        return answer;
    }
}",https://github.com/LeeHataeg/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12917.%E2%80%85%EB%AC%B8%EC%9E%90%EC%97%B4%E2%80%85%EB%82%B4%EB%A6%BC%EC%B0%A8%EC%88%9C%EC%9C%BC%EB%A1%9C%E2%80%85%EB%B0%B0%EC%B9%98%ED%95%98%EA%B8%B0,2023. 9. 6,24,1
2023. 9. 6 오전 9:55:37,박희원,Unity,34 - 최소직사각형,"using System;

public class Solution {
      public int solution(int[,] sizes)
            {
                int width = 0, height = 0; 

                for(int i = 0; i<sizes.GetLength(0); i++)
                {
                    (int t1, int t2) temp = (sizes[i, 0], sizes[i, 1]);

                    if (temp.t2 > temp.t1)
                    {
                        int t3 = temp.t1;
                        temp.t1 = temp.t2;
                        temp.t2 = t3;
                    }

                    if (width < temp.t1) width = temp.t1;
                    if (height < temp.t2) height = temp.t2; 
                }

                return width * height; 
            }
}",,2023. 9. 6,34,2
2023. 9. 6 오전 9:55:59,이하택,Unity,25 - 부족한 금액 계산하기,"using System;

class Solution
{
    public long solution(int price, int money, int count)
    {
        long totalPrice = 0;
		
		for(long i = 0; i < count; i++)
		{
    		totalPrice += (long)price * (i + 1);
		}
		
        long num = 0;
        
		if(totalPrice > money)
		{
            num = (long)totalPrice - (long)money;
		}
        
        return num;
    }
}",https://github.com/LeeHataeg/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/82612.%E2%80%85%EB%B6%80%EC%A1%B1%ED%95%9C%E2%80%85%EA%B8%88%EC%95%A1%E2%80%85%EA%B3%84%EC%82%B0%ED%95%98%EA%B8%B0,2023. 9. 6,25,1
2023. 9. 6 오전 9:56:07,박준규,Unity,30 - 3진법 뒤집기,"using System;
using static System.Math;
using System.Collections.Generic;

public class Solution 
{
    public int solution(int n) 
    {
        int answer = 0;
        List<int> list = new List<int>();
        while(n>0){
            int b = n%3;
            list.Add(b);
            n=n/3;
        }
        list.Reverse();
        for(int i = 0; i<list.Count; i++)
        {
            answer += (int)(list[i] * Math.Pow(3,i));
        }
        return answer;
    }
}",,2023. 9. 6,30,1
2023. 9. 6 오전 9:56:30,이하택,Unity,26 - 문자열 다루기 기본,"public class Solution 
{
    public bool solution(string s) 
    {
        bool answer = false;
        int x;
        
        if(s.Length == 4 || s.Length == 6)
        {
            answer = int.TryParse(s, out x);
        }
        
        return answer;
    }
}",https://github.com/LeeHataeg/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12918.%E2%80%85%EB%AC%B8%EC%9E%90%EC%97%B4%E2%80%85%EB%8B%A4%EB%A3%A8%EA%B8%B0%E2%80%85%EA%B8%B0%EB%B3%B8,2023. 9. 6,26,1
2023. 9. 6 오전 9:57:00,이홍준,Unity,39 - 두 개 뽑아서 더하기,"using System;
using System.Collections.Generic;

public class Solution {
    public int[] solution(int[] numbers) {
        List<int> answer = new List<int>();
        int temp = 0;
        
        for (int i = 0; i < numbers.Length - 1; i++)
        {
            for (int j = i + 1; j < numbers.Length; j++)
            {
                temp = numbers[i] + numbers[j];
                
                if (answer.Contains(temp) == false)
                {
                    answer.Add(temp);
                }
                else {}
            }
        }
        
        answer.Sort();
        return answer.ToArray();
    }
}",https://github.com/dlghdwns97/Study/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/68644.%E2%80%85%EB%91%90%E2%80%85%EA%B0%9C%E2%80%85%EB%BD%91%EC%95%84%EC%84%9C%E2%80%85%EB%8D%94%ED%95%98%EA%B8%B0,2023. 9. 6,39,2
2023. 9. 6 오전 9:57:06,이하택,Unity,28 - 직사각형 별찍기,"using System;

public class Example
{
    public static void Main()
    {
        String[] s;

        Console.Clear();
        s = Console.ReadLine().Split(' ');

        int a = Int32.Parse(s[0]);
        int b = Int32.Parse(s[1]);

        for(int i = 0; i < b; i++)
        {
            for(int j = 0; j < a; j++)
            {
                Console.Write(""*"");
            }
            
            if(i < b - 1)
            {
                Console.WriteLine();
            }
            else
            {
                continue;
            }
        }
    }
}",https://github.com/LeeHataeg/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12969.%E2%80%85%EC%A7%81%EC%82%AC%EA%B0%81%ED%98%95%E2%80%85%EB%B3%84%EC%B0%8D%EA%B8%B0,2023. 9. 6,28,1
2023. 9. 6 오전 9:57:22,강상찬,AI,51 - 로또의 최고 순위와 최저 순위,"def solution(lottos, win_nums):
    rm = 1
    rn = 1+lottos.count(0)
    for i in range(6):
        if lottos[i] == 0:
            rm -= 1
            rn -= 1
        for j in win_nums:
            if lottos[i] != j:
                continue
            rm -= 1
            rn -= 1
        rm += 1
        rn += 1
    if rm == 7:
        rm = 6
    if rn == 7:
        rn = 6
    return [rm, rn]",,2023. 9. 6,51,2
2023. 9. 6 오전 9:57:47,조호진,AI,34 - 최소직사각형,"def solution(sizes):
    answer = 0
    w = []
    h = []
    for i in range(len(sizes)):
    
        if sizes[i][0] >= sizes[i][1]:
            w.append(sizes[i][0])
            h.append(sizes[i][1])
        else:
            w.append(sizes[i][1])
            h.append(sizes[i][0])
            
            
    
    return max(w)*max(h)",https://github.com/bm4706/Algorithm_practice/commit/bb8a54d74d0724e80a85a13a1e51320d6054a318,2023. 9. 6,34,2
2023. 9. 6 오전 9:59:06,장현교,Unity,16 - 음양 더하기,"public class Solution
{
    public int solution(int[] absolutes, bool[] signs)
    {
        int answer = 0;
        for (int i = 0; i < absolutes.Length; i++)
        {
            if (signs[i])
            {
                answer += absolutes[i];
            }
            else
            {
                answer -= absolutes[i];
            }
        }
        return answer;
    }
}",,2023. 9. 6,16,1
2023. 9. 6 오전 10:00:30,곽민규,Unity,10 - 정수 내림차순으로 배치하기,"using System;

public class Solution {
    public long solution(long n) {
        long answer = 0;
        char[] arr = n.ToString().ToCharArray();
        
        Array.Sort(arr);
        Array.Reverse(arr);
        
        answer = long.Parse(new string(arr));
        
        return answer;
    }
}",,2023. 9. 6,10,1
2023. 9. 6 오전 10:00:44,김도현A,Unity,10 - 정수 내림차순으로 배치하기,"public class Solution {
    public long solution(long n) {
        char[] digits = n.ToString().ToCharArray();
        
        for (int i = 0; i < digits.Length - 1; i++) {
            for (int j = 0; j < digits.Length - i - 1; j++) {
                if (digits[j] < digits[j + 1]) {
                    char temp = digits[j];
                    digits[j] = digits[j + 1];
                    digits[j + 1] = temp;
                }
            }
        }
        
        string sortedNumber = new string(digits);
        long answer = long.Parse(sortedNumber);
        
        return answer;
    }
}
",,2023. 9. 6,10,1
2023. 9. 6 오전 10:00:45,이승연,Unity,18 - 없는 숫자 더하기,"using System;

public class Solution {
    public int solution(int[] numbers) {
        int answer = -1;
        int sum=0;
        int number=0;
        for(int i=0;i<10;i++)
        {
            sum+=i;                                    
        }
        for(int j=0;j<numbers.Length;j++)
        {
            number+=numbers[j];
        }
        
        return answer=sum-number;
    }
}",,2023. 9. 6,18,1
2023. 9. 6 오전 10:01:07,정범수,AI,83 - 피로도,"def solution(k, dungeons):
    dp = {0: 0}
    for a, b in sorted(dungeons, key=lambda x: x[0]-x[1]):
        for cur_fati in list(dp):
            next_fati = max(a, cur_fati + b)
            if next_fati > k:
                continue
            if next_fati in dp:
                dp[next_fati] = max(dp[next_fati], dp[cur_fati]+1)
            else:
                dp[next_fati] = dp[cur_fati]+1
    return max(dp.values())",,2023. 9. 6,83,4
2023. 9. 6 오전 10:01:45,김광수,Unity,72 - 멀리 뛰기,"public class Solution 
{
    // dp문제인거 같은데?
    // dp[n] = dp[n-2] + dp[n-1]
    // 피보나치인데 1부터 시작
    int[] dp;
    
    public long solution(int n) 
    {
        dp = new int[n+1];
        
        if(n < 3)
        {
            return n;
        }
        dp[1] = 1;
        dp[2] = 2;         
        
        
        for(int i=3; i<= n; i++)
        {
            dp[i] = (dp[i-2]+dp[i-1]) % 1234567;
        }
        
        return dp[n];
    }
}",https://github.com/kksoo0131/Study/commit/8f2650f1bee623c6fe712749142f9d5f536f80f5,2023. 9. 6,72,3
2023. 9. 6 오전 10:02:18,이기호,AI,27 - 행렬의 덧셈,"def solution(arr1, arr2):
    answer = arr1

    for i in range(len(arr1)):
        for i2 in range(len(arr1[i])):
            answer[i][i2] = arr1[i][i2]+arr2[i][i2]
    return(answer)",,2023. 9. 6,27,1
2023. 9. 6 오전 10:02:47,이경민,Unity,30 - 3진법 뒤집기,"using System;
using System.Collections.Generic;

public class Solution {
    public int solution(int n) {
        int answer = 0;
        List<int> remainders = new List<int>();
        while(n>0)
        {
            remainders.Add(n%3);
            n /= 3;
        }
        for(int i = 1; i <= remainders.Count; i++)
        {
            answer += remainders[i-1] * (int)Math.Pow(3, remainders.Count - i);
        }
        return answer;
    }
}",https://github.com/kminsmin/Algorithm_Test_Practice/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/68935.%E2%80%853%EC%A7%84%EB%B2%95%E2%80%85%EB%92%A4%EC%A7%91%EA%B8%B0,2023. 9. 6,30,1
2023. 9. 6 오전 10:03:15,정범수,AI,86 - 주차 요금 계산,"from collections import defaultdict
from math import ceil

def solution(fees, records):
    acc_time = defaultdict(int)
    parking = defaultdict(lambda: -1)
    last_time = 23*60+59
    for record in records:
        time, car_num, state = record.split()
        m, s = map(int, time.split(':'))
        time_sec = m*60 + s
        if parking[car_num] >= 0:
            acc_time[car_num] += time_sec - parking[car_num]
            parking[car_num] = -1
        else:
            parking[car_num] = time_sec
    for car_num, time in filter(lambda x: x[1] >= 0, parking.items()):
        acc_time[car_num] += last_time - time
    total_fees = []
    for car_num in sorted(acc_time.keys()):
        result = acc_time[car_num] - fees[0]
        if result >= 0:
            total_fees.append(fees[1] + ceil(result/fees[2])*fees[3])
        else:
            total_fees.append(fees[1])
    return total_fees",https://github.com/sudog1/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv2/92341.%E2%80%85%EC%A3%BC%EC%B0%A8%E2%80%85%EC%9A%94%EA%B8%88%E2%80%85%EA%B3%84%EC%82%B0,2023. 9. 6,86,4
2023. 9. 6 오전 10:03:26,이경민,Unity,31 - 이상한 문자 만들기,"public class Solution {
    public string solution(string s) {
        string answer = """";
        string[] words = s.Split("" "");
        bool isFirst = true;
        foreach(string word in words)
        {
            if (isFirst == false)
                answer += "" "";
            isFirst = false;
            char[] letters = word.ToCharArray();
            for(int i = 0; i < letters.Length; i++)
            {
                answer += i%2 == 0 ? letters[i].ToString().ToUpper() : letters[i].ToString().ToLower() ;
            }
        }
        return answer;
    }
}",https://github.com/kminsmin/Algorithm_Test_Practice/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12930.%E2%80%85%EC%9D%B4%EC%83%81%ED%95%9C%E2%80%85%EB%AC%B8%EC%9E%90%E2%80%85%EB%A7%8C%EB%93%A4%EA%B8%B0,2023. 9. 6,31,2
2023. 9. 6 오전 10:03:31,김형수,Unity,10 - 정수 내림차순으로 배치하기,"using System;

public class Solution {
    public long solution(long n) {
        long answer = 0;
        
        char[] charArr = n.ToString().ToCharArray();

        Array.Sort(charArr);
        Array.Reverse(charArr);

        answer = long.Parse(charArr);
        
        return answer;
    }
}",https://github.com/Kim-H-S/Programmers/blob/main/%EC%A0%95%EC%88%98%20%EB%82%B4%EB%A6%BC%EC%B0%A8%EC%88%9C%EC%9C%BC%EB%A1%9C%20%EB%B0%B0%EC%B9%98%ED%95%98%EA%B8%B0.cs,2023. 9. 6,10,1
2023. 9. 6 오전 10:03:51,기현빈,Unity,38 - K번째수정렬,"using System;
using System.Collections.Generic;

public class Solution {
    public int[] solution(int[] array, int[,] commands) {
        int len = commands.GetLength(0);
        int[] answer = new int[len];
        List<int> list = new List<int>();
        
        for(int i = 0; i < len; i++) {
            list.Clear();
            int start = commands[i, 0] - 1;
            int end = commands[i, 1] - 1;
            for(int j = 0; j < end - start + 1; j++) {
                list.Add(array[j + start]);
            }
            list.Sort();
            answer[i] = list[commands[i, 2] - 1];
        }
        
        return answer;
        
    }
}",,2023. 9. 6,38,2
2023. 9. 6 오전 10:04:01,정범수,AI,87 - 모음사전,"def solution(word):
    weight = [1]
    seq = {
        'A': 0,
        'E': 1,
        'I': 2,
        'O': 3,
        'U': 4
    }
    for _ in range(4):
        weight.append(weight[-1]*5+1)
    weight.reverse()
    total = 0
    for i, c in enumerate(word):
        total += weight[i]*seq[c]+1
    return total",https://github.com/sudog1/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv2/84512.%E2%80%85%EB%AA%A8%EC%9D%8C%E2%80%85%EC%82%AC%EC%A0%84,2023. 9. 6,87,4
2023. 9. 6 오전 10:04:17,장성림,Unity,45 - 카드 뭉치,"using System;

public class Solution {
    public string solution(string[] cards1, string[] cards2, string[] goal) {
        string answer = """";
        int cards1Index = 0;
        int cards2Index = 0;
        bool canMake = false;
        
        foreach(string s in goal){
            canMake = false;
            if(cards1Index < cards1.Length && cards1[cards1Index] == s){
                cards1Index++;
                canMake = true;
                continue;
            }
            if(cards2Index < cards2.Length && cards2[cards2Index] == s){
                cards2Index++;
                canMake = true;
                continue;
            }
            if(!canMake)
                break;
        }
        if(canMake)
            answer = ""Yes"";
        else
            answer = ""No"";
        return answer;
    }
}",https://github.com/hoobhoob,2023. 9. 6,45,2
2023. 9. 6 오전 10:04:40,정범수,AI,88 - 뒤에 있는 큰 수 찾기,"def solution(numbers):
    result = [-1]*len(numbers)
    numbers_with_idx = list(enumerate(numbers))
    stack = []
    for e in numbers_with_idx:
        while stack:
            if stack[-1][1] < e[1]:
                result[stack[-1][0]] = e[1]
                stack.pop()
            else:
                break
        stack.append(e)
    return result",https://github.com/sudog1/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/unrated/154539.%E2%80%85%EB%92%A4%EC%97%90%E2%80%85%EC%9E%88%EB%8A%94%E2%80%85%ED%81%B0%E2%80%85%EC%88%98%E2%80%85%EC%B0%BE%EA%B8%B0,2023. 9. 6,88,4
2023. 9. 6 오전 10:05:49,정범수,AI,89 - 롤케이크 자르기,"def solution(topping):
    l_num = []
    r_num = []
    l_temp = set()
    r_temp = set()
    for i in range(len(topping)-1):
        l_temp.add(topping[i])
        r_temp.add(topping[-i-1])
        l_num.append(len(l_temp))
        r_num.append(len(r_temp))
    count = 0
    for i in range(len(topping)-1):
        if l_num[i] == r_num[len(topping)-2-i]:
            count += 1
    return count",https://github.com/sudog1/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/unrated/132265.%E2%80%85%EB%A1%A4%EC%BC%80%EC%9D%B4%ED%81%AC%E2%80%85%EC%9E%90%EB%A5%B4%EA%B8%B0,2023. 9. 6,89,4
2023. 9. 6 오전 10:06:46,정범수,AI,90 - 숫자 변환하기,"def solution(x, y, n):
    result = {x: 0}
    count = 0
    while y not in result:
        flag = 1
        for num, cnt in filter(lambda x: x[1] == count, list(result.items())):
            calc_result = [num+n, 2*num, 3*num]
            for calc in calc_result:
                if calc < y:
                    flag = 0
                if calc in result:
                    result[calc] = min(result[calc], cnt+1)
                else:
                    result[calc] = cnt+1
        count += 1
        if flag:
            break
    return result[y] if y in result else -1",https://github.com/sudog1/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/unrated/154538.%E2%80%85%EC%88%AB%EC%9E%90%E2%80%85%EB%B3%80%ED%99%98%ED%95%98%EA%B8%B0,2023. 9. 6,90,4
2023. 9. 6 오전 10:07:38,김주형,Unity,28 - 직사각형 별찍기,"using System;

public class Example
{
    public static void Main()
    {
        String[] s;

        Console.Clear();
        s = Console.ReadLine().Split(' ');

        int n = int.Parse(s[0]); 
        int m = int.Parse(s[1]);
        // n 과 m int 변환

        for (int i = 1; i <= m; i++)
        {
            for(int j =1; j <= n; j++)
            {
                Console.Write('*');
            }
            Console.WriteLine();
        }
    }
}",https://github.com/kjuhyung/Algorithm.git,2023. 9. 6,28,1
2023. 9. 6 오전 10:07:44,김민태,Unity,53 - 숫자 짝꿍,"using System;
using System.Collections.Generic;
using System.Linq;

public class Solution {
    public string solution(string X, string Y) {
        string answer = """";
        int[] X_value = new int[10];
        int[] Y_value = new int[10];

        for (int i = 0; i < X.Length; i++) X_value[int.Parse(X[i].ToString())]++;
        for (int i = 0; i < Y.Length; i++) Y_value[int.Parse(Y[i].ToString())]++;
        for (int i = 9; i >= 0; i--)
        {
            if (X_value[i] == 0) continue;
            if (Y_value[i] == 0) continue;
            int a = Math.Min(X_value[i], Y_value[i]);
            answer += string.Concat(Enumerable.Repeat(i, a));
        }

        if (answer.Length <= 0) answer = ""-1"";
        if (answer.Substring(0, 1) == ""0"") answer = ""0"";

        return answer;
    }
}",https://github.com/rlaalsxo/CodingTest,2023. 9. 6,53,2
2023. 9. 6 오전 10:07:54,김민상,Unity,58 - 햄버거 만들기,"using System;
using System.Collections.Generic;

public class Solution {
    public int solution(int[] ingredient) {
        int answer = 0;
        List<int> temp = new List<int>();
        
        foreach (int v in ingredient)
        {
            temp.Add(v);
            
            if (temp.Count < 4)
                continue;
            
            if (temp[temp.Count - 4] == 1 && temp[temp.Count - 3] == 2 && temp[temp.Count - 2] == 3 && temp[temp.Count - 1] == 1)
            {
                temp.RemoveRange(temp.Count - 4, 4);
                answer += 1;
            }
        }
        return answer;
    }
}",,2023. 9. 6,58,3
2023. 9. 6 오전 10:08:23,차요한,Unity,40 - 가장 가까운 같은 글자,"using System;
using System.Linq;
using System.Collections.Generic;

public class Solution {
    public int[] solution(string s) {
         int[] answer = new int[s.Length];
        int index = -1;
        
        for(int i = 0; i < s.Length; i++)
        {
            index = -1;
            for(int j = i - 1; j >= 0; j--)
            {
                if(s[i] == s[j])
                {
                    index = i - j;
                    break;
                }
            }
            answer[i] = index;
        }
        return answer;
    }
}",https://github.com/HOHOJO/Algorithm_test,2023. 9. 6,40,2
2023. 9. 6 오전 10:08:45,정주찬,Unity,54 - 체육복,"using System;
using System.Collections.Generic;
using System.Linq;

public class Solution {
    public int solution(int n, int[] lost, int[] reserve) {
       int count = n - lost.Length;
        Array.Sort(lost);
        Array.Sort(reserve);
        
        for (int i = 0; i < lost.Length; i++)
        {
            if (reserve.Contains(lost[i]))
            {
                int index = Array.IndexOf(reserve, lost[i]);
                reserve[index] = -1;
                ++count;
            }
            else if (reserve.Contains(lost[i] - 1))
            {
                if (!lost.Contains(lost[i] - 1))
                {
                    int index = Array.IndexOf(reserve, lost[i] - 1);
                    reserve[index] = -1;
                    ++count;
                }
            }
            else if (reserve.Contains(lost[i] + 1))
            {
                if (!lost.Contains(lost[i] + 1))
                {
                    int index = Array.IndexOf(reserve, lost[i] + 1);
                    reserve[index] = -1;
                    ++count;
                }
            }
        }
        return count;
    }
}",https://github.com/JeongJuChan/Algorithm/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/42862.%E2%80%85%EC%B2%B4%EC%9C%A1%EB%B3%B5/%EC%B2%B4%EC%9C%A1%EB%B3%B5.cs,2023. 9. 6,54,2
2023. 9. 6 오전 10:09:32,정주찬,Unity,55 - 문자열 나누기,"using System;

public class Solution {
    public int solution(string s) {
        int answer = 0;
        int currentCount = 0;
        int otherCount = 0;
        char currentChar = ' ';
        for (int i = 0; i < s.Length; i++)
        {
            if (currentChar == ' ')
            {
                currentChar = s[i];
                currentCount = 1;
            }
            else
            {
                if (currentChar == s[i])
                {
                    currentCount++;
                }
                else
                {
                    otherCount++;
                }
            }

            if (currentCount == otherCount)
            {
                currentChar = ' ';
                currentCount = 0;
                otherCount = 0;
                answer++;
            }

            if (i == s.Length - 1 && currentCount != 0)
            {
                answer++;
            }
        } 
        return answer;
    }
}",https://github.com/JeongJuChan/Algorithm/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/unrated/140108.%E2%80%85%EB%AC%B8%EC%9E%90%EC%97%B4%E2%80%85%EB%82%98%EB%88%84%EA%B8%B0/%EB%AC%B8%EC%9E%90%EC%97%B4%E2%80%85%EB%82%98%EB%88%84%EA%B8%B0.cs,2023. 9. 6,55,3
2023. 9. 6 오전 10:09:48,노재우,Unity,33 - 크기가 작은 부분,"using System;

public class Solution
{
    public int solution(string t, string p)
    {
        if(t.Length < p.Length)
            return 0;
        int answer = 0;
        long B = long.Parse(p);
        for (int i = 0; i < t.Length- p.Length+1; i++)
        {
            long A = long.Parse(t.Substring(i,p.Length));
            if (B >= A)
            {
                answer++;
            }

        }
        return answer;
    }
}",,2023. 9. 6,33,2
2023. 9. 6 오전 10:10:11,정주찬,Unity,56 - 대충 만든 자판,"using System;
using System.Linq;

public class Solution {
    public int[] solution(string[] keymap, string[] targets) {
        int[] answer = new int[targets.Length];
int[] tapCountArr = new int[keymap.Length];

for (int i = 0; i < targets.Length; i++)
{
    for (int j = 0; j < targets[i].Length; j++)
    {
        for(int k = 0; k < keymap.Length; k++)
        {
            int index = Array.IndexOf(keymap[k].ToCharArray(), targets[i][j]);
            if (index != -1)
            {
                tapCountArr[k] = index + 1;
            }
            else
            {
                tapCountArr[k] = int.MaxValue;
            }
        }

        int min = tapCountArr.Min();
        if (min == int.MaxValue)
        {
            answer[i] = -1;
            break;
        }
        else
        {
            answer[i] += min;
        }
    }
}
        return answer;
    }
}",https://github.com/JeongJuChan/Algorithm/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/unrated/160586.%E2%80%85%EB%8C%80%EC%B6%A9%E2%80%85%EB%A7%8C%EB%93%A0%E2%80%85%EC%9E%90%ED%8C%90/%EB%8C%80%EC%B6%A9%E2%80%85%EB%A7%8C%EB%93%A0%E2%80%85%EC%9E%90%ED%8C%90.cs,2023. 9. 6,56,3
2023. 9. 6 오전 10:11:48,유채연,Unity,38 - K번째수정렬,"public int[] solution(int[] array, int[,] commands) {
        int[] answer = new int[commands.GetLength(0)];
        for(int i=0;i<commands.GetLength(0);i++){
            int[] arr = new int[commands[i,1]-commands[i,0]+1];
            
            Array.Copy(array, commands[i,0]-1, arr, 0, commands[i,1]-commands[i,0]+1);
            Array.Sort(arr);
            answer[i]=arr[commands[i,2]-1];
        }
        return answer;
    }",https://github.com/ychy0006/AlgorithmCodeKata/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1,2023. 9. 6,38,2
2023. 9. 6 오전 10:11:54,우민규,Unity,26 - 문자열 다루기 기본,"public class Solution {
    public bool solution(string s) {
        
        //1. 문자열 길이가 4 or 6인지 확인
        //2. 문자가 하나라도 있으면 false 반환
        //3. 전부 숫자라면 true 반환
        //4. 마지막으로 길이가 4 or 6이 아닌경우 false반환
        
        
        if (s.Length == 4 || s.Length == 6) // 1
        {
            foreach (char c in s) //배열용 반복문 char c 변수 생성 -> 문자열 s의 각 문자를 c번째 자리에 넣는다.
            {
                if (!char.IsDigit(c)) // char.IsDigit(char) 각 문자가 0~9인지 판별하는 bool 반환 메서드
                {
                    return false; // 2
                }
            }
            return true; // 3
        }
        else
        {
            return false; // 4
        }
        
    }
}",,2023. 9. 6,26,1
2023. 9. 6 오전 10:12:29,유채연,Unity,39 - 두 개 뽑아서 더하기," public int[] solution(int[] numbers) {
        int[] answer;
        List<int> list = new List<int> {};

        for(int i=0;i<numbers.Length-1;i++){
            for(int j=i+1;j<numbers.Length;j++){
                if(!list.Contains(numbers[i]+numbers[j])) list.Add(numbers[i]+numbers[j]);
            }
        }
        answer = list.OrderBy(num=>num).ToArray();
        
        return answer;
    }",https://github.com/ychy0006/AlgorithmCodeKata/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1,2023. 9. 6,39,2
2023. 9. 6 오전 10:12:37,김진성,Unity,21 - 수박수박수박수박수박수?,"using System.Text;

namespace Algorithm_008
{
    public class _021_Watermelons
    {
        public string solution(int n)
        {
            StringBuilder sb = new StringBuilder();
            string answer = """";
            for (int i = 0; i < n/2; i++)
            {
                sb.Append(""수박"");
            }
            if (n % 2 == 1)
            {
                sb.Append(""수"");
            }
            answer = sb.ToString();
            return answer;
        }
    }
}
",https://github.com/GYALLERHORN/ALGORITHM,2023. 9. 6,21,1
2023. 9. 6 오전 10:13:18,김진성,Unity,22 - 내적,"using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Algorithm_008
{
    public class _022_InnerProduct
    {
        public int solution(int[] a, int[] b)
        {
            int answer = 0;
            for (int i = 0; i < a.Length; i++)
            {
                answer += a[i] * b[i];
            }
            return answer;
        }
    }
}
",https://github.com/GYALLERHORN/ALGORITHM,2023. 9. 6,22,1
2023. 9. 6 오전 10:13:50,이선재,Unity,53 - 숫자 짝꿍,"#include <string>
#include <vector>
#include <map>
#include <algorithm>

using namespace std;

string solution(string X, string Y) {
    string answer = """";
    
    map<char, int> numMap;
    
    for(int i = 0; i < X.length(); i++){
        numMap[X[i]] += 1;
    }
    
    for(int i = 0; i < Y.length(); i++){
        if(numMap[Y[i]] > 0){
            numMap[Y[i]] -= 1;
            answer += Y[i];
        }
    }
    
    sort(answer.begin(), answer.end(), greater<char>());
    
    if(answer == """")
        answer = ""-1"";
    
    if(answer[0] == '0')
        answer = ""0"";
    
    return answer;
}",https://github.com/Lyrwhitt/Algorithm/blob/main/Programmers/LEVEL1/%EC%88%AB%EC%9E%90%20%EC%A7%9D%EA%BF%8D,2023. 9. 6,53,2
2023. 9. 6 오전 10:18:17,박지원,Unity,37 - 문자열 내 마음대로 정렬하기,"        Dictionary<string, string> dic= new Dictionary<string, string>();
        
        for(int i = 0; i < strings.Length; i++)
            dic.Add(strings[i], strings[i][n].ToString());
        
        string[] answer = dic.OrderBy(x => x.Value).ThenBy(x => x.Key).Select(x => x.Key).ToArray();",https://github.com/jwonp9127/AlgorithmStudy/tree/6766502a1c6f3d30dee7be1679034579dd27bb54/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12915.%E2%80%85%EB%AC%B8%EC%9E%90%EC%97%B4%E2%80%85%EB%82%B4%E2%80%85%EB%A7%88%EC%9D%8C%EB%8C%80%EB%A1%9C%E2%80%85%EC%A0%95%EB%A0%AC%ED%95%98%EA%B8%B0,2023. 9. 6,37,2
2023. 9. 6 오전 10:21:42,김나운,Unity,29 - 최대공약수와 최소공배수,"class Solution {
   public long[] solution(int n, int m) {
        long[] answer = new long [2];

        if(m%n==0){
            answer[0] = n;
            answer[1] = m;
        }else{
            for(int i = 1; i <= m; i++){
                if(n%i==0 && m%i==0){
                    answer[0] = i;
                }
            }
            answer[1] = n*m/answer[0];
        }

        return answer;
    }
}",,2023. 9. 6,29,1
2023. 9. 6 오전 10:29:13,김어진,Unity,19 - 제일 작은 수 제거하기,"using System.Collections.Generic;
using System.Linq;
public class Solution {
    public int[] solution(int[] arr) {
        int[] answer = new int[] {};
        List<int> arr_list = new List<int>(arr);
        int arrMin = arr.Min();
        arr_list.RemoveAll (num => num == arrMin);
        if(arr_list.Count == 0){
            arr_list.Add(-1);
        }
        answer = arr_list.ToArray();
        return answer;
    }
}",https://github.com/KimEoJin24/ProgrammersCodingTests/commit/e06d1a18d5766b9c3e90f93816e1f7b613dd541e,2023. 9. 6,19,1
2023. 9. 6 오전 10:32:50,노동균,Unity,55 - 문자열 나누기,"using System;
using System.Text;
using System.Collections.Generic;
public class Solution {
    public int solution(string s) {
        int answer = 0;
        int currentChar = s[0];
        int charCount=1;
        int otherCount=0;
        List<string> splitedString = new List<string>(1000);
        
        StringBuilder sb = new StringBuilder(10000);
        
        for(int i=1;i<s.Length-1;++i)
        {
            if(currentChar == s[i])
                charCount++;
            else
                otherCount++;
            if(otherCount == charCount)
            {
                otherCount = 0;
                charCount = 1;
                currentChar = s[i+1];
                splitedString.Add(sb.ToString());
                sb.Clear();
                i+=1;
            }
        }
        splitedString.Add(sb.ToString());
        answer = splitedString.Count;
        return answer;
    }
}",https://github.com/shehdrbs123/Sparta/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/unrated/140108.%E2%80%85%EB%AC%B8%EC%9E%90%EC%97%B4%E2%80%85%EB%82%98%EB%88%84%EA%B8%B0,2023. 9. 6,55,3
2023. 9. 6 오전 10:33:32,노동균,Unity,56 - 대충 만든 자판,"using System;
using System.Collections.Generic;
public class Solution {
    public int[] solution(string[] keymap, string[] targets) {
        int[] answer = new int[targets.Length];
        Dictionary<char,int> numMap = new Dictionary<char,int>();
        
        for(int i=0;i<keymap.Length;++i)
        {
            for(int j=0;j<keymap[i].Length;++j)
            {
                int val;
                if(numMap.TryGetValue(keymap[i][j],out val))
                {
                    if(j+1 < val)
                        numMap[keymap[i][j]] = j+1;
                }else
                {
                    numMap.Add(keymap[i][j],j+1);
                }
            }
        }
        
        
        
        for(int i=0;i<targets.Length;++i)
        {
            for(int j=0;j<targets[i].Length;++j)
            {
                int val;
                if(numMap.TryGetValue(targets[i][j],out val))
                {
                    answer[i] += val;
                }else
                {
                    answer[i] = -1;
                    break;
                }
            }
        }
        
        return answer;
    }
}",https://github.com/shehdrbs123/Sparta/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/unrated/160586.%E2%80%85%EB%8C%80%EC%B6%A9%E2%80%85%EB%A7%8C%EB%93%A0%E2%80%85%EC%9E%90%ED%8C%90,2023. 9. 6,56,3
2023. 9. 6 오전 10:34:07,노동균,Unity,57 - 둘만의 암호,"using System;
using System.Text;
public class Solution {
    public string solution(string s, string skip, int index) {
        string answer = """";
        StringBuilder sb = new StringBuilder(50);
        for(int i=0;i<s.Length;++i)
        {
            sb.Append(ChangeChar(s[i],skip,index));
        }
        
        answer= sb.ToString();
        return answer;
    }
    
    private char ChangeChar(char s, string skip, int idx)
    {
        int tmp=s-'a';
        for(int i=0;i<idx;++i)
        {
            tmp = (tmp+1)%26;
            if(skip.Contains((char)(tmp+'a')))
                --i;
        }
        tmp += 'a';
        return (char)tmp;
    }
}",https://github.com/shehdrbs123/Sparta/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/unrated/155652.%E2%80%85%EB%91%98%EB%A7%8C%EC%9D%98%E2%80%85%EC%95%94%ED%98%B8,2023. 9. 6,57,3
2023. 9. 6 오전 10:34:47,노동균,Unity,58 - 햄버거 만들기,"using System;
using System.Collections.Generic;

public class Solution {
    public int solution(int[] ingredient) {
        int answer =0;
        answer = solve2(ingredient);
        return answer;        
    }
    
    private int solve2(int[] ingredient)
    {
        int answer= 0;
        int[] recipe = new int[] {1,2,3,1};
        List<int> stack = new List<int>();
        int i=0;
        for(;i<ingredient.Length && i<3;++i)
        {
            stack.Add(ingredient[i]);
        }
        
        for(;i<ingredient.Length;++i)
        {
            stack.Add(ingredient[i]);
            
            if(stack.Count >= 4)
            {
                bool isOk = true;
                int k = 0;
                for(int j=stack.Count-4;j<stack.Count;j++)
                {
                    if(stack[j] != recipe[k])
                    {
                        isOk=false;
                        break;
                    }
                    k++;
                }
                if(isOk)
                {
                    stack.RemoveRange(stack.Count-4,4);
                    answer++;
                }
            }
        }
        
        return answer;
    }
    
    private int solve1(int[] ingredient)
    {
        int answer = 0;
        List<int> stack = new List<int>();
        
        for(int i=0;i<ingredient.Length;i++)
        {
            stack.Add(ingredient[i]);
            if(stack.Count >= 4)
            {
                if(MakeBread(stack))
                {
                    answer++;
                    
                }   
            }
        }
        return answer;
    }
    int[] makableBread = new int[]{1,2,3,1};
    private bool MakeBread(List<int> stack)
    {
        int lastIdx = stack.Count-4;
        for(int i=0;i<makableBread.Length;i++)
        {
            if(stack[lastIdx + i] != makableBread[i])
            {
                return false;
            }
        }
        stack.RemoveRange(lastIdx, 4);
        return true;
    }
}",https://github.com/shehdrbs123/Sparta/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/unrated/133502.%E2%80%85%ED%96%84%EB%B2%84%EA%B1%B0%E2%80%85%EB%A7%8C%EB%93%A4%EA%B8%B0,2023. 9. 6,58,3
2023. 9. 6 오전 10:36:29,한병권,Unity,55 - 문자열 나누기,"using System;

public class Solution {
    public int solution(string s) {
        int answer = 0;        
        char[] c = s.ToCharArray();

        char temp = c[0];
        int count = 1;
        int unCount = 0;
        
        for(int i = 1; i < c.Length; i++)
        {
            if(i == c.Length -1)
            {
                answer++;
            }
            else
            {
                if(temp == c[i])
                {
                    count++;
                }
                else
                {
                    unCount++;
                }

                if(count == unCount)
                {
                    answer++;
                    temp = c[i+1];
                    count = 0;
                    unCount = 0;
                }
            }
        }
        
        if(answer == 0) answer = 1;
        
        return answer;
    }
}",https://github.com/hbg9212/AlgorithmCodekata,2023. 9. 6,55,3
2023. 9. 6 오전 10:38:24,이소이,Unity,38 - K번째수정렬,"using System;

public class Solution {
    public int[] solution(int[] array, int[,] commands) {
        int[] answer = new int[commands.GetLength(0)];
        
        for (int i = 0; i < commands.GetLength(0); i++)
        {
            int[] subary = new int[commands[i,1] - commands[i,0] + 1];
            for (int j = commands[i,0] - 1; j < commands[i,1]; j++)
                subary[j - commands[i,0]+ 1] = array[j];
            Array.Sort(subary);
            answer[i] = subary[commands[i,2] - 1];
        }
        
        return answer;
    }
}",https://github.com/leesy015599/AlgorithmCodeKata/blob/master/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/42748.%E2%80%85K%EB%B2%88%EC%A7%B8%EC%88%98/K%EB%B2%88%EC%A7%B8%EC%88%98.cs,2023. 9. 6,38,2
2023. 9. 6 오전 10:41:01,김민상,Unity,59 - 성격 유형 검사하기,"public class Solution
{
    public string solution(string[] survey, int[] choices)
    {
        string answer = """";
        string type = ""RTCFJMAN"";
        int[] count = new int[8] { 0, 0, 0, 0, 0, 0, 0, 0 };

        for (int i = 0; i < survey.Length; i++)
        {
            count[type.IndexOf(survey[i][0])] += (4 - choices[i]);
        }

        for (int i = 0; i < 8; i += 2)
        {
            answer += (count[i] >= count[i + 1]) ? type[i] : type[i + 1];
        }

        return answer;
    }
}",,2023. 9. 6,59,3
2023. 9. 6 오전 10:47:24,김나운,Unity,30 - 3진법 뒤집기,"using System;

public class Solution {
    public int solution(int n) {
        int answer=0;
        while(n>0){
            answer*=3;
            answer+=n%3;
            n/=3;
        }
        return answer;
    }
}",,2023. 9. 6,30,1
2023. 9. 6 오전 11:00:24,김민상,Unity,60 - 바탕화면 정리,"using System.Collections.Generic;
using System.Linq;

public class Solution
{
    public int[] solution(string[] wallpaper)
    {
        List<int> x = new List<int>();
        List<int> y = new List<int>();

        for (int i = 0; i < wallpaper.Length; i++)
        {
            for (int j = 0; j < wallpaper[0].Length; j++)
            {
                if (wallpaper[i][j] == '#')
                {
                    x.Add(i);
                    y.Add(j);
                }
            }
        }

        return new int[] { x.Min(), y.Min(), x.Max() + 1, y.Max() + 1};
    }
}",,2023. 9. 6,60,3
2023. 9. 6 오전 11:25:15,신해준,Unity,29 - 최대공약수와 최소공배수,"using System;

public class Solution {
    public int[] solution(int n, int m) {
        int gcd = GetGCD(n, m);
        int lcm = n * m / gcd;

        return new int[] { gcd, lcm };
    }

    private int GetGCD(int a, int b) {
        while (b != 0) {
            int remainder = a % b;
            a = b;
            b = remainder;
        }
        return a;
    }
}",,2023. 9. 6,29,1
2023. 9. 6 오전 11:31:41,김민상,Unity,61 - 개인정보 수집 유효기간,"using System.Collections.Generic;
public class Solution
{
    public int Date(string date)
    {
        string[] dateArr = date.Split('.');
        return int.Parse(dateArr[0]) * 336 + int.Parse(dateArr[1]) * 28 + int.Parse(dateArr[2]);
    }

    public int[] solution(string today, string[] terms, string[] privacies)
    {
        Dictionary<char, int> term = new Dictionary<char, int>();

        foreach (string t in terms)
        {
            string[] temp = t.Split(' ');
            term.Add(char.Parse(temp[0]), int.Parse(temp[1]) * 28);
        }

        int td = Date(today);

        List<int> answer = new List<int>();

        for (int i = 0; i < privacies.Length; i++)
        {
            string[] temp = privacies[i].Split(' ');
            
            if (td >= Date(temp[0]) + term[char.Parse(temp[1])])
                answer.Add(i + 1);
                
        }

        return answer.ToArray();
    }
}",,2023. 9. 6,61,3
2023. 9. 6 오전 11:32:38,김진환,Unity,38 - K번째수정렬,"public static int[] solution(int[] array, int[,] commands)
        {
            int[] answer = new int[commands.GetLength(0)];


            // commands의 수만큼 반복
            for(int i = 0; i < commands.GetLength(0); i++)
            {
                // 자르기
                int[] arr = new int[commands[i, 1] - commands[i, 0] + 1];
                for(int j = commands[i, 0] - 1; j < commands[i, 1]; j++)
                {
                    arr[j - (commands[i, 0] - 1)] = array[j];
                }
                // 정렬
                Array.Sort(arr);

                // 값 대입
                answer[i] = arr[commands[i,2] - 1];
            }

            return answer;
        }",https://github.com/NewRound/AlgorithmKata.git,2023. 9. 6,38,2
2023. 9. 6 오전 11:41:54,조영오,Unity,50 - 기사단원의 무기,"using System;

public class Solution {
    public int solution(int number, int limit, int power) {
        //기사의 수 = number, 공격력 제한수치 = limit
        //제한수치 초과 시 설정될 공격력 = power, 모든 기사의 공격력 합 = answer 
        //각 기사는 자기 기사 번호의 약수 갯수의 공격력을 가진 무기를 필요로 함.
        //하지만 공격력이 제한수치를 초과하면 power 만큼의 공격력을 가진 무기를 받는다.
        
        //약수의 개수는 소인수의 지수에 +1 해서 곱한 값.
        
        //number 이하의 소수 배열 구하기
        int answer = 0;
        
        int atk = 0;
        for(int i = 1; i <= number ; i++){
            atk = getDivCount(i);
            
            if(atk > limit){atk = power;}
            
            answer += atk;
        }
        
        return answer;
    }
    
    //약수의 갯수를 구하는 메소드 
    public static int getDivCount(int num){
        int divCount = 0; 
        
        for (int i = 1; i <= (int)Math.Sqrt(num); i++){
            if (num % i == 0){
                divCount++;
                if (i != num / i) {
                    divCount++;
                }
            }
        }
        return divCount;
    }
}",,2023. 9. 6,50,2
2023. 9. 6 오전 11:56:48,김진환,Unity,39 - 두 개 뽑아서 더하기,"public static int[] solution(int[] numbers)
        {
            
            List<int> answers = new List<int>();
            //answers.Add(0);

            // 모든 경우의 수
            for (int i = 0; i < numbers.Length - 1;i++)
            {
                for(int j = i + 1; j < numbers.Length;j++)
                {
                    if (!answers.Contains(numbers[i] + numbers[j]))
                    {
                        Console.WriteLine($""{numbers[i]} + {numbers[j]} = {numbers[i] + numbers[j]}"");
                        answers.Add(numbers[i] + numbers[j]);
                    }
                    else
                        continue;
                }
            }

            //answers.Remove(0);
            answers.Sort();
            int[] answer = new int[answers.Count];
            int count = 0;
            foreach(int i in answers)
            {
                answer[count] = i;
                count++;
            }

            return answer;

        }",https://github.com/NewRound/AlgorithmKata.git,2023. 9. 6,39,2
2023. 9. 6 오전 11:59:00,임전혁,Unity,50 - 기사단원의 무기,"using System;

public class Solution {
    public int solution(int number, int limit, int power) {
        int answer = 0;
        for(int i = 1; i <= number; i++) {

            int divisor = 0;
            
            for(int j = 1; j * j <= i; j++) {
                if(j * j == i) {
                    divisor++;
                }else if(i % j == 0) {
                    divisor += 2;
                }
            }

            answer += divisor > limit ? power : divisor;
        }
        
        return answer;
    }
}",https://github.com/yarogono/Algorithm_CSharp/blob/master/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/unrated/136798.%E2%80%85%EA%B8%B0%EC%82%AC%EB%8B%A8%EC%9B%90%EC%9D%98%E2%80%85%EB%AC%B4%EA%B8%B0/%EA%B8%B0%EC%82%AC%EB%8B%A8%EC%9B%90%EC%9D%98%E2%80%85%EB%AC%B4%EA%B8%B0.cs,2023. 9. 6,50,2
2023. 9. 6 오후 12:04:51,신해준,Unity,27 - 행렬의 덧셈,"using System;

public class Solution
    {
        public int[,] solution(int[,] arr1, int[,] arr2)
        {
       
            int[,] answer = new int[arr1.GetLength(0),arr1.GetLength(1)];
            
            // 각각 더해준다.
            for (int i = 0; i < arr1.GetLength(0); i++)
            {
                for (int j = 0; j < arr1.GetLength(1); j++)
                {
                    answer[i, j] = arr1[i, j] + arr2[i, j];
                }
            }
            return answer;
        }
    }",,2023. 9. 6,27,1
2023. 9. 6 오후 1:46:10,김민재,AI,16 - 음양 더하기,"def solution(absolutes, signs):
    answer = 0
    for i, x in enumerate(signs):
        if x == True:
            answer = answer + absolutes[i]
        else:
            answer = answer - absolutes[i]

    return answer",https://github.com/Kim-Minjae9872/Code_Kata,2023. 9. 6,16,1
2023. 9. 6 오후 2:25:30,채이환,Unity,43 - 명예의 전당 (1),"using System;
using System.Collections.Generic;

public class Solution {
    public int[] solution(int k, int[] score) {
        int[] answer = new int[score.Length];
        LinkedList<int> board = new LinkedList<int>();
        
        for (int i = 0; i < score.Length; ++i)
        {
            LinkedListNode<int> current = board.First;
            while (current != null)
            {
                if (current.Value < score[i])
                    current = current.Next;
                else
                    break;
            }
            
            if (current == null)
            {
                if (board.Count == 0 || board.First.Value > score[i])
                    board.AddFirst(score[i]);
                else
                    board.AddLast(score[i]);
            }
            else
                board.AddBefore(current, score[i]);

            if (board.Count > k)
            {
                board.RemoveFirst();
            }
            
            answer[i] = board.First.Value;
        }
        return answer;
    }
}",,2023. 9. 6,43,2
2023. 9. 6 오후 2:25:49,채이환,Unity,44 - 2016년,"public class Solution {
    public string solution(int a, int b) {
        string answer = """";
        string[] dayName = {""SUN"", ""MON"", ""TUE"", ""WED"", ""THU"", ""FRI"", ""SAT""};
        int[] month = {31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31};
        
        int day = 0;
        for (int i = 0; i < a-1; ++i)
        {
            day += month[i];
        }
        day += b-1;
        
        int dayToName = (5 + day) % 7;
        
        answer = dayName[dayToName];
        
        return answer;
    }
}",,2023. 9. 6,44,2
2023. 9. 6 오후 7:09:25,김민태,Unity,54 - 체육복,"using System;
using System.Linq;

public class Solution {
    public int solution(int n, int[] lost, int[] reserve)
    {
        Array.Sort(lost);
        Array.Sort(reserve);
        foreach (int l in lost)
        {
            foreach (int r in reserve)
            {
                if (l == r)
                {
                    lost = lost.Where(x => x != l).ToArray();
                    reserve = reserve.Where(x => x != r).ToArray();
                    break;
                }
            }
        }
        
        int count=0;
        
        foreach (int l in lost)
        {
            for (int i = 0; i < reserve.Length; i++)
            {
                if (l - 1 == reserve[i] && reserve[i]!=0 || l + 1 == reserve[i] && reserve[i]!=0)
                {
                    reserve[i]=0;
                    count++;
                    break;
                }
            }
        }
        return n - lost.Length + count;
    }
}",https://github.com/rlaalsxo/CodingTest,2023. 9. 6,54,2
2023. 9. 6 오후 7:38:08,김민태,Unity,55 - 문자열 나누기,"using System;
using System.Collections.Generic;
using System.Linq;

public class Solution {
    public int solution(string s) {
        List<string> list = new List<string>();
        int answer = 0;
        int scount = 0;
        int count = 0;
        int index = 0;
        for(int i = 0; i < s.Length; i++)
        {
            if(s[index] == s[i]) 
            {
                scount++;
            }
            else 
            {
                count++;
            }
            if(scount == count)
            {
                string s1 = s.Substring(index,i+1 - index);
                //Console.WriteLine(s1);
                list.Add(s1);
                scount = 0;
                count = 0;
                index = i+1;
            }
            else if(i == s.Length - 1 && count == 0)
            {
                list.Add(s[i].ToString());
            }
            else if(scount != count &&i == s.Length - 1)
            {
                string s1 = s.Substring(index);
                list.Add(s1);
            }
        }
        answer = list.Count;
        return answer;
    }
}",https://github.com/rlaalsxo/CodingTest,2023. 9. 6,55,3
2023. 9. 6 오후 8:31:44,김경환,Unity,61 - 개인정보 수집 유효기간,"using System;
using System.Collections;
using System.Collections.Generic;

public class Solution {
    public int[] solution(string today, string[] terms, string[] privacies) {
        Dictionary<string, int> dic = new Dictionary<string, int>();
        
        Date now = new Date(today);
        
        foreach(string s in terms)
        {
            string type = s.Split("" "")[0];
            int period = Convert.ToInt32(s.Split("" "")[1]);
                
            dic.Add(type, period);
        }
        
        List<int> answer = new List<int>();
        
        for(int i = 0; i < privacies.Length; i++)
        {
            Date date = new Date(privacies[i].Split("" "")[0]);
            
            date.AddMonth(dic[privacies[i].Split("" "")[1]]);
            
            if(now.Compare(date))
            {
                answer.Add(i+1);
            }
        }
        
        
        return answer.ToArray();
    }
    
}

public class Date
{
    int Year;
    int Month;
    int Day;
    
    public Date(string s)
    {
        Year = Convert.ToInt32(s.Split('.')[0]);
        Month = Convert.ToInt32(s.Split('.')[1]);
        Day = Convert.ToInt32(s.Split('.')[2]);
    }
    
    public int GetYear() { return Year; }
    public int GetMonth() { return Month; }
    public int GetDay() { return Day; }
    
    public void AddMonth(int month)
    {
        Month += month;
        
        while(Month > 12)
        {
            Year ++;
            Month -= 12;
        }
    }
    
    public bool Compare(Date date)
    {
         return Year == date.GetYear() ? (Month == date.GetMonth() ? (Day == date.GetDay() ? true : Day > date.GetDay()) : Month > date.GetMonth()) : Year > date.GetYear();
    }
    
    public override string ToString()
    {
        return Year +  ""."" + Month + "".""+ Day;
    }
}",https://github.com/kkh9700/algorithm,2023. 9. 6,61,3
2023. 9. 6 오후 11:30:49,최석준,Unity,10 - 정수 내림차순으로 배치하기,"#include <string>
#include <vector>
#include <algorithm>
#include <functional>
using namespace std;

long long solution(long long n) {
    long long answer = 0;

    string str = to_string(n);
    sort(str.begin(), str.end(), greater<char>());
    answer = stoll(str);

    return answer;
}",,2023. 9. 6,10,1
2023. 9. 7 오전 1:37:10,조성훈,Unity,21 - 수박수박수박수박수박수?,"public class Solution {
    public string solution(int n) 
    {
        string answer = """";
        for(int i = 1; i <= n; i++)
        {
            if(i%2==0)
                answer += ""박"";
            else
                answer += ""수"";
        }
        return answer;
    }
}",,2023. 9. 6,21,1
2023. 9. 7 오전 1:37:44,조성훈,Unity,22 - 내적,"using System;

public class Solution 
{
    public int solution(int[] a, int[] b) 
    {
        int answer = 0;
        
        for(int i = 0; i < a.Length; i++)
        {
            answer += a[i] * b[i];
        }
      
        return answer;
    }
}",,2023. 9. 6,22,1
2023. 9. 7 오전 8:09:25,김규승,Unity,11 - 하샤드 수,"#include <string>
#include <vector>

using namespace std;

bool solution(int x) {
    
    int divide{0};
    
    int temp{x};
    while(temp > 0)
    {
        divide += temp % 10;
        temp /= 10;
    }
    
    return (x % divide) == 0;
    
}",,2023. 9. 7,11,1
2023. 9. 7 오전 9:01:54,김형중,Unity,33 - 크기가 작은 부분,"using System;

public class Solution {
    public int solution(string t, string p) {
        int answer = 0;
        int P = int.Parse(p);
        
        for (int i = 0; i < t.Length - p.Length + 1; i++)
        {
            int T = int.Parse(t.Substring(i, p.Length));
            
            if (T <= P)
            {
                answer++;
            }
        }
        return answer;
    }
}",,2023. 9. 7,33,2
2023. 9. 7 오전 9:02:25,김경원,Unity,48 - 소수 만들기,"public class Solution
{
        public int solution(int[] nums)
        {
            int answer = 0;

            // 배열의 각 자릿수를 참조
            for(int i = 0; i < nums.Length - 2; ++i)
            {
                for(int j = i + 1; j < nums.Length - 1; ++j)
                {
                    for(int k = j + 1; k < nums.Length; ++k)
                    {
                        int sum = nums[i] + nums[j] + nums[k];
                        if (IsPrimeNumber(sum))
                        {
                            answer++;
                        }
                    }
                }
            }

            return answer;
        }

        // 소수 판별 메서드
        bool IsPrimeNumber(int number)
        {
            // 검사하려는 숫자의 절반 값까지만 검사해도
            // 소수 판별이 가능하므로 절반 값을 구해놓는다.
            int check_number = number / 2;

            // 나누어 떨어지는 숫자가 있다면 소수가 아님
            for(int i = 2; i < check_number; ++i)
            {
                if (number % i == 0)
                {
                    return false;
                }
            }

            return true;
        }
}",,2023. 9. 7,48,2
2023. 9. 7 오전 9:03:59,김경원,Unity,49 - 덧칠하기,"public class Solution {
    public int solution(int n, int m, int[] section) {
        int answer = 0;
        int num = 0;
        
        for(int i = 0; i < section.Length; i++)
        {
            if(section[i] > num)
            {
                num = (section[i] + m) - 1;
                answer++;
            }
        }
        
        return answer;
    }
}",,2023. 9. 7,49,2
2023. 9. 7 오전 9:05:59,문현우,Unity,23 - 약수의 개수와 덧셈,"public class Solution {
    public int solution(int left, int right) {
        int answer = 0;
        for (int num = left; num <= right; num++) {
            int divisorCount = 0;
            for (int i = 1; i <= num; i++) {
                if (num % i == 0) {
                    divisorCount++;
                }
            }
            if (divisorCount % 2 == 0) {
                answer += num;
            } else {
                answer -= num;
            }
        }
        
        return answer;
    }
}",https://github.com/Munch310/Algorithm-Csharp/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/77884.%E2%80%85%EC%95%BD%EC%88%98%EC%9D%98%E2%80%85%EA%B0%9C%EC%88%98%EC%99%80%E2%80%85%EB%8D%A7%EC%85%88,2023. 9. 7,23,1
2023. 9. 7 오전 9:06:29,김경원,Unity,50 - 기사단원의 무기,"public class Solution {
    public int solution(int number, int limit, int power) {
        int answer = 0;
        int num = 0;
        int[] count = new int[number + 1];
        
        for(int i = 1; i <= number; i++)
        {
            for(int j = i; j <= number; j += i)
            {
                count[j]++;
            }
        }
        for(int i = 1; i <= number; i++)
        {
            if(count[i] > limit)
            {
                answer += power;
            }
            else
            {
                answer += count[i];
            }
        }
        
        
        /* 다른 풀이
        for(int i = 1; i <= number; i++)
        {
            for(int j = 1; j <= Math.Sqrt(i); j++)
            {
                if(i % j == 0)
                {
                    if(i / j == j)
                    {
                        num++;
                    }
                    else
                    {
                        num += 2;
                    }
                }
            }
            if(num <= limit)
            {
                answer += num;
            }
            else
            {
                answer += power;
            }
            num = 0;
        }
        */
        return answer;
    }
}",,2023. 9. 7,50,2
2023. 9. 7 오전 9:09:02,김민태,Unity,56 - 대충 만든 자판,"public class Solution {
    public int[] solution(string[] keymap, string[] targets) {
        int[] answer = new int[targets.Length];
        int sum = 0;
        int count = 0;
        
        for(int i = 0; i < targets.Length; i++)
        {
            for(int j = 0; j < targets[i].Length; j++)
            {
                count = Same(keymap, targets[i][j]);
                if(count == -1)
                {
                    sum = -1;
                    break;
                }
                sum += count;
            }
            answer[i] = sum;
            sum = 0;
        }
        return answer;
    }
    
    public int Same(string[] keymap, char ch)
    {
        int min = -1;
        
        for(int i = 0; i < keymap.Length; i++)
        {
            for(int j = 0; j < keymap[i].Length; j++)
            {
                if(keymap[i][j] == ch)
                {
                    if(min == -1 || min > j)   min = j + 1;
                    break;
                }
            }
        }
        return min;
    }
}",https://github.com/rlaalsxo/CodingTest,2023. 9. 7,56,3
2023. 9. 7 오전 9:09:59,김호연,Unity,31 - 이상한 문자 만들기,"using System;

public class Solution {
    public string solution(string s) {
        string answer = """";
        // 배열로 변경
        // 대문자로 변경해주는 ToUpper, 소문자로 바꿔주는 ToLower 사용
        // 입력된 문자열을 공백을 기준으로 잘라서 저장
        string[] temp = s.Split();
        // for문을 돌려서 문자열을 하나씩 호출함.
        for (int i = 0; i < temp.Length; i++)
        {
        // 호출된 문자열에서 차례로 문자 하나씩을 꺼냄
            for (int j = 0; j < temp[i].Length; j++)
            {
            // 0번째는 짝수 취급이므로 대문자로함
                if (j == 0)
                {
                    answer += Char.ToUpper(temp[i][j]);
                    continue;
                }
                // 짝수는 대문자로, 홀수는 소문자로 바꿈
                if (j % 2 == 0)
                {
                    answer += Char.ToUpper(temp[i][j]);
                }
                else
                {
                    answer += Char.ToLower(temp[i][j]);
                }
            }
            // 띄어쓰기가 전부 생략되어있으므로 문자열이 하나 끝날때마다 띄어쓰기를 넣어줌.
            // 단, 마지막에는 띄어쓰기를 추가하면 안되므로 temp.Leght-1로 설정해준다.
            if (i != temp.Length-1)
            {
                answer += "" "";
            }
        }
            
        return answer;
    }
}",,2023. 9. 7,31,2
2023. 9. 7 오전 9:10:11,김정규,AI,29 - 최대공약수와 최소공배수,"def solution(n, m):
    def gcd(a, b):
        while b:
            a, b = b, a % b
        return a

    def lcm(a, b):
        return a * b // gcd(a, b)

    gcd_value = gcd(n, m)
    lcm_value = lcm(n, m)

    return [gcd_value, lcm_value]",https://github.com/JungGyu00/algorithm,2023. 9. 7,29,1
2023. 9. 7 오전 9:11:09,김하늘,Unity,33 - 크기가 작은 부분,"using System;

public class Solution 
{
    public int solution(string t, string p) 
    {
        int answer = 0;
        long n = 0;
        string s = """";

        for (int i = 0; i < t.Length - p.Length + 1; i++)
        {
            n = long.Parse(t.Substring(i, p.Length));
            if (n <= long.Parse(p))
                answer++;
        }
        return answer;
    }
}",,2023. 9. 7,33,2
2023. 9. 7 오전 9:11:26,박민호,Unity,41 - 푸드 파이트 대회,"using System;
using System.Collections.Generic;
public class Solution {
    public string solution(int[] food) {
        int foodLastIdx = food.Length-1;
        List<int> lst = new List<int>{};
        lst.Add(0);
        for (int i=food.Length-1;i>0;i--){
            for(int j=0;j<food[i]/2;j++){
                lst.Add(i);
                lst.Insert(0,i);
            }
        }
        string answer  = string.Join("""", lst);
        return answer;
    }
}",,2023. 9. 7,41,2
2023. 9. 7 오전 9:11:41,김경원,Unity,51 - 로또의 최고 순위와 최저 순위,"using System;
using System.Linq;
public class Solution {
    public int[] solution(int[] lottos, int[] win_nums) {
        int right = 0;
        int zeroCount =0;
        for(int i=0; i<lottos.Length; i++)
        {
            if(lottos[i]==0) 
            {
                zeroCount++;
            }
            if(lottos.Contains(win_nums[i]))
            {
                right++;
            }
        }
        int MaxCollect = zeroCount+right;
        int MinCollect = right;
        if(MinCollect==0) MinCollect++;
        if(MaxCollect==0) MaxCollect++;
        int[] answer = new int[] {7-MaxCollect,7-MinCollect};
        return answer;
    }
}",,2023. 9. 7,51,2
2023. 9. 7 오전 9:11:45,김도현B,Unity,44 - 2016년,"using System;
using System.Globalization;
public class Solution {
    public string solution(int a, int b) {
        DateTime dateValue = new DateTime(2016, a, b);
        return dateValue.ToString(""ddd"", new CultureInfo(""en-US"")).ToUpper();
    }
}",https://github.com/subscriptioncat/Algorithm,2023. 9. 7,44,2
2023. 9. 7 오전 9:12:59,김정민,Unity,59 - 성격 유형 검사하기,"public class Solution
        {
            static int R = 0, T = 0, C = 0, F = 0, J = 0, M = 0, A = 0, N = 0;
            public string solution(string[] survey, int[] choices)
            {
                string answer = """";
                

                for (int i = 0; i < choices.Length; i++)
                {
                    int score = 0;
                    if (choices[i] < 4)
                    {
                        score = 4 - choices[i] ;
                        SetScore(survey[i][0], score);
                    }
                    else
                    {
                        score = choices[i] - 4;
                        SetScore(survey[i][1], score);
                    }
                }

                if (R >= T) answer += 'R';
                else answer += 'T';
                if (C >= F) answer += 'C';
                else answer += 'F';
                if (J >= M) answer += 'J';
                else answer += 'M';
                if (A >= N) answer += 'A';
                else answer += 'N';
                return answer;
            }

            static void SetScore(char c, int score)
            {
                switch (c)
                {
                    case 'R':
                        R += score;
                        break;
                    case 'T':
                        T += score;
                        break;
                    case 'C':
                        C += score;
                        break;
                    case 'F':
                        F += score;
                        break;
                    case 'J':
                        J += score;
                        break;
                    case 'M':
                        M += score;
                        break;
                    case 'A':
                        A += score;
                        break;
                    case 'N':
                        N += score;
                        break;
                }
            }
        }",https://github.com/j-miiin/Algorithm_Study/blob/main/SPARTA_ALGORITHM_2023/Level3/59_MBTI.cs,2023. 9. 7,59,3
2023. 9. 7 오전 9:13:29,차명경,AI,28 - 직사각형 별찍기,"a, b = map(int, input().strip().split(' '))
for i in range(b):
    print('*'*a)",,2023. 9. 7,28,1
2023. 9. 7 오전 9:14:37,조병우,Unity,13 - 콜라츠 추측,"using System;

public class Solution
    {
        public int solution(int num)
        {
            int answer = 0;

            while (num != 1)
            {
                ++answer;
                
                if (num % 2 == 0)
                {
                    num = num /2;
                }
                
                else if (num % 2 == 1){
                    num = num * 3 + 1;
                }
                
                else if (answer > 500)
                {
                     answer = -1;
                    num = 1;
                }
            }
            
            return answer;
        }
    }
",,2023. 9. 7,13,1
2023. 9. 7 오전 9:15:14,심우진,Unity,20 - 가운데 글자 가져오기,"public class Solution {
    public string solution(string s) {
        int length = s.Length;
        if (length % 2 == 0) {
            // 짝수인 경우 중간의 두 글자 반환
            return s.Substring(length / 2 - 1, 2);
        } else {
            // 홀수인 경우 중간의 한 글자 반환
            return s.Substring(length / 2, 1);
        }
    }
}",https://github.com/agasa0624/at,2023. 9. 7,20,1
2023. 9. 7 오전 9:15:41,심우진,Unity,19 - 제일 작은 수 제거하기,"using System;
using System.Linq;

public class Solution {
    public int[] solution(int[] arr) {
        if (arr.Length <= 1) {
            return new int[] {-1};
        }
        
        int minValue = arr.Min(); // 배열에서 가장 작은 값을 찾습니다.
        return arr.Where(n => n != minValue).ToArray(); // 가장 작은 값을 제외한 배열을 반환합니다.
    }
}",https://github.com/agasa0624/at,2023. 9. 7,19,1
2023. 9. 7 오전 9:15:47,김경환,Unity,62 - 달리기 경주,"using System;
using System.Collections.Generic;

public class Solution {
    private Dictionary<string, int> dic;
    public string[] solution(string[] players, string[] callings) {
        dic = new Dictionary<string, int>();
        
        for(int i = 0; i < players.Length; i++)
        {
            dic.Add(players[i], i);
        }
        
        foreach(string s in callings)
        {
            overtake(dic[s], players);
        }
        
        return players;
    }
    
    public void overtake(int index, string[] players)
    {
        dic[players[index]] = index - 1;
        dic[players[index - 1]] = index;
        
        string tmp = players[index];
        players[index] = players[index - 1];
        players[index - 1] = tmp;
    }
}",https://github.com/kkh9700/algorithm,2023. 9. 7,62,3
2023. 9. 7 오전 9:16:05,이소이,Unity,39 - 두 개 뽑아서 더하기,"using System;
using System.Collections.Generic;

public class Solution {
    public int[] solution(int[] numbers) {
        // 중복 놉
        List<int> sum = new List<int>();
        for (int i = 0; i < numbers.Length - 1; i++)
        {
            for (int j = i + 1; j < numbers.Length; j++)
            {
                if (sum.Contains(numbers[i] + numbers[j]) == false)
                    sum.Add(numbers[i] + numbers[j]);
            }
        }
        sum.Sort();
        int[] answer = new int[sum.Count];
        for (int i = 0; i < sum.Count; i++)
            answer[i] = sum[i];
        return answer;
    }
}",https://github.com/leesy015599/AlgorithmCodeKata/blob/master/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/68644.%E2%80%85%EB%91%90%E2%80%85%EA%B0%9C%E2%80%85%EB%BD%91%EC%95%84%EC%84%9C%E2%80%85%EB%8D%94%ED%95%98%EA%B8%B0/%EB%91%90%E2%80%85%EA%B0%9C%E2%80%85%EB%BD%91%EC%95%84%EC%84%9C%E2%80%85%EB%8D%94%ED%95%98%EA%B8%B0.cs,2023. 9. 7,39,2
2023. 9. 7 오전 9:16:21,이현지,Unity,44 - 2016년,"using System.Collections.Generic;

public class Solution 
{
    public string solution(int a, int b) 
    {
        string[] days = new string[] { ""THU"", ""FRI"", ""SAT"", ""SUN"", ""MON"", ""TUE"", ""WED""};
        
        int[] daysOfMonths = new int[] { 31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 };
        
        int totalDays = b;
        for (int i = 0; i < a - 1 ; i ++)
        {
            totalDays += daysOfMonths[i];
        }
        
        string answer = days[(totalDays) % 7];
        return answer;
    }
}",https://github.com/szlovelee/Programmers-Algorithm,2023. 9. 7,44,2
2023. 9. 7 오전 9:16:28,김형중,Unity,34 - 최소직사각형,"using System;

public class Solution {
    public int solution(int[,] sizes) {
        
        for(int i=0; i < sizes.GetLength(0); i++) //2차원배열이기 때문에 Length가 아닌 GetLength사용
        {
            var blink = 0;
            if(sizes[i,0] < sizes[i,1])
            {
                blink = sizes[i,0];
                sizes[i,0] = sizes[i,1];
                sizes[i,1] = blink;
            }
        }
        
        int longer = 0;
        int shoter = 0;
        
        for (int i=0; i < sizes.GetLength(0); i++)
        {
            if(longer < sizes[i,0])
            {
                longer = sizes[i,0];
            }
            if(shoter < sizes[i,1])
            {
                shoter = sizes[i,1];
            }
        }
        
        return longer * shoter;
    }
}",,2023. 9. 7,34,2
2023. 9. 7 오전 9:16:37,이기호,AI,28 - 직사각형 별찍기,"a, b = map(int, input().strip().split(' '))

for i in range(1, b+1):
    print(a*'*')",,2023. 9. 7,28,1
2023. 9. 7 오전 9:16:53,김예준,Unity,54 - 체육복,"using System;

public class Solution {
    public int solution(int n, int[] lost, int[] reserve) {
        int answer = 0;
        
        int[] suit = new int[n];
        
        for (int i = 0; i < n; i++)
        {
            suit[i] = 1;
        }
        
        for (int i = 0; i < lost.Length; i++)
        {
            suit[lost[i] - 1]--;
        }
        
        for (int i = 0; i < reserve.Length; i++)
        {
            suit[reserve[i] - 1]++;
        }
        
        for (int i = 0; i < n; i++)
        {
            if (suit[i] == 0)
            {
                if (i >= 1 && i < n - 1)
                {
                    if (suit[i - 1] == 2)
                    {
                        suit[i]++;
                        suit[i - 1]--;
                    }
                    else if (suit[i + 1] == 2)
                    {
                        suit[i]++;
                        suit[i + 1]--;
                    }
                }
                else if (i == 0)
                {
                    if (suit[i + 1] == 2)
                    {
                        suit[i]++;
                        suit[i + 1]--;
                    }
                }
                else if (i == n - 1)
                {
                    if (suit[i - 1] == 2)
                    {
                        suit[i]++;
                        suit[i - 1]--;
                    }
                }
            }
        }
        
        for (int i = 0; i < n; i++)
        {
            if (suit[i] != 0) answer++;
        }
        
        return answer;
    }
}",,2023. 9. 7,54,2
2023. 9. 7 오전 9:17:54,장성림,Unity,46 - 과일 장수,"using System;
using System.Collections.Generic;
public class Solution {
    public int solution(int k, int m, int[] score) {
        int answer = 0;
        if(m <= score.Length){
            Array.Sort(score);
            Array.Reverse(score);
            int[] tmp = new int[m];
            for(int i = 0; i < score.Length; i++){
                tmp[i % m] = score[i];
                if(i % m == m - 1){
                    answer += tmp[m - 1] * m;
                }
            }
        }
        return answer;
    }
}",https://github.com/hoobhoob,2023. 9. 7,46,2
2023. 9. 7 오전 9:18:33,공혜진,AI,28 - 직사각형 별찍기,"a, b = map(int, input().strip().split(' '))
for i in range(b):            
    for j in range(a):        
        print('*', end='') 
    print()",,2023. 9. 7,28,1
2023. 9. 7 오전 9:19:28,김광수,Unity,73 - 귤 고르기,"using System;
using System.Collections.Generic;
using System.Linq;

public class Solution {
    // 귤을 크기별로 분류하고
    // 한 상자에 귤의 종류가 최소가 되도록 담는다
    
    // 배열에 index == 귤의크기 value == 갯수로 배열을 만든다.
    // 배열을 정렬해서 종류가 많은 귤부터 상자에 담는다.
    
    // 배열로 만들면 실행시간이 너무 오래걸린다. -> 배열의 최대 길이가 10,000,000 되기 떄문
    // 테스트는 통과하지만 대충 2000ms까지 걸림
    
    // 딕셔너리를 정렬하기 위해서 List로 만든다. -> 딕셔너리에는 순서가 없어서
    // 테스트 최대 40ms대
    
    public int solution(int k, int[] tangerine) 
    {
        int max = tangerine.Max();
        Dictionary<int,int> classify = new Dictionary<int,int>();
        int answer =0;
        foreach(int i in tangerine)
        {
            if(classify.ContainsKey(i))
            {
                classify[i]++;
            }
            else
            {
                classify.Add(i,1);
            }
            
        }
        
        List<KeyValuePair<int,int>> classifyList = classify.ToList();
        classifyList.Sort((x,y) => y.Value.CompareTo(x.Value));
        // (x,y)에서 x.CompareTo(y) 는 오름차순 y.CompareTo(x)는 내림차순이다.
        
        for (int i = 0; i< classifyList.Count; i++)
        {
            k -= classifyList[i].Value;
            answer++;
             if(k <=0)
            {
                break;
            }
        }
        
       
        
        return answer;
    }
}",https://github.com/kksoo0131/Study/commit/37aa688c8f1cb89accb40c0583c019d938354db2,2023. 9. 7,73,3
2023. 9. 7 오전 9:20:40,김민상,Unity,62 - 달리기 경주,"using System.Collections.Generic;

public class Solution {
    public string[] solution(string[] players, string[] callings) {
        string[] answer = new string[players.Length];
        Dictionary<string, int> pd = new Dictionary<string, int>();
        Dictionary<int, string> id = new Dictionary<int, string>();
        
        for (int i = 0; i < players.Length; i++)
        {
            pd.Add(players[i], i);
            id.Add(i, players[i]);
        }
        
        foreach (string nowPlayer in callings)
        {
            int nowRank = pd[nowPlayer];
            string frontPlayer = id[nowRank - 1];
            
            pd[nowPlayer] -= 1;
            pd[frontPlayer] += 1;
            
            id[nowRank - 1] = nowPlayer;
            id[nowRank] = frontPlayer;
        }
        
        for (int i = 0; i < players.Length; i++)
        {
            answer[i] = id[i];
        }
        
        return answer;
    }
}",,2023. 9. 7,62,3
2023. 9. 7 오전 9:20:53,김진규,Unity,46 - 과일 장수,"using System;

public class Solution {
    public int solution(int k, int m, int[] score) {
        int answer = 0;
        Array.Sort(score);
        for(int i=0; i<score.Length/m; i++)
        {
            int maxScore = score[score.Length - m * (i + 1)];
            answer += maxScore * m;
        }
        return answer;
    }
}",,2023. 9. 7,46,2
2023. 9. 7 오전 9:21:20,김경원,Unity,52 - 옹알이 (2),"using System;
using System.Linq;

public class Solution {
    public int solution(string[] babbling) {
        int answer = 0;
        string str = """";
        
        for(int i = 0; i < babbling.Length; i++)
        {
            babbling[i] = babbling[i].Replace(""aya"", ""1"");
            babbling[i] = babbling[i].Replace(""ye"", ""2"");
            babbling[i] = babbling[i].Replace(""woo"", ""3"");
            babbling[i] = babbling[i].Replace(""ma"", ""4"");
            
            babbling[i] = babbling[i].Replace(""11"", ""x"");
            babbling[i] = babbling[i].Replace(""22"", ""x"");
            babbling[i] = babbling[i].Replace(""33"", ""x"");
            babbling[i] = babbling[i].Replace(""44"", ""x"");
            
            str = babbling[i].Replace(""1"", string.Empty).Replace(""2"", string.Empty).Replace(""3"", string.Empty).Replace(""4"", string.Empty);
            
            if(str == """")
            {
                answer++;
            }
        }
        return answer;
    }
}",,2023. 9. 7,52,2
2023. 9. 7 오전 9:21:31,남의서,AI,54 - 체육복,"def solution(n, lost, reserve):
    answer = [0 for i in range(n)]
    for i in lost:
        answer[i-1] -= 1
    for i in reserve:
        answer[i-1] += 1
    for i in range(n):
        if answer[i] == -1:
            if i-1 >= 0 and answer[i-1] == 1:
                answer[i-1] -= 1
                answer[i] += 1
            elif i+1 < n and answer[i+1] == 1:
                answer[i+1] -= 1
                answer[i] += 1
    return sum(1 for i in answer if i >= 0)
",,2023. 9. 7,54,2
2023. 9. 7 오전 9:22:06,김경원,Unity,53 - 숫자 짝꿍,"using System;
using System.Text;

public class Solution {
    public string solution(string X, string Y) {
        string answer = """";
        int[] a = new int[10];
        int[] b = new int[10];

        for(int i = 0; i < X.Length; i++)
        {
            a[(int)(X[i] - 48)]++;
        }
        for(int i = 0; i < Y.Length; i++)
        {
            b[(int)(Y[i] - 48)]++;
        }
        StringBuilder sb = new StringBuilder();

        for(int i = 9; i >= 0; i--)
        {
            while(a[i] > 0 && b[i] > 0){
                sb.Append(i);
                a[i]--;
                b[i]--;
            }
        }
        if("""".Equals(sb.ToString()))
        {
            answer = ""-1"";
        }
        else if(""0"".Equals(sb.ToString().Substring(0, 1)))
        {
            answer = ""0"";
        }
        else
        {
            answer = sb.ToString();
        }

        return answer;
    }
}",,2023. 9. 7,53,2
2023. 9. 7 오전 9:22:53,김경,Unity,54 - 체육복,"using System;
using System.Linq;

public class Solution {
    public int solution(int n, int[] lost, int[] reserve)
    {
        //lost, reserve 배열 정렬
        Array.Sort(lost);
        Array.Sort(reserve);
        
        //체육복 잃어버린 학생 반복
        foreach (int l in lost)
        {
            //여벌 체육복 학생 반복
            foreach (int r in reserve)
            {
                //체육복 잃어버린 학생 번호랑 여벌 체육복 학생 번호랑 같으면
                if (l == r)
                {
                    //자기 자신이 입으므로 해당 배열에서 모두 제거
                    lost = lost.Where(x => x != l).ToArray();
                    reserve = reserve.Where(x => x != r).ToArray();
                    break;
                }
            }
        }
        
        int count=0;
        //체육복 잃어버린 학생 반복
        foreach (int l in lost)
        {
            //여벌 체육복 학생 반복
            for (int i = 0; i < reserve.Length; i++)
            {
                //잃어버린 체육복 학생 번호 -1 or +1 이 여벌 체육복 학생 번호랑 같고
                //여벌 체육복 학생 번호가 0이 아니면
                if (l - 1 == reserve[i] && reserve[i]!=0 
                     || l + 1 == reserve[i] && reserve[i]!=0)
                {
                    //여벌 체육복 학생 번호 0으로, 빌려준 카운트 더하기
                    reserve[i]=0;
                    count++;
                    break;
                }
            }
        }
        //총 들을 수 있는 학생수는 전체 학생 수 - 잃어버린 학생 수 + 빌려준 카운트
        return n - lost.Length + count;
    }
}",,2023. 9. 7,54,2
2023. 9. 7 오전 9:23:34,이승연,Unity,19 - 제일 작은 수 제거하기,"using System.Linq;
public class Solution {
    public int[] solution(int[] arr) {
        int[] answer = new int[] {};
        
        if(arr.Length>1)
        {
            
            int min=arr.Min();
            answer = arr.Where(num => num != min).ToArray();
            
        }
        
        else
            answer=new int[] { -1 };
        
        
        return answer;
    }
}",,2023. 9. 7,19,1
2023. 9. 7 오전 9:23:47,최장범,Unity,34 - 최소직사각형,"using System;

public class Solution {
    public int solution(int[,] sizes) 
    {
        int maxWidth = 0;
        int maxHeight = 0;
        
        for (int i=0; i < sizes.GetLength(0); i++)
        {
            int width = Math.Max(sizes[i,0], sizes[i,1]);
            int height = Math.Min(sizes[i,0], sizes[i,1]);
            
            if (maxWidth <width)
                maxWidth = width;
            if(maxHeight < height)
                maxHeight = height;
        }
        return maxWidth * maxHeight;
    }
}",,2023. 9. 7,34,2
2023. 9. 7 오전 9:23:48,노재우,Unity,34 - 최소직사각형,"using System;

public class Solution
{
    public int solution(int[,] sizes)
    {
        int maxX = 0;
        int maxY = 0;

        for (int i = 0; i < sizes.GetLength(0); i++)
        {
            int temp;
            if (sizes[i, 0] < sizes[i, 1])
            {
                temp = sizes[i, 0];
                sizes[i, 0] = sizes[i, 1];
                sizes[i, 1] = temp;
            }

            if (sizes[i, 0] > maxX)
            {
                maxX = sizes[i, 0];
            }
            if (sizes[i, 1] > maxY)
            {
                maxY = sizes[i, 1];
            }
        }
        int answer = maxX * maxY;
        return answer;
    }
}",,2023. 9. 7,34,2
2023. 9. 7 오전 9:23:54,김진환,Unity,40 - 가장 가까운 같은 글자,"public static int[] solution(string s)
        {
            int[] answer = new int[s.Length];
            Dictionary<char, int> numIndex = new Dictionary<char, int>();

            for(int i = 0; i < s.Length; i++)
            {
                char c = s[i];

                if(numIndex.ContainsKey(c))
                {
                    answer[i] = i - numIndex[c];
                    numIndex[c] = i;
                }
                else
                {
                    answer[i] = -1;
                    numIndex[c] = i;
                }
            }


            return answer;
        }",https://github.com/NewRound/AlgorithmKata.git,2023. 9. 7,40,2
2023. 9. 7 오전 9:24:31,조병우,Unity,14 - 서울에서 김서방 찾기,"using System;

public class Solution {
    public string solution(string[] seoul) {
        string answer = """";
        
         answer = new string($""김서방은 {Array.IndexOf(seoul, ""Kim"")}에 있다"");
        
        return answer;
    }
}",,2023. 9. 7,14,1
2023. 9. 7 오전 9:24:35,김경원,Unity,55 - 문자열 나누기,"using System;
 
public class Solution {
    public int solution(string s) {
         int answer = 0;
 
            int same = 0;           // 같은 문자 개수
            int diffeerent = 0;     // 다른 문자 개수
 
            int cnt = 0;
            char comp = 'a';
            while (cnt < s.Length)
            {
                if (cnt == s.Length - 1) { answer++; cnt++; continue; }
                if (same == 0 && diffeerent == 0) 
                {
                    comp = s[cnt];
                    same++;
                    cnt++;
                    continue;
                }
 
                if (comp == s[cnt]) same++;
                else diffeerent++;
 
                if (same == diffeerent)
                {
                    same = 0;
                    diffeerent = 0;
                    answer++;
                }
 
                cnt++;
            }
 
            return answer;
    }
}
",,2023. 9. 7,55,3
2023. 9. 7 오전 9:25:10,김민석,Unity,17 - 핸드폰 번호 가리기,"public class Solution 
{
    public string solution(string phone_number) 
    {
        string answer = """";
        for (int i = 0; i < phone_number.Length; i++)
        {
            if (i < phone_number.Length -4)
            {
                answer += ""*"";
            }
            else 
            {
                answer += phone_number[i];
            }
        }
        return answer;
    }
}",https://github.com/ms0753/codekata/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12948.%E2%80%85%ED%95%B8%EB%93%9C%ED%8F%B0%E2%80%85%EB%B2%88%ED%98%B8%E2%80%85%EA%B0%80%EB%A6%AC%EA%B8%B0/%ED%95%B8%EB%93%9C%ED%8F%B0%E2%80%85%EB%B2%88%ED%98%B8%E2%80%85%EA%B0%80%EB%A6%AC%EA%B8%B0.cs,2023. 9. 7,17,1
2023. 9. 7 오전 9:26:00,김진성,Unity,23 - 약수의 개수와 덧셈,"public int solution(int left, int right)
        {
            int answer = 0;

            for (int i = left; i <= right; i++)
            {
                int aliquotCount = 0;
                if ((float)Math.Sqrt(i) % 1f == 0f)
                {
                    aliquotCount++;
                }
                for (int j = 1; j < Math.Sqrt(i); j++)
                {
                    if (i % j == 0)
                    {
                        aliquotCount += 2;
                    }
                }
                if (aliquotCount % 2 == 0)
                {
                    answer += i;
                }
                else
                {
                    answer -= i;
                }
            }
            return answer;
        }",https://github.com/GYALLERHORN/ALGORITHM,2023. 9. 7,23,1
2023. 9. 7 오전 9:26:11,김강현,Unity,21 - 수박수박수박수박수박수?,"public class Solution {
    public string solution(int n) 
    {
          string answer = """";
        for(int i = 0 ; i < n ; i++)
        {
            if(i ==0)
            {
                answer += ""수"";
            }
            else if(answer[i-1]=='수')
            {
                answer += ""박"";
            }
            else if(answer[i-1]=='박')
            {
                answer += ""수"";
            }
        }
      
        return answer;
    }
}",,2023. 9. 7,21,1
2023. 9. 7 오전 9:28:08,박도현,Unity,13 - 콜라츠 추측,"public class Solution {
    public int solution(int num) {
        int answer = 0;
        int divide = num;
        while(divide != 1)
        {
            if(answer == 200)
            {return -1; break; }
            if(divide % 2 == 0)
            {
                divide = divide / 2;
            }else{
                divide = (divide *3)+1;
            }
            answer++;
        }
        return answer;
    }
}",,2023. 9. 7,13,1
2023. 9. 7 오전 9:28:10,이홍준,Unity,40 - 가장 가까운 같은 글자,"using System;

public class Solution {
    public int[] solution(string s) {
        int[] answer = new int[s.Length];
        int x = 0;
        
        for (int i = 0; i < s.Length; i++)
        {
            x = -1;
            for (int j = i - 1; j >= 0; j--)
            {
                if(s[i] == s[j])
                {
                    x = i - j;
                    break;
                }
            }
            answer[i] = x;
        }
        return answer;
    }
}",https://github.com/dlghdwns97/Study/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/unrated/142086.%E2%80%85%EA%B0%80%EC%9E%A5%E2%80%85%EA%B0%80%EA%B9%8C%EC%9A%B4%E2%80%85%EA%B0%99%EC%9D%80%E2%80%85%EA%B8%80%EC%9E%90,2023. 9. 7,40,2
2023. 9. 7 오전 9:28:14,문현우,Unity,24 - 문자열 내림차순으로 배치하기,"using System;
public class Solution {
    public string solution(string s) {
        char[] charArray = s.ToCharArray();
        Array.Sort(charArray);
        Array.Reverse(charArray);
        string answer = new string(charArray);
        return answer;
    }
}",https://github.com/Munch310/Algorithm-Csharp/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12917.%E2%80%85%EB%AC%B8%EC%9E%90%EC%97%B4%E2%80%85%EB%82%B4%EB%A6%BC%EC%B0%A8%EC%88%9C%EC%9C%BC%EB%A1%9C%E2%80%85%EB%B0%B0%EC%B9%98%ED%95%98%EA%B8%B0,2023. 9. 7,24,1
2023. 9. 7 오전 9:28:53,김호연,Unity,32 - 삼총사,"using System;

public class Solution {
    public int solution(int[] number) {
        int answer = 0;
        // 방법의 수 리턴 -> answer++
        // 1. 배열의 요소를 3개씩 더해봄
        // 2. 그 중 0이 되는 경우의 수를 세서 리턴
        int len = number.Length;
        
        for(int i = 0; i < len; i++)
        {
            for(int j = i + 1; j < len; j++)
            {
                for(int k = j + 1; k < len; k++)
                {
                    int sum = number[i] + number[j] + number[k];
                    if(sum == 0)
                    {
                        answer++;
                    }
                }
                
            }
        }
        return answer;
    }
}",,2023. 9. 7,32,2
2023. 9. 7 오전 9:29:19,김강현,Unity,22 - 내적,"using System;

public class Solution {
    public int solution(int[] a, int[] b) 
    {
         int answer = 0;
        for(int i = 0 ; i < a.Length ; i++)
        {
            answer += a[i]*b[i];
        }
       
        return answer;
    }
}",,2023. 9. 7,22,1
2023. 9. 7 오전 9:29:40,이소이,Unity,40 - 가장 가까운 같은 글자,"using System;

public class Solution {
    public int[] solution(string s) {
        int[] answer = new int[s.Length];
        for (int i = 0; i < s.Length; i++)
        {
            int j = i - 1;
            for (j = i - 1; j >= -1; j--)
            {
                if (j == -1)
                    break;
                if (s[j] == s[i])
                    break;
            }
            answer[i] = (j == -1) ? -1 : i - j;
        }
        return answer;
    }
}",https://github.com/leesy015599/AlgorithmCodeKata/blob/master/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/unrated/142086.%E2%80%85%EA%B0%80%EC%9E%A5%E2%80%85%EA%B0%80%EA%B9%8C%EC%9A%B4%E2%80%85%EA%B0%99%EC%9D%80%E2%80%85%EA%B8%80%EC%9E%90/%EA%B0%80%EC%9E%A5%E2%80%85%EA%B0%80%EA%B9%8C%EC%9A%B4%E2%80%85%EA%B0%99%EC%9D%80%E2%80%85%EA%B8%80%EC%9E%90.cs,2023. 9. 7,40,2
2023. 9. 7 오전 9:30:25,이정환,Unity,35 - 시저 암호,"using System;

public class Solution {
     public string solution(string s, int n)
        {
            char[] answer = new char[s.Length];
            int a = (int)'a';
            int z = (int)'z';
            int Z = (int)'Z';
            for (int index=0; index<s.Length; index++)
            {
                if (Char.IsLetter(s[index]) && s[index] != ' ')
                {
                    int code = s[index];
                    if(code >= a)
                    {
                        if (code + n - z > 0)
                        {
                            answer[index] = (char)(code + n - 26);
                        }
                        else
                        {
                            answer[index] = (char)(code + n);
                        }
                    }
                    else
                    {
                        if (code + n - Z > 0)
                        {
                            answer[index] = (char)(code + n - 26);
                        }
                        else
                        {
                            answer[index] = (char)(code + n);
                        }
                    }
                }
                 else
                {
                    answer[index] = s[index]; 
                }
            }
            string result = string.Concat(answer);
            return result;
        }
}",,2023. 9. 7,35,2
2023. 9. 7 오전 9:31:21,우민규,Unity,27 - 행렬의 덧셈,"using System;

public class Solution {
    public int[,] solution(int[,] arr1, int[,] arr2) {
        
        //행과 열의 크기가 arr1, arr2 동일하다고 했으므로 arr1으로 answer[,] 길이를 설정한다.
        int[,] answer = new int[arr1.GetLength(0),arr1.GetLength(1)];
        
        // 2차원 배열이므로 for 두개가 필요하다.
        // 배열 번호 & 값이 필요한데 배열이 두개이므로
        
        //2차원 배열은 길이를 가져올 때 번호를 지정해줘야 한다.
        //arr1.GetLength(가져올 배열 번호)
        
        //흐름 : 0번 배열 * 1번 배열의 길이만큼 반복 -> answer 2차원 배열의 각각 [x,y]에 맞는 arr1+arr2의 값을 넣어줌
        //2차원 배열이라는 개념을 잡아두고 가는 단계같음
        //문제를 풀어보니 훨씬 이해가 잘감
        
             
        for (int i = 0; i < arr1.GetLength(0); i++)
            {
                for (int j = 0; j < arr1.GetLength(1); j++)
                {
                    answer[i, j] = arr1[i, j] + arr2[i, j];
                }
            }
        return answer;
    }
}",https://github.com/Woomingyu/Programmers/tree/main,2023. 9. 7,27,1
2023. 9. 7 오전 9:31:25,김예준,Unity,55 - 문자열 나누기,"using System;

public class Solution {
    public int solution(string s) {
        int answer = 0;
        
        if (s.Length == 1) return 1;
        
        int xCnt = 0;
        int yCnt = 0;
        
        char tmp = s[0];
        xCnt++;
        
        for (int i = 1; i < s.Length; i++)
        {
            if (tmp == s[i]) xCnt++;
            else yCnt++;
            
            if (xCnt == yCnt)
            {
                answer++;
                xCnt = 0;
                yCnt = 0;
                if (i < s.Length - 1) tmp = s[i + 1];
            }
            
            if (xCnt != yCnt && i == s.Length - 1) answer++;
        }
        
        return answer;
    }
}",,2023. 9. 7,55,3
2023. 9. 7 오전 9:31:40,차명경,AI,27 - 행렬의 덧셈,"def solution(arr1, arr2):
    for i in range(len(arr1)):  
        for j in range(len(arr1[i])): 
            arr1[i][j] += arr2[i][j]
    return arr1
       ",,2023. 9. 7,27,1
2023. 9. 7 오전 9:31:48,이경현,Unity,38 - K번째수정렬,"public int[] solution(int[] array, int[,] commands)
{
    int[] answer = new int[commands.GetLength(0)];

    int[] tmp;
    int startIndex, endIndex, length; 

    for(int i = 0; i < commands.GetLength(0); i++)
    {
        startIndex = commands[i, 0] - 1;
        endIndex = commands[i, 1] - 1;
        length = commands[i, 1] - commands[i, 0]+1;

        tmp = new int[length];

        Array.Copy(array, startIndex, tmp, 0, length);
        Array.Sort(tmp);

        answer[i] = tmp[commands[i, 2]-1];
    }


    return answer;
}",https://github.com/516lkh/Algorithm,2023. 9. 7,38,2
2023. 9. 7 오전 9:32:04,이선재,Unity,57 - 둘만의 암호,"#include <string>
#include <vector>
#include <map>

using namespace std;

string solution(string s, string skip, int index) {
    map<char, int> skips;
    
    for(int i = 0; i < skip.length(); i++){
        skips[skip[i]] += 1;
    }
    
    for(int i = 0; i < s.length(); i++){
        for(int j = 0; j < index; j++){
            s[i] += 1;
            
            if(s[i] > 'z'){
                s[i] -= 26;
            }
            
            while(true){
                if(skips.count(s[i]) > 0){
                    s[i] += 1;
                    
                    if(s[i] > 'z'){
                        s[i] -= 26;
                    }
                }
                else
                    break;
            }
        }
    }
    
    return s;
}",https://github.com/Lyrwhitt/Algorithm/blob/main/Programmers/LEVEL1/%EB%91%98%EB%A7%8C%EC%9D%98%20%EC%95%94%ED%98%B8,2023. 9. 7,57,3
2023. 9. 7 오전 9:32:28,곽민규,Unity,11 - 하샤드 수,"public class Solution {
    public bool solution(int x) {
        bool answer = true;
        int sum = 0;
        int num = x;
        
        while (num > 0) {
            sum += num % 10;
            num /= 10;
        }
        
        if (x % sum != 0) {
        	answer = false;
        }
        return answer;
    }
}",,2023. 9. 7,11,1
2023. 9. 7 오전 9:32:41,박민호,Unity,42 - 콜라 문제,"using System;

public class Solution {
    public int solution(int a, int b, int n) {
        int answer = (n/a)*b;
        int coke = ((n/a)*b)+(n%a);
        int emptyCoke = 0;
        while(coke>=a){
            emptyCoke = coke%a;
            coke =(coke/a)*b;          
            answer+=coke;
            coke+=emptyCoke;
        }     
        return answer;
    }
}",,2023. 9. 7,42,2
2023. 9. 7 오전 9:33:11,김도현B,Unity,45 - 카드 뭉치,"using System;
using System.Collections.Generic;
using System.Linq;
public class Solution {
    public string solution(string[] cards1, string[] cards2, string[] goal) {
        List<string> cards1List = new List<string>(cards1.ToList());
        List<string> cards2List = new List<string>(cards2.ToList());
        cards1List.Add(""0"");
        cards2List.Add(""0"");
        int result = 0;
        for(int i = 0; i <goal.Length; i++)
        {
            if (cards1List[0] == goal[i])
            {
                result++;
                cards1List.Remove(goal[i]);
            }
            else if (cards2List[0] == goal[i])
            {
                result++;
                cards2List.Remove(goal[i]);
            }
            else
            {
                break;
            }
        }
        return result == goal.Length ? ""Yes"" : ""No"";
    }
}",https://github.com/subscriptioncat/Algorithm,2023. 9. 7,45,2
2023. 9. 7 오전 9:34:11,이승연,Unity,20 - 가운데 글자 가져오기,"public class Solution {
    public string solution(string s) {
        string answer = """";
        
        if(s.Length%2==0)
        {
            answer+=s[s.Length/2-1];
            answer+=s[s.Length/2];
        }       
        else
            answer+=s[s.Length/2];
        
        return answer;
    }
}",,2023. 9. 7,20,1
2023. 9. 7 오전 9:35:08,신현주,Unity,38 - K번째수정렬,"using System;

public class Solution {
    public int[] solution(int[] array, int[,] commands) 
    {
        int[] answer = new int[commands.GetLongLength(0)];
        
        for(int n = 0; n < commands.GetLongLength(0); n++)
        {
            int i = commands[n, 0];
            int j = commands[n, 1];
            int k = commands[n, 2];
            
            int[] temp = new int[j - i + 1];
            
            for(int a = 0; a<temp.Length; a++)
            {
                temp[a] = array[a+i-1];
            }
            Array.Sort(temp);
            
            answer[n] = temp[k-1];
        }
        return answer;
    }
   
}",https://github.com/Shyunju/codeKata,2023. 9. 7,38,2
2023. 9. 7 오전 9:35:09,차요한,Unity,41 - 푸드 파이트 대회,"using System;
using System.Collections.Generic;

public class Solution {
    public string solution(int[] food) {
        string answer = """";
        List<int> list = new List<int>();
        
        for(int i=1; i< food.Length ; i++)
        {
            for(int j = 0 ; j<(food[i]/2); j++)
            {
                list.Add(i);
            }
        }
        list.Add(0);
        
        for(int i=food.Length-1; i >= 1 ; i--)
        {
            for(int j = 0 ; j<(food[i]/2); j++)
            {
                list.Add(i);
            }
        }
        answer=String.Join("""",list.ToArray());
        return answer;
    }
}",https://github.com/HOHOJO/Algorithm_test,2023. 9. 7,41,2
2023. 9. 7 오전 9:35:39,명세인,AI,32 - 삼총사,"from itertools import permutations, combinations


def solution(number):
    answer = 0
    num_list = list(combinations(number, 3))
    
    for a in num_list:
        a = list(a)
        if sum(a) == 0:
            answer += 1
            
    
    return answer",https://github.com/playersein/Coding_Test/commit/a17844e337a25adc04c9817655886ec7fcb24443,2023. 9. 7,32,2
2023. 9. 7 오전 9:35:48,김현우,AI,45 - 카드 뭉치,"function solution(cards1, cards2, goal) {

    for(const val of goal) {
        if(val === cards1[0]) {
            cards1.shift();
        } else if(val === cards2[0]) {
            cards2.shift();
        } else {
            return ""No"";
        }
    }
        return ""Yes""
}
",,2023. 9. 7,45,2
2023. 9. 7 오전 9:36:20,신우석,Unity,61 - 개인정보 수집 유효기간,"using System;
using System.Collections.Generic;

public class Solution {
    public int[] solution(string today, string[] terms, string[] privacies) {
        int[] todays = Array.ConvertAll(today.Split('.'), int.Parse);
        Dictionary<char, int> termDict = new Dictionary<char, int>();
        
        // Convert String Array into Dictionary
        foreach(string s in terms) {
            string[] t = s.Split("" "");
            termDict.Add(t[0][0], Convert.ToInt32(t[1]));
        }
        
        List<int> answer = new List<int>();
        for (int i = 0; i < privacies.Length; ++i) {
            string[] p = privacies[i].Split(' ');
            int[] d = Array.ConvertAll(p[0].Split('.'), int.Parse);
            if ((todays[0] - 2000) * 12 * 28 + todays[1] * 28 + todays[2]
                >= (d[0] - 2000) * 12 * 28 + d[1] * 28 + d[2] + termDict[p[1][0]] * 28) answer.Add(i + 1);
        }
        
        return answer.ToArray();
    }
}",https://github.com/seoksii/AlgorithmCodeKata/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/unrated/150370.%E2%80%85%EA%B0%9C%EC%9D%B8%EC%A0%95%EB%B3%B4%E2%80%85%EC%88%98%EC%A7%91%E2%80%85%EC%9C%A0%ED%9A%A8%EA%B8%B0%EA%B0%84,2023. 9. 7,61,3
2023. 9. 7 오전 9:36:54,양수홍,AI,51 - 로또의 최고 순위와 최저 순위,"def solution(lottos, win_nums):
    answer = []
    num_of_zeros=0
    num_of_diff=0
    for lotto in lottos:
        if lotto==0:
            num_of_zeros+=1
        if lotto not in win_nums:
            num_of_diff+=1
    if num_of_diff-num_of_zeros>4:
        answer.append(6)
    else:
        answer.append(1+(num_of_diff-num_of_zeros))
    if num_of_diff>4:
        answer.append(6)
    else:
        answer.append(1+num_of_diff)
        
    return answer",,2023. 9. 7,51,2
2023. 9. 7 오전 9:36:54,함영주,Unity,17 - 핸드폰 번호 가리기,"public class Solution {
    public string solution(string phone_number) {
        string answer = """";
       for (int i = 0; i < phone_number.Length; i++)
            {
                if (i < phone_number.Length-4)
                {
                    answer += ""*"";
                }
                else
                {
                    answer += phone_number[i];
                }
            }

            return answer;
        return answer;
    }
}",,2023. 9. 7,17,1
2023. 9. 7 오전 9:39:01,김광수,Unity,74 - 괄호 회전하기,"using System;
using System.Collections.Generic;

public class Solution {
    // x칸 왼쪽으로 밀었을때 괄호문자열이 올바른가?
    
    // 왼쪽 괄호면 stack 에넣고
    // 오른쪽 괄호면 stack의 Peek 을 확인
    public int solution(string s) 
    {
        int answer = 0;
        
        for(int i =0; i< s.Length; i++)
        {
            answer += PushString(s,i) ? 1 : 0;
        }
        
        return answer;
    }
    
    public bool PushString(string s, int i)
    {
        string str = s.Substring(i, s.Length-i) + s.Substring(0, i);
        Stack<char> _stack = new Stack<char>();
        
        foreach(char c in str)
        {
            if (LeftString(c))
            {
                _stack.Push(c);
            }
            else if (_stack.Count != 0 && MatchString(_stack.Peek(), c))
            {
                _stack.Pop();
            }
            else
            {
                return false;
            }
            
        }
        
        // 남아있으면 올바르지않음
        
        
        return _stack.Count > 0 ? false :true;        
    }
    
    public bool LeftString(char a)
    {
        switch(a)
        {
            case '{':
                return true;
            case '[':
                return true;
            case '(':
                return true;
            default :
                return false;    
        }
        
    }
    
    public bool MatchString(char a, char b)
    {
        switch(a)
        {
            case '{':
                return b == '}' ? true : false;
            case '[':
                return b == ']' ? true : false;
            case '(':
                return b == ')' ? true : false;
            default :
                return false;    
        }
    }
}",https://github.com/kksoo0131/Study/commit/26ccb483bc039cc97b8c4b88d4ccb0ae91dbea4f,2023. 9. 7,74,3
2023. 9. 7 오전 9:39:39,박준규,Unity,32 - 삼총사,"using System;

public class Solution 
{
    public int solution(int[] number) 
    {
        int answer = 0;
        for(int i = 0; i< number.Length ;i++){
            int first = i+1;
            for(int j =first; j<number.Length;j++){
                int second= j+1;
                for(int k = second; k<number.Length; k++){
                    int thrid = k;
                    if(number[i]+number[j]+number[k] == 0)
                        answer++;
                }
            }
        }
        return answer;
    }
}",,2023. 9. 7,32,2
2023. 9. 7 오전 9:41:07,최장범,Unity,35 - 시저 암호,"public class Solution {
    public string solution(string s, int n) {

                string answer = """";
                char[] temp = s.ToCharArray();
                for(int i = 0; i < s.Length; ++i)
                {
                    if ( (temp[i] >= 'a' && temp[i] <= 'z')|| (temp[i] >= 'A' && temp[i] <= 'Z'))
                    {
                        if (char.IsUpper(temp[i]))
                        {
                            temp[i] = (char)((temp[i] + n - 'A') % 26 + 'A');
                        }
                        else
                        {
                            temp[i] = (char)((temp[i] + n - 'a') % 26 + 'a');
                        }
                    }
                }
                return new string(temp);
    }
}",,2023. 9. 7,35,2
2023. 9. 7 오전 9:41:48,신해준,Unity,30 - 3진법 뒤집기,"using System;

public class Solution
{
    public int solution(int n)
    {
        string ternary = ToTernary(n); // 주어진 숫자를 3진법으로 변환
        string reversedTernary = ReverseString(ternary); // 3진법 문자열을 뒤집음
        int decimalResult = ToDecimal(reversedTernary); // 10진법으로 변환
        
        return decimalResult;
    }
    
    // 10진법을 3진법 문자열로 변환하는 함수
    private string ToTernary(int n)
    {
        
        string result = """";
        while (n > 0)
        {
            int remainder = n % 3;
            result = remainder + result;
            n /= 3;
        }

        return result;
    }

    // 문자열을 뒤집는 함수
    private string ReverseString(string s)
    {
        char[] charArray = s.ToCharArray();
        Array.Reverse(charArray);
        return new string(charArray);
    }

    // 3진법 문자열을 10진법으로 변환하는 함수
    private int ToDecimal(string s)
    {
        int result = 0;
        int multiplier = 1;
        
        for (int i = s.Length - 1; i >= 0; i--)
        {
            int digit = int.Parse(s[i].ToString());
            result += digit * multiplier;
            multiplier *= 3;
        }

        return result;
    }
}",,2023. 9. 7,30,1
2023. 9. 7 오전 9:42:17,손병의,Unity,22 - 내적,https://school.programmers.co.kr/learn/courses/30/lessons/70128,,2023. 9. 7,22,1
2023. 9. 7 오전 9:42:25,이형빈,Unity,16 - 음양 더하기,"using System;

public class Solution {
    public int solution(int[] absolutes, bool[] signs) 
    {
        int answer = 0;
        
        for(int i = 0; i<absolutes.Length; i++)
        {
            if(signs[i]==true)
            {
                answer += absolutes[i];
                
            }    
            else 
            {
                answer -= absolutes[i];
                
            }
            
        }
        return answer;
    }
}",,2023. 9. 7,16,1
2023. 9. 7 오전 9:42:25,최지연,AI,29 - 최대공약수와 최소공배수,"def solution(n, m):
    list1 = []
    list2 = []
    answer = []
    for i in range(min(n,m), 0, -1):
        if n % i == 0 and m % i ==0:
            list1.append(i)
    for i in range(max(n,m), (n*m)+1):
        if i % n == 0 and i % m == 0:
            list2.append(i)
    answer.append(list1[0])
    answer.append(list2[0])
    return answer",https://github.com/jiyeonCoder/algorithmPractice/blob/main/29.%20%EC%B5%9C%EB%8C%80%EA%B3%B5%EC%95%BD%EC%88%98%EC%99%80%20%EC%B5%9C%EC%86%8C%EA%B3%B5%EB%B0%B0%EC%88%98.py,2023. 9. 7,29,1
2023. 9. 7 오전 9:43:30,우민규,Unity,28 - 직사각형 별찍기,"using System;

public class Example
{
    public static void Main()
    {
        String[] s;

        Console.Clear();
        s = Console.ReadLine().Split(' ');

        int a = Int32.Parse(s[0]);
        int b = Int32.Parse(s[1]);
        
        for(int i = 0; i < b; i++)
        {
            for(int j = 0; j < a; j++)
            {
                Console.Write(""*"");
            }
            Console.WriteLine("" "");
        }

    }
}",https://github.com/Woomingyu/Programmers.git,2023. 9. 7,28,1
2023. 9. 7 오전 9:43:37,차요한,Unity,42 - 콜라 문제,"using System;

public class Solution {
    public int solution(int a, int b, int n) {
        int answer = 0;
        while(n > a - 1)
        {
            answer += (n / a) * b;
            n = (n / a) * b + n % a;
        }
        return answer;
    }
}",https://github.com/HOHOJO/Algorithm_test,2023. 9. 7,42,2
2023. 9. 7 오전 9:43:45,이승연,Unity,21 - 수박수박수박수박수박수?,"public class Solution {
    public string solution(int n) {
        string answer = """";
        
        for(int i=0;i<n;i++)
        {
            if(i%2==0)
            {
                answer+=""수"";
            }
            else
                answer+=""박"";
        }
        
        
        return answer;
    }
}",,2023. 9. 7,21,1
2023. 9. 7 오전 9:44:17,이기호,AI,29 - 최대공약수와 최소공배수,"def solution(n, m):    
    for i in range(min(n, m), 0, -1):
        if n % i == 0 and m % i == 0:
            break

    for i2 in range(max(n, m), n*m+1):
        if i2 % n == 0 and i2 % m == 0:
            break
    
    answer=[i,i2]
    
    return answer",,2023. 9. 7,29,1
2023. 9. 7 오전 9:44:18,장성림,Unity,47 - 모의고사완전탐색,"using System;
using System.Collections.Generic;
public class Solution {
    public int[] solution(int[] answers) {
        int[] answer = new int[] {};
        List<int> list = new List<int>();
        int[] loserOne = {1, 2, 3, 4, 5};
        int[] loserTwo = {2, 1, 2, 3, 2, 4, 2, 5};
        int[] loserThree = {3, 3, 1, 1, 2, 2, 4, 4, 5, 5};
        int lOne = 0;
        int lTwo = 0;
        int lThree = 0;
        for(int i = 0; i < answers.Length; i++){
            if(loserOne[i % loserOne.Length] == answers[i])
                lOne++;
            if(loserTwo[i % loserTwo.Length] == answers[i])
                lTwo++;
            if(loserThree[i % loserThree.Length] == answers[i])
                lThree++;
        }
        if(lOne >= lTwo && lOne >= lThree)
            list.Add(1);
        if(lTwo >= lOne && lTwo >= lThree)
            list.Add(2);
        if(lThree >= lOne && lThree >= lTwo)
            list.Add(3);
        answer = list.ToArray();
        return answer;
    }
    
}",https://github.com/hoobhoob,2023. 9. 7,47,2
2023. 9. 7 오전 9:44:18,노재우,Unity,35 - 시저 암호,"public class Solution
{
    public string solution(string s, int n)
    {
        char[] chars = s.ToCharArray();
        int temp;
        for (int i = 0; i < chars.Length; i++)
        {

            temp = ((int)chars[i]) + n;
            if (chars[i] < 'a' && chars[i] >= 'A')
            {
                if (temp > 'Z')
                {
                    temp += -'Z' + 'A' - 1;
                }

            }
            else if (chars[i] >= 'a' && chars[i] <= 'z')
            {
                if (temp > (int)'z')
                {
                    temp += -(int)'z' + (int)'a' - 1;
                }
            }

            if (chars[i] >= 'A' && chars[i] <= 'z')
            {
                chars[i] = (char)temp;
            }

        }

        string answer = new string(chars);
        return answer;
    }
}",,2023. 9. 7,35,2
2023. 9. 7 오전 9:44:33,조범준,Unity,42 - 콜라 문제,"using System;

public class Solution {
    public int solution(int a, int b, int n) {
        int answer = 0;
        int temp = 0;
        while((n + temp)>=a){
            if(n >= a){
                answer += (n / a) * b;
                temp += n % a;
                n = (n / a) * b;
            }else{
                if(temp > 0){
                    n += temp;
                    temp = 0;
                }
            }
        }
        return answer;
    }
}",https://github.com/KimMaYa1/BaekJoonEx,2023. 9. 7,42,2
2023. 9. 7 오전 9:44:47,최장범,Unity,36 - 숫자 문자열과 영단어,"using System;

public class Solution {
    public int solution(string s) {
        int answer = 0;
        
        //string.Replace(""해당 문자열을"", ""해당 문자열로"");
        s = s.Replace(""zero"", ""0"");
        s = s.Replace(""one"", ""1"");
        s = s.Replace(""two"", ""2"");
        s = s.Replace(""three"", ""3"");
        s = s.Replace(""four"", ""4"");
        s = s.Replace(""five"", ""5"");
        s = s.Replace(""six"", ""6"");
        s = s.Replace(""seven"", ""7"");
        s = s.Replace(""eight"", ""8"");
        s = s.Replace(""nine"", ""9"");

        int k;
        bool strToInt = int.TryParse(s, out k);     
        if(strToInt) answer = k;                    
        
        return answer;                              
    }
}",,2023. 9. 7,36,2
2023. 9. 7 오전 9:46:28,문현우,Unity,25 - 부족한 금액 계산하기,"using System;

class Solution
{
    public long solution(int price, int money, int count)
    {
        long ret = (long)price * count * (count+1)/2;
        ret -= money;
        return ret < 0 ? 0 : ret;
    }
}",https://github.com/Munch310/Algorithm-Csharp/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/82612.%E2%80%85%EB%B6%80%EC%A1%B1%ED%95%9C%E2%80%85%EA%B8%88%EC%95%A1%E2%80%85%EA%B3%84%EC%82%B0%ED%95%98%EA%B8%B0,2023. 9. 7,25,1
2023. 9. 7 오전 9:46:32,진우성,Unity,11 - 하샤드 수,"using System;
public class Solution 
{
    public bool solution(int x) 
    {
        bool answer = true;
        string temp = x.ToString();
        int sum = 0;
        for(int i = 0; i < temp.Length; i++)
        {
            sum += int.Parse(temp[i].ToString());
        }
        if(x % sum == 0)
        {
            answer = true;
        }
        else
        {
            answer = false;
        }
        return answer;
    }
}",,2023. 9. 7,11,1
2023. 9. 7 오전 9:47:41,김진규,Unity,47 - 모의고사완전탐색,"using System;
using System.Collections.Generic;
using System.Linq;

public class Solution {
    public int[] solution(int[] answers) {
       List<int> answer = new List<int>();
       int[] pattern1 = { 1, 2, 3, 4, 5 };
       int[] pattern2 = { 2, 1, 2, 3, 2, 4, 2, 5 };
       int[] pattern3 = { 3, 3, 1, 1, 2, 2, 4, 4, 5, 5 };
        
       int[] scores = new int[3];
        
       for (int i = 0; i < answers.Length; i++) {
           if (answers[i] == pattern1[i % pattern1.Length]) {
               scores[0]++;
           }
           if (answers[i] == pattern2[i % pattern2.Length]) {
               scores[1]++;
           }
           if (answers[i] == pattern3[i % pattern3.Length]) {
               scores[2]++;
           }
        }

        int maxScore = scores.Max();
        for (int i = 0; i < 3; i++) {
            if (scores[i] == maxScore) {
                answer.Add(i + 1);
            }
        }

        return answer.ToArray();;
    }
}",,2023. 9. 7,47,2
2023. 9. 7 오전 9:47:41,이승연,Unity,22 - 내적,"using System;

public class Solution {
    public int solution(int[] a, int[] b) {
        int answer = 0;
        
        for(int i=0;i<a.Length;i++)
        {
            answer+=a[i]*b[i];
            
        }
        
        
        
        return answer;
    }
}",,2023. 9. 7,22,1
2023. 9. 7 오전 9:48:18,장현교,Unity,17 - 핸드폰 번호 가리기,"public class Solution
{
    public string solution(string phone_number)
    {
        string answer = phone_number.Substring(phone_number.Length - 4);
        for (int i = 0; i < phone_number.Length - 4; i++)
        {
            answer = answer.Insert(0, ""*"");
        }
        return answer;
    }
}",,2023. 9. 7,17,1
2023. 9. 7 오전 9:48:52,정재훈,Unity,23 - 약수의 개수와 덧셈,"using System;

public class Solution {
    public int solution(int left, int right) {
        int answer = 0;
        
     
        for(int i=left; i<=right; i++)
        {
            int count=0;
            
            for(int j=1; j<=i; j++)
            {
                
                if(i%j==0) count++;
            }
            
            if(count%2==0) answer += i;
           
            else answer -= i;
        }
        return answer;
    }
}",https://github.com/toadsam/Algorithm,2023. 9. 7,23,1
2023. 9. 7 오전 9:48:54,김민석,Unity,18 - 없는 숫자 더하기,"using System;

public class Solution {
    public int solution(int[] numbers) {
        int answer = 0;
        
        for (int i = 0; i <= 9; i++)
        {
            answer += i;
        }
        
        for (int i = 0; i<numbers.Length; i++)
        {
            answer -= numbers[i];
        }
        
        return answer;
    }
}",https://github.com/ms0753/codekata/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/86051.%E2%80%85%EC%97%86%EB%8A%94%E2%80%85%EC%88%AB%EC%9E%90%E2%80%85%EB%8D%94%ED%95%98%EA%B8%B0/%EC%97%86%EB%8A%94%E2%80%85%EC%88%AB%EC%9E%90%E2%80%85%EB%8D%94%ED%95%98%EA%B8%B0.cs,2023. 9. 7,18,1
2023. 9. 7 오전 9:49:01,김종훈,Unity,64 - 신고 결과 받기,"using System;
using System.Collections;
using System.Collections.Generic;

public class Solution 
{
    public int[] solution(string[] id_list, string[] report, int k) 
    {
        int[] answer = new int[id_list.Length];

        Dictionary<string, List<string>> dic = new Dictionary<string, List<string>>();

        for (int i = 0; i < report.Length; i++)
        {
            string[] str = report[i].Split(' ');

            string give = str[0];
            string take = str[1];

            if (!dic.ContainsKey(take))
            {
                List<string> list = new List<string>();
                list.Add(give);
                dic.Add(take, list);
                continue;
            }

            if (!dic[take].Contains(give))
            {
                dic[take].Add(give);
            }
        }

        for (int i = 0; i < id_list.Length; i++)
        {
            foreach (KeyValuePair<string, List<string>> item in dic)
            {
                if (item.Value.Contains(id_list[i]))
                {
                    if (item.Value.Count >= k)
                    {
                        answer[i] = ++answer[i];
                    }
                }                
            }
        }

        return answer;
    }
}",,2023. 9. 7,64,3
2023. 9. 7 오전 9:49:24,공혜진,AI,29 - 최대공약수와 최소공배수,"import math

def solution(n, m):
    for i in range(min(n, m), 0, -1):
        if (n % i == 0) and (m % i == 0):
            a = i
            break       
    for j in range(max(n, m), (n * m) + 1):
        if j % n == 0 and j % m == 0:
            b = j
            break
        
    return [a, b]",,2023. 9. 7,29,1
2023. 9. 7 오전 9:49:24,이진형,AI,30 - 3진법 뒤집기,"import math
def solution(n):
    x=math.log(n,3)
    y=math.floor(x)
    z=[0]*(y+1)
    while True:
        n=n-3**(y)
        if n==0:
            z[y]+=1
            break
        else:
            z[y]+=1
            x=math.log(n,3)
            y=math.floor(x)
    answer=0
    for i in range(1,len(z)+1): 
        answer+=3**(len(z)-i)*z[i-1]
        
    return answer",,2023. 9. 7,30,1
2023. 9. 7 오전 9:50:04,신현주,Unity,39 - 두 개 뽑아서 더하기,"using System;
using System.Collections.Generic;

public class Solution {
    public int[] solution(int[] numbers) {
        List<int> result = new List<int>();
        int sum = 0;
        for(int i = 0; i < numbers.Length-1; i++){
            for(int j = i + 1; j < numbers.Length; j++){
                sum = numbers[i] + numbers[j];
                if(!result.Contains(sum)){
                    result.Add(sum);
                }
            }
        }
        result.Sort();
        int[] answer = result.ToArray();
        return answer;
    }
}",https://github.com/Shyunju/codeKata,2023. 9. 7,39,2
2023. 9. 7 오전 9:50:20,김종훈,Unity,65 - 최댓값과 최솟값,"using System.Linq;

public class Solution {
    public string solution(string s) {        
        int[] temp = s.Split(' ').Select(int.Parse).ToArray();
        string answer = temp.Min().ToString() + "" "" + temp.Max().ToString();
        return answer;
    }
}",,2023. 9. 7,65,3
2023. 9. 7 오전 9:50:31,박준규,Unity,31 - 이상한 문자 만들기,"using System;

public class Solution 
{
    public string solution(string s) 
    {
        string answer = """";
            int count = 0;
        //ToUpper(), ToLower()
        for (int i = 0; i < s.Length; i++)
        {
            char temp = s[i];
            if(Char.IsWhiteSpace(temp)){
                answer += "" "";
                count = 0;
                continue;
            }
            if (count % 2 == 0)
            {
                answer += Char.ToUpper(temp);
                count++;
            }
            else
            {
                answer += Char.ToLower(temp);
                count++;
            }
        }
        return answer;
    }
}",,2023. 9. 7,31,2
2023. 9. 7 오전 9:50:37,노재우,Unity,36 - 숫자 문자열과 영단어,"using System;
using System.Text;

public class Solution
{
    public int solution(string s)
    {
        StringBuilder sb = new StringBuilder(s);

        sb.Replace(""zero"", ""0"");
        sb.Replace(""one"", ""1"");
        sb.Replace(""two"", ""2"");
        sb.Replace(""three"", ""3"");
        sb.Replace(""four"", ""4"");
        sb.Replace(""five"", ""5"");
        sb.Replace(""six"", ""6"");
        sb.Replace(""seven"", ""7"");
        sb.Replace(""eight"", ""8"");
        sb.Replace(""nine"", ""9"");

        int answer = int.Parse(sb.ToString());
        return answer;
    }
}",,2023. 9. 7,36,2
2023. 9. 7 오전 9:50:59,김민상,Unity,63 - 공원 산책,"using System.Collections.Generic;

public class Solution
{
    public int[] solution(string[] park, string[] routes)
    {
        int N = park.Length;
        int M = park[0].Length;

        int x = 0;
        int y = 0;

        for (int i = 0; i < N; i++)
        {
            if (park[i].Contains('S'))
            {
                x = i;
                y = park[i].IndexOf('S');
            }
        }

        Dictionary<char, int> ewsn = new Dictionary<char, int>() { { 'E', 0 }, { 'W', 1 }, { 'S', 2 }, { 'N', 3 } };
        int[,] dir = new int[4, 2] { { 0, 1 }, { 0, -1 }, { 1, 0 }, { -1, 0 } };

        foreach (string route in routes)
        {
            int dx = dir[ewsn[route[0]], 0];
            int dy = dir[ewsn[route[0]], 1];
            
            int nx = x;
            int ny = y;
            
            bool able = true;
            
            for (int i = 0; i < int.Parse(route.Split()[1]); i++)
            {
                nx += dx;
                ny += dy;
                
                if (nx < 0 || nx >= N || ny < 0 || ny >= M || park[nx][ny] == 'X')
                {
                    able = false;
                    break;
                }
            }
            
            if (able)
            {
                x = nx;
                y = ny;
            }
        }

        return new int[] { x, y };
    }
}",,2023. 9. 7,63,3
2023. 9. 7 오전 9:51:15,김종훈,Unity,66 - JadenCase 문자열 만들기,"using System.Text;

public class Solution {
    public string solution(string s) {
        s = s.ToLower(); 
        StringBuilder answer = new StringBuilder();
        char[] temp = s.ToCharArray();
        
        for(int i=0; i<temp.Length; i++)
        {
            temp[0] = System.Char.ToUpper(temp[0]);
            if(temp[i] == ' ' && i+1<temp.Length)
            {
                temp[i+1] = System.Char.ToUpper(temp[i+1]);
            }
        }
       
        for(int i=0; i<temp.Length; i++)
        {
            answer.Append(temp[i]);
        }
            
        
        return answer.ToString();
    }
}",,2023. 9. 7,66,3
2023. 9. 7 오전 9:51:31,정재호,Unity,45 - 카드 뭉치,"using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.Linq;

public class Solution
{
    public string solution(string[] cards1, string[] cards2, string[] goal)
    {
        string answer = """";
        bool isOrdered = true;
        bool ndIsOrdered = true;
        bool goalContained = true;

        int firstIndex = 0;
        int secondIndex = 0;

        int ndFirstIndex = 0;
        int ndSecondIndex = 0;


        foreach (string card in goal)
        {
            if (cards1.Contains(card))
            {
                secondIndex = firstIndex; //1 -> 5
                firstIndex = Array.IndexOf(cards1, card) + 1; //5 -> 3

                if (firstIndex != secondIndex + 1)
                {
                    isOrdered = false;
                    break;
                }
            }

            if (cards2.Contains(card))
            {
                ndSecondIndex = ndFirstIndex; //0 -> 2
                ndFirstIndex = Array.IndexOf(cards2, card) + 1; //2 -> 3

                if (ndFirstIndex != ndSecondIndex + 1)
                {
                    ndIsOrdered = false;
                    break;
                }
            }
        }

        if (!isOrdered || !ndIsOrdered || !goalContained)
        {
            return answer = ""No"";
        }
        else
        {
            return answer = ""Yes"";
        }
    }
}",,2023. 9. 7,45,2
2023. 9. 7 오전 9:51:54,김호연,Unity,33 - 크기가 작은 부분,"using System;

public class Solution {
    public int solution(string t, string p) {
        int answer = 0;
        //t를 p의 자릿수만큼 나눠서 비교한다. -> SubString i부터 p의 길이만큼
        //그 나눈 t가 p보다 작거나 같다면 answer++
        //t는 한 자리씩 올라감.. 어쨌든 형변환하고 비교해야될 듯?
        int pLen = p.Length;
        int tLen = t.Length;
        long pLong = long.Parse(p); // p 형변환 해놓기
        
        for(int i = 0; i < tLen; i++)
        {
            if (i + pLen <= tLen) // 유효한 범위 내에서만 Substring 호출
            {
                string tt = t.Substring(i, pLen);
                long tLong = long.Parse(tt);
                
                if(tLong <= pLong)
                {
                    answer++;
                }
            }
        }
        
        return answer;
    }
}",,2023. 9. 7,33,2
2023. 9. 7 오전 9:51:54,이소이,Unity,41 - 푸드 파이트 대회,"using System;
using System.Collections.Generic;

public class Solution {
    public string solution(int[] food) {
        List<char> answerList = new List<char>();
        
        for (int i = 1; i < food.Length; i++)
        {
            if (food[i] > 1)
            {
                for (int j = 1; j <= food[i] / 2; j++)
                    answerList.Add(($""{i}"")[0]);
            }
        }
        answerList.Add((""0"")[0]);
        for (int i = answerList.Count - 2; i >= 0; i--)
        {
            answerList.Add(answerList[i]);
        }
        return string.Join("""", answerList);
    }
}",https://github.com/leesy015599/AlgorithmCodeKata/blob/master/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/unrated/134240.%E2%80%85%ED%91%B8%EB%93%9C%E2%80%85%ED%8C%8C%EC%9D%B4%ED%8A%B8%E2%80%85%EB%8C%80%ED%9A%8C/%ED%91%B8%EB%93%9C%E2%80%85%ED%8C%8C%EC%9D%B4%ED%8A%B8%E2%80%85%EB%8C%80%ED%9A%8C.cs,2023. 9. 7,41,2
2023. 9. 7 오전 9:52:11,김종훈,Unity,67 - 이진 변환 반복하기,"using System;
using System.Collections.Generic;

public class Solution {
    public int[] solution(string s) {
        int onecount=0;
        int zerocount=0;
        int convertcount=0;
        while(s.Length!=1)
        {
            char[] temp = s.ToCharArray();
            for(int i=0; i<temp.Length; i++)
            {
                if(temp[i]=='1')
                {
                    onecount++;
                }
                else if(temp[i]=='0')
                {
                    zerocount++;
                }
            }
            string bin = Convert.ToString(onecount,2);
            convertcount++;
            s= bin;
            onecount =0;
        }
        int[] answer = new int[]{convertcount,zerocount};
        return answer;
    }
}",,2023. 9. 7,67,3
2023. 9. 7 오전 9:52:33,장성림,Unity,48 - 소수 만들기,"using System;

class Solution
{
    public int solution(int[] nums)
    {
        int answer = 0;
        
        for(int i = 0; i < nums.Length - 2; i++){
            for(int j = i + 1; j < nums.Length - 1; j++){
                for(int k = j + 1; k < nums.Length; k++){
                    int sum = nums[i] + nums[j] + nums[k];
                    int count = 0;
                    for(int t = 2; t < sum; t++){
                        if(sum % t == 0)
                            count++;
                    }
                    if(count == 0)
                        answer++;
                }
            }
        }

        return answer;
    }
}",https://github.com/hoobhoob,2023. 9. 7,48,2
2023. 9. 7 오전 9:52:38,송유섭,Unity,12 - 두 정수 사이의 합,"public class Solution
{
    public long solution(int a, int b)
    {
        long answer = 0;
        
        if( a < b)
        {
            for(int i=a; i<=b; i++)
            {
                answer += i;
            }    
        }
        else
        {
            for(int i=a; i>=b; i--)
            {
                answer += i;
            }    
        }
        return answer;
    }
}",https://github.com/SongJinx3512/codeKata/blob/main/codeKata%20lv1%20%23012%20%EB%91%90%20%EC%A0%95%EC%88%98%20%EC%82%AC%EC%9D%B4%EC%9D%98%20%ED%95%A9,2023. 9. 7,12,1
2023. 9. 7 오전 9:52:48,김현우,AI,46 - 과일 장수,"function solution(k, m, score) {
    const sortedScore = score.sort((a, b) => b - a);
    const scoreLen = score.length
    
    let result = [];
    let answer = 0;
    
    for(let i=0; i<scoreLen; i += m) {
        let tempArr = sortedScore.slice(i, i + m);
        result.push(tempArr)
    }
    result.forEach((sliceArr) => {
        if(sliceArr.length === m) {
            let minPrice = Math.min(...sliceArr)
            answer += minPrice * m;
        }
    })
    return answer;
}",,2023. 9. 7,46,2
2023. 9. 7 오전 9:54:31,김현우,AI,48 - 소수 만들기,"function solution(nums) {
    const len = nums.length;
    const points = [];
    let count = 0;
    
    const isPrime = (num) => {
        if(num === 2) {
            return true;
        }
        for(let i=2; i<num; i++) {
            if(num % i === 0) {
                return false;
            }
        }
        return true;
    }
    
    for(let i=0; i<len; i++) {
        for(let j=i+1; j<len; j++) {
            for(let k=j+1; k<len; k++) {
                let temp = 0;
                temp += nums[i] + nums[j] + nums[k]
                if(isPrime(temp)) {
                    count++;
                }
            }
        }
    }
    
    return count;
}",,2023. 9. 7,48,2
2023. 9. 7 오전 9:55:08,문현우,Unity,26 - 문자열 다루기 기본,"using System.Text.RegularExpressions;
public class Solution {
    public bool solution(string s) {
        // 문자열이 4 or 6이고, 숫자로만 구성되어있으면 true 
        return (s.Length == 4 || s.Length == 6) && Regex.IsMatch(s, ""^[0-9]+$"");
    }
}",https://github.com/Munch310/Algorithm-Csharp/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12918.%E2%80%85%EB%AC%B8%EC%9E%90%EC%97%B4%E2%80%85%EB%8B%A4%EB%A3%A8%EA%B8%B0%E2%80%85%EA%B8%B0%EB%B3%B8,2023. 9. 7,26,1
2023. 9. 7 오전 9:55:18,신우석,Unity,62 - 달리기 경주,"using System;
using System.Collections.Generic;

public class Solution {
    public string[] solution(string[] players, string[] callings) {
        Dictionary<string, int> presentRanks = new Dictionary<string, int>();
        int n = 0;
        foreach(string p in players)
            presentRanks.Add(p, n++);
        foreach(string c in callings) {
            int rankC = presentRanks[c];
            string prevPlayer = players[rankC - 1];
            players[rankC - 1] = c;
            --presentRanks[c];
            players[rankC] = prevPlayer;
            ++presentRanks[prevPlayer];
        }
        
        return players;
    }
}",https://github.com/seoksii/AlgorithmCodeKata/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/unrated/178871.%E2%80%85%EB%8B%AC%EB%A6%AC%EA%B8%B0%E2%80%85%EA%B2%BD%EC%A3%BC,2023. 9. 7,62,3
2023. 9. 7 오전 9:55:26,우민규,Unity,18 - 없는 숫자 더하기,"using System;
using System.Linq; //sum사용

public class Solution {
    public int solution(int[] numbers) {
        int answer = -0;
        //1~10까지의 값 합산 answer에 넣어줌 
        for(int i = 0; i < 10; i++)
        {
            answer += i;
        }
        //answer에 numbers배열의 모든값을 더한만큼 빼줌
        answer -= numbers.Sum();
        return answer;
    }
}",,2023. 9. 7,18,1
2023. 9. 7 오전 9:55:38,조성훈,Unity,32 - 삼총사,"using System;

public class Solution {
    public int solution(int[] number) 
    {
        int answer = 0;
        for(int i = 0; i < number.Length; i ++)
            for(int j = i+1; j< number.Length; j++)
                for(int k = j+1; k< number.Length; k++)
                    if(number[i]+number[j]+number[k] == 0)
                        answer++;    
        return answer;
    }
}",,2023. 9. 7,32,2
2023. 9. 7 오전 9:56:06,김지수,AI,28 - 직사각형 별찍기,"a, b = map(int, input().strip().split(' '))
for i in range(b):
    print('*'*a)",,2023. 9. 7,28,1
2023. 9. 7 오전 9:56:07,박희원,Unity,35 - 시저 암호,"public class Solution {
     public string solution(string s, int n)
            {
                string answer = """";

                for(int i = 0;i<s.Length; i++)
                {
                    char c = s[i];

                    if (char.IsLower(c))
                        c = (char)((c - 'a' + n) % 26 + 'a');

                    else if (char.IsUpper(c))
                        c = (char)((c - 'A' + n) % 26 + 'A');

                    answer += c; 
                }
                return answer;
            }
}",,2023. 9. 7,35,2
2023. 9. 7 오전 9:56:28,박희원,Unity,36 - 숫자 문자열과 영단어,"using System;

public class Solution {
     public int solution(string s) {
        int answer = 0;
        s = s.Replace(""zero"", ""0"");
        s = s.Replace(""one"", ""1"");
        s = s.Replace(""two"", ""2"");
        s = s.Replace(""three"", ""3"");
        s = s.Replace(""four"", ""4"");
        s = s.Replace(""five"", ""5"");
        s = s.Replace(""six"", ""6"");
        s = s.Replace(""seven"", ""7"");
        s = s.Replace(""eight"", ""8"");
        s = s.Replace(""nine"", ""9"");

        int k;
        bool strToInt = int.TryParse(s, out k);    
        if(strToInt) answer = k;                    
        
        return answer;                              
    }
}",,2023. 9. 7,36,2
2023. 9. 7 오전 9:56:31,김종훈,Unity,68 - 피보나치 수,"public class Solution {
    public int solution(int n) {
        int answer = 0;
        int fist = 0;
        int second = 1;
        
        for(int i=2; i<=n; i++)
        {
            answer = (fist+second)%1234567;
            fist = second %1234567 ;
            second = answer ;
        }
        answer = answer;
        
        return answer;
    }
}",,2023. 9. 7,68,3
2023. 9. 7 오전 9:56:57,조호진,AI,35 - 시저 암호,"def solution(s, n):

    answer = ''
    for i in range(len(s)):

        if s[i].isalpha():
            if s[i].isupper():
                upper = chr(((ord(s[i])+n-ord('A'))%26)+ord('A'))
                answer += upper
            else:
                lower = chr(((ord(s[i])+n-ord('a'))%26)+ord('a'))
                answer += lower
        else:
            answer += s[i]        
    return answer",https://github.com/bm4706/Algorithm_practice/commit/ab6ecb83567f7c3709355d03dda35469371c0512,2023. 9. 7,35,2
2023. 9. 7 오전 9:57:03,김하늘,Unity,34 - 최소직사각형,"using System;

public class Solution 
{
    public int solution(int[,] sizes) 
    {
        int count = 0;
        int[] big = new int[sizes.Length / 2];
        int[] small = new int[sizes.Length / 2];

        for (int i = 0; i < sizes.Length * 0.5f; i++)
        {
            if (sizes[i, 0] >= sizes[i, 1])
            {
                big[count] = sizes[i, 0];
                small[count] = sizes[i, 1];
                count++;
            }
            else
            {
                big[count] = sizes[i, 1];
                small[count] = sizes[i, 0];
                count++;
            }
        }

        Array.Sort(big);
        Array.Sort(small);
        Array.Reverse(big);
        Array.Reverse(small);

        int answer = big[0] * small[0];
        return answer;
    }
}",,2023. 9. 7,34,2
2023. 9. 7 오전 9:57:19,김진환,Unity,41 - 푸드 파이트 대회,"public static string solution(int[] food)
        {
            string answer = ""0"";
            for(int i = food.Length - 1; i > 0; i--)
            {
                if (food[i] > 1)
                {
                    int num = food[i] / 2;
                    string c = i.ToString();
                    for(int j = 0; j < num; j++)
                    {
                        answer = c + answer + c;
                    }
                }
            }
            return answer;
        }",https://github.com/NewRound/AlgorithmKata.git,2023. 9. 7,41,2
2023. 9. 7 오전 9:57:37,이장원,Unity,13 - 콜라츠 추측,"namespace codekata
{
    public class Solution
    {
        public int solution(long num)
        {
            int answer = 0;

            if (num == 1) return 0;

            for (int i = 0; i < 500; i++)
            {
                answer++;

                if (num % 2 == 0) num = num / 2;

                else num = num * 3 + 1;

                if (num == 1) return answer;
            }
          
            return -1;
        }
    }
}",,2023. 9. 7,13,1
2023. 9. 7 오전 9:58:01,김나운,Unity,31 - 이상한 문자 만들기,"using System;

class Solution {
    public string solution(string s) {
        string[] strArr = s.Split(' ');

        for (int i = 0; i < strArr.Length; i++) {
            char[] chars = strArr[i].ToCharArray();

            for (int j = 0; j < chars.Length; j++) {
                if (j % 2 == 0) {
                    chars[j] = char.ToUpper(chars[j]);
                } else {
                    chars[j] = char.ToLower(chars[j]);
                }
            }

            strArr[i] = new string(chars);
        }

        return string.Join("" "", strArr);
    }
}
",,2023. 9. 7,31,2
2023. 9. 7 오전 9:58:05,이홍준,Unity,41 - 푸드 파이트 대회,"using System;

public class Solution {
    public string solution(int[] food) {
        string answer = """";
        string half = """";
        int foodcount = 0;
            
        for (int i = 1; i < food.Length; i++)
        {
            foodcount = food[i] / 2;
            if (foodcount == 0) {}
            else
            {
                for (int j = 0; j < foodcount; j++)
                {
                    half += i.ToString();
                }
            }
        }
        char[] charhalf = half.ToCharArray();
        Array.Reverse(charhalf);
        string reversehalf = new string(charhalf);
        
        answer = half + ""0"" + reversehalf;
        return answer;
    }
}",https://github.com/dlghdwns97/Study/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/unrated/134240.%E2%80%85%ED%91%B8%EB%93%9C%E2%80%85%ED%8C%8C%EC%9D%B4%ED%8A%B8%E2%80%85%EB%8C%80%ED%9A%8C,2023. 9. 7,41,2
2023. 9. 7 오전 10:00:51,김예준,Unity,56 - 대충 만든 자판,"using System;

public class Solution {
    public int[] solution(string[] keymap, string[] targets) {
        int[] answer = new int[targets.Length];
        
        for (int i = 0; i < targets.Length; i++)
        {
            int cnt = 0;
            for (int j = 0; j < targets[i].Length; j++)
            {
                int idx = -1;
                foreach (string key in keymap)
                {
                    int tmp = key.IndexOf(targets[i][j]);
                    if ((idx >= 0 && tmp >= 0 && tmp < idx) || (idx < 0 && tmp >= 0))
                    {
                        idx = tmp;
                    }
                }
                
                if (idx == -1)
                {
                    answer[i] = -1;
                    break;
                }
                else
                {
                    answer[i] += idx;
                    answer[i]++;
                }
            }
        }
        
        return answer;
    }
}",,2023. 9. 7,56,3
2023. 9. 7 오전 10:02:28,김형수,Unity,11 - 하샤드 수,"public class Solution {
    public bool solution(int x) {
        bool answer = true;

        char[] charArr = x.ToString().ToCharArray();

        // 자릿수 합
        int sum = 0;

        for (int i = 0; i < charArr.Length; i++)
        {
            sum += charArr[i] - '0';
        }

        int number = int.Parse(charArr);

        if (number % sum == 0)
        {
            return true;
        }
        else
        {
            return false;
        }
        //return answer;
    }
}",https://github.com/Kim-H-S/Programmers/blob/main/%ED%95%98%EC%83%A4%EB%93%9C%20%EC%88%98.cs,2023. 9. 7,11,1
2023. 9. 7 오전 10:03:09,김연우,AI,10 - 정수 내림차순으로 배치하기,"#include <string>
#include <vector>
#include <algorithm>

using namespace std;

long long solution(long long n) {
    string n_str = to_string(n);
    sort(n_str.begin(), n_str.end(), greater<char>());
    long long answer = stoll(n_str);
    return answer;
}
",,2023. 9. 7,10,1
2023. 9. 7 오전 10:03:34,신해준,Unity,31 - 이상한 문자 만들기,"using System;

public class Solution
    {
        public string solution(string s)
        {
            string answer = """";
            // 입력된 문자열을 공백을 기준으로 잘라서 저장
            string[] temp = s.Split();
            // for문을 돌려서 문자열을 하나씩 호출함.
            for (int i = 0; i < temp.Length; i++)
            {
            // 호출된 문자열에서 차례로 문자 하나씩을 꺼냄
                for (int j = 0; j < temp[i].Length; j++)
                {
                // 0번째는 짝수 취급이므로 대문자로함
                    if (j == 0)
                    {
                        answer += Char.ToUpper(temp[i][j]);
                        continue;
                    }
                    // 짝수는 대문자로, 홀수는 소문자로 바꿈
                    if (j % 2 == 0)
                    {
                        answer += Char.ToUpper(temp[i][j]);
                    }
                    else
                    {
                        answer += Char.ToLower(temp[i][j]);
                    }
                }
                // 띄어쓰기가 전부 생략되어있으므로 문자열이 하나 끝날때마다 띄어쓰기를 넣어줌.
                // 단, 마지막에는 띄어쓰기를 추가하면 안되므로 temp.Leght-1로 설정해준다.
                if (i != temp.Length-1)
                {
                    answer += "" "";
                }
            }
            
            return answer;
        }
    }",,2023. 9. 7,31,2
2023. 9. 7 오전 10:05:33,강성호,Unity,52 - 옹알이 (2),"using System;

public class Solution {
    public int solution(string[] babbling) {
        int answer = 0;
		string val = """";
		for (int i = 0; i < babbling.Length; i++)
		{
			babbling[i] = babbling[i].Replace(""aya"", ""1"").Replace(""ye"", ""2"")
				.Replace(""woo"", ""3"").Replace(""ma"", ""4"");

			babbling[i] = babbling[i].Replace(""11"", ""x"").Replace(""22"", ""x"")
				.Replace(""33"", ""x"").Replace(""44"", ""x"");

			val = babbling[i].Replace(""1"", """").Replace(""2"", """").Replace(""3"", """").Replace(""4"", """");

			if(val == """") answer++;		
		}
		return answer;
    }
}",,2023. 9. 7,52,2
2023. 9. 7 오전 10:07:23,정범수,AI,91 - 2개 이하로 다른 비트,"def solution(numbers):
    answer = []
    for number in numbers:
        temp = ~number & -~number
        answer.append(number + temp - temp//2)
    return answer",https://github.com/sudog1/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv2/77885.%E2%80%852%EA%B0%9C%E2%80%85%EC%9D%B4%ED%95%98%EB%A1%9C%E2%80%85%EB%8B%A4%EB%A5%B8%E2%80%85%EB%B9%84%ED%8A%B8,2023. 9. 7,91,4
2023. 9. 7 오전 10:08:00,정범수,AI,92 - 다리를 지나는 트럭,"from collections import deque

def solution(bridge_length, weight, truck_weights):
    deq = deque([0]*bridge_length)
    cur_weight = 0
    i = 0
    time = 0
    while i < len(truck_weights):
        cur_weight -= deq.popleft()
        if cur_weight+truck_weights[i] > weight:
            deq.append(0)
        else:
            deq.append(truck_weights[i])
            cur_weight += truck_weights[i]
            i += 1
        time += 1
    time += len(deq)
    return time",https://github.com/sudog1/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv2/42583.%E2%80%85%EB%8B%A4%EB%A6%AC%EB%A5%BC%E2%80%85%EC%A7%80%EB%82%98%EB%8A%94%E2%80%85%ED%8A%B8%EB%9F%AD,2023. 9. 7,92,4
2023. 9. 7 오전 10:09:15,정범수,AI,92 - 다리를 지나는 트럭,"from collections import deque

def solution(bridge_length, weight, truck_weights):
    deq = deque([0]*bridge_length)
    cur_weight = 0
    i = 0
    time = 0
    while i < len(truck_weights):
        cur_weight -= deq.popleft()
        if cur_weight+truck_weights[i] > weight:
            deq.append(0)
        else:
            deq.append(truck_weights[i])
            cur_weight += truck_weights[i]
            i += 1
        time += 1
    time += len(deq)
    return time",https://github.com/sudog1/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv2/42583.%E2%80%85%EB%8B%A4%EB%A6%AC%EB%A5%BC%E2%80%85%EC%A7%80%EB%82%98%EB%8A%94%E2%80%85%ED%8A%B8%EB%9F%AD,2023. 9. 7,92,4
2023. 9. 7 오전 10:12:09,이성권,Unity,11 - 하샤드 수,"public class Solution {
    public bool solution(int x) {
        string s = x.ToString();
        
        int sum = 0;
        foreach(char c in s)
        {
            sum += int.Parse(c.ToString());
        }
        if(x%sum==0) return true;
        else return false;
    }
}",https://github.com/LeeSeongGwon,2023. 9. 7,11,1
2023. 9. 7 오전 10:16:34,김민태,Unity,57 - 둘만의 암호,"using System;
using System.Collections.Generic;
using System.Linq;

public class Solution {
    public string solution(string s, string skip, int index) {
        string answer = """";
        List<char> alpha = new List<char>();
        for(int i = 97; i <= 122; i++)
        {
            alpha.Add((char)i);
        }
        for(int i = 0; i < skip.Length; i++)
        {
            alpha.Remove(skip[i]);
        }
        for(int i = 0; i < s.Length; i++)
        {
            int num = alpha.IndexOf(s[i]);
            if(num + index <= alpha.Count - 1) 
            {
                answer += alpha[num + index];
            }
            else
            {
                answer += alpha[(num + index) % alpha.Count];
            }
        }
        return answer;
    }
}",https://github.com/rlaalsxo/CodingTest,2023. 9. 7,57,3
2023. 9. 7 오전 10:18:25,김주형,Unity,29 - 최대공약수와 최소공배수,"public class Solution 
{
    public int[] solution(int n, int m) 
    {
        int[] answer = new int[2];
        int gcd = CalcGCD(n, m);
        int lcm = CalcLCM(n, m);
        answer[0] = gcd;
        answer[1] = lcm;
        return answer;
    }
    int CalcGCD(int a, int b)
    {
        while(b!=0)
        {
            int tmp = a%b;
            a = b;
            b = tmp;
        }
        return a;
    }
    int CalcLCM(int a, int b)
    {
        int gcd = CalcGCD(a,b);
        int lcm = (a*b) / gcd;
        return lcm;
    }
}",https://github.com/kjuhyung/Algorithm.git,2023. 9. 7,29,1
2023. 9. 7 오전 10:20:25,김나운,Unity,32 - 삼총사,"class Solution {
    public int solution(int[] number) {

        int sum = 0;
        int count = 0;

        for (int i=0; i<number.Length; i++) {
            for ( int j=i+1; j<number.Length; j++) {
                for ( int k=j+1; k<number.Length; k++) {
                    sum += number[i] + number[j] + number[k];
                    if (sum == 0) {
                        count++;
                    }
                    sum = 0;
                }
            }
        }

        return count;

    }
}",,2023. 9. 7,32,2
2023. 9. 7 오전 10:24:35,정주찬,Unity,57 - 둘만의 암호,"using System;

public class Solution {
    public string solution(string s, string skip, int index) {
        char[] cArr = s.ToCharArray();
        for (int i = 0; i < cArr.Length; i++)
        {
            // 97~122
            int count = 0;
            while (count < index)
            {
                cArr[i] = (char)(cArr[i] + 1);

                if (cArr[i] == 123)
                {
                    cArr[i] = 'a';
                }

                if (skip.Contains(cArr[i]))
                {
                    continue;
                }

                count++;
            }
        }
            return new string(cArr);
    }
}",https://github.com/JeongJuChan/Algorithm/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/unrated/155652.%E2%80%85%EB%91%98%EB%A7%8C%EC%9D%98%E2%80%85%EC%95%94%ED%98%B8/%EB%91%98%EB%A7%8C%EC%9D%98%E2%80%85%EC%95%94%ED%98%B8.cs,2023. 9. 7,57,3
2023. 9. 7 오전 10:24:59,정주찬,Unity,58 - 햄버거 만들기,"using System;
using System.Collections.Generic;
using System.Linq;

public class Solution {
    public int solution(int[] ingredient) {
        int answer = 0;
        // 빵-야채-고기-빵
        int[] order = new int[] { 1, 2, 3, 1 };
        int index = 0;
        List<int> list = new List<int>(ingredient);
        while (index < list.Count && list.Count >= 4)
        {
            if (index >= 3)
            {
                if (list[index - 3] == 1 && list[index - 2] == 2 && list[index - 1] == 3 && list[index] == 1)
                {
                    list.RemoveRange(index - 3, 4);
                    answer++;
                    index -= 4;
                }
            }

            index++;
        }
        return answer;
    }
}",https://github.com/JeongJuChan/Algorithm/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/unrated/133502.%E2%80%85%ED%96%84%EB%B2%84%EA%B1%B0%E2%80%85%EB%A7%8C%EB%93%A4%EA%B8%B0/%ED%96%84%EB%B2%84%EA%B1%B0%E2%80%85%EB%A7%8C%EB%93%A4%EA%B8%B0.cs,2023. 9. 7,58,3
2023. 9. 7 오전 10:25:16,조성훈,Unity,33 - 크기가 작은 부분,"using System;

public class Solution 
{
    public int solution(string t, string p) 
    {
        int answer = 0;

        for(int i = 0; i < t.Length - p.Length + 1; i++)
            if(long.Parse(t.Substring(i, p.Length)) <= long.Parse(p))
               answer++;

        return answer;
    }
}",,2023. 9. 7,33,2
2023. 9. 7 오전 10:26:29,김대민,Unity,100 - 두 큐 합 같게 만들기,"#include <string>
#include <vector>
#include <queue>
#include <cmath>
using namespace std;
//큐 네개를 준비한다
//하나는 왼쪽으로 하나는 오른쪽으로 돌린다.
//그게편하긴하지? ㅋㅋ

int solution(vector<int> queue1, vector<int> queue2) {
    int answer = -1;
    
    int qSize = queue1.size();
    long long qCount[2] = {};
    for(int i = 0; i < qSize; ++i)
    {
        qCount[0] += queue1[i];
        queue2.push_back(queue1[i]);
        qCount[1] += queue2[i];
        queue1.push_back(queue2[i]);
    }
    
    int Count = 0;
    int leftIndex = 0;
    int leftSize = qSize * 2;
    int rightIndex = 0;
    int rightSize = qSize * 2;
    
    while(leftIndex < leftSize && rightIndex < rightSize)
    {
        if(qCount[0] == qCount[1])
        {
            answer = Count;
            break;
        }
        
        Count++;
        if(qCount[0] > qCount[1])
        {
            int a = queue1[leftIndex++];
            qCount[0] -= a;
            qCount[1] += a;
        }
        else
        {
            int a = queue2[rightIndex++];
            qCount[1] -= a;
            qCount[0] += a;
        }
    }
    if(qCount[0] == qCount[1])
    {
        answer = Count;
    }
    return answer;
}",https://github.com/KimDaeMins/CodingTest/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv2/118667.%E2%80%85%EB%91%90%E2%80%85%ED%81%90%E2%80%85%ED%95%A9%E2%80%85%EA%B0%99%EA%B2%8C%E2%80%85%EB%A7%8C%EB%93%A4%EA%B8%B0/%EB%91%90%E2%80%85%ED%81%90%E2%80%85%ED%95%A9%E2%80%85%EA%B0%99%EA%B2%8C%E2%80%85%EB%A7%8C%EB%93%A4%EA%B8%B0.cpp,2023. 9. 7,100,4
2023. 9. 7 오전 10:29:16,양수홍,AI,52 - 옹알이 (2),"def solution(babbling):
    answer = 0
    can_pronounce = [""aya"", ""ye"", ""woo"", ""ma""]
    cannot_pronounce = [""ayaaya"", ""yeye"", ""woowoo"", ""mama""]
    for bab in babbling:
        for cannot_pron in cannot_pronounce:
            bab = bab.replace(cannot_pron, ""?"")
        for pron in can_pronounce:
            bab=bab.replace(pron,"" "")
        if len(bab.replace("" "","""")) == 0:
            answer += 1

    return answer",,2023. 9. 7,52,2
2023. 9. 7 오전 10:29:43,김대민,Unity,101 - 무인도 여행,"#include <string>
#include <vector>
#include <algorithm>
using namespace std;

vector<vector<bool>> visit;

int Dfs(int y, int x, vector<string>* pmaps)
{
    if(y >= visit.size() || y < 0)
        return 0;
    if(x >= visit[0].size() || x < 0)
        return 0;
    if(visit[y][x])
        return 0;
    if((*pmaps)[y][x] == 'X')
        return 0;
    
    visit[y][x] = true;
    
    int num = (*pmaps)[y][x] - '0';
   
    num += Dfs(y - 1 , x, pmaps);
    num += Dfs(y + 1 , x, pmaps);
    num += Dfs(y, x - 1, pmaps);
    num += Dfs(y, x + 1, pmaps);
    
    return num;
}
vector<int> solution(vector<string> maps) {
    vector<int> answer;
    visit.resize(maps.size(), vector<bool>());
    
    for(auto& a : visit)
    {
        a.resize(maps[0].size(), false);
    }

    for(int i = 0; i < visit.size(); ++i)
    {
        
        for(int j = 0; j < visit[0].size(); ++j)
        {
            int num = Dfs(i , j ,&maps);
            if(num != 0)
                answer.push_back(num);
        }
    }
    
    if(answer.empty())
        answer.push_back(-1);
    else
        std::sort(answer.begin(), answer.end());
    
    return answer;
}",https://github.com/KimDaeMins/CodingTest/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/Day8/154540.%E2%80%85%EB%AC%B4%EC%9D%B8%EB%8F%84%E2%80%85%EC%97%AC%ED%96%89/%EB%AC%B4%EC%9D%B8%EB%8F%84%E2%80%85%EC%97%AC%ED%96%89.cpp,2023. 9. 7,101,4
2023. 9. 7 오전 10:30:03,김대민,Unity,102 - 행렬 테두리 회전하기,"#include <string>
#include <vector>
#include <cmath>
using namespace std;
//10000*100*4 400만 -> 가능
//내일하자
//이론은뭐냐? 직접채우고 직접돌려 그게편해 라는 이론
int xMove[4] = { 1, 0, -1, 0 };
int yMove[4] = { 0, 1, 0, -1 };
enum Dir
{
    RIGHT, DOWN, LEFT, UP
};
int dir = RIGHT;
vector<int> solution(int rows, int columns, vector<vector<int>> queries) {
    vector<int> answer;
    
    vector<vector<int>> v;
    v.resize(rows, vector<int>());
    for(auto& a : v)
        a.resize(columns);
    
    int input = 1;
    for(int i = 0; i < v.size(); ++i)
    {
        for(int j = 0; j < v[0].size(); ++j)
        {
            v[i][j] = input++;
        }
    }
    for(int i = 0; i < queries.size(); ++i)
    {
        int yMin = queries[i][0] - 1;
        int xMin = queries[i][1] - 1;
        int yMax = queries[i][2] - 1;
        int xMax = queries[i][3] - 1;
        
        int yNow = yMin;
        int xNow = xMin;
        int before = v[yNow][xNow];
        int minCount = before;
        dir = Dir::RIGHT;
        while(true)
        {
            yNow += yMove[dir];
            xNow += xMove[dir];
            
            if(yNow < yMin)
            {
                break;
            }
            else if(yNow > yMax)
            {
                yNow -= yMove[dir];
                xNow -= xMove[dir];
                ++dir;
            }
             else if(xNow < xMin)
            {
                yNow -= yMove[dir];
                xNow -= xMove[dir];
                ++dir;
            }
             else if(xNow > xMax)
            {
                yNow -= yMove[dir];
                xNow -= xMove[dir];
                ++dir;
            }
            else
            {
                minCount = min(v[yNow][xNow], minCount);
                int temp = before;
                before = v[yNow][xNow];
                v[yNow][xNow] = temp;
            }
        }
        answer.push_back(minCount);
    }
    
    return answer;
}",https://github.com/KimDaeMins/CodingTest/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/Day8/77485.%E2%80%85%ED%96%89%EB%A0%AC%E2%80%85%ED%85%8C%EB%91%90%EB%A6%AC%E2%80%85%ED%9A%8C%EC%A0%84%ED%95%98%EA%B8%B0/%ED%96%89%EB%A0%AC%E2%80%85%ED%85%8C%EB%91%90%EB%A6%AC%E2%80%85%ED%9A%8C%EC%A0%84%ED%95%98%EA%B8%B0.cpp,2023. 9. 7,102,4
2023. 9. 7 오전 10:33:01,최지연,AI,30 - 3진법 뒤집기,"def solution(n):
    result = ''
    while n > 0:
        result += str(n % 3)
        n = n // 3
        if n == 1:
            result += '1'
            break
    return int(result, 3)",https://github.com/jiyeonCoder/algorithmPractice/blob/main/30.%203%EC%A7%84%EB%B2%95%20%EB%92%A4%EC%A7%91%EA%B8%B0.py,2023. 9. 7,30,1
2023. 9. 7 오전 10:36:16,박민혁,Unity,34 - 최소직사각형,"using System;

public class Solution {
    public int solution(int[,] sizes) {
        for(var i=0; i< sizes.GetLength(0); i++)
        {
            var tmp = 0;
            if(sizes[i, 0] < sizes[i, 1])
            {
                tmp = sizes[i, 0];
                sizes[i, 0] = sizes[i, 1];
                sizes[i, 1] = tmp;
            }   
        }
        
        int max1 = 0;
        int max2 = 0;

        for (var i = 0; i < sizes.GetLength(0); i++)
        {
            if (max1 < sizes[i, 0]) max1 = sizes[i, 0];
            if (max2 < sizes[i, 1]) max2 = sizes[i, 1];
        }
        
        int answer = max1 * max2;

        return answer;
    }
    
}",,2023. 9. 7,34,2
2023. 9. 7 오전 10:37:17,남의서,AI,53 - 숫자 짝꿍,"def solution(X, Y):
    ans = ''

    for i in range(10):
        ans += (str(i) * min(X.count(str(i)), Y.count(str(i))))
    ans = sorted(ans, reverse=True)
    if ans == []:
        return '-1'
    elif set(ans) == {'0'}:
        return '0'
    else:
        return ''.join(ans)
",,2023. 9. 7,53,2
2023. 9. 7 오전 10:43:31,김민태,Unity,58 - 햄버거 만들기,"using System;
using System.Collections.Generic;

public class Solution {
    public int solution(int[] ingredient) {
        int answer = 0;
        List<int> list = new List<int>();
        
        foreach(int burger in ingredient)
        {
            list.Add(burger);
            
            if(list.Count >= 4)
            {           
                if(list[list.Count - 4] == 1 && list[list.Count - 3] == 2 && list[list.Count - 2] == 3 && list                      [list.Count - 1] == 1)
                {
                    answer++;
                    list.RemoveRange(list.Count - 4, 4);
                }
            }
        }
        return answer;
    }
}",https://github.com/rlaalsxo/CodingTest,2023. 9. 7,58,3
2023. 9. 7 오전 10:49:36,이경민,Unity,32 - 삼총사,"using System;

public class Solution {
    public int solution(int[] number) {
        int answer = 0;
        int checkTrio = 0;
        int numLength = number.Length;
        
        for(int i = 0; i <= numLength - 3; i++)
        {
            for(int j = i+1; j <= numLength - 2; j++)
            {
                for(int k = j+1; k <= numLength -1 ; k++)
                {
                    checkTrio += (number[i] + number[j] + number [k]);
                    answer += (checkTrio == 0) ? 1 : 0;
                    checkTrio = 0;
                }
                
            }
        }
        

        return answer;
    }
}",https://github.com/kminsmin/Algorithm_Test_Practice/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/131705.%E2%80%85%EC%82%BC%EC%B4%9D%EC%82%AC,2023. 9. 7,32,2
2023. 9. 7 오전 10:53:24,이혜리,AI,121 - N-Queen,"answer = 0
def solution(n):
    # answer 

    for i in range(n):
        visited = []
        dfs(visited, (0, i), n)
        
        
    return answer


def dfs(visited, index, n):
    global answer
    
    near = [(index[0]+1, i) for i in range(n)]

    if visited != [] and index[0] <= visited[-1][0]:
        del visited[index[0]:]
        
    
    if index in visited: # 이거 때문에 for 문이 작동을 안 함 
        return
    
    visited.append(index)

  # 인접 노드 추가하기
    for i in visited:
        
        # 수직 방향 칸 제거
        next = index[0] + 1
        if (next, i[1]) in near:
          
          near.remove((next, i[1]))

        val = index[0] - i[0] + 1

        
        # 다음 행에 있는 대각선 칸 인덱스
        rem_i1 = i[1] + val 
        rem_i2 = i[1] - val 
          
        # 배열의 범위 내에 있다면 인덱스 제거
        if (next, rem_i1) in near:
          near.remove((next, rem_i1))
          
        if (next, rem_i2) in near:
          near.remove((next, rem_i2))
          
    
    
    if len(visited) == n:
      answer += 1

    if near == []: # 탐색이 끝나면
      return 
    
    for i in near:
      dfs(visited, i, n)
            
",https://github.com/hyeleenotharry/Programmers/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv2/12952.%E2%80%85N%EF%BC%8DQueen,2023. 9. 7,121,5
2023. 9. 7 오전 11:02:02,이진형,AI,31 - 이상한 문자 만들기,"def solution(s):
    num=0
    x=''
    for i in range(len(s)):
        if s[i]!=' ':
            if num%2==0:
                x=x+s[i].upper()
            else:
                x=x+s[i].lower()
            num+=1
        else:
            num=0
            x=x+"" ""
    return x",,2023. 9. 7,31,2
2023. 9. 7 오전 11:08:22,이승연,Unity,23 - 약수의 개수와 덧셈,"using System;


public class Solution {
    public int solution(int left, int right) {
        int answer = 0;
        
        for(int i=left;i<=right;i++)
        {
            int Count=CountValue(i);
            
            if(Count%2==0)
            {
                answer+=i;
            }
            else
                answer-=i;
        }   
        return answer;
              
    }
        private int CountValue(int num)
        {
            int count=0;
            for(int j=1;j<=num;j++)
            {
                if(num%j==0)
                {
                    count++;
                }
            }
            return count;
        }
    
}",,2023. 9. 7,23,1
2023. 9. 7 오전 11:24:20,김광수,Unity,75 - 연속 부분 수열 합의 개수,"using System;
using System.Collections.Generic;

public class Solution {
    // 배열에서 n개의 수를 골라서 새로운 수를 만든다.
    
    // 일단 수를 고르는 경우의수는 1~n까지임
    
    // 시작점부터 끝까지 하나씩 더해보면서 배열에 저장
    
    // 더하는 순서에 따라서 다른 합이 나올수 있음
    
    
    public int solution(int[] elements) 
    {
        HashSet<int> hashSet = new HashSet<int>();
        
        for (int i =0; i< elements.Length; i++)
        {
            int temp = 0;
            for(int j=i; j< elements.Length; j++)
            {
                temp += elements[j];
                hashSet.Add(temp);
            }
            
            for(int k=0; k < i; k++)
            {
                temp += elements[k];
                hashSet.Add(temp);
            }
            
        }
        
        
        
        return hashSet.Count;
    }
    
}",https://github.com/kksoo0131/Study/commit/8c4975ef4f0a9a50595c0a968d7f86fe7ef2bb44#diff-4f76455a0fd1eb4076d8ebbe34b5fb6a70dedb1feb014e9c363ce8134d7e010d,2023. 9. 7,75,3
2023. 9. 7 오전 11:29:08,김준범,Unity,12 - 두 정수 사이의 합,"public class Solution {
    public long solution(int a, int b) {
        long answer = 0;
        
        if( a < b)
        {
            for(int i=a; i<=b; i++)
            {
                answer += i;
            }    
        }
        
        else
        {
            for(int i=a; i>=b; i--)
            {
                answer += i;
            }    
        }
        
        return answer;
    }
}",,2023. 9. 7,12,1
2023. 9. 7 오전 11:29:51,김민태,Unity,59 - 성격 유형 검사하기,"using System;
using System.Collections.Generic;
public class Solution
{
    public string solution(string[] survey, int[] choices)
    {
        string answer = """";

        Dictionary<string, int> dic = new Dictionary<string, int>()
            { {""R"",0 }, {""T"",0 },{""C"",0 }, {""F"",0 },{""J"",0 }, {""M"",0 },{""A"",0 }, {""N"",0 } };

        string sSurvey = """";
        int choice = 0;
        for (int i = 0; i < survey.Length; i++)
        {
            if (choices[i] > 4)
            {
                sSurvey = survey[i][1].ToString();
                choice = choices[i] - 4;
            }
            else
            {
                sSurvey = survey[i][0].ToString();
                choice = 4 - choices[i];
            }

            dic[sSurvey] += choice;
        }

        answer += dic[""R""] >= dic[""T""] ? ""R"" : ""T"";
        answer += dic[""C""] >= dic[""F""] ? ""C"" : ""F"";
        answer += dic[""J""] >= dic[""M""] ? ""J"" : ""M"";
        answer += dic[""A""] >= dic[""N""] ? ""A"" : ""N"";

        return answer;
    }
}",https://github.com/rlaalsxo/CodingTest,2023. 9. 7,59,3
2023. 9. 7 오전 11:44:47,이도현,Unity,12 - 두 정수 사이의 합,"public class Solution {
    public decimal solution(long a, long b) {
        
        if (a == b)
            return a;
        else if (a > b)
        {
            long temp = a;
            a = b;
            b = temp;
        }
        
        decimal answer = ((b - a) + 1) * (a + b) / 2;
        return answer;
    }
}",,2023. 9. 7,12,1
2023. 9. 7 오전 11:58:02,이선재,Unity,58 - 햄버거 만들기,"#include <string>
#include <vector>

using namespace std;

int solution(vector<int> ingredient) {
    int answer = 0;
    string burger = """";
    
    for(int i = 0; i < ingredient.size(); i++) {
        burger += to_string(ingredient[i]);
        
        if(burger.length() >= 4){
            if(burger.substr(burger.length() - 4, 4) == ""1231""){
                burger.erase(burger.length() - 4, 4);
                
                answer += 1;
            }
        }
    }
    
    return answer;
}",https://github.com/Lyrwhitt/Algorithm/blob/main/Programmers/LEVEL1/%ED%96%84%EB%B2%84%EA%B1%B0%20%EB%A7%8C%EB%93%A4%EA%B8%B0,2023. 9. 7,58,3
2023. 9. 7 오후 12:35:26,유채연,Unity,40 - 가장 가까운 같은 글자,"        int[] answer = new int[s.Length];
        Hashtable num = new Hashtable();
        char[] arr = s.ToCharArray();
        
        for(int i=0;i<s.Length;i++){
            if(num.Contains(arr[i])){
                answer[i]=i-(int)num[arr[i]];
                num.Remove(arr[i]);
            }
            else{
                answer[i]=-1;
            }
            num.Add(arr[i],i);
        }
        return answer;",https://github.com/ychy0006/AlgorithmCodeKata/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/unrated,2023. 9. 7,40,2
2023. 9. 7 오후 12:36:18,유채연,Unity,41 - 푸드 파이트 대회,"        string answer="""";
        for(int i=1;i<food.Length;i++){
            for(int j=0;j<food[i]/2;j++){
                answer+=i.ToString();
            }
        }
        answer+=""0"";
        for(int i=food.Length-1;i>0;i--){
            for(int j=0;j<food[i]/2;j++){
                answer+=i.ToString();
            }
        }
        return answer;",https://github.com/ychy0006/AlgorithmCodeKata/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/unrated,2023. 9. 7,41,2
2023. 9. 7 오후 12:36:45,유채연,Unity,42 - 콜라 문제,"        int answer = 0;
        int extra=0;
        while(n>=a){
            answer+=n/a*b;
            extra=n/a*b;
            extra += n%a;
            n=extra;
        }
        return answer;",https://github.com/ychy0006/AlgorithmCodeKata/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/unrated,2023. 9. 7,42,2
2023. 9. 7 오후 12:37:17,유채연,Unity,43 - 명예의 전당 (1),"int[] answer = new int[score.Length]; //뒤에 {}붙이면 오류남. 크기 설정안하면 인덱스 사용못함.
        int[] arr = new int[k];
        int min = score[0];
        for(int i=0;i<Math.Min(k,score.Length);i++){
            arr[i] = score[i];
            if(min>score[i]) min=score[i];
            answer[i] = min;
        }
        Array.Sort(arr);
        if(score.Length>k){ 
            for(int i=k;i<score.Length;i++){
                for(int j=k-1;j>-1;j--){
                    if(score[i]>=arr[j]){
                        for(int h=0;h<j;h++){
                            arr[h]=arr[h+1];
                        }
                        arr[j]=score[i];
                        break;
                    }
                }
                answer[i]=arr[0];
            }
        }
        return answer;",https://github.com/ychy0006/AlgorithmCodeKata/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/unrated,2023. 9. 7,43,2
2023. 9. 7 오후 12:37:53,유채연,Unity,44 - 2016년,"        string[] day = {""FRI"",""SAT"",""SUN"",""MON"",""TUE"",""WED"",""THU""};
        int[] dateArr = new int[12] {0,31,29,31,30,31,30,31,31,30,31,30};
        int date = b-1;
        for(int i=0;i<a;i++){
            date+=dateArr[i];
        }
        return day[date%7];",https://github.com/ychy0006/AlgorithmCodeKata/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/unrated,2023. 9. 7,44,2
2023. 9. 7 오후 12:38:27,유채연,Unity,45 - 카드 뭉치,"        string answer = ""Yes"";
        int card1idx=0;
        int card2idx=0;
        foreach(string s in goal){
            if(s==cards1[card1idx]) {
                card1idx++;
                if(card1idx==cards1.Length) card1idx--;
            }
            else if(s==cards2[card2idx]) {
                card2idx++;
                if(card2idx==cards2.Length) card2idx--;
            }
            else {
                answer = ""No"";
                break;
            }
        }
        return answer;",https://github.com/ychy0006/AlgorithmCodeKata/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/unrated,2023. 9. 7,45,2
2023. 9. 7 오후 12:39:02,유채연,Unity,46 - 과일 장수,"        int answer = 0;
        Array.Sort(score);
        for(int i=score.Length-1;i>score.Length%m;i-=m){
            answer+=score[i-m+1]*m;
        }
        
        return answer;",https://github.com/ychy0006/AlgorithmCodeKata/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/unrated,2023. 9. 7,46,2
2023. 9. 7 오후 12:39:36,유채연,Unity,47 - 모의고사완전탐색,"        int[] answer = new int[] {};
        int[] people = new int[3] {0,0,0};
        int[] arr2 = {1,3,4,5};
        int[] arr3 = {3,1,2,4,5};
        for(int i=0;i<answers.Length;i++){
            if(answers[i]==i%5+1) people[0]++;
            if(i%2==0){
                if(answers[i]==2) people[1]++;
            }
            else{
                if(answers[i]==arr2[i%8/2]) people[1]++;
            }
            if(answers[i]==arr3[i%10/2]) people[2]++;
        }
        int max=int.MinValue;
        List<int> list = new List<int>();
        for(int i=0;i<people.Length;i++){
            if(people[i]==max){
                list.Add(i+1);
            }
            if(people[i]>max){
                max=people[i];
                list.Clear();
                list.Add(i+1);
            }
        }
        answer=list.OrderBy(x=>x).ToArray();
        return answer;",https://github.com/ychy0006/AlgorithmCodeKata/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/unrated,2023. 9. 7,47,2
2023. 9. 7 오후 1:20:32,한병권,Unity,56 - 대충 만든 자판,"using System;
using System.Collections.Generic;

public class Solution {
    public int[] solution(string[] keymap, string[] targets) {
        int[] answer = new int[targets.Length];
        List<char[]> keyList = new List<char[]>();      
        
        for(int i = 0; i < keymap.Length; i++)
        {
            char[] temp = keymap[i].ToCharArray();
            keyList.Add(temp);
        }
        
        int index = 0;
        int tempIndex = 0;
        for(int i = 0; i < targets.Length; i++)
        {
            index = 0;
            char[] temp = targets[i].ToCharArray();
            foreach(char c in temp)
            {
                tempIndex = 0;
                for(int k = 0; k < 100; k++)
                {
                    for(int j = 0; j < keyList.Count; j++)
                    {
                        if(keyList[j].Length > k)
                        {
                            if(keyList[j][k] == c)
                            {
                                index = index + k + 1;
                                tempIndex = k + 1;
                                break;
                            }
                        }
                    }
                    if(tempIndex > 0)
                    {
                        break;
                    }
                }
                if(tempIndex == 0)
                {
                    index = 0;
                    break;
                }
            }
            index = index == 0 ? -1 : index;
            answer[i] = index;
        }
        
        return answer;
    }
}",https://github.com/hbg9212/AlgorithmCodekata,2023. 9. 7,56,3
2023. 9. 7 오후 2:49:02,신해준,Unity,10 - 정수 내림차순으로 배치하기,"using System;
using System.Linq;

public class Solution
{
    public long solution(long n)
    {
        // long 형식의 숫자를 문자열로 변환하여 각 자릿수를 분리하고,
        // 큰 숫자부터 작은 숫자 순으로 정렬한 후 다시 문자열로 조합합니다.
        string sortedDigits = string.Concat(n.ToString().OrderByDescending(digit => digit));
        
        // 정렬된 문자열을 long 형식으로 변환하여 리턴합니다.
        return long.Parse(sortedDigits);
    }
}
",,2023. 9. 7,10,1
2023. 9. 7 오후 3:01:17,김광수,Unity,76 - H-Index,"using System;

public class Solution {
    // n편의 논문중 h번 이상 인용된 논문이 h편 이상이면 H-Index 는 h
    
    // h보다 크거나 같은게 h개 이상이라면
    
    // 일단은 citations를 정렬한다.
    
    // 그러면 배열의 index는 이 논문보다 적게 인용된 나머지 논문의 개수가 된다.
    
    // length - index는 이 논문 이상으로 인용된 논문의 개수가 된다( 이 논문도 포함임)
    
    // 만약 citations 배열의 길이가
    
    // 요소의 최솟값보다 짧다면 citations의 길이가 answer가 된다.
    
    public int solution(int[] citations) 
    {
        Array.Sort(citations);
        
        int answer = 0;
        
        for (int i =0; i< citations.Length; i++)
        {
            
            if (citations[i] <= citations.Length -i)
            {
                if (i <= citations[i])
                {
                    answer = citations[i];    
                }
                
            }
            else
            {
                answer = citations.Length -i;
                break;
            }
        }
        
        return answer;
    }
}",https://github.com/kksoo0131/Study/commit/eed217e4174dcc3b77a049410e8617ad79d29080,2023. 9. 7,76,3
2023. 9. 7 오후 3:30:29,신해준,Unity,32 - 삼총사,"using System;
using System.Collections.Generic;

public class Solution
{
    public int solution(int[] number)
    {
        int count = 0; // 가능한 조합의 수를 저장할 변수
        List<int> combination = new List<int>(); // 현재 조합에 포함된 학생을 저장할 리스트

        // 재귀 함수를 사용하여 가능한 모든 조합을 생성하고 검사
        GenerateComb(number, 0, combination, ref count);

        return count;
    }

    private void GenerateComb(int[] number, int start, List<int> combination, ref int count)
    {
        if (combination.Count == 3) // 3명의 학생을 선택했을 때
        {
            int sum = 0;
            foreach (int student in combination)
            {
                sum += number[student];
            }

            if (sum == 0) // 합이 0이면
            {
                count++; // 결과를 증가시킴
            }
            return;
        }

        for (int i = start; i < number.Length; i++)
        {
            combination.Add(i); // 학생을 현재 조합에 추가
            GenerateComb(number, i + 1, combination, ref count); // 다음 학생을 선택
            combination.RemoveAt(combination.Count - 1); // 학생을 현재 조합에서 제거
        }
    }
}
",,2023. 9. 7,32,2
2023. 9. 7 오후 3:48:10,이승연,Unity,24 - 문자열 내림차순으로 배치하기,"using System;
public class Solution {
    public string solution(string s) {
        string answer = """";
        
        char[] chars=s.ToCharArray();
        Array.Sort(chars);
        Array.Reverse(chars);
        
        return answer=new string(chars);
    }
}",,2023. 9. 7,24,1
2023. 9. 7 오후 4:03:15,신해준,Unity,33 - 크기가 작은 부분,"using System;

public class Solution
{
    public int solution(string t, string p)
    {
        int count = 0;

        if (p.Length > t.Length)
            return 0; // p의 길이가 t보다 크면 조건을 만족하는 부분 문자열이 없음

        for (int i = 0; i <= t.Length - p.Length; i++)
        {
            string subStr = t.Substring(i, p.Length); // t에서 길이가 p와 같은 부분 문자열 추출

            if (IsSmallerOrEqual(subStr, p))
            {
                count++;
            }
        }

        return count;
    }

    private bool IsSmallerOrEqual(string str1, string str2)
    {
        // 문자열을 앞에서부터 비교하면서 str1이 str2보다 작거나 같은지 확인
        for (int i = 0; i < str1.Length; i++)
        {
            if (str1[i] > str2[i])
                return false;
            else if (str1[i] < str2[i])
                return true;
        }

        return true;
    }
}
",,2023. 9. 7,33,2
2023. 9. 7 오후 4:31:27,임전혁,Unity,51 - 로또의 최고 순위와 최저 순위,"using System;

public class Solution {
    public int[] solution(int[] lottos, int[] win_nums) {
        int topRank = 7;
        int lowRank = 7;

        lowRank = checkRank(lottos, win_nums);

        for (int i = 0; i < lottos.Length; i++)
        {
            if (lottos[i] == 0)
                lottos[i] = win_nums[i];
        }

        topRank = checkRank(lottos, win_nums);

        if (lowRank == 7)
            lowRank = 6;
        
        if (topRank == 7)
            topRank = 6;
        
        
        return new int[] { topRank, lowRank };
    }
    
    private int checkRank(int[] lottos, int[] win_nums)
    {
        int rankNum = 7;

        for (int i = 0; i < lottos.Length; i++)
        {
            for (int j = 0; j < win_nums.Length; j++)
            {
                if (lottos[i] == win_nums[j])
                    rankNum--;
            }
        }
        return rankNum;
    }
}",https://github.com/yarogono/Algorithm_CSharp/blob/master/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/77484.%E2%80%85%EB%A1%9C%EB%98%90%EC%9D%98%E2%80%85%EC%B5%9C%EA%B3%A0%E2%80%85%EC%88%9C%EC%9C%84%EC%99%80%E2%80%85%EC%B5%9C%EC%A0%80%E2%80%85%EC%88%9C%EC%9C%84/%EB%A1%9C%EB%98%90%EC%9D%98%E2%80%85%EC%B5%9C%EA%B3%A0%E2%80%85%EC%88%9C%EC%9C%84%EC%99%80%E2%80%85%EC%B5%9C%EC%A0%80%E2%80%85%EC%88%9C%EC%9C%84.cs,2023. 9. 7,51,2
2023. 9. 7 오후 5:18:26,채이환,Unity,45 - 카드 뭉치,"using System;

public class Solution {
    public string solution(string[] cards1, string[] cards2, string[] goal) {
        string answer = ""Yes"";
        for (int i = 0, j = 0, k = 0; i < goal.Length; ++i)
        {
            if (j < cards1.Length && goal[i] == cards1[j])
                ++j;
            else if (k < cards2.Length && goal[i] == cards2[k])
                ++k;
            else
            {
                answer = ""No"";
                break;
            }
        }
        
        return answer;
    }
}",,2023. 9. 7,45,2
2023. 9. 7 오후 6:16:34,신해준,Unity,35 - 시저 암호,"using System;
using System.Text;

public class Solution
{
    public string solution(string s, int n)
    {
        StringBuilder result = new StringBuilder();

        foreach (char c in s)
        {
            if (char.IsLetter(c))
            {
                char shiftedChar = ShiftCharacter(c, n);
                result.Append(shiftedChar);
            }
            else
            {
                result.Append(c); // 알파벳이 아닌 문자는 그대로 유지
            }
        }

        return result.ToString();
    }

    private char ShiftCharacter(char c, int n)
    {
        char baseChar = char.IsUpper(c) ? 'A' : 'a'; // 대문자인지 소문자인지에 따라 기준 문자 선택
        int offset = c - baseChar; // 기준 문자로부터의 거리

        char shiftedChar = (char)((offset + n) % 26 + baseChar); // 밀어낸 문자 계산

        return shiftedChar;
    }
}
",,2023. 9. 7,35,2
2023. 9. 7 오후 6:42:50,신해준,Unity,39 - 두 개 뽑아서 더하기,"using System;
using System.Collections.Generic;

public class Solution
{
    public int[] solution(int[] numbers)
    {
        HashSet<int> result = new HashSet<int>(); // 중복을 방지하기 위해 HashSet 사용

        for (int i = 0; i < numbers.Length - 1; i++)
        {
            for (int j = i + 1; j < numbers.Length; j++)
            {
                int sum = numbers[i] + numbers[j];
                result.Add(sum);
            }
        }

        List<int> resultList = new List<int>(result);
        resultList.Sort(); // 결과를 오름차순으로 정렬

        return resultList.ToArray();
    }
}
",,2023. 9. 7,39,2
2023. 9. 7 오후 6:44:42,김민태,Unity,60 - 바탕화면 정리,"using System;

public class Solution {
    public int[] solution(string[] wallpaper) {
        int top = 50;
        int left = 50;
        int right = 0;
        int bottom = 0;
        
        for(int i = 0; i < wallpaper.Length; i++)
        {
            string str = wallpaper[i];
            for(int j = 0; j < str.Length; j++)
            {
                if(str[j] == '#')
                {                 
                    top = top > i ? i : top;
                    left = left > j ? j : left;
                    right = right < j ? j : right;
                    bottom = bottom < i ? i : bottom;
                }
            }
        }
        
        int[] answer = new int[4] {top, left, bottom + 1, right + 1};
        return answer;
    }
}",https://github.com/rlaalsxo/CodingTest,2023. 9. 7,60,3
2023. 9. 7 오후 7:28:24,김민태,Unity,61 - 개인정보 수집 유효기간,"using System;
using System.Collections.Generic;

public class Solution {
    public int[] solution(string today, string[] terms, string[] privacies) {
        List<int> list = new List<int>();
        int todayYear = int.Parse(today.Split('.')[0]);
        int todayMonth = int.Parse(today.Split('.')[1]);
        int todayDay = int.Parse(today.Split('.')[2]);
        int todaySum = (todayYear * 12 * 28) + (todayMonth * 28) + todayDay;
        
        string[] termsCode = new string[terms.Length];
        int[] termsMonth = new int[terms.Length];
        
        for(int i = 0; i < terms.Length; i++)
        {
            termsCode[i] = terms[i].Split(' ')[0];
            termsMonth[i] = int.Parse(terms[i].Split(' ')[1]);
        }
        
        for(int i = 0; i < privacies.Length; i++)
        {
            string[] temp = privacies[i].Split('.', ' ');
            int year = int.Parse(temp[0]);
            int month = int.Parse(temp[1]);
            int day = int.Parse(temp[2]);
            int num = Array.IndexOf(termsCode, temp[3]);
            month += Convert.ToInt32(termsMonth[num]);
            int sum = (year * 12 * 28) + (month* 28) + day - 1;
            
            if(todaySum > sum)
            {
                list.Add(i + 1);
            }
        }
        
        int[] answer = list.ToArray();
        return answer;
    }
}",https://github.com/rlaalsxo/CodingTest,2023. 9. 7,61,3
2023. 9. 7 오후 7:41:14,신해준,Unity,36 - 숫자 문자열과 영단어,"using System;
using System.Text.RegularExpressions;
using System.Collections.Generic;

public class Solution
{
    public int solution(string s)
    {
        Dictionary<string, int> wordToNumber = new Dictionary<string, int>
        {
            { ""zero"", 0 },
            { ""one"", 1 },
            { ""two"", 2 },
            { ""three"", 3 },
            { ""four"", 4 },
            { ""five"", 5 },
            { ""six"", 6 },
            { ""seven"", 7 },
            { ""eight"", 8 },
            { ""nine"", 9 }
        };

        foreach (var pair in wordToNumber)
        {
            s = Regex.Replace(s, pair.Key, pair.Value.ToString());
        }

        return int.Parse(s);
    }
}
",,2023. 9. 7,36,2
2023. 9. 7 오후 7:57:19,김민태,Unity,62 - 달리기 경주,"using System;
using System.Collections.Generic;

public class Solution {
    public string[] solution(string[] players, string[] callings) {
        Dictionary<string, int> dic = new Dictionary<string, int>();
        
        for(int i = 0; i < players.Length; i++)
        {
            dic.Add(players[i], i);
        }
        
        foreach(string call in callings)
        {
            int rank = dic[call];
            string overtake = players[rank - 1];
            
            players[rank - 1] = call;
            players[rank] = overtake;
            
            dic[call] = rank - 1;
            dic[overtake] = rank;
        }
        
        return players;
    }
}",https://github.com/rlaalsxo/CodingTest,2023. 9. 7,62,3
2023. 9. 7 오후 8:36:04,김민태,Unity,63 - 공원 산책,"using System;

public class Solution
{
    int maxX = 0;
    int maxY = 0;

    public int[] solution(string[] park, string[] routes)
    {
        maxX = park[0].Length;
        maxY = park.Length;

        int[] answer = new int[2];

        int x = 0;
        int y = 0;

        for (int i = 0; i < park.Length; i++)
        {
            int index = park[i].IndexOf(""S"");
            if (index != -1)
            {
                x = index;
                y = i;
                break;
            }
        }

        foreach (string route in routes)
        {
            string[] routeInfo = route.Split("" "");

            string dir = routeInfo[0];
            int movePos = int.Parse(routeInfo[1]);

            int nextY = y;
            int nextX = x;
            bool isCheck = true;

            for (int i = 0; i < movePos; i++)
            {
                switch (dir)
                {
                    case ""N"":
                        nextY--;
                        break;
                    case ""S"":
                        nextY++;
                        break;
                    case ""W"":
                        nextX--;
                        break;
                    case ""E"":
                        nextX++;
                        break;
                }

                if (IsOderCheck(park, nextY, nextX) == false)
                {
                    isCheck = false;
                    break;
                }
            }
            if (isCheck)
            {
                x = nextX;
                y = nextY;
            }
        }
        return new int[2] { y, x };
    }

    bool IsOderCheck(string[] park, int y, int x)
    {
        if (y < 0 || y >= maxY)
            return false;
        if (x < 0 || x >= maxX)
            return false;
        if (park[y][x] == 'X')
            return false;

        return true;
    }
}",https://github.com/rlaalsxo/CodingTest,2023. 9. 7,63,3
2023. 9. 7 오후 8:38:30,서재민,Unity,7 - 자연수 뒤집어 배열로 만들기,"public class Solution {
    public int[] solution(long n) {
        string a=n.ToString();
        int[] answer = new int[a.Length];
        for(int i=0;i<a.Length;i++){
            answer[i]=(int)(n%10);
            n=n/10;
        }
        return answer;
    }
}",https://github.com/SeoJaeMin619/algorithm,2023. 9. 7,7,1
2023. 9. 7 오후 8:41:18,김민태,Unity,64 - 신고 결과 받기,"using System;
using System.Linq;
using System.Collections.Generic;
 
public class Solution {
    
    public int[] solution(string[] id_list, string[] report, int k) {
        Dictionary<string, List<string>> reportedIds = new Dictionary<string, List<string>>();
        Dictionary<string, int> reportedCount = new Dictionary<string, int>();
        
        report = report.Distinct().ToArray();
        
        for(int i = 0; i < report.Length; i++)
        {
            string[] reportSplit = report[i].Split(' ');
            string reportId = reportSplit[0];
            string reportedId = reportSplit[1];
            
            if (reportedIds.ContainsKey(reportId))
                reportedIds[reportId].Add(reportedId);
            else
                reportedIds.Add(reportId, new List<string> {reportedId});
            
            if (reportedCount.ContainsKey(reportedId))
                reportedCount[reportedId]++;
            else
                reportedCount.Add(reportedId, 1);
        }
        List<int> answerList = new List<int>();
 
        for(int i = 0; i < id_list.Length; i++){
            int sendCount = 0;
            
            if(reportedIds.ContainsKey(id_list[i])){
                for(int j = 0; j < reportedIds[id_list[i]].Count; j++)
                {
                    string reportedId = reportedIds[id_list[i]][j];
                    if(reportedCount.ContainsKey(reportedId))
                    {
                        if(reportedCount[reportedId] >= k)
                        {
                            sendCount++;
                        }
                    }
                }
            }
            answerList.Add(sendCount);
        }
        int[] answer = answerList.ToArray();
        
        return answer;
    }
}",https://github.com/rlaalsxo/CodingTest,2023. 9. 7,64,3
2023. 9. 7 오후 8:41:39,김민태,Unity,65 - 최댓값과 최솟값,"using System;
using System.Linq;

public class Solution
{
        public string solution(string s)
        {
            string answer = """";
            string[] s_array = s.Split(' ');
            int[] num_array = Array.ConvertAll(s_array, num => int.Parse(num));
            answer = num_array.Min().ToString() + "" "" + num_array.Max().ToString();
            return answer;
        }
}",https://github.com/rlaalsxo/CodingTest,2023. 9. 7,65,3
2023. 9. 7 오후 8:49:14,김민태,Unity,66 - JadenCase 문자열 만들기,"public class Solution {
    public string solution(string s) {
        string answer = """";
        char[] charArr = s.ToLower().ToCharArray();
        charArr[0] = char.ToUpper(charArr[0]);
        answer += charArr[0];
        for(int i = 1; i < charArr.Length; i++)
        {
            if(charArr[i - 1] == ' ')
            {
                charArr[i] = char.ToUpper(charArr[i]);
            }
            answer += charArr[i];
        }
        return answer;
    }
}",https://github.com/rlaalsxo/CodingTest,2023. 9. 7,66,3
2023. 9. 7 오후 8:52:42,강성호,Unity,53 - 숫자 짝꿍,"using System;
using System.Collections.Generic;
using System.Linq;

public class Solution {
    public string solution(string X, string Y) {
       string answer = """";
		int[] arrX = new int[10];
		int[] arrY = new int[10];

		for(int i = 0; i < X.Length; i++)
		{
			arrX[X[i] - '0']++;
		}

		for (int i = 0; i < Y.Length; i++)
		{
			arrY[Y[i] - '0']++;
		}

		for(int i = 9; i >= 0; i--)
		{
			if (arrY[i] == 0 || arrX[i] == 0) continue;

			int min = Math.Min(arrX[i], arrY[i]);
			answer += string.Concat(Enumerable.Repeat(i, min));
		}
        
        if (answer.Length == 0)
			answer = ""-1"";
		else if (answer[0] == '0')
			answer = ""0"";
		return answer;
    }
}",,2023. 9. 7,53,2
2023. 9. 7 오후 8:57:39,배인호,Unity,49 - 덧칠하기,"using System;

public class Solution
{
    public int solution(int n, int m, int[] section)
    {
        int answer = 0;
        int index = section.Length;
        int nowIndex = 0;
        int checkIndex = 1;

        while (true)
        {
            if (checkIndex <= index - 1)
            {
                if ((section[nowIndex] + m - 1) >= section[checkIndex])
                {
                    checkIndex++;
                }
                else
                {
                    answer++;
                    nowIndex = checkIndex;
                }
            }
            else
            {
                answer++;
                break;
            }
        }

        return answer;
    }
}
",https://github.com/cutlake2000/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/161989.%E2%80%85%EB%8D%A7%EC%B9%A0%ED%95%98%EA%B8%B0,2023. 9. 7,49,2
2023. 9. 7 오후 9:26:03,신해준,Unity,44 - 2016년,"using System;

public class Solution
{
    public string solution(int a, int b)
    {
        DateTime date = new DateTime(2016, a, b); // 2016년 a월 b일의 날짜 생성
        string answer = date.ToString(""ddd"").ToUpper(); // 요일을 대문자로 변환하여 반환

        return answer;
    }
}
",,2023. 9. 7,44,2
2023. 9. 7 오후 10:01:30,임현진,Unity,10 - 정수 내림차순으로 배치하기,"using System;

public class Solution {
    public long solution(long n) {
        long answer = 0;
        string sn = n.ToString();
        int[] iarray = new int[sn.Length];
        for (int i = 0; i < sn.Length; ++i)
        {
            iarray[i] = int.Parse(sn[i].ToString());
        }
        Array.Sort(iarray);

        for (int num = 1; num < sn.Length; ++num)
        {
            answer += iarray[num] * (long)Math.Pow(10,num);
        }
        answer += iarray[0];

        return answer;
    }
}",https://github.com/pporrorro/CodeKata_programmers,2023. 8. 31,10,1
2023. 9. 7 오후 10:02:37,임현진,Unity,11 - 하샤드 수,"using System;

public class Solution {
    public bool solution(int x) {
                bool answer = true;
                string strx = x.ToString();
                int totalsum = 0;

                for (int i = 0; i < strx.Length; i++)
                {
                    totalsum += Convert.ToInt32(strx[i].ToString());
                }

                if (x % totalsum != 0) answer = false; 

                return answer;
    }
}",https://github.com/pporrorro/CodeKata_programmers,2023. 9. 1,11,1
2023. 9. 7 오후 10:03:42,임현진,Unity,8 - 문자열을 정수로 바꾸기,"public class Solution {
    public int solution(string s) {
        int answer = 0;
        answer = int.Parse(s);
        return answer;
    }
}",https://github.com/pporrorro/CodeKata_programmers,2023. 8. 30,8,1
2023. 9. 7 오후 10:04:19,임현진,Unity,9 - 정수 제곱근 판별,"using System;

public class Solution {
    public long solution(long n) {
        long answer = -1;
        double lootn = Math.Sqrt(n);
        if (lootn % 1 == 0 && lootn > 0)
        {
            answer = (long)((lootn + 1) * (lootn + 1));
        }
        
        return answer;
    }
}",https://github.com/pporrorro/CodeKata_programmers,2023. 8. 30,9,1
2023. 9. 8 오전 12:01:25,최석준,Unity,11 - 하샤드 수,"#include <stdio.h>
#include <stdbool.h>
#include <stdlib.h>

bool solution(int x) {
    bool answer = true;
    int sum = 0;
    int n = x;

    while(x)
    {
        sum += x%10;
        x /= 10;
    }

    if(n%sum == 0)
        answer = true;

    else
        answer = false;

    return answer;
}
",,2023. 9. 7,11,1
2023. 9. 8 오전 2:02:47,김윤경,Unity,11 - 하샤드 수,"public class Solution {
    public bool solution(int x) {
        bool answer = true;
        int sumOfDigits = 0;
            string str = x.ToString(); // ""18""
            char[] arr = str.ToCharArray(); // 1, 8

            for(int i = 0; i < arr.Length; i++)
            {
                int digit = int.Parse(str[i].ToString());
                sumOfDigits += digit;
            }

            if (x % sumOfDigits == 0)
            {
                answer = true;
            }
            else
            {
                answer = false;
            }
        return answer;
    }
}",,2023. 9. 7,11,1
2023. 9. 8 오전 6:58:47,신해준,Unity,37 - 문자열 내 마음대로 정렬하기,"using System;
using System.Collections.Generic;

public class Solution
{
    public string[] solution(string[] strings, int n)
    {
        // 문자열을 인덱스 n의 글자를 기준으로 오름차순 정렬
        Array.Sort(strings, (a, b) =>
        {
            char charA = a[n];
            char charB = b[n];

            if (charA == charB)
            {
                // 인덱스 n의 글자가 같을 경우 문자열 전체를 비교하여 정렬
                return string.Compare(a, b);
            }

            return charA - charB;
        });

        return strings;
    }
}
",,2023. 9. 8,37,2
2023. 9. 8 오전 8:37:17,신해준,Unity,42 - 콜라 문제,"public class Solution
{
    public int solution(int a, int b, int n)
    {
        int totalBottles = 0; // 받은 콜라 병의 수를 초기화

        while (n >= a)
        {
            int exchangedBottles = n / a; // 빈 병을 가져다주면 받는 콜라 병의 수
            totalBottles += exchangedBottles * b; // 빈 병을 가져다주고 받은 콜라 병을 누적
            n = exchangedBottles * b + n % a; // 빈 병을 가져다주고 남은 빈 병 개수를 업데이트
        }

        return totalBottles;
    }
}
",,2023. 9. 8,42,2
2023. 9. 8 오전 9:08:31,김민태,Unity,67 - 이진 변환 반복하기,"using System;

public class Solution {
    public int[] solution(string s) {
        int[] answer = new int[2];
        bool count = true;
        int len = 0;
        int len2 = 0;
        while(count)
        {
            len = s.Length;
            if(s.Contains(""0""))
            {
                s = string.Concat(s.Split(""0""));
            }
            len2 = s.Length;
            answer[1] += len - len2;
            s = Convert.ToString(len2,2);
            answer[0]++;
            if(s.Length == 1)
            {
                count = false;
            }
        }
        return answer;
    }
}",https://github.com/rlaalsxo/CodingTest,2023. 9. 8,67,3
2023. 9. 8 오전 9:22:15,김민태,Unity,68 - 피보나치 수,"public class Solution {
    public int solution(int n) {
        int answer = 0;
        int fist = 0;
        int second = 1;
        
        for(int i=2; i<=n; i++)
        {
            answer = (fist+second)%1234567;
            fist = second %1234567 ;
            second = answer ;
        }
        answer = answer;
        
        return answer;
    }
}",https://github.com/rlaalsxo/CodingTest,2023. 9. 8,68,3
2023. 9. 8 오전 9:30:42,김민태,Unity,69 - 카펫,"public class Solution {
    public int[] solution(int brown, int yellow) {
        int[] answer = new int[2];
        int x, y;
        int width = brown + yellow;
        for(int i=1; i<=width;i++)
        {
            x = i;
            y = width / x;
            if (x > y || x==y)
            {
                if((width - ((x * 2) + (y * 2) - 4))==yellow)
                {
                    answer[0] = x;
                    answer[1] = y;
                    break;
                }
            }
        }
        return answer;
    }
}",https://github.com/rlaalsxo/CodingTest,2023. 9. 8,69,3
2023. 9. 8 오전 10:02:24,이세진,Unity,27 - 행렬의 덧셈,"using System;

public class Solution
{
    public int[,] solution(int[,] arr1, int[,] arr2)
    {
        int[,] answer = new int[arr1.GetLength(0),arr1.GetLength(1)];
        
        for (int i = 0; i < arr1.GetLength(0); i++)
        {
            for (int j = 0; j < arr1.GetLength(1); j++)
            {
                answer[i, j] = arr1[i, j] + arr2[i, j];
            }
        }
        return answer;
    }
}",,2023. 9. 8,27,1
2023. 9. 8 오전 10:02:29,이정환,Unity,36 - 숫자 문자열과 영단어,"using System;
using System.Collections.Generic;

public class Solution
{
       public int solution(string s)
        {
            char[] chars = s.ToCharArray();
            List<int> answer = new List<int>();
            for (int index = 0; index < s.Length; index++)
            {
                char cu= chars[index];
                char cuPlus;

                if (Char.IsLetter(cu))
                {
                    switch (cu)
                    {
                        case 'z':
                            answer.Add(0);
                            index += 3;
                            break;
                        case 'o':
                            answer.Add(1);
                            index += 2;
                            break;
                        case 't':
                            cuPlus = chars[index + 1];
                            if (cuPlus == 'w')
                            {
                                answer.Add(2);
                                index += 2;
                            }
                            else { 
                                answer.Add(3);
                                index += 4;
                            }
                            break;
                        case 'f':
                            cuPlus = chars[index + 1];
                            if (cuPlus == 'o')
                            {
                                answer.Add(4);
                                index += 3;
                            }
                            else
                            {
                                answer.Add(5);
                                index += 3;
                            }
                            break;
                        case 's':
                            cuPlus = chars[index + 1];
                            if (cuPlus == 'i')
                            {
                                answer.Add(6);
                                index += 2;
                            }
                            else
                            {
                                answer.Add(7);
                                index += 4;
                            }
                            break;
                        case 'e':
                            answer.Add(8);
                            index += 4;
                            break;
                        case 'n':
                            answer.Add(9);
                            index += 3;
                            break;
                    }
                }
                else
                {
                    answer.Add((int)((int)cu-'0'));
                }

            }

            int result=0;
            foreach (int num in answer)
            {
                result *= 10;
                result += num;
            }
            return result;
        }
    }",,2023. 9. 8,36,2
2023. 9. 8 오전 10:03:26,김경원,Unity,1 - 짝수와 홀수,"public class Solution {
    public string solution(int num) {
        string answer = """";
        if(num%2==0)
            answer+=""Even"";
        else
            answer+=""Odd"";
        return answer;
    }
}",,2023. 9. 8,1,1
2023. 9. 8 오전 10:05:03,신해준,Unity,40 - 가장 가까운 같은 글자,"using System.Collections.Generic;

public class Solution
{
    public int[] solution(string s)
    {
        int[] result = new int[s.Length]; // 결과를 저장할 배열
        Dictionary<char, int> lastSeen = new Dictionary<char, int>(); // 각 글자의 마지막 등장 위치를 저장하는 딕셔너리

        for (int i = 0; i < s.Length; i++)
        {
            char currentChar = s[i];

            if (lastSeen.ContainsKey(currentChar))
            {
                int lastIndex = lastSeen[currentChar];
                result[i] = i - lastIndex; // 현재 위치와 마지막 등장 위치의 차이를 저장
            }
            else
            {
                result[i] = -1; // 이 글자가 이전에 등장하지 않았다면 -1로 표시
            }

            lastSeen[currentChar] = i; // 현재 글자의 등장 위치를 업데이트
        }

        return result;
    }
}
",,2023. 9. 8,40,2
2023. 9. 8 오전 10:05:48,김형중,Unity,35 - 시저 암호,"public class Solution {
    public string solution(string s, int n) {
        string answer = """";
        
        char[] strArr = s.ToCharArray();
        
        for (int i = 0; i < strArr.Length; i++)
        {
            if (strArr[i] == ' ')
            {
                continue;
            }
            int tempNum = Convert.ToInt32(strArr[i]) + n;
            
            if(strArr[i] >= 'A' && strArr[i] <= 'Z')
            {
                if(tempNum > 'Z')
                {
                    tempNum -= 26;
                }
            }
            else
            {
                if(tempNum > 'z')
                {
                    tempNum -= 26;
                }
            }
            
            strArr[i] = Convert.ToChar(tempNum);
        }
        answer = new string(strArr);
        
        return answer;
    }
}",,2023. 9. 8,35,2
2023. 9. 8 오전 10:07:22,김경원,Unity,3 - 자릿수 더하기,"using System;

public class Solution
    {
        public int solution(int n)
        {
            int answer = 0;
            // 입력된 값을 문자열로 변환한다.
            string temp = n.ToString();
            // for문을 돌려서 문자열의 한글자한글자를 int형으로 바꿔서 answer에 더한다.
            for (int i = 0; i < temp.Length; i++)
            {
                answer += (int)Char.GetNumericValue(temp[i]);
            }
            return answer;
        }
    }",,2023. 9. 8,3,1
2023. 9. 8 오전 10:09:20,권선영,Unity,10 - 정수 내림차순으로 배치하기,"using System;

public class Solution {
    public long solution(long n) {
     string s = n.ToString();
     char[] c = s.ToCharArray();
     Array.Sort(c);
     Array.Reverse(c);
     return long.Parse(new string(c));

    }
}",https://github.com/Tealss,2023. 9. 8,10,1
2023. 9. 8 오전 10:09:45,최하나,Unity,6 - x만큼 간격이 있는 n개의 숫자,"using System.Collections.Generic;
public class Solution {
    public long[] solution(int x, int n) {
    List<long> answer = new List<long>();
    int count = 1;

    for (long i = 0; i < n; i++)
    {
    answer.Add((long)x * count);
    count++;
    }
    return answer.ToArray();
    }
}",https://github.com/coco0715/AlgorithmCodeKata,2023. 9. 8,6,1
2023. 9. 8 오전 10:10:03,차요한,Unity,43 - 명예의 전당 (1),"using System;
using System.Collections.Generic;
using System.Linq;

public class Solution {
    public int[] solution(int k, int[] score) {
        int[] answer = new int[score.Length];
        List<int> list = new List<int>();
        
        for(int i = 0; i < score.Length; i++)
        {
            if(list.Count == k)
            {
                if(list[0] > score[i])
                {
                    answer[i] = list[0];
                    continue;
                }
                list.RemoveAt(0);
            }
            list.Add(score[i]);
            list.Sort();
            answer[i] = list[0];
        }
        return answer;
    }
}",https://github.com/HOHOJO/Algorithm_test,2023. 9. 8,43,2
2023. 9. 8 오전 10:12:29,김명식,Unity,29 - 최대공약수와 최소공배수,"public class Solution {
    public int[] solution(int n, int m) {
        int[] answer = { };
        int temp, remain, firstNum = n, SecondNum = m;
        if (n < m)
        {
            temp = firstNum;
            firstNum = SecondNum;
            SecondNum = temp;
        }
        while (SecondNum != 0)
        {
            remain = firstNum % SecondNum;
            firstNum = SecondNum;
            SecondNum = remain;

        }
        int GCD = firstNum;
        int LCM = n * m / GCD;

        answer = new int[] { GCD, LCM };
        return answer;
    }
}",https://github.com/D0ryeon/Algorithm-Code-Kata,2023. 9. 8,29,1
2023. 9. 8 오전 10:13:12,권선영,Unity,12 - 두 정수 사이의 합,"public class Solution {
    public long solution(int a, int b) {
        long answer = 0;
        if(a > b)
        {
            int c = a;
            a = b;
            b = c;
        }
        for(int i = a; i <= b; i++)
        {
            answer += i;
        }
        return answer;
    }
}",https://github.com/Tealss,2023. 9. 8,12,1
2023. 9. 8 오전 10:13:35,박지원,Unity,38 - K번째수정렬,"using System;

public class Solution {
    public int[] solution(int[] array, int[,] commands) {
        int commandsL = commands.GetLength(0);
        int[] answer = new int[commandsL];
        for(int index = 0; index < commandsL; index++){
            int i = commands[index, 0];
            int j = commands[index, 1];
            int k = commands[index, 2];
                int[] slicedArray = new int[j - i + 1];

            for(int index2 = 0; index2 <= j - i; index2++)
                slicedArray[index2] = array[index2 + i - 1];
            
            Array.Sort(slicedArray);
            answer[index] = slicedArray[k-1];
        }

        return answer;
    }
}",https://github.com/jwonp9127/AlgorithmStudy/tree/7b1fa33db56165f2ec57c6a0602026a33c423d49/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/42748.%E2%80%85K%EB%B2%88%EC%A7%B8%EC%88%98,2023. 9. 8,38,2
2023. 9. 8 오전 10:14:03,윤지석,Unity,24 - 문자열 내림차순으로 배치하기,"using System.Linq;

public class Solution {
    public string solution(string s) {
        char[] charArray = s.ToCharArray();
        string answer = new string(charArray.OrderByDescending(ch => ch).ToArray());
        
        return answer;
    }
}",https://github.com/noyyo/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12917.%E2%80%85%EB%AC%B8%EC%9E%90%EC%97%B4%E2%80%85%EB%82%B4%EB%A6%BC%EC%B0%A8%EC%88%9C%EC%9C%BC%EB%A1%9C%E2%80%85%EB%B0%B0%EC%B9%98%ED%95%98%EA%B8%B0,2023. 9. 8,24,1
2023. 9. 8 오전 10:14:21,김형중,Unity,36 - 숫자 문자열과 영단어,"using System;

public class Solution {
    public int solution(string s) {
        int answer = 0;
        
        s = s.Replace(""zero"", ""0"");
        s = s.Replace(""one"", ""1"");
        s = s.Replace(""two"", ""2"");
        s = s.Replace(""three"", ""3"");
        s = s.Replace(""four"", ""4"");
        s = s.Replace(""five"", ""5"");
        s = s.Replace(""six"", ""6"");
        s = s.Replace(""seven"", ""7"");
        s = s.Replace(""eight"", ""8"");
        s = s.Replace(""nine"", ""9"");
        
        int k;
        bool strToInt = int.TryParse(s, out k);
        if(strToInt)
        {
            answer = k;
        }
        
        return answer;
    }
}",,2023. 9. 8,36,2
2023. 9. 8 오전 10:16:24,문현우,Unity,27 - 행렬의 덧셈,"public class Solution {
    public int[,] solution(int[,] arr1, int[,] arr2) {
        int answerRow = arr1.GetLength(0);
        int answerCol = arr1.GetLength(1);
        int[,] answer = new int[answerRow, answerCol];
        for(int i = 0; i < answerRow; i ++){
            for(int j = 0; j < answerCol; j ++){
                answer[i,j] = arr1[i,j] + arr2[i,j];
            }
        }
        return answer;
    }
}",https://github.com/Munch310/Algorithm-Csharp/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12950.%E2%80%85%ED%96%89%EB%A0%AC%EC%9D%98%E2%80%85%EB%8D%A7%EC%85%88,2023. 9. 8,27,1
2023. 9. 8 오전 10:17:29,김광수,Unity,77 - n^2 배열 자르기,"using System;
using System.Collections.Generic;

public class Solution {
    // n을 가지고 n행 n열의 2차원 배열을 만들고 n+1로 만들어야겠네
    // 인덱스를 1~n까지 채운다
    
    // 그런데
    // 123
    // 223
    // 333
    
    // 아마 (10^7)^2 배열을 만들지 못해서 발생하는 문제가 아닐까 생각함
    
    // 구간을 미리 제한해서 배열을 만들어야겠지?
    
    // 1차원 배열 상태에서의 left ~ right 구간을 미리 계산할려면
    
    // left / n = 몇번째 열인지 찾는다. 0 일때 1열
    // left % n = 몇번쨰 행인지 찾는다. 0 일때 1행
    // right / n = 몇번째 열인지 찾는다.
    // right % n = 몇번째 행인지 찾는다.
    
    // 그리고 2차원 배열 -> 1차원 배열로 만드는 과정을 하지않고
    // 바로 1차원 배열로 만들어준다
    
    // -> 시작열과 끝열이 같은 열일떄도 고려
    
    public long[] solution(int n, long left, long right) 
    { 
        return MakeArray(n, left, right);
    }
    
    public long[] MakeArray(long n, long left, long right)
    {
        List<long> rank1List = new List<long>();
        
        long startColumn = left/ n + 1;
        long startRow = left % n + 1;
        
        long endColumn = right/ n + 1;
        long endRow = right % n + 1;
        
        // 시작열 중간열 끝열을 나누어준다.
        
        // 만약에 시작과 끝열이 같다면?
        
        if (startColumn < endColumn)
        {
            for (long i = startRow; i <= n; i++)
            {
                rank1List.Add(i > startColumn ? i : startColumn);
            }
        
        
            for(long i =startColumn+1; i< endColumn; i++)
            {
                for(long j=1; j <= n; j++)
                {
                    rank1List.Add(j > i ? j : i );
                }
            }
        
            for (long i =1 ; i<= endRow; i++)
            {
                rank1List.Add(i > endColumn ? i : endColumn);
            }    
        }
        else
        {
            // 만약에 시작과 끝열이 같다면?
            
            for (long i= startRow; i<= endRow; i++)
            {
                rank1List.Add(i > startColumn ? i : startColumn);
            }
        }
        
        
        return rank1List.ToArray();
    }    
    
}
",https://github.com/kksoo0131/Study/commit/ee27a6d6d44dcbb9a8a278b59f9815abcffaab75,2023. 9. 8,77,3
2023. 9. 8 오전 10:18:37,이홍준,Unity,42 - 콜라 문제,"using System;

public class Solution {
    public int solution(int a, int b, int n) {
        int answer = 0;
        int temp = 0;
        
        while(n >= a)
        {
            temp = 0;
            temp += (n / a) * b;
            answer += temp;
            n -= (temp / b) * a;
            n += temp;
        }
        
        return answer;
    }
}",https://github.com/dlghdwns97/Study/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/unrated/132267.%E2%80%85%EC%BD%9C%EB%9D%BC%E2%80%85%EB%AC%B8%EC%A0%9C,2023. 9. 8,42,2
2023. 9. 8 오전 10:19:26,이승연,Unity,25 - 부족한 금액 계산하기,"using System;

class Solution
{
    public long solution(int price, int money, int count)
    {
        long sales=0;
        for(int i=1;i<=count;i++)
        {
            sales+=price*i;
        }
        
        long fal=sales-money;
        
            return fal > 0? fal : 0;
        

    }
}",,2023. 9. 8,25,1
2023. 9. 8 오전 10:20:45,김경환,Unity,63 - 공원 산책,"using System;

public class Solution
{

    public int[] solution(string[] park, string[] routes)
    {
        int[] dx = { 0, 0, 1, -1 };
        int[] dy = { 1, -1, 0, 0 };
        int x = 0, y = 0, height = park.Length, width = park[0].Length;

        for (int i = 0; i < height; i++)
        {
            for (int j = 0; j < width; j++)
            {
                if (park[i][j] == 'S')
                {
                    x = i;
                    y = j;
                }
            }
        }

        foreach (string s in routes)
        {
            string[] split = s.Split("" "");

            int dir = -1;

            switch (split[0])
            {
                case ""E"":
                    dir = 0;
                    break;
                case ""W"":
                    dir = 1;
                    break;
                case ""S"":
                    dir = 2;
                    break;
                case ""N"":
                    dir = 3;
                    break;
            }

            int distance = Convert.ToInt32(split[1]);

            if (x + distance * dx[dir] >= height || x + distance * dx[dir] < 0 || y + distance * dy[dir] >= width || y + distance * dy[dir] < 0)
                continue;

            bool flag = true;

            if (dir == 0)
            {  
                for(int i = y + 1; i <= y + distance; i++)
                {
                    if(park[x][i] == 'X')
                    {
                        flag = false;
                        break;
                    }
                }
            }

            if (dir == 1)
            {
                for (int i = y - 1; i >= y - distance; i--)
                {
                    if (park[x][i] == 'X')
                    {
                        flag = false;
                        break;
                    }
                }
            }

            if (dir == 2)
            {
                for (int i = x + 1; i <= x + distance; i++)
                {
                    if (park[i][y] == 'X')
                    {
                        flag = false;
                        break;
                    }
                }
            }

            if (dir == 3)
            {
                for (int i = x - 1; i >= x - distance; i--)
                {
                    if (park[i][y] == 'X')
                    {
                        flag = false;
                        break;
                    }
                }
            }

            if(flag)
            {
                x += (distance * dx[dir]);
                y += (distance * dy[dir]);
            }
        }

        return new int[] { x, y };
    }
}",https://github.com/kkh9700/algorithm,2023. 9. 8,63,3
2023. 9. 8 오전 10:22:36,김진성,Unity,24 - 문자열 내림차순으로 배치하기,"using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace Algorithm_009
{
    public class _024_DescendingString
    {
        public string solution(string s) // 그냥 문자 하나하나를 char로 따고 그걸 ASCII 10진법으로 바꾸면..?
        {
            List<char> sArray = new List<char>(); // 그냥 LINQ랑 stringBuilder를 썼다는 점에 의미를 둔다

            foreach (char c in s)
            {
                sArray.Add(c);
            }
            var arr = from c in sArray
                      orderby c descending
                      select c;

            StringBuilder sb = new StringBuilder();
            foreach (char c in arr)
            {
                sb.Append(c);
            }

            string answer = sb.ToString();
            return answer;
        }
    }
}
",https://github.com/GYALLERHORN/ALGORITHM,2023. 9. 8,24,1
2023. 9. 8 오전 10:23:23,조영오,Unity,51 - 로또의 최고 순위와 최저 순위,"using System;
using System.Collections.Generic;

public class Solution {
    public int[] solution(int[] lottos, int[] win_nums) {
        int lower = 0;
        int upper = 0;
        
        int lowerMatched = 0;
        int upperMatched = 0;
        
        //로또는 1~45의 번호 중 6개를 중복되지 않게 선택하여 순서 상관 없이 맞히는 것.
        //1등은 6개, 2등은 5개, ... 5등은 2개, 6등은 그 외의 경우이다.
        //0으로 표시된 부분을 제외했을 때, 당첨 가능한 최고 순위와 최저 순위를 구하라.
        
        //식별 가능한 부분에서만 맞추었다고 가정하면 최저 순위. 
        //0 으로 표시된 부분이 식별된 부분과 중복되지 않은 횟수만큼 더하면 최고 순위.
        
        List <int> lotto = new List<int>();
        
        foreach(int l in lottos){
            if(l != 0) {lotto.Add(l);}
        }
        
        //현재 식별된 숫자들 중 당첨 숫자와 일치하는 갯수 구하기(최저 순위) 
        foreach(int w in win_nums){
            if(lotto.Contains(w)){lowerMatched++;}
        }
        
        //식별되지 않은 숫자들이 무조건 당첨 숫자라 가정했을 때(최고 순위)
        upperMatched = lowerMatched + (lottos.Length - lotto.Count);
               
        lower = getRate(lowerMatched);
        upper = getRate(upperMatched);
        
        int[] answer = new int[2] {upper, lower};
        
        return answer;
    }
    
    public static int getRate(int matched){
        int rate = 7-matched;
        
        if(rate >= 7){
            rate = 6;
        }
        
        return rate;
    }
}",,2023. 9. 8,51,2
2023. 9. 8 오전 10:23:27,이소이,Unity,42 - 콜라 문제,"using System;

public class Solution {
    public int solution(int a, int b, int n) {
        int answer = 0;
        
        while (n != 0 && n >= a)
        {
            n = n - a + b;
            answer += b;
        }
        return answer;
    }
}",https://github.com/leesy015599/AlgorithmCodeKata/blob/master/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/unrated/132267.%E2%80%85%EC%BD%9C%EB%9D%BC%E2%80%85%EB%AC%B8%EC%A0%9C/%EC%BD%9C%EB%9D%BC%E2%80%85%EB%AC%B8%EC%A0%9C.cs,2023. 9. 8,42,2
2023. 9. 8 오전 10:23:36,조범준,Unity,43 - 명예의 전당 (1),"using System;

public class Solution {
    public int[] solution(int k, int[] score) {
        int[] answer = new int[score.Length];
        int[] temp = new int[k];
        int count = 0;
        int min = 0;
        for(int i = 0; i < score.Length; i++){
            if(temp[count] < score[i]){
                temp[count] = score[i];
            }
            for(int j = 0; j < k-1; j++){
                if(temp[j] < temp[j+1]){
                    min = temp[j];
                    temp[j] = temp[j+1];
                    temp[j+1] = min;
                }
            }
            answer[i] = temp[count];
            if(count<k-1){
                count++;
            }
        }
        return answer;
    }
}",https://github.com/KimMaYa1/BaekJoonEx,2023. 9. 8,43,2
2023. 9. 8 오전 10:24:54,신현주,Unity,40 - 가장 가까운 같은 글자,"using System;

public class Solution {
    public int[] solution(string s) {
        int[] answer = new int[s.Length];
        int idx = -1;
        for(int i =0 ; i < s.Length ; i++){
            idx =-1;
            for(int j = i-1; j >= 0; j--){
                if( s[i] == s[j]){
                    idx = i -j;
                    break;
                }
            }
            answer[i] = idx;
        }
        return answer;
    }
}",https://github.com/Shyunju/codeKata,2023. 9. 8,40,2
2023. 9. 8 오전 10:25:33,곽민규,Unity,12 - 두 정수 사이의 합,"public class Solution {
    public long solution(int a, int b) {
        long answer = 0;
        
        if (a < b ) {
            for (long i = a; i <= b; i++) {
                answer += i;
            }
        } else {
            for (long i = b; i <= a; i++) {
                answer += i;
            }
        }
        
        return answer;
    }
}",,2023. 9. 8,12,1
2023. 9. 8 오전 10:26:35,김예준,Unity,57 - 둘만의 암호,"#include <string>
#include <vector>

using namespace std;

string solution(string s, string skip, int index) {
    string answer = """";
    
    for (auto c : s)
    {
        int cnt = index;
        while (cnt != 0)
        {
            cnt--;
            c++;
            
            if (c == '{') c = 'a';
            
            for (int j = 0; j < skip.size(); j++)
            {
                if (c == skip[j]) cnt++;
            }
        }
        
        answer += c;
    }
    
    return answer;
}",,2023. 9. 8,57,3
2023. 9. 8 오전 10:26:38,최장범,Unity,37 - 문자열 내 마음대로 정렬하기,"using System;
public class Solution {
    public string[] solution(string[] strings, int n) {
        
        string[] answer = new string[strings.Length];
        
        //usun,ebed,acar 이런식으로 n번째 문자를 앞에 추가
        for(int i=0; i<strings.Length; i++)
        {
            answer[i] = (strings[i][n]) + strings[i];
        }
        
        //사전순으로 정렬
        Array.Sort(answer);
        
       //추가했던 접두어문자를 삭제(Substring)
        for(int j=0; j<strings.Length; j++)
        {
            answer[j] = answer[j].Substring(1);
        }
        
        return answer;
    }
}",,2023. 9. 8,37,2
2023. 9. 8 오전 10:26:49,장성림,Unity,49 - 덧칠하기,"using System;

public class Solution {
    public int solution(int n, int m, int[] section) {
        int answer = 0;
        int lastIndex = 0;
        for(int i = 0; i < section.Length; i++){
            if(section[i] > lastIndex){
                lastIndex = section[i] + m - 1;
                answer++;
            }
        }
        return answer;
    }
}",https://github.com/hoobhoob,2023. 9. 8,49,2
2023. 9. 8 오전 10:27:08,박준규,Unity,33 - 크기가 작은 부분,"using System;
using System.Collections.Generic;

public class Solution 
{
    public int solution(string t, string p) 
    {
        int answer = 0;
        int tlen = t.Length;
        int plen = p.Length;
        long pnum = Int64.Parse(p);
        List<long> list = new List<long>();
        string tp = """";
        for (int i = 0; i <= (tlen - plen); i++)
        {
            for (int j = i; j < (i+plen); j++)
            {
                tp += t[j];
            }
            long num = Int64.Parse(tp);
            tp = """";
            list.Add(num);
        }
        for (int k = 0; k < list.Count; k++)
        {
            if (list[k] <= pnum)
            {
                answer++;
            }
        }
        return answer;
    }
}",,2023. 9. 8,33,2
2023. 9. 8 오전 10:27:14,김민태,Unity,70 - 예상 대진표,"using System;

class Solution
{
    public int solution(int n, int a, int b)
    {
        int answer = 1;
        for(int i = 0; i < n / 2; i++)
        {   
            if((a % 2 == 0 && a - 1 == b)||(a % 2 != 0 && a + 1 ==b)) break;
            if(a % 2 == 0)
            {
                a = a / 2;
            }
            else
            {  
                a = (a + 1) / 2;
            }
            if(b % 2 == 0) 
            {
                 b = b / 2;
            }
            else 
            {
                b = (b + 1) / 2;
            }
            answer++;
        }
        return answer;
    }
}",https://github.com/rlaalsxo/CodingTest,2023. 9. 8,70,3
2023. 9. 8 오전 10:27:54,이경현,Unity,39 - 두 개 뽑아서 더하기,"public int[] solution(int[] numbers)
{
    List<int> answer = new List<int>();

    for(int i=0; i < numbers.Length; i++)
    {
        for(int j=i+1; j< numbers.Length; j++)
        {
            if (!answer.Contains(numbers[i] + numbers[j])) answer.Add(numbers[i] + numbers[j]);
        }
    }
    answer.Sort();
    return answer.ToArray();
}",https://github.com/516lkh/Algorithm,2023. 9. 8,39,2
2023. 9. 8 오전 10:27:54,박민호,Unity,43 - 명예의 전당 (1),"using System;
using System.Collections.Generic;
public class Solution {
    public int[] solution(int k, int[] score) {
        int[] answer = new int[score.Length];
        List<int> hallOfFame=new List<int>{};
        for(int i=0;i<score.Length;i++){
            if(hallOfFame.Count<k){
                hallOfFame.Add(score[i]);
                hallOfFame.Sort();
                answer[i] = hallOfFame[0];
            }
            else{
                hallOfFame.Add(score[i]);
                hallOfFame.Sort();
                hallOfFame.RemoveAt(0);
                answer[i] = hallOfFame[0];
            }
        }
        return answer;
    }
}",,2023. 9. 8,43,2
2023. 9. 8 오전 10:28:26,김도현A,Unity,11 - 하샤드 수,"using System;

public class Solution {
    public bool solution(int x) { 
        int originalX = x; 

        int sumOfDigits = 0; 

        while (x > 0) { 
            int digit = x % 10; 
            sumOfDigits += digit; 
            x /= 10; 
        } 
        return originalX % sumOfDigits == 0; 
    } 
}
",,2023. 9. 8,11,1
2023. 9. 8 오전 10:29:11,손병의,Unity,23 - 약수의 개수와 덧셈,"using System;

public class Solution 
{
    public int solution(int left, int right) 
    {
        int count = 0;
        int answer = 0;
        for(int i = left; i <= right; i++)
        {
            for(int j = 1; j <=i; j++)
            {
                if(i%j ==0)
                {
                    count++;
                }
            }
            if(count % 2 ==0)
            {
                answer += i;
            }
            else
            {
                answer -= i;
                count = 0;
            }
        }
        return answer;
    }
}",https://github.com/Son-BE/CodeKata1,2023. 9. 8,23,1
2023. 9. 8 오전 10:29:18,박지원,Unity,39 - 두 개 뽑아서 더하기,"using System;
using System.Collections.Generic;

public class Solution {
    public int[] solution(int[] numbers) {
        List<int> list = new List<int>();
        for(int i = 0; i < numbers.Length; i++)
            for(int j = i + 1; j < numbers.Length; j++)
                if(!list.Contains(numbers[i] + numbers[j])) list.Add(numbers[i] + numbers[j]);
        int[] answer = list.ToArray();
        Array.Sort(answer);
        return answer;
    }
}",https://github.com/jwonp9127/AlgorithmStudy/tree/e680a942866fad333376a84a6ce0240d926a4af5/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/68644.%E2%80%85%EB%91%90%E2%80%85%EA%B0%9C%E2%80%85%EB%BD%91%EC%95%84%EC%84%9C%E2%80%85%EB%8D%94%ED%95%98%EA%B8%B0,2023. 9. 8,39,2
2023. 9. 8 오전 10:29:41,안소정,Unity,21 - 수박수박수박수박수박수?,"public class Solution {
    public string solution(int n) {
        string answer = """";
        for (int i = 0; i < n; i++)       
            {
                if (i%2 ==0) answer += ""수"";
                else answer += ""박"";
            }
            
        
        return answer;
    }
}",,2023. 9. 8,21,1
2023. 9. 8 오전 10:30:06,우민규,Unity,29 - 최대공약수와 최소공배수,"public class Solution {
    public int[] solution(int n, int m) {
        int[] answer = new int[2];
        int min;
        int max;
        
        //최대공약수
        min = gcd(n, m);
        //최소공배수 두수의 곱 / 최대 공약수
        max = (n * m) / min;
        
        answer[0] = min;
        answer[1] = max;
        return answer;
    }
    public int gcd(int n, int m)
    {
        //두 수 n, m 이 있을 때 어느 한 수가 0이 될 때 까지
        //gcd(m, n%m) 의 재귀함수 반복
        if(m==0) return n;
        
        //여기서 재귀
        //min에서 호출->파라미터값 판별(m이 0인 경우만 n을 반환)
        //그 외의 경우 자신을 재참조 n에 m의 값을 넣고, n%m한다.
        //n%m이 0이 될때까지 계속해서 반복
        else return gcd(m, n%m);
    }
}",,2023. 9. 8,29,1
2023. 9. 8 오전 10:30:13,신해준,Unity,34 - 최소직사각형,"using System;
using System.Linq;

public class Solution
{
    public int solution(int[,] sizes)
    {
        int maxW = 0; // 가장 큰 가로 길이
        int maxH = 0; // 가장 큰 세로 길이

        for (int i = 0; i < sizes.GetLength(0); i++)
        {
            int w = sizes[i, 0];
            int h = sizes[i, 1];

            // 현재 명함의 가로 길이와 세로 길이를 비교하여 큰 값을 maxW로 설정
            maxW = Math.Max(maxW, Math.Max(w, h));
            
            // 현재 명함의 가로 길이와 세로 길이를 비교하여 작은 값을 maxH로 설정
            maxH = Math.Max(maxH, Math.Min(w, h));
        }

        return maxW * maxH;
    }
}
",,2023. 9. 8,34,2
2023. 9. 8 오전 10:30:48,김호연,Unity,34 - 최소직사각형,"using System;

public class Solution {
    public int solution(int[,] sizes) {
        int answer = 0;
        // 가로 길이, 세로 길이의 최대값을 구해야함
        // 가로로 눕혀 수납 = 가로 길이와 세로 길이를 바꿈
        int maxW = 0;
        int maxH = 0;
        for(int i = 0; i < sizes.GetLength(0); i++)
        {
            int w = sizes[i,0];
            int h = sizes[i,1];
            
            if(h > w)  // 가로로 눕혀 수납
            {
                w = sizes[i,1];
                h = sizes[i,0];
            }
            if(h > maxH) // 최대 세로 찾기
            {
                maxH = h;
            }
            if(w > maxW) // 최대 가로 찾기
            {
                maxW = w;
            }
            answer = maxH * maxW;
        }
        return answer;
    }
}",,2023. 9. 8,34,2
2023. 9. 8 오전 10:31:18,김도현B,Unity,46 - 과일 장수,"using System;
using System.Collections.Generic;
using System.Linq;
public class Solution {
    public int solution(int k, int m, int[] score) {
        int answer = 0;
        List<int> list = score.ToList();
        list.Sort((n1, n2) => n2.CompareTo(n1));
        for(int i = m;  i <=  list.Count; i = i + m)
        {
            answer += m * list[i - 1];
        }
        return answer;
    }
}",https://github.com/subscriptioncat/Algorithm,2023. 9. 8,46,2
2023. 9. 8 오전 10:31:47,김정민,Unity,60 - 바탕화면 정리,"public class Solution
        {
            const int EMPTY = 0;
            const int FILE = 1;

            static int[] dx = { -1, 1, 0, 0 };
            static int[] dy = { 0, 0, -1, 1 };

            static int[,] screen;
            static bool[,] visited;

            static Queue<int[]> queue;

            static int minStartX = 50, minStartY = 50;
            static int maxStartX = 0, maxStartY = 0;

            public int[] solution(string[] wallpaper)
            {
                screen = new int[wallpaper.Length, wallpaper[0].Length];
                visited = new bool[wallpaper.Length, wallpaper[0].Length];

                queue = new Queue<int[]>();

                for (int i = 0; i < wallpaper.Length; i++)
                {
                    for (int j = 0; j < wallpaper[i].Length; j++)
                    {
                        char c = wallpaper[i][j];
                        if (c == '.') screen[i, j] = EMPTY;
                        else screen[i, j] = FILE;
                    }
                }

                BFS(0, 0);

                int[] answer = new int[] {minStartX, minStartY, maxStartX + 1, maxStartY + 1};
                return answer;
            }

            static void BFS(int x, int y)
            {
                visited[x, y] = true;
                queue.Enqueue(new int[] {x, y});

                while (queue.Count > 0)
                {
                    int[] cur = queue.Dequeue();
                    int curX = cur[0];
                    int curY = cur[1];

                    if (screen[curX, curY] == FILE)
                    {
                        if (curX < minStartX) minStartX = curX;
                        if (curX > maxStartX) maxStartX = curX;

                        if (curY < minStartY) minStartY = curY;
                        if (curY > maxStartY) maxStartY = curY;
                    }

                    for (int i = 0; i < 4; i++)
                    {
                        int nextX = curX + dx[i];
                        int nextY = curY + dy[i];

                        if (nextX < 0 || nextY < 0 || nextX >= screen.GetLength(0) || nextY >= screen.GetLength(1)) continue;

                        if (!visited[nextX, nextY])
                        {
                            visited[nextX, nextY] = true;
                            queue.Enqueue(new int[] { nextX, nextY });
                        }
                    }
                }
            }
        }",https://github.com/j-miiin/Algorithm_Study/blob/main/SPARTA_ALGORITHM_2023/Level3/60_ArrangeScreen.cs,2023. 9. 8,60,3
2023. 9. 8 오전 10:32:09,이승연,Unity,26 - 문자열 다루기 기본,"using System;

public class Solution {
    public bool solution(string s) {
        bool answer = true;
        
        if(s.Length==4||s.Length==6)
        {
            int result;
            answer=int.TryParse(s,out result);
        }
        else answer= false;
        return answer;
    }
}",,2023. 9. 8,26,1
2023. 9. 8 오전 10:32:09,차요한,Unity,44 - 2016년,"public class Solution {
    public string solution(int a, int b) {
        string answer = """";
        string[] day = new string[] { ""FRI"", ""SAT"", ""SUN"", ""MON"", ""TUE"", ""WED"", ""THU""};
        int[] days = new int[] {31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31};
        
        int totalDays = 0;
        for(int i=0; i<a-1; i++)
        {
            totalDays += days[i];
        }
        totalDays += b -1;
        
        answer = day[totalDays % 7];
        return answer;
    }
}",https://github.com/HOHOJO/Algorithm_test,2023. 9. 8,44,2
2023. 9. 8 오전 10:32:20,문현우,Unity,28 - 직사각형 별찍기,"using System;

public class Example
{
    public static void Main()
    {
        String[] s;

        Console.Clear();
        s = Console.ReadLine().Split(' ');

        int a = Int32.Parse(s[0]);
        int b = Int32.Parse(s[1]);
        string answer = """";
        for(int i = 0; i< a; i++){
            answer += ""*"";
        }
        for(int j = 0; j<b; j++){
            Console.WriteLine($""{answer}"");
        }
    }
}",https://github.com/Munch310/Algorithm-Csharp/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12969.%E2%80%85%EC%A7%81%EC%82%AC%EA%B0%81%ED%98%95%E2%80%85%EB%B3%84%EC%B0%8D%EA%B8%B0,2023. 9. 8,28,1
2023. 9. 8 오전 10:32:36,김진환,Unity,42 - 콜라 문제,"public static int solution(int a, int b, int n)
        {
            int answer = 0;
            int empty = n;

            while(empty >= a)
            {
                Console.WriteLine(empty);
                int getCola = (empty / a) * b;
                answer += getCola;
                empty = getCola + (empty % a);
            }
            return answer;
        }",https://github.com/NewRound/AlgorithmKata.git,2023. 9. 8,42,2
2023. 9. 8 오전 10:34:20,이소이,Unity,43 - 명예의 전당 (1),"using System;
using System.Collections.Generic;

public class Solution {
    public int[] solution(int k, int[] score) {
        int[] answer = new int[score.Length];
        List<int> honor = new List<int>();
        for (int date = 0; date < score.Length; date++)
        {
            honor.Add(score[date]);
            honor.Sort();
            if (k > date)
                answer[date] = honor[0];
            else
                answer[date] = honor[date - k + 1];
        }
        return answer;
    }
}",https://github.com/leesy015599/AlgorithmCodeKata/tree/master/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/unrated/138477.%E2%80%85%EB%AA%85%EC%98%88%EC%9D%98%E2%80%85%EC%A0%84%EB%8B%B9%E2%80%85%EF%BC%881%EF%BC%89,2023. 9. 8,43,2
2023. 9. 8 오전 10:34:26,김진규,Unity,48 - 소수 만들기,"using System;
using System.Collections.Generic;

class Solution
{
    public int solution(int[] nums)
    {
        int answer = 0;
        var sums = Combinations(nums, 3);

        foreach (var sum in sums)
        {
            if(CalcPrime(sum))
                answer++;
        }

        return answer;
    }
    public bool CalcPrime(int num) 
	{
		int nr = (int)Math.Sqrt(num); 
		for (int i = 2; i <= nr; i++) 
		{
			if (num % i == 0)
				return false; 
		} 
		return true; 
	}
    public List<int> Combinations(int[] arr, int r)
    {
        var result = new List<int>();
        GenerateSums(arr, 0, r, 0, new List<int>(), result);
        return result;
    }
    public void GenerateSums(int[] arr, int idx, int r, int currentSum, List<int> current, List<int> result)
    {
        if (current.Count == r)
        {
            result.Add(currentSum);
            return;
        }

        for (int i = idx; i < arr.Length; i++)
        {
            current.Add(arr[i]);
            GenerateSums(arr, i + 1, r, currentSum + arr[i], current, result);
            current.RemoveAt(current.Count - 1);
        }
    }
}",,2023. 9. 8,48,2
2023. 9. 8 오전 10:34:56,신우석,Unity,63 - 공원 산책,"using System;

public class Solution {
    (int X, int Y) calDelta(string direction) {
        int[] dX = new int[] {0, 0, 1, -1};
        int[] dY = new int[] {1, -1, 0, 0};
        
        switch (direction) {
            case ""E"":
                return (dX[0], dY[0]);
            case ""W"":
                return (dX[1], dY[1]);
            case ""S"":
                return (dX[2], dY[2]);
            case ""N"":
                return (dX[3], dY[3]);
            default:
                return (0, 0);
        }
    }
    
    public int[] solution(string[] park, string[] routes) {
        (int X, int Y) presentPos = (0, 0);
        for (int i = 0; i < park.Length; ++i)
            for (int j = 0; j < park[i].Length; ++j)
                if (park[i][j] == 'S') {
                    presentPos = (i, j);
                }
        
        foreach (string s in routes) {
            string[] splitted = s.Split(' ');
            (int X, int Y) delta = calDelta(splitted[0]);
            int dist = Convert.ToInt32(splitted[1]);
            
            bool isValid = true;
            (int X, int Y) nextPos = presentPos;
            for(int i = 1; i <= dist; ++i) {
                nextPos = (presentPos.X + i * delta.X, presentPos.Y + i * delta.Y);
                if (nextPos.X < 0 || nextPos.Y < 0 || nextPos.X >= park.Length || nextPos.Y >= park[0].Length
                    || park[nextPos.X][nextPos.Y] == 'X') {
                    isValid = false;
                    break;
                }
            }
            if (isValid) presentPos = nextPos;
        }
        
        return new int[] {presentPos.X, presentPos.Y};
    }
}",https://github.com/seoksii/AlgorithmCodeKata/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/unrated/172928.%E2%80%85%EA%B3%B5%EC%9B%90%E2%80%85%EC%82%B0%EC%B1%85,2023. 9. 8,63,3
2023. 9. 8 오전 10:35:02,박민호,Unity,44 - 2016년,"using System;
public class Solution {
    public string solution(int a, int b) {
        DateTime date = new DateTime(2016, a, b); 
        string[] days = new string[]{""SUN"",""MON"",""TUE"",""WED"",""THU"",""FRI"",""SAT""};
        int dayOfWeekInt = (int)date.DayOfWeek;
        string answer = days[dayOfWeekInt];
        return answer;
    }
}",,2023. 9. 8,44,2
2023. 9. 8 오전 10:36:44,김진성,Unity,25 - 부족한 금액 계산하기,"namespace Algorithm_009
{
    public class _025_CalculatinInsufficientAmount
    {
        public long solution(int price, long money, int count) // 정직하다!
        {
            long totalFee = 0;
            for (int i = 1; i <= count; i++)
            {
                totalFee += price * i;
            }
            if (totalFee <= money)
            {
            return 0;

            }
            return totalFee - money;
        }
    }
}
",https://github.com/GYALLERHORN/ALGORITHM,2023. 9. 8,25,1
2023. 9. 8 오전 10:37:14,안소정,Unity,22 - 내적,"using System;

public class Solution {
    public int solution(int[] a, int[] b) {
        int answer = 0;
        for(int i=0; i< a.Length; i++) 
        {
            answer += a[i] * b[i];
        }
        return answer;
    }
}",,2023. 9. 8,22,1
2023. 9. 8 오전 10:37:59,임전혁,Unity,52 - 옹알이 (2),"public class Solution {
    public int solution(string[] babbling) {
        int answer = 0;
        
        string[] words = { ""aya"", ""ye"", ""woo"", ""ma"" };
        
        for (int i = 0; i < babbling.Length; i++)
        {          
            if (babbling[i].Contains(""ayaaya"") || babbling[i].Contains(""yeye"")
               || babbling[i].Contains(""woowoo"") || babbling[i].Contains(""mama""))
                continue;

            foreach (string word in words)
                babbling[i] = babbling[i].Replace(word, "" "");

            babbling[i] = babbling[i].Replace("" "", """");

            if(babbling[i].Length == 0)
                answer++;
        }
        
        return answer;
    }
}",https://github.com/yarogono/Algorithm_CSharp/blob/master/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/unrated/133499.%E2%80%85%EC%98%B9%EC%95%8C%EC%9D%B4%E2%80%85%EF%BC%882%EF%BC%89/%EC%98%B9%EC%95%8C%EC%9D%B4%E2%80%85%EF%BC%882%EF%BC%89.cs,2023. 9. 8,52,2
2023. 9. 8 오전 10:38:15,박희원,Unity,37 - 문자열 내 마음대로 정렬하기,"using System;
using System.Linq;
using System.Collections.Generic;

public class Solution {
    public string[] solution(string[] strings, int n)
            {
                string[] answer = new string[] { };
                Dictionary<string, string> dic = new Dictionary<string, string>(); 
                for(int i = 0;i<strings.Length; i++)
                {
                    dic.Add(strings[i], strings[i][n].ToString()); 
                }
                answer = dic.OrderBy(x => x.Value).ThenBy(y => y.Key).Select(x => x.Key).ToArray();
                return answer; 
            }
}",,2023. 9. 8,37,2
2023. 9. 8 오전 10:38:31,김민석,Unity,19 - 제일 작은 수 제거하기,"using System;
using System.Collections.Generic;

public class Solution {
    public int[] solution(int[] arr) 
    {
        if(arr.Length==1)
        {
            arr[0] = -1;
            return arr;
        }
        int temp = arr[0];
        for(int i = 0; i < arr.Length; i++)
        {
            if(temp > arr[i]) temp = arr[i];
        }
        List<int> list = new List<int>();
        list.AddRange(arr);
        list.Remove(temp);

        int[] answer = new int[] {};
        answer = list.ToArray();
        return answer;
    }
}
",https://github.com/ms0753/codekata/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12935.%E2%80%85%EC%A0%9C%EC%9D%BC%E2%80%85%EC%9E%91%EC%9D%80%E2%80%85%EC%88%98%E2%80%85%EC%A0%9C%EA%B1%B0%ED%95%98%EA%B8%B0/%EC%A0%9C%EC%9D%BC%E2%80%85%EC%9E%91%EC%9D%80%E2%80%85%EC%88%98%E2%80%85%EC%A0%9C%EA%B1%B0%ED%95%98%EA%B8%B0.cs,2023. 9. 8,19,1
2023. 9. 8 오전 10:38:53,지민규,Unity,38 - K번째수정렬,"using System;
using System.Linq;

public class Solution {
    public int[] solution(int[] array, int[,] commands) {
        int[] answer = new int[] {};
        for (int i = 0; i < commands.GetLength(0); i++)
        {
            int[] command = new int[3];
            for (int j = 0; j < commands.GetLength(1); j++)
            {
                command[j] = commands[i,j];
            }
            int partAnswer = sideSolution(array, command);
            Array.Resize(ref answer,answer.Length+1);
            answer[answer.Length-1] = partAnswer;
            
        }
        return answer;
    }
    
    public int sideSolution(int[] array, int[] command)
    {
        int startIdx = command[0] - 1;
        int endIdx = command[1] - 1;
        int orderIdx = command[2] - 1;
        int answer = new ArraySegment<int>(array, startIdx, endIdx - startIdx + 1).ToArray().OrderBy(num=>num).ToArray()[orderIdx];
        
        return answer;
    }
}",,2023. 9. 8,38,2
2023. 9. 8 오전 10:39:48,최성원,Unity,11 - 하샤드 수,"using System;

public class Solution {
    public bool solution(int x) {
        string strX = x.ToString();
        
        int sum = 0;
        foreach(char c in strX) {
            sum += int.Parse(c.ToString());
        }
        
        return x % sum == 0;
    }
}",,2023. 9. 8,11,1
2023. 9. 8 오전 10:39:54,손병의,Unity,24 - 문자열 내림차순으로 배치하기,"using System;
using System.Linq;

public class Solution
{
    public string solution(string s) 
    {
        char[] temp = s.ToCharArray();
        Array.Sort(temp);
        Array.Reverse(temp);
        
        return new string(temp);
    }
}",https://github.com/Son-BE/CodeKata1,2024. 9. 8,24,1
2023. 9. 8 오전 10:40:47,박지원,Unity,40 - 가장 가까운 같은 글자,"using System;

public class Solution {
    public int[] solution(string s) {
        int[] answer = new int[s.Length];
        
        for(int i = 0; i < s.Length; i++){
            for(int j = i - 1; j >= 0; j--){
                if(s[j] == s[i]){
                    answer[i] = i - j;
                    break;
                }
            }
            if(answer[i] == 0)
                answer[i] = -1;
        }
        
        return answer;
    }
}",https://github.com/jwonp9127/AlgorithmStudy/tree/af894f2c58f335ddba77bb1f544934afc211ed1d/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/unrated/142086.%E2%80%85%EA%B0%80%EC%9E%A5%E2%80%85%EA%B0%80%EA%B9%8C%EC%9A%B4%E2%80%85%EA%B0%99%EC%9D%80%E2%80%85%EA%B8%80%EC%9E%90,2023. 9. 8,40,2
2023. 9. 8 오전 10:41:51,강성호,Unity,54 - 체육복,"using System;
using System.Buffers;
using System.Collections.Generic;
using System.Linq;

public class Solution {
    public int solution(int n, int[] lost, int[] reserve) {
        int answer = 0;
		int[] arr = new int[n + 1];
		
		for(int i = 0; i < reserve.Length; i++)
		{
			arr[reserve[i]] = 1;
		}

		for (int i = 0; i < lost.Length; i++)
		{
			if (arr[lost[i]] != 1)
			{
				arr[lost[i]] = -1;
			}
			else
			{
				arr[lost[i]] = 0;
			}
		}

		for(int i = 1; i < arr.Length; i++)
		{
			if (arr[i] == -1 && i > 1 && i < arr.Length - 1)
			{
				if (arr[i - 1] == 1)
				{
					arr[i - 1] = 0;
					arr[i] = 0;
				}
				else if (arr[i + 1] == 1)
				{
					arr[i + 1] = 0;
					arr[i] = 0;
				}
			}
			else if (arr[i] == -1 && i == 1)
			{
				if (arr[i + 1] == 1)
				{
					arr[i + 1] = 0;
					arr[i] = 0;
				}
			}
			else if (arr[i] == -1 && i == arr.Length - 1)
			{
				if (arr[i - 1] == 1)
				{
					arr[i - 1] = 0;
					arr[i] = 0;
				}
			}
        }

		for(int i = 1; i < arr.Length; i++)
		{
			if (arr[i] == 0 || arr[i] == 1)
			{
				answer++;
			} 
		}

		return answer;
    }
}",,2023. 9. 8,54,2
2023. 9. 8 오전 10:42:28,최장범,Unity,38 - K번째수정렬,"using System;

public class Solution {
    public int[] solution(int[] array, int[,] com) 
    {
        
        int[] answer = new int[com.GetLength(0)];
        
        
        for(int n = 0; n < com.GetLength(0); n++)
        {
            //각 i, j, k의 원소를 매 횟수마다 초기화
            int i = com[n, 0];
            int j = com[n, 1];
            int k = com[n, 2];
            
            //i 번째 부터 j 번째 까지 자른 배열 선언
            int[] temp = new int[j - i + 1];
            
            
            for(int a = 0; a<temp.Length; a++)
            {
                temp[a] = array[a+i-1];
            }
           
            Array.Sort(temp);
            
            //k 번째 숫자를 answer배열에 대입
            answer[n] = temp[k-1];
        }
        return answer;
    }
   
}",,2023. 9. 8,38,2
2023. 9. 8 오전 10:42:40,이세진,Unity,28 - 직사각형 별찍기,"using System;

public class Example
{
    public static void Main()
    {
        String[] s;

        Console.Clear();
        s = Console.ReadLine().Split(' ');

        int a = Int32.Parse(s[0]);
        int b = Int32.Parse(s[1]);

        for(int i = 0 ; i < b ; i++)
        {
            for(int j= 0 ; j < a ; j++)
            {
                Console.Write(""*"");
            }
            Console.WriteLine("""");
        }
    }
}",,2023. 9. 8,28,1
2023. 9. 8 오전 10:42:52,강성호,Unity,42 - 콜라 문제,"using System;
using System.Collections.Generic;
using System.Linq;

public class Solution {
    public int solution(int a, int b, int n) {
    int answer = 0;
			int rest = 0;
			while (n >= a)
			{ 
				rest = n % a;
				n = n / a;
				answer += n * b;
				n = n * b + rest;
			}
			
            return answer;
    }
}",,2023. 9. 8,42,2
2023. 9. 8 오전 10:43:48,김하늘,Unity,35 - 시저 암호,"using System;

public class Solution 
{
    public string solution(string s, int n) 
    {
        string answer = """";
        foreach(char c in s)
        {
            if(c!=' ')
            {
                int tmp = 0;
                
                if((int)c<91)
                {
                    tmp = (int)c + n;
                    if(tmp>90) tmp = 64 + (tmp-90);
                }

                else
                {
                    tmp = (int)c + n;
                    if(tmp>122) tmp = 96 + (tmp-122);
                }
                
                answer += Convert.ToChar(tmp);    
            }
            else
                answer += ' ';    
        }
        return answer;
    }
}",,2023. 9. 8,35,2
2023. 9. 8 오전 10:44:26,이정환,Unity,37 - 문자열 내 마음대로 정렬하기,"using System;

public class Solution {
    public string[] solution(string[] strings, int n) { 
            Array.Sort(strings, (x, y) => {
                char xN=x[n];
                char yN=y[n];

                if(xN !=yN)
                {
                    return x[n].CompareTo(y[n]);
                }else
                {
                    return x.CompareTo(y);

                }             
            });
            return strings;
    }
}",,2023. 9. 8,37,2
2023. 9. 8 오전 10:46:25,노재우,Unity,37 - 문자열 내 마음대로 정렬하기,"public class Solution37
{
    public string[] solution(string[] strings, int n)
    {
        List<string> sorts = new List<string>();
        Array.Sort(strings);

        for (int i = 0; i < strings.Length; i++)
        {
            char[] chars = strings[i].ToCharArray();
            if (sorts.Count == 0)
            {
                sorts.Add(strings[i]);
                continue;
            }

            for (int j = 0; j < sorts.Count; j++)
            {
                char[] sortChars = sorts[j].ToCharArray();

                if (chars[n] < sortChars[n])
                {
                    sorts.Insert(j, strings[i]);
                    break;
                }
                else if (j >= sorts.Count - 1)
                {
                    sorts.Add(strings[i]);
                    break;
                }
                else if (chars[n] == sortChars[n])
                {
                    continue;
                }


            }
        }

        string[] answer = sorts.ToArray();
        return answer;
    }
}",,2023. 9. 8,37,2
2023. 9. 8 오전 10:46:50,김연우,Unity,11 - 하샤드 수,"#include <stdbool.h>

int getDigitSum(int x) {
    int sum = 0;
    while (x > 0) {
        sum += x % 10;
        x /= 10;
    }
    return sum;
}

bool solution(int x) {
    int sum = getDigitSum(x);
    return x % sum == 0;
}
",,2023. 9. 8,11,1
2023. 9. 8 오전 10:48:34,정재훈,Unity,24 - 문자열 내림차순으로 배치하기,"using System;
public class Solution {
    public string solution(string s) {
        string answer = """";
        char[] a = s.ToCharArray();
        Array.Sort(a);
        Array.Reverse(a);    
        answer = new string(a);
        return answer;
    }
}",https://github.com/toadsam/Algorithm,2023. 9. 8,24,1
2023. 9. 8 오전 10:49:06,지민규,Unity,39 - 두 개 뽑아서 더하기,"using System;
using System.Linq;

public class Solution {
    public int[] solution(int[] numbers) {
        int[] answer = new int[] {};
        for (int i = 0; i < numbers.Length; i++)
        {
            for (int j = 0; j < numbers.Length; j++)
            {
                if (i == j)
                {
                    continue;
                }
                else
                {
                    int answerElement = numbers[i] + numbers[j];
                    Array.Resize(ref answer, answer.Length + 1);
                    answer[answer.Length - 1] = answerElement;
                }
            }
        }
        answer = answer.Distinct().ToArray().OrderBy(num=>num).ToArray();
        return answer;
    }
}",,2023. 9. 8,39,2
2023. 9. 8 오전 10:49:31,이홍준,Unity,43 - 명예의 전당 (1),"using System;
using System.Collections.Generic;
using System.Linq;

public class Solution {
    public int[] solution(int k, int[] score) {
        int[] answer = new int[score.Length];
        List<int> temp = new List<int>();
        
        for(int i = 0; i < score.Length; i++)
        {
            if(temp.Count == k)
            {
                if(temp[0] > score[i])
                {
                    answer[i] = temp[0];
                    continue;
                }
                temp.RemoveAt(0);
            }
            
            temp.Add(score[i]);
            temp.Sort();
            answer[i] = temp[0];
        }
        
        return answer;
    }
}",https://github.com/dlghdwns97/Study/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/unrated/138477.%E2%80%85%EB%AA%85%EC%98%88%EC%9D%98%E2%80%85%EC%A0%84%EB%8B%B9%E2%80%85%EF%BC%881%EF%BC%89,2023. 9. 8,43,2
2023. 9. 8 오전 10:49:43,김민태,Unity,71 - N개의 최소공배수,"public class Solution {
    public int Ucl(int a,int b)
    {
        int n = a;
        int m = b;
        int temp = 0;
        while(m > 0)
        {
            temp = n % m;
            n = m;
            m = temp;
        }
        return (a * b) / n;
    }
    public int solution(int[] arr) {
        int answer = Ucl(arr[0],arr[1]);
        for(int i = 2; i < arr.Length; i++)
        {
            answer = Ucl(answer,arr[i]);
        }
        return answer;
    }
}",https://github.com/rlaalsxo/CodingTest,2023. 9. 8,71,3
2023. 9. 8 오전 10:49:43,이소이,Unity,44 - 2016년,"public class Solution {
    public string solution(int a, int b) {
        while (--a != 0) // if not January
        {
            switch (a)
            {
                case 1:
                case 3:
                case 5:
                case 7:
                case 8:
                case 10:
                    b += 31;
                    break;
                case 4:
                case 6:
                case 9:
                case 11:
                    b += 30;
                    break;
                default: // case 2:
                    b += 29;
                    break;
            }
        }
        switch (b % 7)
        {
            case 0:
                return ""THU"";
            case 1:
                return ""FRI"";
            case 2:
                return ""SAT"";
            case 3:
                return ""SUN"";
            case 4:
                return ""MON"";
            case 5:
                return ""TUE"";
            default: // case 6:
                return ""WED"";
        }
    }
}",https://github.com/leesy015599/AlgorithmCodeKata/blob/master/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12901.%E2%80%852016%EB%85%84/2016%EB%85%84.cs,2023. 9. 8,44,2
2023. 9. 8 오전 10:50:09,김경환,Unity,64 - 신고 결과 받기,"using System;
using System.Collections.Generic;

public class Solution
{
    public int[] solution(string[] id_list, string[] report, int k)
    {
        int[] answer = new int[id_list.Length];
        Dictionary<string, int> id_to_num = new Dictionary<string, int>();
        Dictionary<string, int> reported = new Dictionary<string, int>();
        Dictionary<string, HashSet<string>> reporter = new Dictionary<string, HashSet<string>>();

        for (int i = 0; i < id_list.Length; i++)
        {
            id_to_num[id_list[i]] = i;
        }

        foreach (string s in report)
        {
            string[] split = s.Split("" "");

            string id = split[0];
            string criminal = split[1];

            bool flag = false;

            HashSet<string> set;
            if (reporter.TryGetValue(criminal, out set))
            {
                if (!set.Contains(id))
                {
                    set.Add(id);
                    flag = true;
                }
            }
            else
            {
                set = new HashSet<string>();

                set.Add(id);
                flag = true;
            }

            reporter[criminal] = set;

            if (flag)
            {
                int value;
                if (reported.TryGetValue(criminal, out value))
                {
                    reported[criminal] = value + 1;
                }
                else
                {
                    reported[criminal] = 1;
                }
            }
        }


        foreach (var item in reported)
        {
            string criminal = item.Key;
            int num = item.Value;

            if (num >= k)
            {
                HashSet<string> set = reporter[criminal];

                foreach (string id in set)
                {
                    answer[id_to_num[id]]++;
                }
            }
        }

        return answer;
    }
}",https://github.com/kkh9700/algorithm,2023. 9. 8,64,3
2023. 9. 8 오전 10:50:10,신현주,Unity,41 - 푸드 파이트 대회,"using System;

public class Solution {
    public string solution(int[] food) {
        string answer = """";
        string result = """";
        for( int i = 1; i< food.Length; i++){
            for(int j = food[i] / 2; j>=0 ; j--){
                if( j == 0)  break;
                result += i.ToString();
            }
        }
        char[] reverse = result.ToCharArray();
        Array.Reverse(reverse);
        string sReverse = new string(reverse);
        
        answer = result + ""0"" + sReverse;
        return answer;
    }
}",https://github.com/Shyunju/codeKata,2023. 9. 8,41,2
2023. 9. 8 오전 10:50:16,조병우,Unity,15 - 나누어 떨어지는 숫자,"using System;

public class Solution {
    public int[] solution(int[] arr, int divisor) {
        
        int[] answer = new int[arr.Length];
        int cnt = 0;
        
        for(int i = 0; i<arr.Length; i++)
        {
            if(arr[i] % divisor == 0)
            {
                answer[cnt] = arr[i];
                cnt++;
            }
        }
        if(cnt == 0){
            Array.Resize(ref answer, 1);
            answer[0] = -1;
        }
        else{
            Array.Resize(ref answer, cnt);
            Array.Sort(answer);
        }
        return answer;
    }
}",,2023. 9. 8,15,1
2023. 9. 8 오전 10:50:28,장현교,Unity,18 - 없는 숫자 더하기,"public class Solution
{
    public int solution(int[] numbers)
    {
        int answer = 45;
        foreach (int i in numbers)
        {
            answer -= i;
        }
        return answer;
    }
}",,2023. 9. 8,18,1
2023. 9. 8 오전 10:50:51,송유섭,Unity,13 - 콜라츠 추측,"public class Solution 
{
    public int solution(long num) 
    {
        int answer = 0;
        
        if (num == 1) return 0;
        
        for (int i = 0; i < 500; i++)
        {
            answer ++;
            
            if( num % 2 == 0) num = num / 2;
            
            else num = num * 3 + 1;
            
            if (num == 1) return answer;
        }
        return -1;
    }
}",https://github.com/SongJinx3512/NBC/blob/main/codeKata/codekata%20lv%201%20%23013%20%EC%BD%9C%EB%9D%BC%EC%B8%A0%20%EC%B6%94%EC%B8%A1,2023. 9. 8,13,1
2023. 9. 8 오전 10:51:07,김형중,Unity,37 - 문자열 내 마음대로 정렬하기,"using System;

public class Solution {
    public string[] solution(string[] strings, int n) {
        int len = strings.Length;
        string[] answer = new string[len];
        
        for(int i = 0; i < len; i++)
        {
            answer[i] = (strings[i][n]) + strings[i];
        }
        
        Array.Sort(answer);
        
        for(int j = 0; j < len; j++)
        {
            answer[j] = answer[j].Substring(1);
        }
        
        return answer;
    }
}",,2023. 9. 8,37,2
2023. 9. 8 오전 10:51:09,이장원,Unity,14 - 서울에서 김서방 찾기,"namespace codekata
{
  public class Solution
    {
        public string solution(string[] seoul)
        {
            return new string($""김서방은 {Array.IndexOf(seoul, ""Kim"")}에 있다"");
        }
    }
}",,2023. 9. 8,14,1
2023. 9. 8 오전 10:51:14,송유섭,Unity,14 - 서울에서 김서방 찾기,"public class Solution 
{
    public string solution (string [] seoul) 
    {
        string answer = "" "";
        for (int i = 0; i < seoul.Length; i++)
        {
            if (seoul [i] == ""Kim"") 
            {
                answer = ""김서방은 "" + i + ""에 있다"";
                break;
            }
        }
        return answer;
    }
}",https://github.com/SongJinx3512/NBC/blob/main/codeKata/codeKata%20lv%201%20%23014%20%EC%84%9C%EC%9A%B8%EC%97%90%EC%84%9C%20%EA%B9%80%EC%84%9C%EB%B0%A9%20%EC%B0%BE%EA%B8%B0,2023. 9. 8,14,1
2023. 9. 8 오전 10:51:15,이선재,Unity,59 - 성격 유형 검사하기,"#include <string>
#include <vector>
#include <algorithm>
#include <map>

using namespace std;

string solution(vector<string> survey, vector<int> choices) {
    string answer = """";
    map<char, int> survMap;
    
    for(int i = 0; i < choices.size(); i++){
        if(choices[i] < 4){
            survMap[survey[i][0]] += (4 - choices[i]);
        }
        else if(choices[i] > 4){
            survMap[survey[i][1]] += (choices[i] - 4);
        }
    }
    
    answer += (survMap['R'] >= survMap['T']) ? ""R"" : ""T"";
    answer += (survMap['C'] >= survMap['F']) ? ""C"" : ""F"";
    answer += (survMap['J'] >= survMap['M']) ? ""J"" : ""M"";
    answer += (survMap['A'] >= survMap['N']) ? ""A"" : ""N"";
    
    return answer;
}",https://github.com/Lyrwhitt/Algorithm/blob/main/Programmers/LEVEL1/%EC%84%B1%EA%B2%A9%20%EC%9C%A0%ED%98%95%20%EA%B2%80%EC%82%AC%ED%95%98%EA%B8%B0,2023. 9. 8,59,3
2023. 9. 8 오전 10:51:34,김진환,Unity,43 - 명예의 전당 (1),"public static int[] solution(int k, int[] score)
        {
            int[] answer = new int[score.Length];

            // 명예의 전당
            List<int> honor = new List<int>();

            // 가수들의 점수를 전부 계산.
            for (int i = 0; i < score.Length; i++)
            {
                // 명예의 전당이 다 안채워졌을 때
                if(i < k)
                {
                    Console.WriteLine($""{score[i]}"");
                    honor.Add(score[i]);
                }
                else
                {
                    if (score[i] > honor[0])
                    {
                        honor.Remove(honor[0]);
                        Console.WriteLine($""{score[i]}"");
                        honor.Add(score[i]);
                    }
                }
                honor.Sort();
                Console.WriteLine($""{honor[0]}"");
                answer[i] = honor[0];
            }

            return answer;
        }",https://github.com/NewRound/AlgorithmKata.git,2023. 9. 8,43,2
2023. 9. 8 오전 10:52:12,김예준,Unity,58 - 햄버거 만들기,"#include <string>
#include <vector>


using namespace std;

int solution(vector<int> ingredient) {
    int answer = 0;
    vector<int> v = { 0 };
    
    for (int x : ingredient)
    {
        if (v.back() == 1 && x == 2) v.back() = 12;
        else if (v.back() == 12 && x == 3) v.back() = 123;
        else if (v.back() == 123 && x == 1)
        {
            answer++;
            v.pop_back();
        }
        else v.push_back(x);
    }
    
    return answer;
}",,2023. 9. 8,58,3
2023. 9. 8 오전 10:52:18,진우성,Unity,17 - 핸드폰 번호 가리기,"public class Solution 
{
    public string solution(string phone_number) 
    {
        string answer = """";
        for(int i = 0; i < phone_number.Length; i++)
        {
            if(i < phone_number.Length - 4)
            {
                answer += '*';
            }
            else
            {
                answer += phone_number[i];
            }
        }
        return answer;
    }
}",,2023. 9. 8,17,1
2023. 9. 8 오전 10:52:28,박지원,Unity,41 - 푸드 파이트 대회,"using System;

public class Solution {
    public string solution(int[] food) {
        string answer = """";
        for(int i = 1; i < food.Length; i++){
            if(food[i] % 2 != 0)
                food[i]--;
            
            for(int j = 0; j < food[i] / 2; j++){
                answer += i.ToString();
            }
        }
        char[] answerArray = answer.ToCharArray();
        Array.Reverse(answerArray);
        answer = answer + ""0"" + (string.Join("""", answerArray));

        return answer;
    }
}",https://github.com/jwonp9127/AlgorithmStudy/tree/85c8e08c39ed48344d002610c13fd90270334111/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/unrated/134240.%E2%80%85%ED%91%B8%EB%93%9C%E2%80%85%ED%8C%8C%EC%9D%B4%ED%8A%B8%E2%80%85%EB%8C%80%ED%9A%8C,2023. 9. 8,41,2
2023. 9. 8 오전 10:53:21,이선재,Unity,60 - 바탕화면 정리,"#include <string>
#include <vector>

using namespace std;

vector<int> solution(vector<string> wallpaper) {
    vector<int> answer;
    
    int startX = 99, startY = 99, endX = 0, endY = 0;
    
    for(int i = 0; i < wallpaper.size(); i++)
    {
        for(int j = 0; j < wallpaper[i].length(); j++)
        {
            if(wallpaper[i][j] == '#')
            {
                startX = min(startX, j);
                endX = max(endX, j+1);
                startY = min(startY, i);
                endY = max(endY, i+1);
            }
        }
    }
    
    answer.push_back(startY);
    answer.push_back(startX);
    answer.push_back(endY);
    answer.push_back(endX);
    
    return answer;
}",https://github.com/Lyrwhitt/Algorithm/blob/main/Programmers/LEVEL1/%EB%B0%94%ED%83%95%ED%99%94%EB%A9%B4%20%EC%A0%95%EB%A6%AC,2023. 9. 8,60,3
2023. 9. 8 오전 10:54:17,진우성,Unity,18 - 없는 숫자 더하기,"using System;

public class Solution 
{
    public int solution(int[] numbers) 
    {
        int answer = 0;
        for(int i = 0; i < 10; i++)
        {
            answer += i;
        }
        for(int i = 0; i < numbers.Length; i++)
        {
            answer -= numbers[i];
        }
        return answer;
    }
}",https://github.com/xjwsx/Algorithm,2023. 9. 8,18,1
2023. 9. 8 오전 10:54:37,김진규,Unity,49 - 덧칠하기,"using System;

public class Solution {
    public int solution(int n, int m, int[] section) {
        int answer = 0;
        int currentIndex = 0;

        while(currentIndex < section.Length)
        {
            int currentSection = section[currentIndex];

            int maxCoveredSection = currentSection + m - 1;

            while (currentIndex < section.Length && section[currentIndex] <= maxCoveredSection)
            {
                currentIndex++;
            }
            answer++;
        }
        return answer;
    }
}",,2023. 9. 8,49,2
2023. 9. 8 오전 10:55:19,이선재,Unity,61 - 개인정보 수집 유효기간,"#include <string>
#include <vector>
#include <map>
#include <utility>

using namespace std;

vector<int> solution(string today, vector<string> terms, vector<string> privacies) {
    vector<int> answer;
    map<char, int> termsMap;
    vector<pair<int[3], char>> parsPrivacies;
    
    int tYear, tMonth, tDay;
    
    tYear = stoi(today.substr(0, 4));
    tMonth = stoi(today.substr(5, 2));
    tDay = stoi(today.substr(8, 2));
    
    for(string s : terms)
    {
        termsMap[s[0]] = stoi(s.substr(2));
    }
    
    for(string s : privacies)
    {
        pair<int[3], char> newPair;
        newPair.first[0] = stoi(s.substr(0, 4));
        newPair.first[1] = stoi(s.substr(5, 2));
        newPair.first[2] = stoi(s.substr(8, 2));
        newPair.second = s[11];
        
        parsPrivacies.push_back(newPair);
    }
    
    for(int i = 0; i < parsPrivacies.size(); i++)
    {
        parsPrivacies[i].first[1] += termsMap[parsPrivacies[i].second];
        if(parsPrivacies[i].first[1] > 12)
        {
            parsPrivacies[i].first[0] += 1;
            parsPrivacies[i].first[1] -= 12;
        }
        if(((parsPrivacies[i].first[0] * 12 * 28) + (parsPrivacies[i].first[1] * 28) + parsPrivacies[i].first[2]) <= 
          ((tYear * 12 * 28) + (tMonth * 28) + tDay))
        {
            answer.push_back(i + 1);
            continue;
        }        
    }
    
    return answer;
}",https://github.com/Lyrwhitt/Algorithm/blob/main/Programmers/LEVEL1/%EA%B0%9C%EC%9D%B8%EC%A0%95%EB%B3%B4%20%EC%88%98%EC%A7%91%20%EC%9C%A0%ED%9A%A8%EA%B8%B0%EA%B0%84,2023. 9. 8,61,3
2023. 9. 8 오전 10:55:55,진우성,Unity,12 - 두 정수 사이의 합,"using System;
public class Solution 
{
    public long solution(int a, int b) 
    {
        long answer = 0;
        (int minValue, int maxValue) = a > b ? (b, a) : (a , b);
        for(int num = minValue; num <= maxValue; num++)
        {
            answer += num;
        }
        return answer;
    }
}",https://github.com/xjwsx/Algorithm,2023. 9. 8,12,1
2023. 9. 8 오전 10:56:19,박준규,Unity,34 - 최소직사각형,"using System;
using System.Linq;

public class Solution 
{
    public int solution(int[,] sizes) 
    {
        for(var i=0; i< sizes.GetLength(0); i++)
        {
            var tmp = 0;
            if(sizes[i, 0] < sizes[i, 1])
            {
                tmp = sizes[i, 0];
                sizes[i, 0] = sizes[i, 1];
                sizes[i, 1] = tmp;
            }   
        }
        
        int max1 = 0;
        int max2 = 0;

        for (var i = 0; i < sizes.GetLength(0); i++)
        {
            if (max1 < sizes[i, 0]){
                max1 = sizes[i, 0];
            }
            if (max2 < sizes[i, 1]){
                max2 = sizes[i, 1];
            }
        }
        
        int answer = max1 * max2;
        return answer;
    }
}",,2023. 9. 8,34,2
2023. 9. 8 오전 10:56:51,장성림,Unity,50 - 기사단원의 무기,"using System;

public class Solution {
    public int solution(int number, int limit, int power) {
        int answer = 0;
        for(int i = 1; i <= number; i++){
            int count = 0;
            for(int j = 1; j * j <= i; j++){
                if(i % j == 0)
                    count += 2;
                if(j * j == i)
                    count--;
                if(count > limit){
                    count = power;
                    break;
                }
            }
            answer += count;
        }
        return answer;
    }
}",https://github.com/hoobhoob,2023. 9. 8,50,2
2023. 9. 8 오전 10:57:48,최장범,Unity,39 - 두 개 뽑아서 더하기,"using System;
using System.Collections.Generic;

public class Solution
    {
        public int[] solution(int[] numbers)
        {
        	
            List<int> answer = new List<int>();
            
            
            for (int i = 0; i < numbers.Length-1; i++)
            {
            	
                for (int j = i+1; j < numbers.Length; j++)
                {
                	
                    int temp = numbers[i] + numbers[j];
                    
                    if (answer.Contains(temp) == false)
                    {
                    	 
                        answer.Add(temp);
                    }
                }
            }
           
            answer.Sort();
         
            return answer.ToArray();
        }
    }",,2023. 9. 8,39,2
2023. 9. 8 오전 10:57:54,김종훈,Unity,69 - 카펫,"using System;

public class Solution {
    public int[] solution(int brown, int yellow) {
        int[] answer = new int[2] { 0, 0};
            int x, y;
            int width = brown + yellow;

            for(int i=1; i<=width;i++)
            {
                x = i;
                y = width / x;
                if (x > y || x==y)
                {
                    if((width-((x*2)+(y*2)-4))==yellow)
                    {
                        answer[0] = x;
                        answer[1] = y;
                        break;
                    }
                }
            }
            return answer;
    }
}",,2023. 9. 8,69,3
2023. 9. 8 오전 10:58:22,조범준,Unity,44 - 2016년,"public class Solution {
    public string solution(int a, int b) {
        string answer = """";
        string[] Days = {
            ""SUN"",""MON"",""TUE"",""WED"",""THU"",""FRI"",""SAT""
        };
        int count = 5;
        if(a > 7){
            a += 1;
        }
        for(int i = 1; i <= a; i++){
            if( i == 8)
                i++;
            int d = (i==a)? b : ((i % 2 == 0) ? ((i == 2)? 29 : 30) : 31);
            for(int j = 0; j < d; j++){
                answer = Days[count];
                count++;
                if(count == 7){
                    count = 0;
                }
            }
        }
        return answer;
    }
}",https://github.com/KimMaYa1/BaekJoonEx,2023. 9. 8,44,2
2023. 9. 8 오전 10:58:33,박도현,Unity,14 - 서울에서 김서방 찾기,"using System.Collections.Generic;
using System;
public class Solution {
    public string solution(string[] seoul) {
        string answer = """";
            List<Char> eraser = new List<Char>() {'[',']',' ','\""' };
            for (int i = 0; i < seoul.Length; i++)
            {
                string[] s = new string[2];
                foreach (char c in eraser)
                {
                    seoul[i] = seoul[i].Replace(c.ToString(), String.Empty);
                }
                s = seoul[i].Split(',');
                for(int j = 0; j < s.Length; j++)
                {
                    if(s[j] == ""Kim"")
                    {
                        answer = $""김서방은 {i}에 있다"";
                    }
                }
            }
        return answer;
    }
}",,2023. 9. 8,14,1
2023. 9. 8 오전 10:58:56,김나운,Unity,33 - 크기가 작은 부분,"using System;

class Solution {
    public long solution(string t, string p) {
        int lenT = t.Length;
        int lenP = p.Length;
        long answer = 0;

        for (int i = 0; i <= lenT - lenP; i++) {
            string subStrT = t.Substring(i, lenP);
            long numT = long.Parse(subStrT);
            long numP = long.Parse(p);

            if (numT <= numP) {
                answer++;
            }
        }

        return answer;
    }
}
",,2023. 9. 8,33,2
2023. 9. 8 오전 10:59:00,박지원,Unity,42 - 콜라 문제,"using System;

public class Solution {
    public int solution(int a, int b, int n) {
        int temp = 0, answer = 0;
        
        while(n >= a){
            temp = n % a;
            answer += (n / a) * b;
            n = (n / a) * b + temp;
        }
        
        return answer;
    }
}",https://github.com/jwonp9127/AlgorithmStudy/tree/0cf08365bddeb2aff5974b611cd6d3449c9c473d/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/unrated/132267.%E2%80%85%EC%BD%9C%EB%9D%BC%E2%80%85%EB%AC%B8%EC%A0%9C,2023. 9. 8,42,2
2023. 9. 8 오전 10:59:24,이민열,Unity,13 - 콜라츠 추측,"public class Solution {
    public int solution(int num) {
            int answer = 0;
            long temp = num;
            while (temp != 1)
            {
                answer++;
                if (answer > 500)
                {
                    answer = -1;
                    break;
                }

                if (temp % 2 == 0)
                {//짝수
                    temp = temp / 2;
                }
                else
                {
                    temp = (temp * 3) + 1;
                }

            }
        return answer;
    }
}",https://github.com/LeeMinyeol/Algorithm,2023. 9. 8,13,1
2023. 9. 8 오전 10:59:52,이홍준,Unity,44 - 2016년,"public class Solution {
    public string solution(int a, int b) {
        string answer = """";
        int[] month = {31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31};
        string[] day = new string[] { ""FRI"", ""SAT"", ""SUN"", ""MON"", ""TUE"", ""WED"", ""THU""};
        
        for (int i = 0; i < (a - 1); i++)
        {
            b += month[i];
        }
        b -= 1;
        answer = day[b % 7];
        return answer;
    }
}",https://github.com/dlghdwns97/Study/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12901.%E2%80%852016%EB%85%84,2023. 9. 8,44,2
2023. 9. 8 오전 11:00:25,신우석,Unity,64 - 신고 결과 받기,"using System;
using System.Collections.Generic;

public class Solution {
    public int[] solution(string[] id_list, string[] report, int k) {
        Dictionary<string, int> idx = new Dictionary<string, int>();
        Dictionary<string, List<string>> reported_history = new Dictionary<string, List<string>>();
        foreach (string id in id_list) {
            idx.Add(id, reported_history.Count);
            reported_history.Add(id, new List<string>());
        }
            
        
        foreach (string s in report) {
            string[] splitted = s.Split(' ');
            if (reported_history[splitted[1]].Contains(splitted[0]) == true) continue;
            reported_history[splitted[1]].Add(splitted[0]);
        }
        
        int[] answer = new int[id_list.Length];
        for (int i = 0; i < id_list.Length; ++i) {
            if (reported_history[id_list[i]].Count < k) continue;
            foreach (string reporter in reported_history[id_list[i]])
                ++answer[idx[reporter]];
        }
        
        
        return answer;
    }
}",https://github.com/seoksii/AlgorithmCodeKata/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/92334.%E2%80%85%EC%8B%A0%EA%B3%A0%E2%80%85%EA%B2%B0%EA%B3%BC%E2%80%85%EB%B0%9B%EA%B8%B0,2023. 9. 8,64,3
2023. 9. 8 오전 11:00:36,함영주,Unity,18 - 없는 숫자 더하기,"using System;

public class Solution {
    public int solution(int[] numbers) {
        int answer = 0;

        for (int i = 0; i <= 9; i++) {
            bool found = false;

            for (int j = 0; j < numbers.Length; j++) {
                if (numbers[j] == i) {
                    found = true;
                    break; 
                }
            }

            if (!found) {
                answer += i;
            }
        }

        return answer;
    }
}",,2023. 9. 8,18,1
2023. 9. 8 오전 11:00:45,조성훈,Unity,31 - 이상한 문자 만들기,"public class Solution 
{
    public string solution(string s) 
    {
        string answer = """";
        string[] ward = s.Split(' ');
        
        for(int i = 0; i < ward.Length; i++)
        {
            for(int j = 0; j < ward[i].Length; j++)
            {
                if(j % 2 == 0)
                    answer += char.ToUpper(ward[i][j]); 
                else
                    answer += char.ToLower(ward[i][j]);
            }
            if( i != ward.Length-1)
                answer += "" "";
        }
        
        return answer;
    }
}",,2023. 9. 8,31,2
2023. 9. 8 오전 11:01:57,김형수,Unity,12 - 두 정수 사이의 합,"public class Solution {
    public long solution(int a, int b) {
        long answer = 0;
        
        if (a <= b)
        {
            for (int i = a; i <= b; i++)
            {
                answer += i;
            }
        }
        else // a > b
        {
            for (int i = b; i <= a; i++)
            {
                answer += i;
            }
        }
        
        return answer;
    }
}",https://github.com/Kim-H-S/Programmers/blob/main/%EB%91%90%20%EC%A0%95%EC%88%98%20%EC%82%AC%EC%9D%B4%EC%9D%98%20%ED%95%A9.cs,2023. 9. 8,12,1
2023. 9. 8 오전 11:04:44,이경민,Unity,33 - 크기가 작은 부분,"using System;

public class Solution {
    public int solution(string t, string p) {
        int answer = 0;
        int pLength = p.Length;
        for (int i = 0; i <= t.Length - pLength; i++)
        {
            long checkt = long.Parse(t.Substring(i, pLength));
            if ( checkt <= long.Parse(p))
                answer++;
            else continue;
        }
        return answer;
    }
}",https://github.com/kminsmin/Algorithm_Test_Practice/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/unrated/147355.%E2%80%85%ED%81%AC%EA%B8%B0%EA%B0%80%E2%80%85%EC%9E%91%EC%9D%80%E2%80%85%EB%B6%80%EB%B6%84%EB%AC%B8%EC%9E%90%EC%97%B4,2023. 9. 8,33,2
2023. 9. 8 오전 11:05:30,이경민,Unity,34 - 최소직사각형,"using System;

public class Solution {
    public int solution(int[,] sizes) {
        int answer = 0;
        int maxWidth = int.MinValue;
        int maxHeight = int.MinValue;
        
        for(int i = 0; i < sizes.GetLength(0); i++)
        {
            if (sizes[i,0] < sizes[i,1])
            {
                int temp =sizes[i,1];
                sizes[i,1] = sizes[i,0];
                sizes[i,0] = temp;
            }
            else continue;
        }
        
        for(int i = 0; i < sizes.GetLength(0); i++)
        {
            if (sizes[i,0] > maxWidth)
            {
                maxWidth = sizes[i,0];
            }
            else continue;
        }
        
        for(int i = 0; i < sizes.GetLength(0); i++)
        {
            if (sizes[i,1] > maxHeight)
            {
                maxHeight = sizes[i,1];
            }
            else continue;
        }
        
        answer = maxWidth * maxHeight;
        
        return answer;
    }
}",https://github.com/kminsmin/Algorithm_Test_Practice/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/86491.%E2%80%85%EC%B5%9C%EC%86%8C%EC%A7%81%EC%82%AC%EA%B0%81%ED%98%95,2023. 9. 8,34,2
2023. 9. 8 오전 11:09:41,노재우,Unity,38 - K번째수정렬,"using System;

public class Solution
{
    public int[] solution(int[] array, int[,] commands) //commad 시작,  끝 , 몇번?
    {
        int answernum = commands.GetLength(0);
        int[] answer = new int[answernum];

        for (int i = 0; i < commands.GetLength(0); i++)
        {
            int[] copy = new int[commands[i, 1] - commands[i, 0]+1];
            Array.Copy(array, commands[i, 0] - 1, copy,0,commands[i, 1] - commands[i, 0]+1);

            Array.Sort(copy);
            answer[i] = copy[commands[i, 2]-1];

        }

        return answer;
    }
}",,2023. 9. 8,38,2
2023. 9. 8 오전 11:20:51,한병권,Unity,57 - 둘만의 암호,"using System;
using System.Collections.Generic;

public class Solution {
    public string solution(string s, string skip, int index) {
        string answer = """";
        
        List<int> list = new List<int>();
        for(int i = 97; i <= 122; i++)
        {
            list.Add(i);
        }
        
        char[] skipArry = skip.ToCharArray();
        foreach(char c in skipArry)
        {
            list.Remove((int)c);
        }

        char[] temp = s.ToCharArray();
        foreach(char c in temp )
        {
            int i = list.IndexOf((int)c);
            
            if(index < list.Count)
            {            
                i = i + index < list.Count ? i + index : i + index - list.Count; 
            }
            else
            {
                i = i + index%list.Count < list.Count ? i +  index%list.Count : i + index%list.Count - list.Count; 
            }

            answer = answer + (char)list[i];
        }
        return answer;
    }
}",https://github.com/hbg9212/AlgorithmCodekata,2023. 9. 8,57,3
2023. 9. 8 오전 11:22:14,박지원,Unity,43 - 명예의 전당 (1),"using System;

public class Solution {
    public int[] solution(int k, int[] score) {
        int[] answer = new int[score.Length];
        int[] HOF = new int[k];
        for(int i = 0; i < score.Length; i++){
            for(int j = 0; j < k; j++){
                if(score[i] > HOF[j]){
                    HOF[j] = score[i];
                    break;
                }
            }
            Array.Sort(HOF);
            answer[i] = i + 1 < k ? HOF[k - i - 1] : HOF[0];
        }
        return answer;
    }
}",https://github.com/jwonp9127/AlgorithmStudy/tree/e8fbfea6f35a878720cd971f5ade3fa054e15d0f/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/unrated/138477.%E2%80%85%EB%AA%85%EC%98%88%EC%9D%98%E2%80%85%EC%A0%84%EB%8B%B9%E2%80%85%EF%BC%881%EF%BC%89,2023. 9. 8,43,2
2023. 9. 8 오전 11:27:10,김주형,Unity,30 - 3진법 뒤집기,"using System;

public class Solution 
{
    public int solution(int n) 
    {
       int answer = 0;
        string Trit = """";
        while (n != 0)
        {
            Trit = (n % 3) + Trit;  
            n /= 3; 
        }
        // n을 삼진법으로 변환

        char[] tritArray = Trit.ToCharArray();
        Array.Reverse(tritArray);
        string reverseTrit = new string(tritArray); // 생성된 문자배열 뒤집어서 문자열 만들기

        int power = 0;

        for( int i = reverseTrit.Length -1; i >= 0; i--)
        {
            int tmp = int.Parse(reverseTrit[i].ToString());
            answer += tmp * (int)Math.Pow(3,power);
            power++;
        }
        // 다시 10진법으로 변환

        return answer;    
    }
}",https://github.com/kjuhyung/Algorithm.git,2023. 9. 8,30,1
2023. 9. 8 오전 11:30:06,박지원,Unity,44 - 2016년,"public class Solution {
    public string solution(int a, int b) {
        int[] monthDays = new int[12]{31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31};
        string[] Day = new string[7]{""THU"", ""FRI"", ""SAT"", ""SUN"", ""MON"", ""TUE"", ""WED""};
        
        int days = 0;
        
        for(int i = 0; i < a - 1; i++)
            days += monthDays[i];
        days += b;
        
        return Day[days % 7];
    }
}",https://github.com/jwonp9127/AlgorithmStudy/tree/bed9101c5d6635dda17bc7c6e75d4ba04f5d9486/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12901.%E2%80%852016%EB%85%84,2023. 9. 8,44,2
2023. 9. 8 오전 11:40:30,신해준,Unity,38 - K번째수정렬,"using System;

public class Solution {
    public int[] solution(int[] array, int[,] commands) 
    {
        int[] answer = new int[commands.GetLength(0)];

        for (int i = 0; i < commands.GetLength(0); i++)
        {
            int iValue = commands[i, 0] - 1; // i번째 숫자부터 시작 (0-based index)
            int jValue = commands[i, 1];     // j번째 숫자까지 포함하지 않음
            int kValue = commands[i, 2] - 1; // k번째 숫자를 찾음 (0-based index)

            // i부터 j까지 배열을 복사하고 정렬
            int[] subArray = new int[jValue - iValue];
            Array.Copy(array, iValue, subArray, 0, jValue - iValue);
            Array.Sort(subArray);

            // k번째 숫자를 결과 배열에 저장
            answer[i] = subArray[kValue];
        }

        return answer;
    }
}
",,2023. 9. 8,38,2
2023. 9. 8 오전 11:52:05,채이환,Unity,46 - 과일 장수,"using System;
using System.Linq;
using System.Collections.Generic;
public class Solution {
    public int solution(int k, int m, int[] score) {
        int answer = 0;
        Dictionary<int,int> count = new Dictionary<int,int>();
        for (int i = 0; i < score.Length; ++i)
        {
            if (count.ContainsKey(score[i]))
                count[score[i]] += 1;
            else
                count.Add(score[i], 1);
        }
        
        int[] selectScore = count.Keys.ToArray();
        Array.Sort(selectScore);
        
        int index = selectScore.Length - 1;
        int box = 0;
        while (index >= 0)
        {
            --count[selectScore[index]];
            ++box;
            if (box == m)
            {
                answer += m * selectScore[index];
                box = 0;
            }
            if (count[selectScore[index]] == 0)
                --index;
        }
        return answer;
    }
}",,2023. 9. 8,46,2
2023. 9. 8 오전 11:52:34,채이환,Unity,47 - 모의고사완전탐색,"using System;
using System.Collections.Generic;
using System.Linq;
public class Solution {
    public int[] solution(int[] answers) {
        List<int> answer = new List<int>();
        
        int[] count = new int[3];
        for (int i = 0; i < answers.Length; ++i)
        {
            if (su1(i, answers[i]))
                count[0]++;
            if (su2(i, answers[i]))
                count[1]++;
            if (su3(i, answers[i]))
                count[2]++;
        }
        
        Dictionary<int, int> rank = new Dictionary<int, int>();
        for (int i = 0; i < 3; ++i)
        {
            if (count[i] == 0)
                continue;
            rank.Add(i+1, count[i]);
        }
        
        var res = rank.OrderByDescending(x => x.Value).ToList();
        answer.Add(res[0].Key);
        for (int i = 0; i < res.Count; ++i)
        {
            if (i + 1 < res.Count)
            {
                if (res[i].Value == res[i+1].Value)
                    answer.Add(res[i+1].Key);
                else
                    break;
            }
        }
        
        return answer.ToArray();
    }
    int[] ans2 = {1, 3, 4, 5};
    int[] ans3 = {3, 1, 2, 4, 5};
    public bool su1(int i, int answer)
    {
        int check = (i % 5) + 1;
        return check == answer;
    }
    public bool su2(int i, int answer)
    {
        int check;
        if (i % 2 == 0)
            check = 2;
        else
        {
            check = ans2[(i % 8) / 2];
        }
        return check == answer;
    }
    public bool su3(int i, int answer)
    {
        int check;
        check = ans3[i % 10 / 2];
        return check == answer;
    }
}",,2023. 9. 8,47,2
2023. 9. 8 오후 12:06:42,조성훈,Unity,23 - 약수의 개수와 덧셈,"using System;

public class Solution {
    public int solution(int left, int right) 
    {
        int answer = 0;
        for(int i = left; i <= right; i++)
        {
            if(Math.Pow((int)Math.Sqrt(i), 2) != i )
            answer += i;
            else
            answer -= i;
        }
        return answer;
    }
}",,2023. 9. 6,23,1
2023. 9. 8 오후 12:46:48,신해준,Unity,41 - 푸드 파이트 대회,"using System;
using System.Linq;

public class Solution {
    public string solution(int[] food) {
        string answer = """";
        string str = """";
        
        for(int i = 1; i < food.Length; i++)
        {
            for(int j = 0; j < food[i] / 2; j++)
            {
                answer += i.ToString();
            }
        }
        str = String.Concat(answer.Reverse());
        answer += ""0"" + str;
        return answer;
    }
}


",,2023. 9. 8,41,2
2023. 9. 8 오후 12:54:08,김규승,Unity,127 - 양궁 대회,"#include <iostream>
#include <string>
#include <vector>
#include <set>

using namespace std;

constexpr int MAX_INDEX{10};

int             g_maxDiff{-100000000};
vector<int>     g_answer{};

void MakeAnswer(int maxArrowNumber, const vector<int>& info, vector<int> answer, int index, int arrowNumber);
void CheckBestScore(const vector<int>& info, const vector<int>& answer);

vector<int> solution(int n, vector<int> info) {
    
    g_answer.emplace_back(-1);
    
    std::vector<int> answer{};
    answer.resize(11);
    MakeAnswer(n, info, answer, 0, 0);
    
    return g_answer;
    
}

void MakeAnswer(int maxArrowNumber, const vector<int>& info, vector<int> answer, int index, int arrowNumber)
{
    
    if(index > MAX_INDEX)
    {
        if(arrowNumber <= maxArrowNumber)
        {
            answer[MAX_INDEX] += maxArrowNumber - arrowNumber;
            CheckBestScore(info, answer);
        }
        return;
    }
    
    //비선택
    answer[index] = 0;
    MakeAnswer(maxArrowNumber, info, answer, index + 1, arrowNumber);
    
    
    //선택
    arrowNumber     += info[index] + 1;
    //if(arrowNumber < maxArrowNumber)
    {
        answer[index]   = info[index] + 1;
        MakeAnswer(maxArrowNumber, info, answer, index + 1, arrowNumber);
    }
    
}

void CheckBestScore(const vector<int>& info, const vector<int>& answer)
{
    
    int ryanScore{0};
    int apeachScore{0};
    for(int i = 0; i < info.size(); ++i)
    {
        if(answer[i] > info[i])
        {
            ryanScore += 10 - i;
        }else if(info[i] != 0)
        {
            apeachScore += 10 - i;
        }
    }
    
    int diff{ryanScore - apeachScore};
    if(diff > 0)
    {
        if(diff > g_maxDiff)
        {
            
            //std::cout << ""new best diff"" << diff << endl;
            
            g_maxDiff = diff;
            g_answer = answer;
            
        }
        else if(diff == g_maxDiff)
        {
            for(int i = MAX_INDEX; i > 0; --i)
            {
                if(answer[i] > g_answer[i])
                {
                    g_answer = answer;
                    break;
                }else if(answer[i] < g_answer[i])
                {
                    break;
                }
            }
        }
    }
    
}",,2023. 9. 8,127,5
2023. 9. 8 오후 1:31:51,신해준,Unity,43 - 명예의 전당 (1),"using System;
using System.Collections.Generic;
using System.Linq;

public class Solution {
    public int[] solution(int k, int[] score) {
        int[] answer = new int[score.Length];
        List<int> board = new List<int>();
        
        for(int i = 0; i < score.Length; i++)
        {
            if(board.Count == k)
            {
                if(board[0] > score[i])
                {
                    answer[i] = board[0];
                    continue;
                }
                board.RemoveAt(0);
            }
            board.Add(score[i]);
            board.Sort();
            answer[i] = board[0];
        }
        return answer;
    }
}

",,2023. 9. 8,43,2
2023. 9. 8 오후 3:00:28,김규승,Unity,126 - 요격 시스템,"#include <iostream>
#include <string>
#include <vector>
#include <algorithm>
#include <functional>

using namespace std;

bool CompareTarget(vector<int>& left, vector<int>& right)
{
    return less<int>{}(left[0], right[0]);
}

int solution(vector<vector<int>> targets) {
    
    sort(targets.begin(), targets.end(), bind(CompareTarget, placeholders::_1, placeholders::_2));
    
    /*
    for(int i = 0; i < targets.size(); ++i)
    {
        cout << ""["" << targets[i][0] << "", "" << targets[i][1] << ""]"" << endl;
    }
    */
    
    int begin{-1};
    int end{-1};
    int count{};
    for(int i = 0; i < targets.size(); ++i)
    {
        
        if(end <= targets[i][0])
        {
            
            //cout << ""Change["" << targets[i][0] << "", "" << targets[i][1] << ""]"" << endl;
            ++count;
            begin = targets[i][0];
            end = targets[i][1];
        }
        else
        {
            end = min(end, targets[i][1]);
        }
        
    }
    
    return count;
    
}",,2023. 9. 8,126,5
2023. 9. 8 오후 6:09:30,최석준,Unity,12 - 두 정수 사이의 합,"#include <stdio.h>
#include <stdbool.h>
#include <stdlib.h>

long long solution(int a, int b) {
    long long answer = 0;
    if(a > b){
        int temp = b;
        b = a;
        a = temp;
    }
    for(int i=a;i<=b;i++){
        answer += i;
    }
    return answer;
}",,2023. 9. 8,12,1
2023. 9. 8 오후 9:09:42,이솔,AI,31 - 이상한 문자 만들기,"def solution(s):
    s = s.split("" "")
    
    answer = []
    for j in s:
        word = [letter.upper() if i % 2==0 else letter.lower() for i,letter in enumerate(list(j))]
        answer.append(''.join(word))
    
    return ' '.join(answer)",,2023. 9. 6,31,2
2023. 9. 8 오후 9:10:03,이솔,AI,32 - 삼총사,"from itertools import *

def solution(number):
    answer = 0
    comb = list(combinations(number, 3))
    for i in comb:
        if sum(i) == 0:
            answer += 1
    return answer",,2023. 9. 6,32,2
2023. 9. 8 오후 9:10:26,이솔,AI,33 - 크기가 작은 부분,"from itertools import *

def solution(t, p):
    answer = 0
    num = len(p)
    for i in range(len(t)-num+1):
        if t[i:i+num] <= p:
            answer += 1
    return answer",,2023. 9. 6,33,2
2023. 9. 8 오후 10:47:50,김규승,Unity,125 - 이모티콘 할인행사,"#include <iostream>
#include <string>
#include <vector>

using namespace std;

struct Result
{
    int subscriberNumber;
    int profit;
};

Result bestResult{-1, -1};

void Simulation(vector<vector<int>>& userVector, vector<int>& emoticonVector, vector<float>& emoticonSaleVector, int saleIndex);

void Calculate(vector<vector<int>>& userVector, vector<int>& emoticonVector, vector<float>& emoticonSaleVector);

vector<int> solution(vector<vector<int>> users, vector<int> emoticons) {

    vector<float> emoticonSaleVector{};
    emoticonSaleVector.resize(emoticons.size(), 0.0f);
    Simulation(users, emoticons, emoticonSaleVector, 0);

    vector<int> answer;
    answer.emplace_back(bestResult.subscriberNumber);
    answer.emplace_back(bestResult.profit);
    
    cout << ""Best subscriber number: "" << bestResult.subscriberNumber << endl;
    cout << ""Best profit: "" << bestResult.profit << endl;

    return answer;
    
}

void Simulation(vector<vector<int>>& userVector, vector<int>& emoticonVector, vector<float>& emoticonSaleVector, int saleIndex)
{
    
    if(saleIndex >= emoticonSaleVector.size())
    {
        
        /*
        for(int i = 0; i < emoticonSaleVector.size(); ++i)
        {
            cout << emoticonSaleVector[i] << "", "";
        }
        cout << endl;
        */
        
        Calculate(userVector, emoticonVector, emoticonSaleVector);
        
        return;
        
    }
    
    emoticonSaleVector[saleIndex] = 0.1f;
    Simulation(userVector, emoticonVector, emoticonSaleVector, saleIndex + 1);
    emoticonSaleVector[saleIndex] = 0.2f;
    Simulation(userVector, emoticonVector, emoticonSaleVector, saleIndex + 1);
    emoticonSaleVector[saleIndex] = 0.3f;
    Simulation(userVector, emoticonVector, emoticonSaleVector, saleIndex + 1);
    emoticonSaleVector[saleIndex] = 0.4f;
    Simulation(userVector, emoticonVector, emoticonSaleVector, saleIndex + 1);
    
}

void Calculate(vector<vector<int>>& userVector, vector<int>& emoticonVector, vector<float>& emoticonSaleVector)
{
    
    Result result;
    result.subscriberNumber = 0;
    result.profit           = 0;
    
    for(int i = 0; i < userVector.size(); ++i)
    {
        
        int  price{0};
        for(int j = 0; j < emoticonVector.size(); ++j)
        {
            
            //유저가 원하는 세일 이상으로 세일하면 구매합니다.
            if(emoticonSaleVector[j] >= ((float)userVector[i][0] * 0.01f))
            {
                price += emoticonVector[j] * (1.0f - emoticonSaleVector[j]);
            }
            
        }
        
        //구매 가격이 한도보다 크다면 구독합니다.
        if(price >= userVector[i][1])
        {
            result.subscriberNumber++;
        }
        else
        {
            result.profit += price;
        }
        
        //cout << ""result: ["" << result.subscriberNumber << "", "" << result.profit << ""]"" << endl;
        
    }
    
    if(bestResult.subscriberNumber < result.subscriberNumber)
    {
        bestResult = result;
    }
    else if(bestResult.subscriberNumber == result.subscriberNumber &&
            bestResult.profit < result.profit)
    {
        bestResult = result;
    }
    
}",,2023. 9. 8,125,5
2023. 9. 8 오후 11:04:20,이솔,AI,34 - 최소직사각형,"def solution(sizes):
    width = []
    height = []
    answer = 0
    for i in range(len(sizes)):
        width.append(max(sizes[i]))
        height.append(min(sizes[i]))
    answer=max(width)*max(height)
    return answer",,2023. 9. 7,34,2
2023. 9. 8 오후 11:04:54,이솔,AI,35 - 시저 암호,"def solution(s, n):
    answer = ''
    for i in s:
        if i == ' ':
            answer += i
        else:
            num = ord(i)
            if num > 64 and num < 91:
                if num+n > 90:
                    answer += chr(num+n - 26)
                else:
                    answer += chr(num+n)
            if num > 96 and num < 123:
                if num+n > 122:
                    answer += chr(num+n - 26)
                else:
                    answer += chr(num+n)
                    
    return answer
",,2023. 9. 7,35,2
2023. 9. 8 오후 11:05:17,이솔,AI,36 - 숫자 문자열과 영단어,"def solution(s):
    num_dic = {""zero"":""0"", ""one"":""1"", ""two"":""2"", ""three"":""3"", ""four"":""4"", ""five"":""5"", ""six"":""6"", ""seven"":""7"", ""eight"":""8"", ""nine"":""9""}
    for key,value in num_dic.items():
        s = s.replace(key,value)
    return int(s)",,2023. 9. 7,36,2
2023. 9. 9 오전 10:26:04,김민상,Unity,64 - 신고 결과 받기,"def solution(id_list, report, k):
    idxs = {v:i for i,v in enumerate(id_list)}
    ban = {_id:[] for _id in id_list}
    
    for repo in set(report):
        a, b = repo.split()
        ban[b].append(idxs[a])
        
    answer = [0 for _ in range(len(id_list))]
        
    for b in ban:
        if len(ban[b]) >= k:
            for i in ban[b]:
                answer[i] += 1
    
    return answer",,2023. 9. 9,64,3
2023. 9. 9 오전 10:34:46,김민상,Unity,65 - 최댓값과 최솟값,"def solution(s):
    lit = sorted(map(int, s.split()))
    return f""{lit[0]} {lit[-1]}""",,2023. 9. 9,65,3
2023. 9. 9 오전 11:55:54,김민상,Unity,66 - JadenCase 문자열 만들기,"def solution(s):
    return ' '.join(map(lambda x: x.capitalize(), s.split("" "")))",,2023. 9. 9,66,3
2023. 9. 9 오후 12:01:14,김민상,Unity,67 - 이진 변환 반복하기,"def solution(s):
    changeCount = 0
    zeroCount = 0
    
    while s != ""1"":
        zeroCount += s.count('0')
        
        s = bin(len(s.replace('0', '')))[2:]
        
        changeCount += 1
        
    return [changeCount, zeroCount]",,2023. 9. 9,67,3
2023. 9. 9 오후 12:06:34,김민상,Unity,68 - 피보나치 수,"public class Solution {
    public int solution(int n) {
        int a = 0;
        int b = 1;
        
        for (int i = 0; i < n; i++)
        {
            int temp = a;
            a = b;
            b = (temp + b) % 1234567;
        }
        
        return a;
    }
}",,2023. 9. 9,68,3
2023. 9. 9 오후 12:22:35,김민상,Unity,69 - 카펫,"def solution(brown, yellow):
    for i in range(1, int(yellow**0.5) + 1):
        if yellow % i == 0 and 4 + 2 * (i + (yellow // i)) == brown:
            return [yellow//i + 2, i + 2]",,2023. 9. 9,69,3
2023. 9. 9 오후 7:30:42,임전혁,Unity,53 - 숫자 짝꿍,"using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

public class Solution {
    public string solution(string X, string Y) {
        int[] cntX = new int[10];
        int[] cntY = new int[10];
        StringBuilder sb = new StringBuilder();
        
        for (int i = 0; i < X.Length; i++)
        {
            int xNum = int.Parse(X[i].ToString());
            cntX[xNum]++;
        }

        for (int i = 0; i < Y.Length; i++)
        {
            int yNum = int.Parse(Y[i].ToString());
            cntY[yNum]++;
        }
        
        for (int i = 9; i >= 0; i--)
        {
            while (cntX[i] > 0 && cntY[i] > 0)
            {
                sb.Append(i.ToString());
                cntX[i]--;
                cntY[i]--;
            }
        }
        
        string sbStr = sb.ToString();
        if (sb.Length == 0)
            return ""-1"";
        else if (sb.Replace(""0"", """").Length == 0)
            return ""0"";
        
        return sbStr;
    }
}",https://github.com/yarogono/Algorithm_CSharp/blob/master/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/131128.%E2%80%85%EC%88%AB%EC%9E%90%E2%80%85%EC%A7%9D%EA%BF%8D/%EC%88%AB%EC%9E%90%E2%80%85%EC%A7%9D%EA%BF%8D.cs,2023. 9. 9,53,2
2023. 9. 9 오후 8:09:39,김규승,Unity,124 - 혼자서 하는 틱택토,"#include <iostream>
#include <string>
#include <vector>

using namespace std;

int solution(vector<string> board) {
    
    constexpr int SUCCESS{1};
    constexpr int FAIL{0};
    
    //개수를 세어봅니다.
    int firstCount{0};
    int secondCount{0};
    for(int y = 0; y < 3; ++y)
    {
        for(int x = 0; x < 3; ++x)
        {
            
            switch(board[y][x])
            {
            case 'O':
                ++firstCount;
                break;
            case 'X':
                ++secondCount;
                break;
            }
        
        }
    }
    
    //후공이 선공보다 많이 둘 수 없습니다.
    //선공이 후공보다 2개 이상 많이 둘 수 없습니다.
    if(secondCount > firstCount ||
       firstCount - secondCount > 1)
    {
        return FAIL;
    }
    
    //클리어 횟수를 셉니다.
    int firstClearCount{0};
    int secondClearCount{0};
    
    for(int y = 0; y < 3; ++y)      //가로
    {
        if(board[y] == ""OOO"")
        {
            ++firstClearCount;
        }
        else if(board[y] == ""XXX"")
        {
            ++secondClearCount;
        }
    }

    for(int x = 0; x < 3; ++x)      //세로
    {
        if(board[0][x] == board[1][x] && board[1][x] == board[2][x])
        {
            switch(board[0][x])
            {
            case 'O':
                ++firstClearCount;
                break;
            case 'X':
                ++secondClearCount;
                break;
            }
        }
    }
    
    if(board[0][0] == board[1][1] && board[1][1] == board[2][2])
    {
        switch(board[1][1])
        {
        case 'O':
            ++firstClearCount;
            break;
        case 'X':
            ++secondClearCount;
            break;
        }
    }
    
    if(board[0][2] == board[1][1] && board[1][1] == board[2][0])
    {
        switch(board[1][1])
        {
        case 'O':
            ++firstClearCount;
            break;
        case 'X':
            ++secondClearCount;
            break;
        }
    }
    
    //cout << ""First clear: "" << firstClearCount << endl;
    //cout << ""Second clear: "" << secondClearCount << endl;
    
    //둘 다 이길 순 없습니다.
    if(firstClearCount != 0 && secondClearCount != 0)
    {
        return FAIL;
    }
    
    //후공이 이겼으면 선공과 후공이 둔 수는 같아야 합니다.
    if(secondClearCount != 0 && firstCount > secondCount)
    {
        return FAIL;
    }
    
    //선공이 이겼으면 선공이 후공보다 많이 두어야 합니다.
    if(firstClearCount != 0 && firstCount == secondCount)
    {
        return FAIL;
    }
    
    return SUCCESS;
    
}",,2023. 9. 9,124,5
2023. 9. 9 오후 9:05:42,조영오,Unity,52 - 옹알이 (2),"using System;

public class Solution {
    
    public int solution(string[] babbling) {
        int answer = 0;
        
        //aya, ye, woo, ma 네 가지 발음 또는 이것들을 연속되지 않게 조합한 발음밖에 하지 못 한다.
        //문자열 배열 babbling 이 주어질 때 발음할 수 있는 문자열의 갯수는?
        
        bool isPossible;
        string foreStr = """";//이 전 문자열과 동일한지 확인할 때 사용
        string str = """";//서브스트링 탐색에 사용
        foreach(string s in babbling){
            isPossible = false;
            foreStr = """";
            for(int i = 0 ; i < s.Length;){
                //앞에서부터 일단 두 개의 문자열을 따 온다. 
                //그 후, ye 또는 ma 라면 직전의 문자열과 같은지 검사한다. 
                //ay 또는 wo 였다면 바로 뒤의 문자열을 하나 더 따 온다. 이것이 aya 또는 woo 일 때 
                //직전의 문자열과 같은지 검사한다.
                //직전의 문자열과 같거나, 발음이 불가능한 문자열이라면 불가능하다고 판정한다.
                //마지막 탐색까지 완료했다면 가능하다고 판정한다.
                if(i >= s.Length-1){
                    isPossible = false; break;
                }
                str = s.Substring(i,2);
                Console.WriteLine(""start str : "" + str);
                if(str == ""ye"" || str == ""ma""){
                    if(str == foreStr) {isPossible = false; break;}
                    else{foreStr = str; i+=2; isPossible = true;}
                }
                else if(str == ""ay"" && i+2 < s.Length){
                    if(s[i+2] == 'a'){
                        if(str == foreStr) {isPossible = false; break;}
                        else{foreStr = str; i+=3; isPossible = true;}
                    }
                    else{isPossible = false; break;}
                }
                else if(str == ""wo"" && i+2 < s.Length){
                    if(s[i+2] == 'o'){
                        if(str == foreStr) {isPossible = false; break;}
                        else{foreStr = str; i+=3; isPossible = true;}
                    }
                    else{isPossible = false; break;}
                }
                else{isPossible = false; break;}
            }
            if(isPossible){answer++;}
            Console.WriteLine(""count : "" + answer);
        }
        
        return answer;
    }
}",,2023. 9. 9,52,2
2023. 9. 9 오후 9:28:19,김규승,Unity,123 - 조이스틱,"#include <iostream>
#include <string>
#include <vector>

using namespace std;

int Left(const string& name, int base, const vector<int>& dVector);
int Right(const string& name, int base, const vector<int>& dVector);

int MinDistance(char c);

int solution(string name) {
    
    vector<int> dVector{};
    
    cout << ""["";
    for(int i = 0; i < name.size(); ++i)
    {
        dVector.emplace_back(MinDistance(name[i]));
        cout << dVector[i] << "", "";
    }
    cout << ""]"" << endl;
    
    int minDistance{100000000};
    for(int i = 0; i < name.size(); ++i)
    {
        
        int baseDistance{min(i, (int)name.size() - i)};
        
        cout << ""Base distance: "" << baseDistance << endl;
        
        int left{Left(name, i, dVector) + baseDistance};
        int right{Right(name, i, dVector) + baseDistance};
        minDistance = min(minDistance, min(left, right));
        
    }
    
    
    return minDistance;
    
}


int Left(const string& name, int base, const vector<int>& dVector)
{

    int begin{(int)name.size() + base};
    int end{base + 1};
    
    //왼쪽에 연속된 A들은 무시합니다.
    while(name[end % name.size()] == 'A' && end < begin)
    {
        ++end;
    }
    
    cout << ""[Left] Begin: "" << begin << "", End: "" << end << endl;
    
    int count{-1};
    for(size_t i = begin; i >= end; --i)
    {
        
        size_t index{ i % name.size()};
   
        ++count;
        count += dVector[index];
        
        cout << ""Count: "" << count << endl;
        
    }
    
    return max(0, count);
    
}

int Right(const string& name, int base, const vector<int>& dVector)
{//a b c d e f g h i j k l m n o p q r s t u v w x y z
    
    
    int begin{base};
    int end{begin + (int)name.size() - 1};
    
    //왼쪽에 연속된 A들은 무시합니다.
    while(name[end % name.size()] == 'A' && end > begin)
    {
        --end;
    }
    
    cout << ""[Right] Begin: "" << begin << "", End: "" << end << endl;
    
    int count{-1};
    for(size_t i = begin; i <= end; ++i)
    {
        
        size_t index{ i % name.size()};
   
        ++count;
        count += dVector[index];
        
        cout << ""Count: "" << count << endl;
        
    }
    
    return max(0, count);
    
}

int MinDistance(char c)
{
    //cout << ""Up( "" << (int)c << "" - "" << (int)'A' << ""): "" << c - 'A'  << endl;
    //cout << ""Down( "" << (int)'Z' << "" - "" << (int)c << "" + 1): "" << ('Z' - c) + 1 << endl;
    return min(c - 'A', ('Z' - c) + 1);
}
",,2023. 9. 9,123,5
2023. 9. 10 오전 1:14:15,배인호,Unity,50 - 기사단원의 무기,"using System;
using System.Collections.Generic;

public class Solution
{
    public int solution(int number, int limit, int power)
    {
        int answer = 0;

        for (int i = 1; i <= number; i++)
        {
            if (CountDivisor(i) > limit)
            {
                answer += power;
            }
            else
            {
                answer += CountDivisor(i);
            }
        }

        return answer;
    }

    int CountDivisor(int input)
    {
        List<int> inputDivisor = new List<int>();
        int count = 0;
        int num = (int)Math.Sqrt(input);

        for (int i = 1; i <= num; i++)
        {
            if (input % i == 0)
            {
                inputDivisor.Add(i);
            }
        }

        int compareNum = inputDivisor[inputDivisor.Count - 1];

        count = inputDivisor.Count * 2;

        if ((input / compareNum) == compareNum)
        {
            count -= 1;
        }

        return count;
    }
}
",https://github.com/cutlake2000/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/136798.%E2%80%85%EA%B8%B0%EC%82%AC%EB%8B%A8%EC%9B%90%EC%9D%98%E2%80%85%EB%AC%B4%EA%B8%B0,2023. 9. 10,50,2
2023. 9. 10 오전 10:37:01,임전혁,Unity,54 - 체육복,"using System;

public class Solution {
    public int solution(int n, int[] lost, int[] reserve) {
        
        int answer = n - lost.Length;
        
        Array.Sort(lost);
        Array.Sort(reserve);
        for (int i = 0; i < lost.Length; i++)
        {
            for (int j = 0; j < reserve.Length; j++)
            {
              if (lost[i] == reserve[j])
                {
                    lost[i] = -1;
                    reserve[j] = -1;
                    answer++;
                    break;
                }
            }
        }            
        
        for (int i = 0; i < lost.Length; i++)
        {
            if (lost[i] == -1)
                continue;

            for (int j = 0; j < reserve.Length; j++)
            {
                if (reserve[j] == -1)
                    continue;
                
                if (lost[i] - 1 == reserve[j] || 
                    lost[i] + 1 == reserve[j])
                {
                    lost[i] = -1;
                    reserve[j] = -1;
                    answer++;
                    break;
                }
            }
        }

        return answer;
    }
}",https://github.com/yarogono/Algorithm_CSharp/blob/master/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/42862.%E2%80%85%EC%B2%B4%EC%9C%A1%EB%B3%B5/%EC%B2%B4%EC%9C%A1%EB%B3%B5.cs,2023. 9. 10,54,2
2023. 9. 10 오후 10:49:13,박희원,Unity,38 - K번째수정렬,"using System;
using System.Collections.Generic; 

public class Solution {
   public List<int> solution(int[] array, int[,] commands)
            {
                List<int> answer = new List<int>();
                
                for (int i = 0; i<commands.GetLength(0); i++)
                {
                    List<int> ints = new List<int>();

                    int target = commands[i,2];
                    
                    for(int j = commands[i,0]; j <=commands[i,1]; j++)
                    {
                        ints.Add(array[j-1]); 
                    }

                    ints.Sort();
                    answer.Add(ints[target-1]);
                }

                return answer;
            }
}",,2023. 9. 10,38,2
2023. 9. 10 오후 10:49:58,박희원,Unity,39 - 두 개 뽑아서 더하기,"using System;
using System.Collections.Generic; 
using System.Linq; 

public class Solution {
   public int[] solution(int[] numbers)
            {
                int[] answer = new int[] { };
                List<int> nums = new List<int>(); 

                for (int i = 0; i < numbers.Length; i++)
                {
                    for (int j = 0; j < numbers.Length; j++)
                    {
                        if (i != j)
                            nums.Add(numbers[i] + numbers[j]); 
                    }
                   
                }
                nums = nums.Distinct().ToList();
                nums.Sort();
                answer = nums.ToArray();

                foreach (int a in answer)
                    Console.WriteLine(a); 
                return answer;
            }
}",,2023. 9. 10,39,2
2023. 9. 10 오후 10:50:54,박희원,Unity,40 - 가장 가까운 같은 글자,"using System;

public class Solution {
        public int[] solution(string s)
            {
                int len = s.Length;
                int[] answer = new int[len];
                int index = -1;

                for (int i = 0; i<s.Length; i++)
                {
                    index = -1;
                    for (int j = i-1; j>= 0; j--)
                    {
                        if (s[i] == s[j])
                        {
                            index = i-j;
                            break; 
                        }
                    }
                    answer[i] = index;
                }

                foreach (int a in answer)
                    Console.WriteLine(a); 
                return answer;
            }
}",,2023. 9. 10,40,2
2023. 9. 11 오전 12:16:00,조영오,Unity,53 - 숫자 짝꿍,"using System;
using System.Collections.Generic;
using System.Text;

public class Solution {
    public string solution(string X, string Y) {
        //X 와 Y 에 공통적으로 들어가는 숫자들을 가져온다.(중복 허용)
        //이 숫자들을 각 자릿수에 집어넣어 만들 수 있는 가장 큰 수를 구한다.
        //X와 Y 의 문자 배열 x, y 를 만들고 x 의 각 원소에 대해 y 와 같은 값이 있는지 비교.
        
        //10 크기의 int 배열 nums를 선언한다. 각 인덱스가 공통으로 나타나는 해당 숫자이며, 
        //원소값은 X, Y 에서 해당 숫자가 공통으로 나타나는 횟수이다.
        
        //탐색은 0~9 까지만, X 와 Y 에서 해당 숫자가 나타나는 갯수를 체크한다. 
        //둘 중 나타난 횟수가 적은 쪽이 해당 숫자가 공통으로 나타나는 횟수이다.
        //탐색이 끝났다면, nums 에서 원소가 0이 아닌 가장 뒤쪽 인덱스부터 차례로 answer 에 집어넣는다(가장 큰 수)
        
        string answer = """";
    
        int[] nums = new int[10];
        int count = 0;
        int xCount = 0;
        int yCount = 0;
        for(int i = 0 ; i < nums.Length ; i++){
            xCount = 0; yCount = 0;
            foreach(char c in X){
                if(c == (char)(i + '0')){xCount++;}
            }
            foreach(char c in Y){
                if(c == (char)(i + '0')){yCount++;}
            }
            
            if(xCount < yCount){nums[i] = xCount;}
            else{nums[i] = yCount;}
            
            count += nums[i];
        }
        
        StringBuilder sb = new StringBuilder("""");
        
        for(int i = nums.Length-1 ; i >= 0 ; i--){
            for(int j = 0 ; j < nums[i] ; j++){
                sb.Append(i);
            }
        }
        
        answer = sb.ToString();
        
        //공통된 숫자들로 만든 최대값이 0 이고 공통된 숫자가 있긴 했다면 
        if(answer.Length > 0 && answer[0] == '0'){ 
            answer = ""0""; 
        }
        else if (answer == """"){
            answer = ""-1"";
        }
        
        return answer;   
    }
}",,2023. 9. 11,53,2
2023. 9. 11 오전 9:02:42,우성훈,Unity,9 - 정수 제곱근 판별,"public class Solution {
    public long solution(long n) {
        long answer = 0;
        for(long i=1; i<=n; i++)
        {
            if(i*i==n)
            {
                answer =(i+1)*(i+1);
                break;
            }
            else if(i*i>=n)
            {
                break;
            }
        }
        if(answer ==0)
        {
            answer =-1;
        }
        return answer;
    }
}",,2023. 9. 11,9,1
2023. 9. 11 오전 9:04:50,이선재,Unity,62 - 달리기 경주,"#include <string>
#include <vector>
#include <map>

using namespace std;

vector<string> solution(vector<string> players, vector<string> callings) {
    vector<string> answer;
    map<int, string> m1;
    map<string, int> m2;
    
    for(int i = 0; i < players.size(); i++)
    {
        m1[i] = players[i];
        m2[players[i]] = i;
    }
    
    for(int i = 0; i < callings.size(); i++)
    {
        int tempI = m2[callings[i]];
        string tempS = m1[tempI - 1];
        m1[tempI - 1] = callings[i];
        m1[tempI] = tempS;
        m2[callings[i]] = tempI - 1;
        m2[tempS] = tempI;
    }
    
    for(auto c : m1)
    {
        answer.push_back(c.second);
    }
    
    return answer;
}",https://github.com/Lyrwhitt/Algorithm/blob/main/Programmers/LEVEL1/%EB%8B%AC%EB%A6%AC%EA%B8%B0%20%EA%B2%BD%EC%A3%BC,2023. 9. 11,62,3
2023. 9. 11 오전 9:07:06,김호연,Unity,35 - 시저 암호,"using System;

public class Solution
{
    public string solution(string s, int n)
    {
        string answer = """";

        // 문자열을 단일문자로 분해하여 char형 배열로 저장
        char[] str_arr = s.ToCharArray();

        for(int i = 0; i < str_arr.Length; ++i)
        {
            // 공백은 건너뛴다
            if (str_arr[i] == ' ') continue;

            // n만큼 문자를 밀어낸다
            int temp_num = Convert.ToInt32(str_arr[i]) + n;

            // 대문자를 밀어내면 소문자 영역까지 밀려나는 경우가 있으므로
            // 따로 조건문으로 원본 문자를 확인 후 처리
            if((str_arr[i] >= 'A' && str_arr[i] <= 'Z'))
            {
                if(temp_num > 'Z')
                {
                    temp_num -= 26;
                }
            }
            else
            {
                if(temp_num > 'z')
                {
                    temp_num -= 26;
                }
            }

            str_arr[i] = Convert.ToChar(temp_num);
        }

        // 단일문자 배열을 다시 문자열로 만든다
        answer = new string(str_arr);

        return answer;
    }
}",,2023. 9. 11,35,2
2023. 9. 11 오전 9:07:16,노재우,Unity,39 - 두 개 뽑아서 더하기,"public class Solution
{
    
    public int[] solution(int[] numbers)
    {
        HashSet<int> temp = new HashSet<int>();

        for (int i = 0; i < numbers.Length-1; i++)
        {
            for (int j = i+1; j < numbers.Length; j++)
            {
                temp.Add(numbers[i]+ numbers[j]);
            }
        }
        int[] answer =temp.ToArray();
        Array.Sort(answer);
        return answer;
    }
}",,2023. 9. 11,39,2
2023. 9. 11 오전 9:07:38,이선재,Unity,63 - 공원 산책,"#include <string>
#include <vector>
#include <map>

using namespace std;

vector<int> solution(vector<string> park, vector<string> routes) {
    vector<int> answer;
    
    map<pair<int, int>, char> routeMap;
    
    int currentX = 0, currentY = 0;
    int limitX = park[0].length();
    int limitY = park.size();
    
    for(int i = 0; i < park.size(); i++)
    {
        for(int j = 0; j < park[i].length(); j++)
        {
            routeMap[make_pair(i, j)] = park[i][j];
            
            if(park[i][j] == 'S')
            {
                currentX = j; 
                currentY = i;
            }
        }
    }
    
    for(int i = 0; i < routes.size(); i++)
    {
        int moveNum = (int)(routes[i][2]) - '0';
        bool isMove = true;
        
        if(routes[i][0] == 'E')
        {
            if((currentX + moveNum) >= limitX)
            {
                continue;
            }
            for(int j = 0; j < moveNum; j++)
            {
                if(routeMap[make_pair(currentY, currentX + 1 + j)] == 'X')
                {
                    isMove = false;
                    
                    break;
                }
            }
            if(isMove) {currentX += moveNum;}
        }
        else if(routes[i][0] == 'W')
        {
            
            if((currentX - moveNum) < 0)
            {
                continue;
            }
            for(int j = 0; j < moveNum; j++)
            {
                if(routeMap[make_pair(currentY, currentX - 1 - j)] == 'X')
                {
                    isMove = false;
                    
                    break;
                }
            }
            
            if(isMove) {currentX -= moveNum;}
        }
        
        else if(routes[i][0] == 'N')
        {
            if((currentY - moveNum) < 0)
            {
                continue;
            }
            for(int j = 0; j < moveNum; j++)
            {
                if(routeMap[make_pair(currentY - 1 - j, currentX)] == 'X')
                {
                    isMove = false;
                    break;
                }
            }
            
            if(isMove) {currentY -= moveNum;}
        }
        
        else if(routes[i][0] == 'S')
        {
            if((currentY + moveNum) >= limitY)
            {
                continue;
            }
            for(int j = 0; j < moveNum; j++)
            {
                if(routeMap[make_pair(currentY + 1 + j, currentX)] == 'X')
                {
                    isMove = false;
                    break;
                }
            }
            
            if(isMove) {currentY += moveNum;}
        }
    }
    
    answer.push_back(currentY);
    answer.push_back(currentX);
    
    return answer;
}",https://github.com/Lyrwhitt/Algorithm/blob/main/Programmers/LEVEL1/%EA%B3%B5%EC%9B%90%20%EC%82%B0%EC%B1%85,2023. 9. 11,63,3
2023. 9. 11 오전 9:10:37,김광수,Unity,78 - 행렬의 곱셈,"using System;

public class Solution {
    // 행과 열의 길이가 각각 100이상 100 이하
    
    // 실패 or 런타임 에러 ,, 0점
    // 왜지? 배열 크기가 잘못됬나? -> 문제해결
    
    // arr2 [k, j]는
    
    // 모든 arr1 [i,j]에 더해진다?
    public int[,] solution(int[,] arr1, int[,] arr2) 
    {
        int[,] answer = new int[arr1.GetLength(0),arr2.GetLength(1)];
        
        // arr1의 1차원 접근 i
        for(int i = 0 ; i< arr1.GetLength(0); i++)
        {        
            // arr2의 2차원 접근
            for(int j = 0; j < arr2.GetLength(1); j++)
            {
                // arr1의 2차원 접근, arr2의 1차원 접근
                for(int k =0; k < arr1.GetLength(1); k++)
                {
                    answer[i,j] += arr1[i,k] * arr2[k, j];
                }
            }
              
        }
           
        return answer;
    }
}",https://github.com/kksoo0131/Study/commit/4b212b4d9ec6ab44adcd043f051e63475fb30b75,2023. 9. 11,78,3
2023. 9. 11 오전 9:10:27,박지원,Unity,45 - 카드 뭉치,"using System;

public class Solution {
    public string solution(string[] cards1, string[] cards2, string[] goal) {
        int cards1_i = 0, cards2_i = 0;
        foreach(string word in goal){
            if(cards1_i < cards1.Length && cards1[cards1_i] == word)
                cards1_i++;
            else if(cards2_i < cards2.Length && cards2[cards2_i] == word)
                cards2_i++;
            else
                return ""No"";
        }
        return ""Yes"";
    }
}",https://github.com/jwonp9127/AlgorithmStudy/tree/ec98e6954f3e6b82a1a8b7839cae91e5594540fd/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/unrated/159994.%E2%80%85%EC%B9%B4%EB%93%9C%E2%80%85%EB%AD%89%EC%B9%98,2023. 9. 11,45,2
2023. 9. 11 오전 9:11:58,이현지,Unity,45 - 카드 뭉치,"using System;
using System.Linq;
using System.Collections.Generic;

public class Solution {
    public string solution(string[] cards1, string[] cards2, string[] goal) {
        string answer = """";
        List<int> cards1Index = new List<int>();
        List<int> cards2Index = new List<int>();
        
        int count = 0;
        for (int i = 0; i < cards1.Length; i++)
        {
            if (Array.IndexOf(goal, cards1[i]) != -1)
            {
                if (count < 1) cards1Index.Add(Array.IndexOf(goal, cards1[i]));
                else return ""No"";
            }
            else count ++;
        }
        
        count = 0;
        for (int j = 0; j < cards2.Length; j++)
        {          
            if (Array.IndexOf(goal, cards2[j]) != -1)
            {
                if (count < 1) cards2Index.Add(Array.IndexOf(goal, cards2[j]));
                else return ""No"";
            }
            else count ++;
        }
        
        List<int> copyIndex1 = cards1Index.ToList();
        List<int> copyIndex2 = cards2Index.ToList();
        
        copyIndex1.Sort();
        copyIndex2.Sort();
        
        answer = (Enumerable.SequenceEqual(cards1Index, copyIndex1) && Enumerable.SequenceEqual(cards2Index, copyIndex2))? ""Yes"" : ""No"";
        return answer;
    }
}",https://github.com/szlovelee/Programmers-Algorithm,2023. 9. 11,45,2
2023. 9. 11 오전 9:12:47,김경환,Unity,65 - 최댓값과 최솟값,"using System;
using System.Text;

public class Solution {
    public string solution(string s) {
        StringBuilder sb = new StringBuilder();
        int min = Int32.MaxValue, max = Int32.MinValue;
        
        
        foreach(string str in s.Split(' '))
        {
            int num = Convert.ToInt32(str);
            
            if(num > max)
                max = num;
            
            if(num < min)
                min = num;
        }
        
        sb.Append(min);
        sb.Append("" "");
        sb.Append(max);
        
        return sb.ToString();
    }
}",https://github.com/kkh9700/algorithm,2023. 9. 11,65,3
2023. 9. 11 오전 9:13:14,장성림,Unity,51 - 로또의 최고 순위와 최저 순위,"using System;

public class Solution {
    public int[] solution(int[] lottos, int[] win_nums) {
        int[] answer = {7, 7};
        foreach (int num in lottos){
            if(num == 0){
                answer[0]--;
            }else if(Array.Exists(win_nums, x => x == num)){
                answer[0]--;
                answer[1]--;
            }
        }
        if(answer[0] == 7)
            answer[0] = 6;
        if(answer[1] == 7)
            answer[1] = 6;
        return answer;
    }
}",https://github.com/hoobhoob,2023. 9. 11,51,2
2023. 9. 11 오전 9:14:01,김민석,Unity,20 - 가운데 글자 가져오기,"public class Solution {
    public string solution(string s) {
        string answer = """";

        if(s.Length % 2 == 0)
        {
            answer += s[s.Length / 2 - 1];
            answer += s[s.Length / 2];
        }
        else
        {
            answer += s[s.Length / 2];
        }

        return answer;
    }
}",https://github.com/ms0753/codekata/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12903.%E2%80%85%EA%B0%80%EC%9A%B4%EB%8D%B0%E2%80%85%EA%B8%80%EC%9E%90%E2%80%85%EA%B0%80%EC%A0%B8%EC%98%A4%EA%B8%B0/%EA%B0%80%EC%9A%B4%EB%8D%B0%E2%80%85%EA%B8%80%EC%9E%90%E2%80%85%EA%B0%80%EC%A0%B8%EC%98%A4%EA%B8%B0.cs,2023. 9. 11,20,1
2023. 9. 11 오전 9:14:04,윤지연,Unity,26 - 문자열 다루기 기본,"public class Solution {
    public bool solution(string s) {
        bool answer = true;
        
        if(s.Length == 4 || s.Length == 6)
        {
            foreach(char c in s.ToCharArray())
            {
                if((int)c-'0' < 0 || (int)c-'0' > 9)
                {
                    return answer = false;
                }
            }
        }
        else
        {
            answer = false;
        }
        return answer;
    }
}",https://github.com/jungbosong/Codekata/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12918.%E2%80%85%EB%AC%B8%EC%9E%90%EC%97%B4%E2%80%85%EB%8B%A4%EB%A3%A8%EA%B8%B0%E2%80%85%EA%B8%B0%EB%B3%B8,2023. 9. 11,26,1
2023. 9. 11 오전 9:14:33,김형중,Unity,39 - 두 개 뽑아서 더하기,"using System;
using System.Collections.Generic;

public class Solution {
    public int[] solution(int[] numbers) {
        List<int> answer = new List<int>();
        
        for(int i = 0; i < numbers.Length-1; i++)
        {
            for(int j = i+1; j < numbers.Length; j++)
            {
                int temp = numbers[i] + numbers[j];
                
                if (answer.Contains(temp) == false) //answer에 temp값이 있는지 확인 == 없다면
                {
                    answer.Add(temp);
                }
            }
        }
        
        answer.Sort();
        return answer.ToArray();
    }
}",,2023. 9. 11,39,2
2023. 9. 11 오전 9:15:06,김민태,Unity,72 - 멀리 뛰기,"public class Solution {
    public long solution(int n) {
        long answer = 0;
        long[] tmp = new long[1000001];
        tmp[0] = 1;
        tmp[1] = 2;
        if(n > 2)
        {
            for(int i = 2; i < n; i++)
            {
                tmp[i] = (tmp[i - 2] + tmp[i - 1])  % 1234567;
            }
        }
        answer = tmp[n - 1];
        return answer;
    }
}",https://github.com/rlaalsxo/CodingTest,2023. 9. 11,72,3
2023. 9. 11 오전 9:15:48,김하늘,Unity,36 - 숫자 문자열과 영단어,"using System;
using System.Collections.Generic;

public class Solution 
{
    public int solution(string s) 
    {
        Dictionary<string, string> numDictionary = new Dictionary<string, string>()
{
        { ""zero"", ""0"" },
        { ""one"", ""1"" },
        { ""two"", ""2"" },
        { ""three"", ""3"" },
        { ""four"", ""4"" },
        { ""five"", ""5""},
        { ""six"", ""6"" },
        { ""seven"", ""7"" },
        { ""eight"", ""8"" },
        { ""nine"", ""9"" }
    };

    foreach (var keyValue in numDictionary)
        s = s.Replace(keyValue.Key, keyValue.Value);
    return int.Parse(s);
    }
}",,2023. 9. 11,36,2
2023. 9. 11 오전 9:16:39,이경현,Unity,39 - 두 개 뽑아서 더하기,"public int[] solution(string s)
{
    char[] str = s.ToCharArray();
    int[] answer = new int[s.Length];

    for (int i = 0; i < str.Length; i++)
    {
        for (int j = i-1; j >= -1; j--)
        {
            if (j == -1)
            {
                answer[i] = -1;
            }
            else
            {
                if (str[i] == str[j])
                {
                    answer[i] = i - j;
                    break;
                }
            }
        }

    }
    return answer;
}",https://github.com/516lkh/Algorithm,2023. 9. 11,39,2
2023. 9. 11 오전 9:17:37,이승연,Unity,27 - 행렬의 덧셈,"public class Solution {
    public int[,] solution(int[,] arr1, int[,] arr2) {
        int rows = arr1.GetLength(0);
        int cols = arr1.GetLength(1);
        
        int[,] answer = new int[rows, cols];
        
        for(int i = 0; i < rows; i++) {
            for (int j = 0; j < cols; j++) {
                answer[i, j] = arr1[i, j] + arr2[i, j];
            }
        }
        return answer;
    }
}",,2023. 9. 11,27,1
2023. 9. 11 오전 9:18:22,강성호,Unity,55 - 문자열 나누기,"using System;

public class Solution {
    public int solution(string s) {
       int answer = 0;
		int cnt = 1;
		char first = 'a';
		bool chk = false;
		for(int i = 0; i < s.Length; i++)
		{
			if(i == s.Length - 1)
			{
				answer++;
				break;
			}
			if (!chk) 
			{
				first = s[i];
				chk = true;
				continue;
			}

			if (s[i] == first)
			{
				cnt++;
			}
			else
			{
				cnt--;
				if(cnt == 0)
				{
					cnt++;
					chk = false;
					answer++;
				}
			}

			
		}
		return answer; 
    }
}",,2023. 9. 11,55,3
2023. 9. 11 오전 9:19:09,조범준,Unity,45 - 카드 뭉치,"using System;

public class Solution {
    public string solution(string[] cards1, string[] cards2, string[] goal) {
        string answer = """";
        string go = """";
        int count1 = 0;
        int count2 = 0;
        foreach(string str in goal){
            go += str;
            if(count1 >= cards1.Length){
                count1 = cards1.Length-1;
            }else if(count2 >= cards2.Length){
                count2 = cards2.Length-1;
            }
            
            if(str.Equals(cards1[count1])){
                answer +=cards1[count1];
                count1++;
            }
            else if(str.Equals(cards2[count2])){
                answer +=cards2[count2];
                count2++;
            }
            
            else{
                answer = ""No"";
                break;
            }
        }
        if(answer.Equals(go)){
                answer = ""Yes"";
        }
        return answer;
    }
}",https://github.com/KimMaYa1/BaekJoonEx/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4,2023. 9. 11,45,2
2023. 9. 11 오전 9:19:20,한병권,Unity,58 - 햄버거 만들기,"using System;
using System.Collections.Generic;

public class Solution {
    public int solution(int[] ingredient) {
        int answer = 0;
        
        Stack<int> temp = new Stack<int>();
        
        foreach(int i in ingredient)
        {
            temp.Push(i);
            if(temp.Count > 3)
            {
                int a = temp.Pop();
                if(a == 1)
                {
                    int b = temp.Pop();
                    if(b == 3)
                    {
                        int c = temp.Pop();
                        if(c == 2)
                        {
                            int d = temp.Pop();
                            if(d == 1)
                            {
                                answer++;
                            }
                            else
                            {
                                temp.Push(d);
                                temp.Push(c);
                                temp.Push(b);
                                temp.Push(a);
                            }
                        }
                        else
                        {
                            temp.Push(c);
                            temp.Push(b);
                            temp.Push(a);
                        }
                    }
                    else
                    {
                        temp.Push(b);
                        temp.Push(a);
                    }
                }
                else
                {
                    temp.Push(a);
                }
            }
        }
        
        return answer;
    }
}",https://github.com/hbg9212/AlgorithmCodekata,2023. 9. 11,58,3
2023. 9. 11 오전 9:20:22,김명식,Unity,30 - 3진법 뒤집기,https://school.programmers.co.kr/learn/courses/30/lessons/68935,https://github.com/D0ryeon/Algorithm-Code-Kata,2023. 9. 11,30,1
2023. 9. 11 오전 9:20:51,이정환,Unity,38 - K번째수정렬,"using System;

public class Solution {

            public int[] solution(int[] array, int[,] commands)
            {
                int num=commands.GetUpperBound(0);
                num++;
                int[] answer = new int[num];

                for(int index=0; index<num; index++){
                //일단 하나만 들어왔을 경우.
                int Cursor1 = commands[index, 0];
                int Cursor2 = commands[index, 1];
                int Cursor3 = commands[index, 2];
                int Length = Cursor2 - Cursor1 + 1;
                Cursor1--;
                Cursor2--;
                Cursor3--;
                int[] extraction = new int[Length];
                for (int i = 0; i < Length; i++)
                {
                    extraction[i] = array[Cursor1];
                    Cursor1++;
                }
                Array.Sort(extraction);
                answer[index] =extraction[Cursor3];
                }

                return answer;
            }
}",,2023. 9. 11,38,2
2023. 9. 11 오전 9:21:05,신우석,Unity,65 - 최댓값과 최솟값,"using System;

public class Solution {
    public string solution(string s) {
        string[] strings = s.Split(' ');
        int[] ints = Array.ConvertAll(strings, Convert.ToInt32);
        Array.Sort(ints);
        
        return $""{ints[0]} {ints[ints.Length - 1]}"";
    }
}",https://github.com/seoksii/AlgorithmCodeKata/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv2/12939.%E2%80%85%EC%B5%9C%EB%8C%93%EA%B0%92%EA%B3%BC%E2%80%85%EC%B5%9C%EC%86%9F%EA%B0%92,2023. 9. 11,65,3
2023. 9. 11 오전 9:21:13,문현우,Unity,29 - 최대공약수와 최소공배수,"public class Solution {
    public int[] solution(int n, int m) {
        int[] answer = new int[2];
        int OriginN = n;
        int OriginM = m;
        int gcd = 0;
        while(m > 0){
            int temp = n;
            n = m;
            m = temp % m;
            gcd = n;
        }
        answer[0] = gcd;
        answer[1] = OriginN * OriginM / gcd;
        return answer;
    }
}",https://github.com/Munch310/Algorithm-Csharp/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12940.%E2%80%85%EC%B5%9C%EB%8C%80%EA%B3%B5%EC%95%BD%EC%88%98%EC%99%80%E2%80%85%EC%B5%9C%EC%86%8C%EA%B3%B5%EB%B0%B0%EC%88%98,2023. 9. 11,29,1
2023. 9. 11 오전 9:21:24,심우진,Unity,23 - 약수의 개수와 덧셈,"using System;

public class Solution
    {
        public int solution(int left, int right)
        {
            int answer = 0;
            for (int i = left; i <= right; i++)
            {
                if (IsEvenDivisorCount(i))
                {
                    answer += i;
                }
                else
                {
                    answer -= i;
                }
            }
            return answer;
        }

        // 약수의 개수가 짝수인지 홀수인지 판별하는 함수
        private bool IsEvenDivisorCount(int num)
        {
            int count = 0;
            for (int i = 1; i <= num; i++)
            {
                if (num % i == 0)
                {
                    count++;
                }
            }
            return count % 2 == 0;
        }
    }",https://github.com/agasa0624/at,2023. 9. 11,23,1
2023. 9. 11 오전 9:21:47,심우진,Unity,24 - 문자열 내림차순으로 배치하기,"    using System;
using System.Linq;

public class Solution
    {
        public string solution(string s)
        {
            return new string(s.OrderByDescending(c => c).ToArray());
        }
    }",https://github.com/agasa0624/at,2023. 9. 11,24,1
2023. 9. 11 오전 9:23:33,우민규,Unity,30 - 3진법 뒤집기,"using System;
using static System.Math;
using System.Collections.Generic;

public class Solution {
    public int solution(int n) {
        int answer = 0;
        
        //3진법의 리스트 생성(반전용)
        List<int> list = new List<int>();
        
        //자연수 n이 0이 될 때 까지 나눈 나머지를 list에 저장
        while(true)
        {
            if(n==0) 
                break;
            
            //이 과정을 통해 n이 0이 되기 전까지 계속 리스트에 수 d를 추가한다. 45 = 0,0,2,1
            //자연수(10진법)를 3진법으로 변환하는법을 알았다.
            //각 자릿수에 n%3을 넣은 뒤, n/3을 통해 뒤에 수가 더 있는지 확인, 다음수를 변경한다.
            int d = n%3;
            list.Add(d);
            n = n/3;
        }
        //앞뒤 뒤집기 list.Reverse()
        list.Reverse();
        
        //뒤집은 list의 나머지 값 * 3의 거듭 제곱을 곱해 answer에 더하기
        //위에서 한 연산을 반대로 하려면 거듭 제곱을 하면 된다.
        for(int i = 0; i<list.Count; i++)
        {
            answer += (int)(list[i] * Math.Pow(3,i));
        }
        return answer;
    }
}",,2023. 9. 11,30,1
2023. 9. 11 오전 9:23:47,정재훈,Unity,25 - 부족한 금액 계산하기,"using System;

class Solution
{
    public long solution(int price, int money, int count)
    {
        long sum  = 0;
        long result = 0;
        for(int i = 1; i <= count;i++)
        {
            sum += price*i;
        }
        if(sum - money > 0)
        {
            result = sum - money;
        }
        else
        {
            result = 0;
        }
        return result;
    }
}
",https://github.com/toadsam/Algorithm,2023. 9. 11,25,1
2023. 9. 11 오전 9:24:02,박준규,Unity,35 - 시저 암호,"using System;
public class Solution {
    public string solution(string s, int n) {
        string answer = """";
        foreach(char c in s)
        {
            if(c!=' ')
            {
                int tmp = 0;
                if((int)c<91)
                {
                    tmp = (int)c + n;
                    if(tmp>90) {
                        tmp = 64 + (tmp-90);
                    }
                }
                else
                {
                    tmp = (int)c + n;
                    if(tmp>122) {
                        tmp = 96 + (tmp-122);
                    }                                 
                }                
                answer += Convert.ToChar(tmp);    
            }else
                answer += ' ';    
        }
        return answer;
    }
}",,2023. 9. 11,35,2
2023. 9. 11 오전 9:24:20,이현지,Unity,46 - 과일 장수,"using System;

public class Solution {
    public int solution(int k, int m, int[] score) {
        int answer = 0;
        
        Array.Sort(score);
        Array.Reverse(score);
        
        for (int i = m - 1; i < score.Length; i += m)
        {
            answer += score[i] * m;
        }
        
        return answer;
    }
}",https://github.com/szlovelee/Programmers-Algorithm,2023. 9. 11,46,2
2023. 9. 11 오전 9:24:39,최장범,Unity,40 - 가장 가까운 같은 글자,"using System;

public class Solution {
    public int[] solution(string s) 
    {
        int[] answer = new int[s.Length];
        int index = -1;
        
        for(int i = 0; i < s.Length; i++)
        {
            index = -1;
            for(int j = i - 1; j >= 0; j--)
            {
                if(s[i] == s[j])
                {
                    index = i - j;
                    break;
                }
            }
            answer[i] = index;
        }
        
        return answer;
    }
}",,2023. 9. 11,40,2
2023. 9. 11 오전 9:25:14,김경환,Unity,66 - JadenCase 문자열 만들기,"public class Solution {
    public string solution(string s) {
        int index = 0;
        string answer = """";
        
        for(int i = 0; i < s.Length; i++)
        {            
            if(s[i] == ' ')
            {
                index = 0;
                answer += s[i];
                continue;
            }
            
            if(index == 0 && s[i] >= 'a')
            {
                answer += (char)(s[i] - 32);
            }
            else if(index != 0 && s[i] <= 'Z')
            {
                answer += (char)(s[i] + 32);
            } else 
            {
                answer += s[i];
            }
            
            index++;
        }
        
        return answer;
    }
}",https://github.com/kkh9700/algorithm,2023. 9. 11,66,3
2023. 9. 11 오전 9:25:29,박지원,Unity,46 - 과일 장수,"using System;

public class Solution {
    public int solution(int k, int m, int[] score) {
        int answer = 0;

        Array.Sort(score);
        Array.Reverse(score);
        
        for(int i = m; score.Length >= i; i += m){
            answer += score[i - 1] * m;
        }
        
        return answer;
    }
}",https://github.com/jwonp9127/AlgorithmStudy/tree/ee9b18458df3a572ec3dc124f8d43baaa36e90cc/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/unrated/135808.%E2%80%85%EA%B3%BC%EC%9D%BC%E2%80%85%EC%9E%A5%EC%88%98,2023. 9. 11,46,2
2023. 9. 11 오전 9:25:35,이도현,Unity,14 - 서울에서 김서방 찾기,"public class Solution {
    public string solution(string[] seoul)
    {
        int cnt;
        for (cnt = 0; cnt < seoul.Length; cnt++)
            if (seoul[cnt].Contains(""Kim""))
                break;

        return ""김서방은 ""+ cnt.ToString()+""에 있다"";
    }
}",,2023. 9. 11,14,1
2023. 9. 11 오전 9:25:56,함영주,Unity,14 - 서울에서 김서방 찾기,"using System;

public class Solution {
    public string solution(string[] seoul) {
        int find = Array.IndexOf(seoul, ""Kim"");
        string answer = ($""김서방은 {find}에 있다"");
        return answer;
    }
}
",,2023. 9. 11,14,1
2023. 9. 11 오전 9:26:29,김예준,Unity,59 - 성격 유형 검사하기,"using System;

public class Solution {
    public string solution(string[] survey, int[] choices) {
        string answer = """";
        int[] res = new int[4] {0, 0, 0, 0};
        int[] score = new int[7] {-3, -2, -1, 0, 1, 2, 3};
        
        for (int i = 0; i < survey.Length; i++)
        {
            if (survey[i][0] == 'R')
            {
                res[0] += score[choices[i] - 1];
            }
            else if (survey[i][0] == 'T')
            {
                res[0] += score[7 - choices[i]];
            }
            else if (survey[i][0] == 'C')
            {
                res[1] += score[choices[i] - 1];
            }
            else if (survey[i][0] == 'F')
            {
                res[1] += score[7 - choices[i]];
            }
            else if (survey[i][0] == 'J')
            {
                res[2] += score[choices[i] - 1];
            }
            else if (survey[i][0] == 'M')
            {
                res[2] += score[7 - choices[i]];
            }
            else if (survey[i][0] == 'A')
            {
                res[3] += score[choices[i] - 1];
            }
            else if (survey[i][0] == 'N')
            {
                res[3] += score[7 - choices[i]];
            }
        }
        
        if (res[0] <= 0) answer += 'R';
        else answer += 'T';
        
        if (res[1] <= 0) answer += 'C';
        else answer += 'F';
        
        if (res[2] <= 0) answer += 'J';
        else answer += 'M';
        
        if (res[3] <= 0) answer += 'A';
        else answer += 'N';
        
        return answer;
    }
}",,2023. 9. 11,59,3
2023. 9. 11 오전 9:26:51,김진규,Unity,50 - 기사단원의 무기,"using System;

public class Solution {
    public int solution(int number, int limit, int power) {
        int answer = 0;
         for (int i = 1; i <= number; i++)
        {
            int count = 0;
            for (int j = 1; j * j <= i; j++)
            {
                if (i % j == 0)
                {
                    if (i / j == j)
                    {
                        count++;
                    }
                    else
                    {
                        count += 2;
                    }
                }
            }
            if (count <= limit) {
                answer += count;
            }
            else{
                answer += power;
            }
        }
        return answer;
    }
}",,2023. 9. 11,50,2
2023. 9. 11 오전 9:27:36,지민규,Unity,40 - 가장 가까운 같은 글자,"using System;

public class Solution {
    public int[] solution(string s) {
        int[] answer = new int[1] {-1};
        for (int i = 1; i < s.Length; i++)
        {
            bool filled = false;
            Array.Resize(ref answer, answer.Length + 1);
            for (int j = 0; j < i; j++)
            {
                if (s[j] == s[i])
                {
                    answer[answer.Length-1] = i - j;
                    filled = true;
                }
            }
            if (!filled)
            {
                answer[answer.Length-1] = -1;
            }

        }
        return answer;
    }
}",,2023. 9. 11,40,2
2023. 9. 11 오전 9:27:49,박민호,Unity,45 - 카드 뭉치,"using System;

public class Solution {
    public string solution(string[] cards1, string[] cards2, string[] goal) {
        string answer = """";
        int cards1Idx=0;
        int cards2Idx=0;
        string[] ans= new string[goal.Length];
        for(int i=0;i<goal.Length;i++){
            if(goal[i]==cards1[cards1Idx]){
                ans[i]=goal[i];
                if (cards1Idx<cards1.Length-1){
                    cards1Idx++;
                }
            }
            else if(goal[i]==cards2[cards2Idx]){
                ans[i]=goal[i];
                if (cards2Idx<cards2.Length-1){
                    cards2Idx++;
                }
            }
            else{
                answer = ""No"";
                break;
            }
        }
        if (answer==""""){
            answer=""Yes"";
        }
        return answer;
    }
}",,2023. 9. 11,45,2
2023. 9. 11 오전 9:28:08,신해준,Unity,45 - 카드 뭉치,"public class Solution {
    public string solution(string[] cards1, string[] cards2, string[] goal) {
        string answer = ""Yes"";
        int index1 = 0;
        int index2 = 0;
        
        for(int i = 0; i < goal.Length; i++)
        {
            if(index1 < cards1.Length && goal[i] == cards1[index1])
            {
                index1++;
                continue;
            }
            else if(index2 < cards2.Length && goal[i] == cards2[index2])
            {
                index2++;
                continue;
            }
            else
            {
                return ""No"";
            }         
        }
        
        return answer;
    }
}",,2023. 9. 11,45,2
2023. 9. 11 오전 9:29:17,윤지연,Unity,27 - 행렬의 덧셈,"public class Solution {
    public int[,] solution(int[,] arr1, int[,] arr2) {
        int[,] answer = new int[arr1.GetLength(0),arr1.GetLength(1)];
        for(int row = 0; row < arr1.GetLength(0); row++)
        {
            for(int col = 0; col < arr1.GetLength(1); col++)
            {
                answer[row, col] = arr1[row, col] + arr2[row, col];
            }
        }
        return answer;
    }
}",https://github.com/jungbosong/Codekata/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12950.%E2%80%85%ED%96%89%EB%A0%AC%EC%9D%98%E2%80%85%EB%8D%A7%EC%85%88,2023. 9. 11,27,1
2023. 9. 11 오전 9:29:57,신현주,Unity,42 - 콜라 문제,"using System;

public class Solution {
    public int solution(int a, int b, int n) {
        int answer = 0;
        while(n > a - 1)
        {
            answer += (n / a) * b;
            n = (n / a) * b + n % a;
        }
        
        return answer;
    }
}",https://github.com/Shyunju/codeKata,2023. 9. 11,42,2
2023. 9. 11 오전 9:30:13,김도현B,Unity,48 - 소수 만들기,"using System;

class Solution
{
    public int solution(int[] nums)
    {
        int sum = 0;
        int answer = 0;
        for (int x = 0; x < nums.Length; x++)
        {
            for(int y = x+1;  y < nums.Length; y++)
            {
                for(int z = y+1; z < nums.Length; z++)
                {
                    sum = nums[x] + nums[y] + nums[z];
                    for (int n = 2; n <= sum; n++) 
                    {
                        if(sum % n == 0 && sum != n)
                            break;
                        else if(n == sum)
                            answer++;
                    }
                }
            }
        }

        return answer;
    }
}",https://github.com/subscriptioncat/Algorithm,2023. 9. 11,48,2
2023. 9. 11 오전 9:31:03,차요한,Unity,45 - 카드 뭉치,"using System;
using System.Collections.Generic;
public class Solution {
    public string solution(string[] cards1, string[] cards2, string[] goal) {
        string answer = ""Yes"";
        int c1 =0;
        int c2 =0;
        
        for(int i=0; i<goal.Length; i++)
        {
            if(c1 < cards1.Length && goal[i] == cards1[c1])
            {
                c1++;
                continue;
            }
            else if(c2 < cards2.Length && goal[i] == cards2[c2])
            {
                c2++;
                continue;
            }
            else
            {
                return ""No"";
            }  
        }
        
        return answer;
    }
}",https://github.com/HOHOJO/Algorithm_test,2023. 9. 11,45,2
2023. 9. 11 오전 9:32:58,우성훈,Unity,10 - 정수 내림차순으로 배치하기,"using System;

public class Solution {

    public long solution(long n) {
        long answer = 0;
        // n을 곧장 char형태로 변환해서 새로운 char 배열에 저장함
        char[] temp = n.ToString().ToCharArray();
        
        // 배열을 오름차순으로 정렬함
        Array.Sort(temp);
        
        // 배열을 뒤집는다 = 내림차순으로 바뀜
        Array.Reverse(temp);
        
        // temp배열을 문자열로 만든뒤에 long형태로 변환한다.
        // long이므로 ToInt32가 아니라 64다. 헷갈린다면 그냥 long.Parse를 쓰자.
        answer = Convert.ToInt64(new string(temp));
        
        // 정답을 리턴함
        return answer;
    }
}",,2023. 9. 11,10,1
2023. 9. 11 오전 9:33:11,김호연,Unity,36 - 숫자 문자열과 영단어,"using System;

public class Solution
{
    public int solution(string s)
    {
        int answer = 0;
        
        //string.Replace(""해당 문자열을"", ""해당 문자열로"");
        s = s.Replace(""zero"", ""0"");
        s = s.Replace(""one"", ""1"");
        s = s.Replace(""two"", ""2"");
        s = s.Replace(""three"", ""3"");
        s = s.Replace(""four"", ""4"");
        s = s.Replace(""five"", ""5"");
        s = s.Replace(""six"", ""6"");
        s = s.Replace(""seven"", ""7"");
        s = s.Replace(""eight"", ""8"");
        s = s.Replace(""nine"", ""9"");

        int k;
        bool strToInt = int.TryParse(s, out k);     //변환 후 해당 문자열이 숫자이면
        if(strToInt) answer = k;  
        
        return answer;
    } 
}",,2023. 9. 11,36,2
2023. 9. 11 오전 9:33:18,박희원,Unity,41 - 푸드 파이트 대회,"using System;
using System.Linq; 

public class Solution {
    public string solution(int[] food)
            {
                string answer = """";
                
                for(int i = 1; i<food.Length; i++)
                {
                    int count = food[i] / 2; 
                    for(int j = 0; j<count; j++)
                    {
                        answer += i; 
                    }
                }
                return answer + ""0"" + new string(answer.Reverse().ToArray());
            }
}",,2023. 9. 11,41,2
2023. 9. 11 오전 9:33:23,노재우,Unity,40 - 가장 가까운 같은 글자,"using System;
using System.Linq;
using System.Collections.Generic;
using System.Collections;

public class Solution
{
    public int[] solution(string s)
    {
        char[] temp = s.ToArray();
        Dictionary<char, int> dic = new Dictionary<char, int>();

        List<int> anwswer = new List<int>();

        for (int i = 0; i < temp.Length; i++)
        {
            if (dic.ContainsKey(temp[i]))
            {
                int num = dic[temp[i]];
                dic[temp[i]] = i;
                anwswer.Add(i - num);
            }
            else
            {
                dic[temp[i]] = i;
                anwswer.Add(-1);
            }
        }

        return anwswer.ToArray();
    }
}",,2023. 9. 11,40,2
2023. 9. 11 오전 9:33:26,신우석,Unity,66 - JadenCase 문자열 만들기,"using System.Text;

public class Solution {
    public string solution(string s) {
        bool isFirst = true;
        StringBuilder answer = new StringBuilder();
        foreach (char c in s)
            if (c == ' ') {
                isFirst = true;
                answer.Append(c);
            }
            else if (isFirst) {
                answer.Append(char.ToUpper(c));
                isFirst = false;
            }
            else
                answer.Append(char.ToLower(c));
        
        return answer.ToString();
    }
}",https://github.com/seoksii/AlgorithmCodeKata/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv2/12951.%E2%80%85JadenCase%E2%80%85%EB%AC%B8%EC%9E%90%EC%97%B4%E2%80%85%EB%A7%8C%EB%93%A4%EA%B8%B0,2023. 9. 11,66,3
2023. 9. 11 오전 9:33:36,박도현,Unity,15 - 나누어 떨어지는 숫자,"


using System.Collections;
using System;
public class Solution {
    public int[] solution(int[] arr, int divisor) {
        int[] answer = new int[0] {};
        for(int i = 0; i < arr.Length; i++)
        {
            if(arr[i] % divisor == 0)
            {
                Array.Resize(ref answer, answer.Length+1);
                answer[answer.Length-1] = arr[i];
            }
        }
        if(answer.Length == 0)
        {
             Array.Resize(ref answer, answer.Length+1);
            answer[answer.Length-1] = -1;
        }
        Array.Sort(answer);
        return answer;
    }
}



",,2023. 9. 11,15,1
2023. 9. 11 오전 9:33:39,윤지연,Unity,28 - 직사각형 별찍기,"using System;

public class Example
{
    public static void Main()
    {
        String[] s;

        Console.Clear();
        s = Console.ReadLine().Split(' ');

        int colLength = Int32.Parse(s[0]);
        int rowLength = Int32.Parse(s[1]);

        for(int row = 0; row < rowLength; row++)
        {
            for(int col = 0; col < colLength; col++)
            {
                Console.Write(""*"");
            }
            Console.WriteLine();
        }
    }
}",https://github.com/jungbosong/Codekata/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12969.%E2%80%85%EC%A7%81%EC%82%AC%EA%B0%81%ED%98%95%E2%80%85%EB%B3%84%EC%B0%8D%EA%B8%B0,2023. 9. 11,28,1
2023. 9. 11 오전 9:33:43,박희원,Unity,42 - 콜라 문제,"using System;

public class Solution {
     public int solution(int a, int b, int n)
            {
                int answer = 0;

                while (n > a - 1)
                {
                    answer += (n / a) * b;
                    n = (n / a) * b + n % a; 
                }

                return answer;
            }
}",,2023. 9. 11,42,2
2023. 9. 11 오전 9:34:08,박희원,Unity,43 - 명예의 전당 (1),"using System;
using System.Collections.Generic; 
using System.Linq; 

public class Solution {
    public List<int> solution(int k, int[] score)
            {
                List<int> answer = new List<int>();
                List<int> honor = new List<int>();

                for (int i = 0; i < score.Length; i++)
                {
                    honor.Add(score[i]);
                    honor.Sort();

                    if (i < k)
                    {
                        answer.Add(honor.Min());
                    }
                    else
                    {
                        answer.Add(honor[honor.Count() - k]);
                    }
                }     
                return answer; 
            }
}",,2023. 9. 11,43,2
2023. 9. 11 오전 9:34:28,최장범,Unity,41 - 푸드 파이트 대회,"using System;
using System.Linq;


public class Solution {
    public string solution(int[] food) 
    {
        string answer = """";
        
        for(int i =1; i<food.Length; i++)
        {
            int count =food[i] / 2;
            
            for (int j =0; j< count; j++)
            {
                answer += i;
            }
        }
        return answer + ""0"" + new string (answer.Reverse().ToArray());
    }
}",,2023. 9. 11,41,2
2023. 9. 11 오전 9:35:05,정재훈,Unity,26 - 문자열 다루기 기본,"public class Solution
{
        public bool solution(string s)
        {
            bool answer = false;

            if (s.Length == 4 || s.Length == 6)
            {	
                answer = int.TryParse(s, out int temp);
            }

            return answer;
        }
}",https://github.com/toadsam/Algorithm,2023. 9. 11,26,1
2023. 9. 11 오전 9:35:30,김나운,Unity,34 - 최소직사각형,"using System;

public class Solution
{
    public int solution(int[,] sizes)
    {
        int maxWidth = 0;
        int maxHeight = 0;
        for (int i = 0; i < sizes.GetLength(0); i++)
        {
            int width = Math.Max(sizes[i, 0], sizes[i, 1]);
            int height = Math.Min(sizes[i, 0], sizes[i, 1]);

            if (maxWidth < width)
                maxWidth = width;

            if (maxHeight < height)
                maxHeight = height;
        }

        return maxWidth * maxHeight;
    }
}",,2023. 9. 11,34,2
2023. 9. 11 오전 9:36:26,이소이,Unity,45 - 카드 뭉치,"using System;

public class Solution {
    public string solution(string[] cards1, string[] cards2, string[] goal) {
        int c1 = 0;
        int c2 = 0;
        for (int gIndex = 0; gIndex < goal.Length; gIndex++)
        {
            if (c1 < cards1.Length && cards1[c1] == goal[gIndex])
            {
                c1++;
                continue;
            }
            else if (c2 < cards2.Length && cards2[c2] == goal[gIndex])
            {
                c2++;
                continue;
            }
            else
                return ""No"";
        }
        return ""Yes"";
    }
}",https://github.com/leesy015599/AlgorithmCodeKata/blob/master/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/unrated/159994.%E2%80%85%EC%B9%B4%EB%93%9C%E2%80%85%EB%AD%89%EC%B9%98/%EC%B9%B4%EB%93%9C%E2%80%85%EB%AD%89%EC%B9%98.cs,2023. 9. 11,45,2
2023. 9. 11 오전 9:38:02,이승연,Unity,28 - 직사각형 별찍기,"using System;

public class Example
{
    public static void Main()
    {
        String[] s;

        Console.Clear();
        s = Console.ReadLine().Split(' ');

        int a = Int32.Parse(s[0]);
        int b = Int32.Parse(s[1]);
        
        for(int i=0;i<b;i++)
        {
            
            for(int j=0;j<a;j++)
            {
                Console.Write(""*"");
            }
            Console.WriteLine("""");
        }
        
    }
}",,2023. 9. 11,28,1
2023. 9. 11 오전 9:38:34,맹주한,Unity,11 - 하샤드 수,"#include <stdio.h>
#include <stdbool.h>
#include <stdlib.h>


bool solution(int x) {

    int sum = 0;
    
    int originalX = x;  
    while (x > 0) {
        sum += x % 10;  
        x /= 10;       
    }
    
    if (originalX % sum == 0) {
        return true;
    } else {
        return false;
    }
}

int main() {
    int x;
    printf(""정수를 입력하세요: "");
    scanf(""%d"", &x);

    if (solution(x)) {
        printf(""%d는 하샤드 수입니다.\n"", x);
    } else {
        printf(""%d는 하샤드 수가 아닙니다.\n"", x);
    }

    return 0;
}",,2023. 9. 11,11,1
2023. 9. 11 오전 9:39:37,김하늘,Unity,37 - 문자열 내 마음대로 정렬하기,"using System;

public class Solution 
{
    public string[] solution(string[] strings, int n)
    {
        string[] answer = new string[strings.Length];

        for (int i = 0; i < strings.Length; i++)
            answer[i] = strings[i][n] + strings[i];

        Array.Sort(answer);
        for (int i = 0; i < strings.Length; i++)
            answer[i] = answer[i].Substring(1);

        return answer;
    }
}",,2023. 9. 11,37,2
2023. 9. 11 오전 9:40:01,손병의,Unity,25 - 부족한 금액 계산하기,"using System;

class Solution
{
    public long solution(int price, int money, int count)
    {
        long sum = 0;
        
        for(int i = 1; i <= count; i++)
        {
            sum += price * i;
        }
        
        return (sum - money) < 0 ? 0 : sum - money;
    }
}

",,2023. 9. 11,25,1
2023. 9. 11 오전 9:40:34,이정환,Unity,39 - 두 개 뽑아서 더하기,"using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;

public class Solution {
    public int[] solution(int[] numbers) {
          int nLength = numbers.Length;
            List<int> Sum = new List<int>();
            int sum;
            for (int i = 0; i < nLength; i++)
            {
                for (int Cur = i; Cur < nLength; Cur++)
                {
                    if(Cur != i){
                    sum = numbers[i] + numbers[Cur];
                    Sum.Add(sum);
                    }
                }
            }

            int[] answer = Sum.Distinct().ToList().ToArray();
            Array.Sort(answer);
            return answer;
    }
}",,2023. 9. 11,39,2
2023. 9. 11 오전 9:40:43,최장범,Unity,42 - 콜라 문제,"using System;

public class Solution {
    public int solution(int a, int b, int n) {
        int answer = 0;
        
        while(n> a-1)
        {
            answer += (n/a) * b;
            n = (n/a) * b + n % a;
        }
        
        return answer;
    }
}",,2023. 9. 11,42,2
2023. 9. 11 오전 9:41:25,김경환,Unity,67 - 이진 변환 반복하기,"using System;
using System.Text;

public class Solution {
    public int[] solution(string s) {
        int cnt = 0, zero = 0;
        BinaryConvert(s, out cnt, out zero);
        
        return new int[] {cnt, zero};
    }
    
    public void BinaryConvert(string s, out int a, out int b)
    {
        int cnt = 0, sum = 0;
        while(!s.Equals(""1""))
        {
            cnt++;
            int length = 0;
            
            foreach(char ch in s)
            {
                if(ch == '1')
                    length++;
            }
            
            sum += s.Length - length;
            
            s = Binary(length);
        }
        
        a = cnt;
        b = sum;
    }
    
    public string Binary(int n)
    {
        StringBuilder sb = new StringBuilder();
        
        while(n != 0)
        {
            sb.Append((n % 2).ToString());
            n/=2;
        }
        
        char[] chars = sb.ToString().ToCharArray();
        Array.Reverse(chars);
        
        return new string(chars);
    }
}",https://github.com/kkh9700/algorithm,2023. 9. 11,67,3
2023. 9. 11 오전 9:42:04,김예준,Unity,60 - 바탕화면 정리,"using System;

public class Solution {
    public int[] solution(string[] wallpaper) {
        int[] answer = new int[4];
        int minX = 51;
        int maxX = -1;
        int minY = 51;
        int maxY = -1;
        
        for (int i = 0; i < wallpaper.Length; i++)
        {
            for (int j = 0; j < wallpaper[0].Length; j++)
            {
                if (wallpaper[i][j] == '#')
                {
                    if (i < minX) minX = i;
                    if (i + 1 > maxX) maxX = i + 1;
                    if (j < minY) minY = j;
                    if (j + 1 > maxY) maxY = j + 1;
                }
            }
        }
        
        answer[0] = minX;
        answer[1] = minY;
        answer[2] = maxX;
        answer[3] = maxY;
        
        return answer;
    }
}",,2023. 9. 11,60,3
2023. 9. 11 오전 9:43:39,김나운,Unity,35 - 시저 암호,"public class Solution {
    public string solution(string s, int n) {
        string answer = """";
        
        char[] arr = s.ToCharArray();
        
        for(int i=0;i<s.Length;i++){
            int a = arr[i];
            if(a>='a'&& a<='z')
                answer+=(char)('a'+(a-'a'+n)%26);
            else if(a>='A'&&a<='Z')
                answer+=(char)('A'+(a-'A'+n)%26);
            else
                answer+="" "";
        }
        
        return answer;
    }
}
",,2023. 9. 11,35,2
2023. 9. 11 오전 9:44:46,김광수,Unity,79 - 할인 행사,"using System;

public class Solution {
    // 가입 날짜 부터 10일 동안 내가 원하는 제품을 모두 구입할 수 있는 지 판별
    // 가능한 날짜를 return
    
    // 10일 이하로 날짜가 남으면 어차피 불가능함
    public int solution(string[] want, int[] number, string[] discount) 
    {
        int[] check = new int[number.Length];
        int answer = 0;
        
        for(int i=0; i< 10;i++)
        {
            int index;
            if(CheckItem(discount[i],want,out index)) check[index]++;    
        }
        
        answer += EqualArr(check, number) ? 1:0;
        
        for(int i= 10; i< discount.Length; i++)
        {
            int index;
            if(CheckItem(discount[i-10],want,out index)) check[index]--;  
            if(CheckItem(discount[i],want,out index)) check[index]++;  
            answer += EqualArr(check, number) ? 1:0;
            
        }
            
        
        return answer;
    }
    
    public bool CheckItem(string s, string[] want, out int index)
    {
        index = Array.IndexOf(want, s);
        
        if(index == -1)
        {
            return false;
        }
        
        
        return true;
    }
    
    public bool EqualArr(int[] arr1, int[] arr2)
    {
        for(int i =0; i< arr1.Length; i++)
        {
            if (arr1[i] != arr2[i])
            {
                return false;
            }
                
        }
        
        return true;
    }
}",https://github.com/kksoo0131/Study/commit/45b93d53cfdb73381c3fa7da6937b99571d9c43d,2023. 9. 11,79,3
2023. 9. 11 오전 9:44:58,김진환,Unity,44 - 2016년,"public static string solution(int a, int b)
        {
            int[] month = new int[11] {31,29,31,30,31,30,31,31,30,31,30 };
            // 0 = 금요일
            int day = b - 1;

            if (a != 1)
            { 
                for(int i = 0; i < a - 1; i++)
                {
                    day += month[i];
                }
            }
            // SUN,MON,TUE,WED,THU,FRI,SAT
            day = day % 7;
            switch(day)
            {
                case 0:
                    return ""FRI"";
                case 1:
                    return ""SAT"";
                case 2:
                    return ""SUN""; 
                case 3:
                    return ""MON""; 
                case 4:
                    return ""TUE""; 
                case 5:
                    return ""WED""; 
                case 6:
                    return ""THU""; 
            }
            return ""asd"";
        }",https://github.com/NewRound/AlgorithmKata.git,2023. 9. 11,44,2
2023. 9. 11 오전 9:45:36,한병권,Unity,59 - 성격 유형 검사하기,"using System;

public class Solution {
    public string solution(string[] survey, int[] choices) {
        string answer = """";
        
        int[] RT = new int[2];
        int[] CF = new int[2];
        int[] JM = new int[2];
        int[] AN = new int[2];
        
        for(int i = 0; i < survey.Length; i++)
        {
            string s = survey[i].Substring(0,1);
            int a = choices[i] - 4;
            if(a < 0)
            {
                a = a * -1;
                if(s == ""R"")
                {
                    RT[0] = RT[0] + a; 
                }
                else if(s == ""T"")
                {
                    RT[1] = RT[1] + a; 
                }
                else if(s == ""C"")
                {
                    CF[0] = CF[0] + a; 
                }
                else if(s == ""F"")
                {
                    CF[1] = CF[1] + a; 
                }
                else if(s == ""J"")
                {
                    JM[0] = JM[0] + a; 
                }
                else if(s == ""M"")
                {
                    JM[1] = JM[1] + a; 
                }
                else if(s == ""A"")
                {
                    AN[0] = AN[0] + a; 
                }
                else if(s == ""N"")
                {
                    AN[1] = AN[1] + a; 
                }                
            }
            else if (a > 0)
            {
                if(s == ""R"")
                {
                    RT[1] = RT[1] + a; 
                }
                else if(s == ""T"")
                {
                    RT[0] = RT[0] + a; 
                }
                else if(s == ""C"")
                {
                    CF[1] = CF[1] + a; 
                }
                else if(s == ""F"")
                {
                    CF[0] = CF[0] + a; 
                }
                else if(s == ""J"")
                {
                    JM[1] = JM[1] + a; 
                }
                else if(s == ""M"")
                {
                    JM[0] = JM[0] + a; 
                }
                else if(s == ""A"")
                {
                    AN[1] = AN[1] + a; 
                }
                else if(s == ""N"")
                {
                    AN[0] = AN[0] + a; 
                } 
            }
        }
        
        if(RT[0] >= RT[1])
        {
            answer = ""R"";
        }
        else
        {
            answer = ""T"";
        }
         
        if(CF[0] >= CF[1])
        {
            answer = answer + ""C"";
        }
        else
        {
            answer = answer + ""F"";
        }
         
        if(JM[0] >= JM[1])
        {
            answer = answer + ""J"";
        }
        else
        {
            answer = answer + ""M"";
        }
         
        if(AN[0] >= AN[1])
        {
            answer = answer + ""A"";
        }
        else
        {
            answer = answer + ""N"";
        }

        return answer;
    }
}",https://github.com/hbg9212/AlgorithmCodekata,2023. 9. 11,59,3
2023. 9. 11 오전 9:45:48,지민규,Unity,41 - 푸드 파이트 대회,"using System;
using System.Linq;

public class Solution {
    public string solution(int[] food) {
        string answer = """";
        for (int i = 1; i < food.Length; i++)
        {
            if (food[i] / 2 > 0)
            {
                string foodReady = """";
                for (int j = 0; j < food[i] / 2; j++)
                {
                    foodReady += $""{i}"";
                }
                answer += foodReady;
            }
        }
        var answerReverse = answer.Reverse().ToArray();
        string ansRev = new string(answerReverse);
        answer += ""0"";
        answer += ansRev;
        return answer;
    }
}",,2023. 9. 11,41,2
2023. 9. 11 오전 9:46:13,문현우,Unity,30 - 3진법 뒤집기,"using System;
using System.Linq;

public class Solution {
    public int solution(int n) {
        int answer = 0;
        string num = Base10ToBase3(n);
        string reverseNum = new string(num.Reverse().ToArray());
        for (int i = 0; i < reverseNum.Length; i++)
        {
           int digit = int.Parse(reverseNum[i].ToString());
           answer += digit * (int)Math.Pow(3, reverseNum.Length - 1 - i);
        }
        return answer;
    }
    
    public string Base10ToBase3(int n){
        int m = 3;
        string num = """";
        while(n > 0){
            int temp = n % m;
            num = temp.ToString() + num;
            n = n / m;
        }
        return num;
    }
}",https://github.com/Munch310/Algorithm-Csharp/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/68935.%E2%80%853%EC%A7%84%EB%B2%95%E2%80%85%EB%92%A4%EC%A7%91%EA%B8%B0,2023. 9. 11,30,1
2023. 9. 11 오전 9:46:19,김강현,Unity,23 - 약수의 개수와 덧셈,"using System;

public class Solution 
{
    public int solution(int left, int right) 
    {
        int answer = 0;
        int count = 0;
        for(int i = left ; i <= right ; i++)
        {
            count = 0;
            for(int j = 1 ; j <= right ; j++)
            {
                if(i%j == 0)
                {
                    count +=1;
                }
            }
            if(count % 2 == 0)
            {
                answer += i;
            }
            else
            {
                answer -= i;
            }
        }
        return answer;
    }
}",,2023. 9. 11,23,1
2023. 9. 11 오전 9:46:51,박민혁,Unity,46 - 과일 장수,"using System;

public class Solution {
    public int solution(int k, int m, int[] score) {
        int answer = 0;

        Array.Sort(score);
        Array.Reverse(score);

        int count = 1;
        int min = 9999;
        foreach (var item in score)
        {
            if (min > item)
                min = item;

            if (count == m)
            {
                count = 0;
                answer += min * m;
                min = 9999;
            }
            count++;
        }
        return answer;
    }
}",,2023. 9. 11,46,2
2023. 9. 11 오전 9:47:32,조병우,Unity,16 - 음양 더하기,"using System;

public class Solution {
    public int solution(int[] absolutes, bool[] signs) {
        int answer = 0;
        int i = 0;
        for(i = 0; i <absolutes.Length; i++){
            if(signs[i] == true){
                answer += absolutes[i];
            }
            if(signs[i] == false){
                answer -= absolutes[i];
            }
        }
        return answer;
    }
}",,2023. 9. 11,16,1
2023. 9. 11 오전 9:49:03,조범준,Unity,46 - 과일 장수,"using System;
using System.Linq;

public class Solution {
    public int solution(int k, int m, int[] score) {
        int answer = 0;
        int count = 1;
        int max = score.Max();
        int min = max;
        Array.Sort(score);
        foreach(int i in score.Reverse()){
            if (min > i)
                min = i;

            if (count == m)
            {
                count = 0;
                answer += min * m;
                min = max;
            }
            count++;
        }
        return answer;
    }
}",https://github.com/KimMaYa1/BaekJoonEx/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4,2023. 9. 11,46,2
2023. 9. 11 오전 9:49:04,이장원,Unity,15 - 나누어 떨어지는 숫자,"namespace codekata
{
  public class Solution
    {
           public int[] solution(int[] arr, int divisor)
            {
                int[] answer = new int[] { };
                List<int> list = new List<int>();
                for (int i = 0; i < arr.Length; i++)
                {
                    if (arr[i] % divisor == 0)
                        list.Add(arr[i]);
                }
                if (list.Count == 0)
                    list.Add(-1);
                answer = list.ToArray();
                System.Array.Sort(answer);
                return answer;
            }
        
    }
}",,2023. 9. 11,15,1
2023. 9. 11 오전 9:49:23,진우성,Unity,13 - 콜라츠 추측,"public class Solution 
{
    public int solution(int num) 
    {
        int answer = 0;
        long temp = num;
        while(answer <= 500)
        {
            if(temp == 1)
            {
                break;
            }
            if(temp % 2 == 0)
            {
                temp = temp / 2;
            }
            else
            {
                temp = temp * 3 + 1;
            }
            answer++;
        }
        if(temp != 1)
        {
            return -1;
        }
        return answer;
    }
}",,2023. 9. 11,13,1
2023. 9. 11 오전 9:49:27,조영오,Unity,54 - 체육복,"using System;

public class Solution {
    public int solution(int n, int[] lost, int[] reserve) {
        //학생번호는 체격 순. 자신의 바로 앞, 또는 뒷번호에게만 체육복 공유 가능
        //최대한 많은 인원이 체육복을 입어야 함.
        //n 은 전체 학생 수, lost 는 체육복을 도난당한 학생번호 배열, reserve 는 여분 체육복이 있는 학생번호 배열
        //여분 체육복은 항상 한 벌이며, 여분 체육복이 있는 학생도 도난당했을 수 있으나 여분만 도난당했다 가정한다.
        //최대한 많은 수의 인원에게 체육복을 입혔을 때 해당 인원의 수는?
        
        //여분 체육복이 있는 인원의 도난 여부 확인, 단순히 체육복을 빌릴 필요가 없는 인원으로 분류.
        //체육복이 필요한 나머지 인원의 번호와 아직 여분 체육복이 남은 인원의 번호 대조, 
        
        int answer = n;
        
        //결과적으로 체육복이 필요 없는 인원이거나 빌려줄 수 없는 인원의 번호는 0 으로 친다.
        //체육복이 필요한 인원이 체육복이 남는 인원의 번호와 같거나 +- 1인지 확인.
        //맞다면 서로의 번호를 0으로 만든다. 
        
        Array.Sort(lost);
        Array.Sort(reserve);
        
        //여분이 도난당한 인원 제외
        for(int i = 0 ; i < lost.Length; i++){
            for(int j = 0 ; j < reserve.Length ; j++){
                if(reserve[j] == lost[i]){
                    lost[i] = 0; reserve[j] = 0;
                }
            }
        }
        
        for(int i = 0 ; i < lost.Length; i++){
            for(int j = 0 ; j < reserve.Length ; j++){
                if(reserve[j] != 0){
                    //번호가 +- 1 이라면 빌려준다.
                    if(reserve[j] == lost[i] || reserve[j]-1 == lost[i] || reserve[j]+1 == lost[i]){
                        lost[i] = 0; reserve[j] = 0;
                        break;
                    }
                }
            }
        }
        
        foreach(int i in lost){
            if(i != 0){answer--;} 
        }
        
        return answer;
    }
}",,2023. 9. 11,54,2
2023. 9. 11 오전 9:49:51,노재우,Unity,41 - 푸드 파이트 대회,"using System;

public class Solution
{
    public string solution(int[] food)
    {
        string answer = """";
        for (int i = 0; i < food.Length; i++)
        {
            if (food[i] < 2)
                continue;

            int num = ((int)(food[i] * 0.5f));
            for (int j = 0; j < num; j++)
            {
                answer += i;
            }
        }
        char[] temp = answer.ToCharArray();
        Array.Reverse(temp);

        answer += ""0"";
        answer += new string(temp);

        return answer;
    }
}",,2023. 9. 11,41,2
2023. 9. 11 오전 9:49:55,최수용,Unity,34 - 최소직사각형,"

using System;

public class Solution {
    public int solution(int[,] sizes) {
        int answer = 0;
        int maxW = 0;
        int maxH = 0;
        for(int i = 0; i < sizes.Length/2; i++)
        {
            if ( sizes[i,0] > sizes[i,1]) 
            {
                if (maxW < sizes[i,0] ) maxW = sizes[i,0];
                if (maxH < sizes[i,1] ) maxH = sizes[i,1];
            }
            else
            {
                if (maxH < sizes[i,0] ) maxH = sizes[i,0];
                if (maxW < sizes[i,1] ) maxW = sizes[i,1];    
            }
        }
        answer = maxW * maxH;
        return answer;
    }
}",,2023. 9. 11,34,2
2023. 9. 11 오전 9:50:14,김연우,Unity,12 - 두 정수 사이의 합,"#include <stdio.h>
#include <stdbool.h>
#include <stdlib.h>

long long solution(int a, int b) {
    long long answer = 0;
    int start = (a < b) ? a : b;
    int end = (a < b) ? b : a;

    for (int i = start; i <= end; i++) {
        answer += i;
    }

    return answer;
}
",,2023. 9. 11,12,1
2023. 9. 11 오전 9:50:51,김형중,Unity,40 - 가장 가까운 같은 글자,"using System;

public class Solution {
    public int[] solution(string s) {
        int[] answer = new int[s.Length];
        int index = -1;
        
        for(int i = 0; i < s.Length; i++)
        {
            index = -1;
            for(int j = i-1; j >= 0; j--)
            {
                if(s[i] == s[j])
                {
                    index = i - j;
                    break;
                }
            }
            answer[i] = index;
        }
        return answer;
    }
}",,2023. 9. 11,40,2
2023. 9. 11 오전 9:51:48,김진규,Unity,51 - 로또의 최고 순위와 최저 순위,"using System;
using System.Linq;

public class Solution {
    public int[] solution(int[] lottos, int[] win_nums) {
        int[] answer = new int[2];
        
        int count = lottos.Intersect(win_nums).Count();
        int zeroCount = lottos.Count(num => num == 0);
        answer[0] = count+zeroCount>1?7-(count+zeroCount):6;
        answer[1] = count>1?7-count:6;
        return answer;
    }
}",,2023. 9. 11,51,2
2023. 9. 11 오전 9:52:50,진우성,Unity,14 - 서울에서 김서방 찾기,"ublic class Solution 
{
    public string solution(string[] seoul) 
    {
        string answer = """";
        for (int i = 0; i < seoul.Length; i++)
        {
            if (seoul[i] == ""Kim"")
            {
                answer = ""김서방은 "" + i + ""에 있다"";
            }
        }
        return answer;
    }
}",https://github.com/xjwsx/Algorithm,2023. 9. 11,14,1
2023. 9. 11 오전 9:52:54,김형수,Unity,13 - 콜라츠 추측,"public class Solution {
    public int solution(long num) {
        int answer = 0;
        
        while (num != 1) 
        {
    

            if (500 <= answer)
                return -1;

            // 짝수라면
            if (num % 2 == 0)
            {
                num = num / 2;

            }
            // 홀수라면
            else
            {
                num = (num * 3) + 1;
            }

            answer++;
        }

        if (num == 1)
            return answer;
        
        return answer;
    }
}",https://github.com/Kim-H-S/Programmers/blob/main/%EC%BD%9C%EB%9D%BC%EC%B8%A0%20%EC%B6%94%EC%B8%A1.cs,2023. 9. 11,13,1
2023. 9. 11 오전 9:52:57,김명식,Unity,30 - 3진법 뒤집기,"using System;

public class Solution {
    public string solution(string s) {
        string answer = """";
        
        string[] str = s.Split();
        for(int i=0; i < str.Length; i++){
            for(int z=0; z<str[i].Length;z++){
                if (z == 0)
                    {
                        answer += Char.ToUpper(str[i][z]);
                        continue;
                    }
                if (z % 2 == 0)
                    {
                        answer += Char.ToUpper(str[i][z]);
                    }
                    else
                    {
                        answer += Char.ToLower(str[i][z]);
                    }
            }
            if (i != str.Length-1)
                {
                    answer += "" "";
                }
            
        }
        return answer;
    }
}",https://github.com/D0ryeon/Algorithm-Code-Kata,2023. 9. 11,30,1
2023. 9. 11 오전 9:53:11,장성림,Unity,52 - 옹알이 (2),"using System;

public class Solution {
    public int solution(string[] babbling) {
        int answer = 0;
        foreach(string s in babbling){
            string tmp = s.Replace(""aya"", ""1"").Replace( ""ye"", ""2"").Replace(""woo"", ""3"").Replace(""ma"", ""4"");
            int sNum = 0;
            int oldNum = 0;
            if(Int32.TryParse(tmp, out sNum)){
                for(int i = 10; 1 <= sNum; sNum /= 10){
                    if(oldNum == sNum % i)
                        break;
                    oldNum = sNum % i;
                }
                if (sNum < 1)
                    answer++;
            }
        }
        return answer;
    }
}",https://github.com/hoobhoob,2023. 9. 11,52,2
2023. 9. 11 오전 9:54:49,송유섭,Unity,15 - 나누어 떨어지는 숫자,"using System.Collections.Generic;
using System;

public class Solution
{
    public int[] solution(int[] arr, int divisor) 
    {
        
        int[] answer; 
        List<int> list = new List<int>();
        
        for(int i = 0; i < arr.Length; i++)     
        {
            if(arr[i] % divisor == 0) list.Add(arr[i]);
        } 
        
        if(list.Count != 0)
        {
            list.Sort();
            answer = list.ToArray();
        }
        
        else
        {
            answer = new int[] {-1};
        }
        
        return answer;
    }
}",https://github.com/SongJinx3512/NBC/blob/main/codeKata/codeKata%20lv%201%20%23015%20%EB%82%98%EB%88%84%EC%96%B4%20%EB%96%A8%EC%96%B4%EC%A7%80%EB%8A%94%20%EC%88%AB%EC%9E%90%20%EB%B0%B0%EC%97%B4,2023. 9. 11,15,1
2023. 9. 11 오전 9:55:31,조병우,Unity,17 - 핸드폰 번호 가리기,"public class Solution {
    public string solution(string phone_number) {
        string answer = """";
        int i = 0;
        for(i = 0; i < phone_number.Length; i++){
            if(i < phone_number.Length-4){
                answer += ""*"";
            }
            else{
                answer += phone_number[i];
            }
        }
        return answer;
    }
}",,2023. 9. 11,17,1
2023. 9. 11 오전 9:55:40,정주찬,Unity,59 - 성격 유형 검사하기,"using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

public class Solution {
    public string solution(string[] survey, int[] choices) {
                // 동일하면 사전 순
        int[] points = { 3, 2, 1, 0, 1, 2, 3 };
        Dictionary<char, int> personalityDict = new Dictionary<char, int>();
        personalityDict.Add('R', 0);
        personalityDict.Add('T', 0);
        personalityDict.Add('C', 0);
        personalityDict.Add('F', 0);
        personalityDict.Add('J', 0);
        personalityDict.Add('M', 0);
        personalityDict.Add('A', 0);
        personalityDict.Add('N', 0);

        List<char> personalityList = new List<char>();

        for (int i = 0; i < survey.Length; i++)
        {
            if (choices[i] == 4)
            {
                continue;
            }
            else if (choices[i] > 4)
            {
                personalityDict[survey[i][1]] += points[choices[i] - 1];
            }
            else
            {
                personalityDict[survey[i][0]] += points[choices[i] - 1];
            }
        }

        AddPersonalList(personalityDict, personalityList, 'R', 'T');
        AddPersonalList(personalityDict, personalityList, 'C', 'F');
        AddPersonalList(personalityDict, personalityList, 'J', 'M');
        AddPersonalList(personalityDict, personalityList, 'A', 'N');

        return new string(personalityList.ToArray());;
    }
    
    private void AddPersonalList(Dictionary<char, int> personalityDict, List<char> personalityList, char c1, char c2)
    {
        if (personalityDict[c1] == personalityDict[c2])
        {
            char c = c1 > c2 ? c2 : c1;
            personalityList.Add(c);
        }
        else if (personalityDict[c1] > personalityDict[c2])
        {
            personalityList.Add(c1);
        }
        else
        {
            personalityList.Add(c2);
        }
    }
}",https://github.com/JeongJuChan/Algorithm/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/118666.%E2%80%85%EC%84%B1%EA%B2%A9%E2%80%85%EC%9C%A0%ED%98%95%E2%80%85%EA%B2%80%EC%82%AC%ED%95%98%EA%B8%B0/%EC%84%B1%EA%B2%A9%E2%80%85%EC%9C%A0%ED%98%95%E2%80%85%EA%B2%80%EC%82%AC%ED%95%98%EA%B8%B0.cs,2023. 9. 11,59,3
2023. 9. 11 오전 9:55:47,손병의,Unity,26 - 문자열 다루기 기본,"public class Solution 
{
    public bool solution(string s) 
    {
        bool answer = false;
        
        if(s.Length == 4 || s.Length == 6)
        {
            answer = int.TryParse(s, out int temp);
        }
        
        
        return answer;
    }
}",,2023. 9. 11,26,1
2023. 9. 11 오전 9:56:11,박준규,Unity,36 - 숫자 문자열과 영단어,"using System;

public class Solution {
    public int solution(string s) {
        int answer = 0;
        
        s = s.Replace(""zero"", ""0"");
        s = s.Replace(""one"", ""1"");
        s = s.Replace(""two"", ""2"");
        s = s.Replace(""three"", ""3"");
        s = s.Replace(""four"", ""4"");
        s = s.Replace(""five"", ""5"");
        s = s.Replace(""six"", ""6"");
        s = s.Replace(""seven"", ""7"");
        s = s.Replace(""eight"", ""8"");
        s = s.Replace(""nine"", ""9"");

        int k;
        bool strToInt = int.TryParse(s, out k);
        if(strToInt) answer = k;    
        
        return answer; 
    }
}",,2023. 9. 11,36,2
2023. 9. 11 오전 9:56:15,정주찬,Unity,60 - 바탕화면 정리,"using System;

public class Solution {
    public int[] solution(string[] wallpaper) {
        int[] answer;
        int minX = int.MaxValue;
        int maxX = int.MinValue;
        int minY = int.MaxValue;
        int maxY = int.MinValue;

        for (int i = 0; i < wallpaper.Length; i++)
        {

            char[] cArr = wallpaper[i].ToCharArray();
            int index = Array.IndexOf(cArr, '#');
            if (index != -1)
            {
                maxY = i;
                if (minY > i)
                {
                    minY = i;
                }
                
                if (minX > index)
                {
                    minX = index;
                }
            }

            int rIndex = -1;
            for (int j = cArr.Length - 1; j >= 0; j--)
            {
                if (cArr[j] == '#')
                {
                    rIndex = j;
                    break;
                }
            }
            if (rIndex != -1 && maxX < rIndex)
            {
                maxX = rIndex;
            }
        }

        answer = new int[] { minY, minX, maxY + 1, maxX + 1 };
        return answer;
    }
}",https://github.com/JeongJuChan/Algorithm/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/unrated/161990.%E2%80%85%EB%B0%94%ED%83%95%ED%99%94%EB%A9%B4%E2%80%85%EC%A0%95%EB%A6%AC/%EB%B0%94%ED%83%95%ED%99%94%EB%A9%B4%E2%80%85%EC%A0%95%EB%A6%AC.cs,2023. 9. 11,60,3
2023. 9. 11 오전 9:56:20,김종훈,Unity,70 - 예상 대진표,"using System;
using System.Collections.Generic;
class Solution
{
    public int solution(int n, int a, int b)
    {
        int answer = 1;
        for(int i=1; i<=n/2; i++)
        {
            if(a%2==0 && a-1==b) break;
            if(a%2!=0 && a+1==b) break;
                
            if(a%2==0) a=a/2;
            else a=a/2+1;
            
            if(b%2==0) b=b/2;
            else b=b/2+1;    
            
            answer++;
            
        }
        return answer;
    }
}",,2023. 9. 11,70,3
2023. 9. 11 오전 9:56:41,정주찬,Unity,61 - 개인정보 수집 유효기간,"using System;
using System.Collections.Generic;


public class Solution {
    public int[] solution(string today, string[] terms, string[] privacies) {
        List<int> answer = new List<int>();

for (int i = 0; i < privacies.Length; i++)
{
    for (int j = 0; j < terms.Length; j++)
    {
        string[] dayTermSplit = privacies[i].Split();

        string dayTerm = dayTermSplit[1];
        string[] daySplit = dayTermSplit[0].Split('.');

        string[] termsSplit = terms[j].Split();

        string[] todaySplit = today.Split(""."");

        if (dayTerm == termsSplit[0])
        {
            int year = int.Parse(daySplit[0]);
            int month = int.Parse(daySplit[1]) + int.Parse(termsSplit[1]);
            int day = int.Parse(daySplit[2]) - 1;

            if (day == 0)
            {
                month -= 1;
                day = 28;
            }

            if (month > 12)
            {
                year += month / 12;
                month %= 12;
            }

            if (month == 0)
            {
                year -= 1;
                month = 12;
            }

            if (int.Parse(todaySplit[0]) > year)
            {
                answer.Add(i + 1);
            }
            else if (int.Parse(todaySplit[0]) == year)
            {
                if (int.Parse(todaySplit[1]) > month)
                {
                    answer.Add(i + 1);
                }
                else if (int.Parse(todaySplit[1]) == month)
                {
                    if (int.Parse(todaySplit[2]) > day)
                    {
                        answer.Add(i + 1);
                    }
                }
            }
        }
    }

}
    answer.Sort();
        return answer.ToArray();
    }
}",https://github.com/JeongJuChan/Algorithm/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/unrated/150370.%E2%80%85%EA%B0%9C%EC%9D%B8%EC%A0%95%EB%B3%B4%E2%80%85%EC%88%98%EC%A7%91%E2%80%85%EC%9C%A0%ED%9A%A8%EA%B8%B0%EA%B0%84/%EA%B0%9C%EC%9D%B8%EC%A0%95%EB%B3%B4%E2%80%85%EC%88%98%EC%A7%91%E2%80%85%EC%9C%A0%ED%9A%A8%EA%B8%B0%EA%B0%84.cs,2023. 9. 11,61,3
2023. 9. 11 오전 9:57:33,최성원,Unity,12 - 두 정수 사이의 합,"using System;

public class Solution {
    public long solution(int a, int b) {
        long answer = 0;
        int min = Math.Min(a, b);
        int max = Math.Max(a, b);
        
        for (int i = min; i <= max; i++) {
            answer += i;
        }
        return answer;
    }
}",,2023. 9. 11,12,1
2023. 9. 11 오전 9:57:34,정주찬,Unity,62 - 달리기 경주,"using System;
using System.Collections.Generic;

public class Solution {
    public string[] solution(string[] players, string[] callings) {
        Dictionary<string, int> playerDict = new Dictionary<string, int>();

        for (int i = 0; i < players.Length; i++)
        {
            playerDict.Add(players[i], i);
        }     
        
        for (int i = 0; i < callings.Length; i++)
        {
            int index = playerDict[callings[i]];
            playerDict[players[index]]--;
            playerDict[players[index - 1]]++;
            string temp = players[index];
            players[index] = players[index - 1];
            players[index - 1] = temp;
        }

        return players;
    }
}",https://github.com/JeongJuChan/Algorithm/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/unrated/178871.%E2%80%85%EB%8B%AC%EB%A6%AC%EA%B8%B0%E2%80%85%EA%B2%BD%EC%A3%BC/%EB%8B%AC%EB%A6%AC%EA%B8%B0%E2%80%85%EA%B2%BD%EC%A3%BC.cs,2023. 9. 11,62,3
2023. 9. 11 오전 9:57:38,신우석,Unity,67 - 이진 변환 반복하기,"using System;

public class Solution {
    public int[] solution(string s) {
        int cnt0 = 0;
        int cnt1 = 0;
        foreach (char c in s)
            if (c == '1') ++cnt1;
            else ++cnt0;
        
        int cnt = 1;
        while (cnt1 > 1) {
            ++cnt;
            int newCnt = 0;
            while (cnt1 > 0) {
                if (cnt1 % 2 == 1) ++newCnt;
                else ++cnt0;
                cnt1 = cnt1 >> 1;
            }
            cnt1 = newCnt;
        }
        
        return new int[] {cnt, cnt0};
    }
}",https://github.com/seoksii/AlgorithmCodeKata/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv2/70129.%E2%80%85%EC%9D%B4%EC%A7%84%E2%80%85%EB%B3%80%ED%99%98%E2%80%85%EB%B0%98%EB%B3%B5%ED%95%98%EA%B8%B0,2023. 9. 11,67,3
2023. 9. 11 오전 9:57:45,김정민,Unity,61 - 개인정보 수집 유효기간,"public class Solution
        {
            static int year, month, day;
            public int[] solution(string today, string[] terms, string[] privacies)
            {
                List<int> result = new List<int>();

                string[] todayDate = today.Split('.');
                year = int.Parse(todayDate[0]);
                month = int.Parse(todayDate[1]);
                day = int.Parse(todayDate[2]);

                Dictionary<string, int> termDic = new Dictionary<string, int>();

                foreach (string term in terms)
                {
                    string[] termStr = term.Split(' ');
                    termDic.Add(termStr[0], int.Parse(termStr[1]));
                }

                for (int i = 0; i < privacies.Length; i++)
                {
                    string[] privaciesStr = privacies[i].Split(' ');
                    if (isExpired(privaciesStr[0], termDic.GetValueOrDefault(privaciesStr[1])))
                    {
                        result.Add(i + 1);
                    }
                }

                int[] answer = result.ToArray();
                return answer;
            }

            static bool isExpired(string date, int term)
            {
                string[] dateStr = date.Split('.');
                int y = int.Parse(dateStr[0]);
                int m = int.Parse(dateStr[1]);
                int d = int.Parse(dateStr[2]);

                m += term;
                while (m > 12)
                {
                    m -= 12;
                    y++;
                }

                d--;
                if (d < 1)
                {
                    m--;
                    d = 28;
                }
                Console.WriteLine(y + "", "" + m + "", "" + d);

                if (y < year) return true;
                else if (y == year && m < month) return true;
                else if (y == year && m == month && d < day) return true;

                return false;
            }
        }",https://github.com/j-miiin/Algorithm_Study/blob/main/SPARTA_ALGORITHM_2023/Level3/61_PersonalInfo.cs,2023. 9. 11,61,3
2023. 9. 11 오전 9:58:05,강성호,Unity,56 - 대충 만든 자판,"using System;

public class Solution {
    public int[] solution(string[] keymap, string[] targets) {
       int[] answer = new int[targets.Length];
		string str = """";
		int ans = 0;
		int min = int.MaxValue;
		bool chk = false;
		for(int i = 0; i < targets.Length; i++)
		{
			chk = false;
			str = targets[i];
			for (int j = 0; j < targets[i].Length; j++)
			{
				for (int k = 0; k < keymap.Length; k++)
				{
					if (keymap[k].Contains(str[j]))
					{
						min = Math.Min(min, keymap[k].IndexOf(str[j]));
					}
				}
				if(min == int.MaxValue)
				{
					ans = 0;
					chk = true;
					answer[i] = -1;
					break;
				}
				ans += min + 1;
				min = int.MaxValue;
			}
			if (!chk)
			{
				answer[i] = ans;
				ans = 0;
			}
		}
		
		return answer;
    }
}",,2023. 9. 11,56,3
2023. 9. 11 오전 9:58:14,김정민,Unity,62 - 달리기 경주,"public class Solution
        {
            public string[] solution(string[] players, string[] callings)
            {
                Dictionary<string, int> playerDic = new Dictionary<string, int>();
                for (int i = 0; i < players.Length; i++)
                {
                    playerDic.Add(players[i], i);
                }

                foreach (string name in callings)
                {
                    int idx = playerDic[name];

                    string prev = players[idx - 1];
                    players[idx - 1] = name;
                    players[idx] = prev;

                    playerDic[name] = idx - 1;
                    playerDic[prev] = idx;
                }
                string[] answer = players;
                return answer;
            }
        }",https://github.com/j-miiin/Algorithm_Study/blob/main/SPARTA_ALGORITHM_2023/Level3/62_Race.cs,2023. 9. 11,62,3
2023. 9. 11 오전 9:58:19,윤지연,Unity,29 - 최대공약수와 최소공배수,"public class Solution {
    public int[] solution(int n, int m) {
        int[] answer = new int[2];
        
        answer[0] = GetGCD(n, m);
        answer[1] = GetLCM(n, m);
        
        return answer;
    }
    
    public int GetGCD(int n, int m)
    {
        if(n < m)
        {
            int tmp = n;
            n = m;
            m = tmp;
        }
        
        int tmpGCD;
        
        while(m != 0)
        {
            tmpGCD = n % m;
            n = m;
            m = tmpGCD;
        }
        return n;
    }
    
    public int GetLCM(int n, int m)
    {
        return n * m / GetGCD(n, m);
    }
}",https://github.com/jungbosong/Codekata/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12940.%E2%80%85%EC%B5%9C%EB%8C%80%EA%B3%B5%EC%95%BD%EC%88%98%EC%99%80%E2%80%85%EC%B5%9C%EC%86%8C%EA%B3%B5%EB%B0%B0%EC%88%98,2023. 9. 11,29,1
2023. 9. 11 오전 9:58:20,노재우,Unity,42 - 콜라 문제,"public class Solution
{
    public int solution(int a, int b, int n) // a 교환비 , b 주는 콜라, c 처음 빈콜라
    {
        int answer = 0;
        int remain = 0;
        int myCoke = 0;

        while (n >= a)
        {
            answer += n / a * b;
            n = (n / a * b) + (n % a);
        }

        return answer;
    }
}",,2023. 9. 11,42,2
2023. 9. 11 오전 9:58:47,김정민,Unity,63 - 공원 산책,"public class Solution
        {
            static int[] dx = { 0, 0, 1, -1 };
            static int[] dy = { 1, -1, 0, 0 };

            static int E = 0, W = 1, S = 2, N = 3;
            static int EMPTY = 0, WALL = 1;

            static int[,] board;

            public int[] solution(string[] park, string[] routes)
            {
                int startX = 0, startY = 0;
                board = new int[park.Length, park[0].Length];

                for (int i = 0; i < park.Length; i++)
                {
                    for (int j = 0; j < park[i].Length; j++)
                    {
                        if (park[i][j] == 'S')
                        {
                            board[i, j] = EMPTY;
                            startX = i;
                            startY = j;
                        }
                        else if (park[i][j] == 'O')
                        {
                            board[i, j] = EMPTY;
                        }
                        else
                        {
                            board[i, j] = WALL;
                        }
                    }
                }

                int[] answer = BFS(startX, startY, routes);
                return answer;
            }

            static int[] BFS(int x, int y, string[] routes)
            {
                int curX = x, curY = y;
                foreach (string str in routes)
                {
                    string[] pos = str.Split(' ');
                    int dir = 0;
                    switch (pos[0])
                    {
                        case ""E"" : dir = E; break;
                        case ""W"": dir = W; break;
                        case ""S"": dir = S; break;
                        case ""N"": dir = N; break;
                    }

                    bool isPossible = true;
                    int nextX = curX, nextY = curY;
                    for (int i = 0; i < int.Parse(pos[1]); i++)
                    {
                        nextX += dx[dir];
                        nextY += dy[dir];

                        if (nextX < 0 || nextY < 0 || nextX >= board.GetLength(0) || nextY >= board.GetLength(1)
                            || board[nextX, nextY] == WALL)
                        {
                            isPossible = false;
                            break;
                        }
                    }

                    if (isPossible)
                    {
                        curX = nextX;
                        curY = nextY;
                    }
                }

                return new int[] { curX, curY };
            }
        }",https://github.com/j-miiin/Algorithm_Study/blob/main/SPARTA_ALGORITHM_2023/Level3/63_WalkingPark.cs,2023. 9. 11,63,3
2023. 9. 11 오전 10:00:30,이현지,Unity,47 - 모의고사완전탐색,"using System;
using System.Collections.Generic;

public class Solution {
    public int[] solution(int[] answers) {
        int[] answer;
        
        List<int> tempAnswer = new List<int>();
        int count1 = 0;
        int count2 = 0;
        int count3 = 0;
        
        string answer1 = ""12345"";
        string answer2 = ""21232425"";
        string answer3 = ""3311224455"";
        
        
        for (int i = 0; i < answers.Length; i++)
        {
            if (answers[i] == (answer1[i % 5] - '0')) count1++;
            if (answers[i] == (answer2[i % 8] - '0')) count2++;
            if (answers[i] == ( answer3[i % 10] - '0')) count3++;
        }
        
        if (count1 >= count2 && count1 >= count3) tempAnswer.Add(1);
        if (count2 >= count1 && count2 >= count3) tempAnswer.Add(2);
        if (count3 >= count1 && count3 >= count2) tempAnswer.Add(3);
        
        
        answer = tempAnswer.ToArray();
        return answer;
    }
}",https://github.com/szlovelee/Programmers-Algorithm,2023. 9. 11,47,2
2023. 9. 11 오전 10:00:56,한병권,Unity,60 - 바탕화면 정리,"using System;

public class Solution {
    public int[] solution(string[] wallpaper) {
        int[] answer = {51,51,0,0};
        
        for(int i = 0; i < wallpaper.Length; i++)
        {
            char[] temp = wallpaper[i].ToCharArray();
            
            for(int j = 0; j < temp.Length; j++)
            {
                if(temp[j] == '#')
                {
                    if(answer[0] > i)
                    {
                        answer[0] = i;
                    }
                    
                    if(answer[1] > j)
                    {
                        answer[1] = j;
                    }
                    
                    if(answer[2] < i+1)
                    {
                        answer[2] = i+1;
                    }
                    
                    if(answer[3] < j+1)
                    {
                        answer[3] = j+1;
                    }
                }
            }
        }  
        return answer;
    }
}",https://github.com/hbg9212/AlgorithmCodekata,2023. 9. 11,60,3
2023. 9. 11 오전 10:01:07,이성권,Unity,12 - 두 정수 사이의 합,"public class Solution {
    public long solution(int a, int b) {
        long answer = 0;   
        while (a != b)
        {
            answer += a;
            a = (a > b) ? a - 1 : a + 1;
        }

        return answer + b;
    }
}",https://github.com/LeeSeongGwon,2023. 9. 11,12,1
2023. 9. 11 오전 10:01:41,유채연,Unity,48 - 소수 만들기,"using System;
using System.Collections.Generic;

class Solution
{
    public int solution(int[] number)
    {
        int answer = 0;
        List<int> Sum = new List<int>();
        
        for(int i=0;i<number.Length-2;i++){
            for(int j=i+1;j<number.Length-1;j++){
                for(int k=j+1;k<number.Length;k++){
                    Sum.Add(number[i]+number[j]+number[k]);
                }
             }
        }
        
        for(int i=0;i<Sum.Count;i++){
            int n = Sum[i]-1;
            bool whether = false;
            while(n>1){
                if(Sum[i]%n==0){
                    whether=true;
                    break;
                }
                n--;
            }
            if(!whether) answer++;
        }
        
        
        return answer;
    }
}",https://github.com/ychy0006/AlgorithmCodeKata/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4,2023. 9. 11,48,2
2023. 9. 11 오전 10:02:03,신해준,Unity,46 - 과일 장수,"using System;
using System.Linq;

public class Solution {
    public int solution(int k, int m, int[] score) {
        int answer = 0;
        int index = m - 1;
        Array.Sort(score);
        Array.Reverse(score);
        
        for(int i = 0; i < score.Length / m; i++)
        {
            answer += score[index] * m;
            index += m;
        }
        return answer;
    }
}",,2023. 9. 11,46,2
2023. 9. 11 오전 10:02:04,김주형,Unity,31 - 이상한 문자 만들기,"public class Solution
{
    public string solution(string s)
    {
        string answer = """";
        int index = 0;
        for (int i = 0; i < s.Length; i++ )
        {
            if (s[i] == ' ')
            {
                answer += s[i];
                index = 0;
                continue;
            }
            if (index % 2 == 0)
            {
                answer += s[i].ToString().ToUpper();
                index++;
            }
            else
            {
                answer += s[i].ToString().ToLower();
                index++;
            }
        }
        return answer;
    }
}",https://github.com/kjuhyung/Algorithm.git,2023. 9. 11,31,2
2023. 9. 11 오전 10:02:07,유채연,Unity,49 - 덧칠하기,"using System;

public class Solution {
    public int solution(int n, int m, int[] section) {
        int answer = 1;
        int lastPaint = section[section.Length-1];
        for(int i=section.Length-2;i>=0;i--){
            if(lastPaint-section[i]>=m){
                answer++;
                lastPaint=section[i];
            }
        }
        return answer;
    }
}",https://github.com/ychy0006/AlgorithmCodeKata/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1,2023. 9. 11,49,2
2023. 9. 11 오전 10:02:50,유채연,Unity,50 - 기사단원의 무기,"using System;

public class Solution {
    public int solution(int number, int limit, int power) {
        int answer = 1;
        for(int i=2;i<=number;i++){
            int atk = 2;
            int multipleValue=i;
            for(int j=2;j<multipleValue;j++){
                if(i%j==0) {
                    multipleValue=i/j;
                    if(multipleValue!=j) atk+=2;
                    else atk++;
                }
            }
            if(atk>limit) atk=power;
            answer+=atk;
        }
        return answer;
    }
}",https://github.com/ychy0006/AlgorithmCodeKata/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1,2023. 9. 11,50,2
2023. 9. 11 오전 10:05:34,김하늘,Unity,38 - K번째수정렬,"using System;

public class Solution 
{
    public int[] solution(int[] array, int[,] commands) 
    {
        int[] answer = new int[commands.GetLongLength(0)];

        for (int n = 0; n < commands.GetLongLength(0); n++)
        {
            int i = commands[n, 0];
            int j = commands[n, 1];
            int k = commands[n, 2];

            int[] temp = new int[j - i + 1];

            for (int a = 0; a < temp.Length; a++)
                temp[a] = array[a + i - 1];

            Array.Sort(temp);

            answer[n] = temp[k - 1];
        }
        return answer;
    }
}",,2023. 9. 11,38,2
2023. 9. 11 오전 10:06:02,지민규,Unity,42 - 콜라 문제,"using System;

public class Solution {
    public int solution(int a, int b, int n) {
        int answer = 0;
        int leftOver = 0;
        while (n / a > 0)
        {
            answer += (n/a)*b;
            leftOver = (n%a);
            n = (n/a) * b + leftOver;
        }
        return answer;
    }
}",,2023. 9. 11,42,2
2023. 9. 11 오전 10:07:09,이경민,Unity,35 - 시저 암호,"public class Solution {
    public string solution(string s, int n) {
        string answer = """";
        string alphabet = ""abcdefghijklmnopqrstuvwxyz"";
        char[] alphabets = alphabet.ToCharArray();
        char[] letters = s.ToCharArray();
        bool isCapital = false;
        
        for(int i = 0; i < letters.Length; i++)
        {
            if(char.IsLetter(letters[i])==false)
            {
                answer += "" "";
                continue;
            }
            if (char.IsLower(letters[i]) == false)
            {
                letters[i] = char.ToLower(letters[i]); 
                isCapital = true;
            }
            

            for(int j = 0; j < 26; j++)
            {         
                if (alphabets[j] == letters[i])
                {
                    letters[i] = (j+n<=25)? alphabets[j+n] : alphabets[j+n-26];
                    if (isCapital)
                        letters[i] = char.ToUpper(letters[i]);
                    answer += letters[i].ToString();
                    break;
                }
                else continue;
            }
            isCapital = false;
        }
        return answer;
    }
}",https://github.com/kminsmin/Algorithm_Test_Practice/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12926.%E2%80%85%EC%8B%9C%EC%A0%80%E2%80%85%EC%95%94%ED%98%B8,2023. 9. 11,35,2
2023. 9. 11 오전 10:07:23,이홍준,Unity,45 - 카드 뭉치,"using System;

public class Solution {
    public string solution(string[] cards1, string[] cards2, string[] goal) {
        string answer = ""Yes"";
        int cards1tag = 0;
        int cards2tag = 0;
        
        for (int i = 0; i < goal.Length; i++)
        {
            if (cards1tag < cards1.Length && goal[i] == cards1[cards1tag])
            {
                cards1tag++;
                continue;
            }
            else if (cards2tag < cards2.Length && goal[i] == cards2[cards2tag])
            {
                cards2tag++;
                continue;
            }
            else 
            {
                answer = ""No"";
                break;
            }
        }
        
        return answer;
    }
}",https://github.com/dlghdwns97/Study/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/unrated/159994.%E2%80%85%EC%B9%B4%EB%93%9C%E2%80%85%EB%AD%89%EC%B9%98,2023. 9. 11,45,2
2023. 9. 11 오전 10:07:46,최수용,Unity,35 - 시저 암호,"  public class Solution
    {
        public string solution(string s, int n)
        {
            string answer = """";
            char[] chars = s.ToCharArray();
            for (int i = 0; i < chars.Length; i++)
            {
                if (chars[i] <= 'z'&& chars[i] >= 'a')
                {
                    chars[i] = (char)((chars[i] + n));
                    if (chars[i] > 'z') chars[i] = (char)(chars[i] - 26);
                }
                if (chars[i] <= 'Z' && chars[i] >= 'A')
                {
                    chars[i] = (char)((chars[i] + n));
                    if (chars[i] > 'Z') chars[i] = (char)(chars[i] - 26);
                }
            }
            // a 는 97,  소문자는 26개  A 는 65 ,
            answer = new string(chars);
            return answer;
        }
    }",,2023. 9. 11,35,2
2023. 9. 11 오전 10:12:21,최석준,Unity,13 - 콜라츠 추측,"#include <stdio.h>
#include <stdbool.h>
#include <stdlib.h>

int solution(int num) 
{
   long long answer = num;

    for(int i=0; i<500; i++)
    {
        if (answer == 1)
            return i;

        answer = (answer % 2 == 0) ? (answer / 2) : (3 * answer + 1); 
    }

   return -1;
}",,2023. 9. 11,13,1
2023. 9. 11 오전 10:16:14,박지원,Unity,47 - 모의고사완전탐색,"using System;
using System.Collections.Generic;
using System.Linq;

public class Solution {
    public int[] solution(int[] answers) {
        int[] nRules1 = new int[] { 1, 2, 3, 4, 5 };
        int[] nRules2 = new int[] { 2, 1, 2, 3, 2, 4, 2, 5 };
        int[] nRules3 = new int[] { 3, 3, 1, 1, 2, 2, 4, 4, 5, 5 };
        int[] nScores = new int[3];
        for (int i = 0; i < answers.Length; i++)
        {
            if (answers[i] == nRules1[i % nRules1.Length]) ++nScores[0];
            if (answers[i] == nRules2[i % nRules2.Length]) ++nScores[1];
            if (answers[i] == nRules3[i % nRules3.Length]) ++nScores[2];
        }
        List<int> lstAnswer = new List<int>();
        if (nScores[0] == nScores.Max()) lstAnswer.Add(1);
        if (nScores[1] == nScores.Max()) lstAnswer.Add(2);
        if (nScores[2] == nScores.Max()) lstAnswer.Add(3);
        return lstAnswer.ToArray();
    }
}",https://github.com/jwonp9127/AlgorithmStudy/tree/e6af93bc0b60229ec5cc2e51e0880a7507daccf5/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/42840.%E2%80%85%EB%AA%A8%EC%9D%98%EA%B3%A0%EC%82%AC,2023. 9. 11,47,2
2023. 9. 11 오전 10:19:58,이소이,Unity,46 - 과일 장수,"using System;

public class Solution {
    public int solution(int k, int m, int[] score) {
        Array.Sort(score);
        int len = score.Length;
        int profit = 0;
        while (len - m >= 0)
        {
            int minScore = score[len - m];
            profit += minScore * m;
            len -= m;
        }
        return profit;
    }
}",https://github.com/leesy015599/AlgorithmCodeKata/blob/master/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/unrated/135808.%E2%80%85%EA%B3%BC%EC%9D%BC%E2%80%85%EC%9E%A5%EC%88%98/%EA%B3%BC%EC%9D%BC%E2%80%85%EC%9E%A5%EC%88%98.cs,2023. 9. 11,46,2
2023. 9. 11 오전 11:02:06,김민태,Unity,73 - 귤 고르기,"using System;
using System.Collections.Generic;
using System.Linq;

public class Solution {
    public int solution(int k, int[] tangerine) {
        int answer = 0;
        Dictionary<int,int> count = new Dictionary<int,int>();
        for(int i = 0; i < tangerine.Length; i++)
        {
            if(count.ContainsKey(tangerine[i]))
            {
                count[tangerine[i]]++;
            }
            else
            {
                count.Add(tangerine[i],1);
            }
        }
        List<int> list = count.Values.ToList();
        list.Sort();
        int temp = 0;
        for(int i = list.Count-1; i >= 0; i--)
        {
            answer++;
            temp += list[i];
            if(temp >= k) break;
        }
        return answer;
    }
}",https://github.com/rlaalsxo/CodingTest,2023. 9. 11,73,3
2023. 9. 11 오전 11:02:59,김정민,Unity,64 - 신고 결과 받기,"public class Solution
        {
            public int[] solution(string[] id_list, string[] report, int k)
            {
                Dictionary<string, HashSet<string>> reportDic = new Dictionary<string, HashSet<string>>();
                foreach (string id in id_list)
                {
                    reportDic.Add(id, new HashSet<string>());
                }

                foreach (string r in report)
                {
                    string[] strArr = r.Split(' ');
                    string reporter = strArr[0];
                    string reported = strArr[1];

                    reportDic.GetValueOrDefault(reported).Add(reporter);
                }

                Dictionary<string, int> mailCnt = new Dictionary<string, int>();
                foreach (string id in id_list)
                {
                    mailCnt.Add(id, 0);
                }
                foreach (KeyValuePair<string, HashSet<string>> entry in reportDic) 
                {
                    HashSet<string> curReporters = reportDic.GetValueOrDefault(entry.Key);
                    if (curReporters.Count >= k)
                    {
                        foreach (string name in curReporters)
                        {
                            mailCnt[name] = mailCnt.GetValueOrDefault(name) + 1;
                        }
                    }
                }

                int[] answer = new int[id_list.Length];
                int idx = 0;
                foreach (KeyValuePair<string, int> entry in mailCnt)
                {
                    answer[idx++] = entry.Value;
                }

                return answer;
            }
        }",https://github.com/j-miiin/Algorithm_Study/blob/main/SPARTA_ALGORITHM_2023/Level3/64_ReportResult.cs,2023. 9. 11,64,3
2023. 9. 11 오후 12:07:27,박지원,Unity,48 - 소수 만들기,"using System;

class Solution
{
    public bool IsPrime(int num)
    {
        if(num <= 1)
            return false;

        for (int i = 2; i < num / 2; i++)
        {
            if(num % i == 0)
                return false;
        }

        return true;
    }

    public int solution(int[] nums)
    {
        int answer = 0;

        for(int i = 0; i < nums.Length - 2; i++)
        {
            for(int j = i + 1; j < nums.Length - 1; j++)
            {
                for(int k = j + 1; k < nums.Length; k++)
                {
                    if(IsPrime(nums[i] + nums[j] + nums[k]))
                        answer++;
                }
            }
        }

        return answer;
    }
}",https://github.com/jwonp9127/AlgorithmStudy/tree/f8a8e99d3d4379f6602f723f812f6ef802653de7/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12977.%E2%80%85%EC%86%8C%EC%88%98%E2%80%85%EB%A7%8C%EB%93%A4%EA%B8%B0,2023. 9. 11,48,2
2023. 9. 11 오후 12:10:59,임전혁,Unity,56 - 대충 만든 자판,"using System;

public class Solution {
    public int[] solution(string[] keymap, string[] targets) {
        int[] answer = new int[targets.Length];

        for (int i = 0; i < targets.Length; i++)
        {

            for (int j = 0; j < targets[i].Length; j++) 
            {
                char targetChar = targets[i][j];
                int charIndex = int.MaxValue;
                for (int k = 0; k < keymap.Length; k++)
                {
                    int tempIndex = keymap[k].IndexOf(targetChar);
                    if (tempIndex == -1)
                        continue;
                    
                    if (charIndex > tempIndex)
                        charIndex = tempIndex;
                }

                if (charIndex == int.MaxValue)
                {
                    answer[i] = -1;
                    break;
                }
                else
                    answer[i] += charIndex + 1;
            }
        }
        return answer;
    }
}",https://github.com/yarogono/Algorithm_CSharp/blob/master/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/unrated/160586.%E2%80%85%EB%8C%80%EC%B6%A9%E2%80%85%EB%A7%8C%EB%93%A0%E2%80%85%EC%9E%90%ED%8C%90/%EB%8C%80%EC%B6%A9%E2%80%85%EB%A7%8C%EB%93%A0%E2%80%85%EC%9E%90%ED%8C%90.cs,2023. 9. 11,56,3
2023. 9. 11 오후 12:25:28,박지원,Unity,49 - 덧칠하기,"using System;

public class Solution {
    public int solution(int n, int m, int[] section) {
            int answer = 0;
            int temp = 0;

            for(int i = 0; i < section.Length; ++i)
            {
                if(section[i] > temp)
                {
                    temp = section[i] + m - 1;
                    answer++;
                }
            }
            return answer;
    }
}",https://github.com/jwonp9127/AlgorithmStudy/tree/6189c55df9b5690f585f08bb3dceed9a005d5faa/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/unrated/161989.%E2%80%85%EB%8D%A7%EC%B9%A0%ED%95%98%EA%B8%B0,2023. 9. 11,49,2
2023. 9. 11 오후 12:41:36,박지원,Unity,50 - 기사단원의 무기,"using System;
using System.Linq;

public class Solution {
    public int solution(int number, int limit, int power) {
        int answer = 0;
        int[] divisor = new int[number];
        for(int i = 1; i <= number; i++){
            int cnt = 0;
            for(int j = 1; j*j <= i; j++){
                if(i % j == 0)  cnt += 2;
                if((float)i / j == j)  cnt -= 1;
            }
            divisor[i - 1] = cnt > limit ? power : cnt;
        }
        
        return divisor.Sum();
    }
}",https://github.com/jwonp9127/AlgorithmStudy/tree/01964de4d46cda7f21a38c2db292f5c733a37998/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/unrated/136798.%E2%80%85%EA%B8%B0%EC%82%AC%EB%8B%A8%EC%9B%90%EC%9D%98%E2%80%85%EB%AC%B4%EA%B8%B0,2023. 9. 11,50,2
2023. 9. 11 오후 1:00:02,박지원,Unity,51 - 로또의 최고 순위와 최저 순위,"using System;
using System.Collections.Generic;

public class Solution {
    public int[] solution(int[] lottos, int[] win_nums) {
            int[] answer = new int[2];

            List<int> lottosList = new List<int>();
            List<int> winNumsList = new List<int>();


            for(int i = 0; i< lottos.Length; i++)
            {
                lottosList.Add(lottos[i]);
                winNumsList.Add(win_nums[i]);
            }

            int maxWinNum = 0;
            int minWinNum = 0;

            for(int i =0; i< lottosList.Count; i++)
            {
                if (winNumsList.Contains(lottosList[i]))
                {
                    minWinNum++;
                }
                else if(lottosList[i] == 0) 
                {
                    maxWinNum++;
                }
            }

            maxWinNum += minWinNum;

            if (minWinNum >= 2)
                answer[1] = 7 - minWinNum;
            else
                answer[1] = 6;

            if (maxWinNum >= 2)
                answer[0] = 7 - maxWinNum;
            else
                answer[0] = 6;


            return answer;
    }
}",https://github.com/jwonp9127/AlgorithmStudy/tree/b03c030f807cf6aa805b90c5723bbb9540874abd/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/77484.%E2%80%85%EB%A1%9C%EB%98%90%EC%9D%98%E2%80%85%EC%B5%9C%EA%B3%A0%E2%80%85%EC%88%9C%EC%9C%84%EC%99%80%E2%80%85%EC%B5%9C%EC%A0%80%E2%80%85%EC%88%9C%EC%9C%84,2023. 9. 11,51,2
2023. 9. 11 오후 1:08:13,조성훈,Unity,24 - 문자열 내림차순으로 배치하기,"using System;

public class Solution 
{
    public string solution(string s) 
    {
        string answer = """";
        char[] temp = s.ToCharArray();
        
        Array.Sort(temp);
        
        Array.Reverse(temp);
        answer = new string(temp);
        
        return answer;
        
    }
}",,2023. 9. 11,24,1
2023. 9. 11 오후 1:27:57,조성훈,Unity,25 - 부족한 금액 계산하기,"using System;

class Solution
{
    public long solution(int price, int money, int count)
    {
        long sumPrice = 0; 
        for(int i = 1; i < count+1; i++)
        {
            sumPrice += price*i;
        }
        if(money - sumPrice >= 0)
        return 0;
        else
        return (long)Math.Abs(money - sumPrice);
    }
}
",,2023. 9. 11,25,1
2023. 9. 11 오후 8:38:43,배인호,Unity,51 - 로또의 최고 순위와 최저 순위,"using System;
using System.Collections.Generic;
using System.Linq;

public class Solution
{
    public int[] solution(int[] lottos, int[] win_nums)
    {
        int[] answer = new int[2];
        int defaultAnswer = 0;
        int extraAnswer = 0;

        List<int> winNumList = win_nums.ToList();

        int winLottoIndex = winNumList.Count;
        int lottosIndex = lottos.Length;

        for (int i = 0; i < lottosIndex; i++)
        {
            int compareNum = lottos[i];

            if (compareNum == 0)
            {
                extraAnswer++;
            }
            else
            {
                for (int j = 0; j < winLottoIndex; j++)
                {
                    if (compareNum == winNumList[j])
                    {
                        winNumList.RemoveAt(j);
                        defaultAnswer++;
                        winLottoIndex--;
                    }
                }
            }
        }

        answer[0] = CalculateRate(defaultAnswer + extraAnswer);
        answer[1] = CalculateRate(defaultAnswer);

        return answer;
    }

    public int CalculateRate(int defaultAnswer)
    {
        int answer;

        switch (defaultAnswer)
        {
            case 6:
                answer = 1;
                break;
            case 5:
                answer = 2;
                break;
            case 4:
                answer = 3;
                break;
            case 3:
                answer = 4;
                break;
            case 2:
                answer = 5;
                break;
            default:
                answer = 6;
                break;
        }

        return answer;
    }
}
",https://github.com/cutlake2000/Algorithm/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/77484.%E2%80%85%EB%A1%9C%EB%98%90%EC%9D%98%E2%80%85%EC%B5%9C%EA%B3%A0%E2%80%85%EC%88%9C%EC%9C%84%EC%99%80%E2%80%85%EC%B5%9C%EC%A0%80%E2%80%85%EC%88%9C%EC%9C%84,2023. 9. 11,51,2
2023. 9. 12 오전 7:58:01,김대열,Unity,95 - 쿼드압축 후 개수 세기,"#include <string>
#include <vector>

using namespace std;
string compress(vector<vector<int>>& arr);

vector<int> solution(vector<vector<int>> arr) {
    vector<int> answer;
    answer.push_back(0);
    answer.push_back(0);
    auto compressed = compress(arr);
    for(int i = 0;i<compressed.length();i++){
        if(compressed[i] == '0'){
            answer[0] ++;
        }else if(compressed[i] == '1'){
            answer[1] ++;
        }
    }
    return answer;
}

string compress(vector<vector<int>>& arr){
    if(arr.size() <= 1)
        return to_string(arr[0][0]);
    string ret;
    int row = arr.size();
    int col = arr.size();
    bool canCompress = true;
    int firstData = arr[0][0];
    
    for(int i =0 ;i <row; i++){
        for(int j = 0; j< col; j++){
            if(firstData != arr[i][j]){
                canCompress = false;
            }
        }
    }
    
    if(canCompress) return to_string(firstData);
    
    for(int i = 0; i< 2;i++){
        for (int j = 0; j < 2; j++){
            int rowStartIndex = i * row / 2;
            int rowEndIndex = row / 2 * (i + 1); //exclude
            int colStartIndex = j * col/2;
            int colEndIndex = (j+1) * col/2;
            
            vector<vector<int>> rows;
            for(int k = rowStartIndex ;k < rowEndIndex; k++){
                vector<int> cols = vector<int>(
                    arr[k].begin()+colStartIndex, 
                    arr[k].begin()+colEndIndex
                );
                rows.push_back(cols);
            }
            
            ret += compress(rows);
        }
    }
    return ret;
}",,2023. 9. 12,95,4
2023. 9. 12 오전 8:36:38,권선영,Unity,13 - 콜라츠 추측,"public class Solution {
    public int solution(long num)
        {
            int answer = 0;
            while (num != 1)
            {
                if (num % 2 == 0)
                {
                    num /= 2;
                    answer++;
                }
                else
                {
                    num = num * 3 + 1;
                    answer++;
                }
                if (answer > 500)
                    return -1;
            }
            return answer;
        }
}",https://github.com/Tealss,2023. 9. 12,13,1
2023. 9. 12 오전 9:01:08,박도현,Unity,16 - 음양 더하기,"using System;
public class Solution {
    public int solution(int[] absolutes, bool[] signs) {
        int answer = 0;
        for(int i = 0; i < absolutes.Length; i++)
        {
            answer += GetNum(absolutes[i], signs[i]);
        }
        return answer;
    }
    public int GetNum(int num, bool symbol)
    {
        if(symbol)
        {
            return +num;
        }else {return -num;}
    }
}",,2023. 9. 12,16,1
2023. 9. 12 오전 9:02:10,김광수,Unity,80 - 의상,https://school.programmers.co.kr/learn/courses/30/lessons/42578,https://github.com/kksoo0131/Study/commit/98f2b8a64161d592a0e2e56370773377aea4bb85,2023. 9. 12,80,3
2023. 9. 12 오전 9:07:53,신우석,Unity,68 - 피보나치 수,"using System;

public class Solution {
    public int solution(int n) {
        int prev = 0;
        int cont = 1;
        for (int i = 2; i <= n; ++i) {
            int newNum = (prev + cont) % 1234567;
            prev = cont;
            cont = newNum;
        }
        return cont;
    }
}",https://github.com/seoksii/AlgorithmCodeKata/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv2/12945.%E2%80%85%ED%94%BC%EB%B3%B4%EB%82%98%EC%B9%98%E2%80%85%EC%88%98,2023. 9. 12,68,3
2023. 9. 12 오전 9:08:07,우성훈,Unity,11 - 하샤드 수,"using System;

public class Solution
    {
        public bool solution(int x)
        {
        // x를 문자열로 변환한다.
            string temp = x.ToString();
            // for문을 돌려서 각 자리수의 합을 구한다.
            int sum = 0;
            for (int i = 0; i < temp.Length; i++)
            {
                sum += (int)Char.GetNumericValue(temp[i]);
            }
            // x가 자리수 합으로 나눠떨어지면 참, 아니면 거짓
            bool answer = x % sum==0 ? true:false;
            return answer;
        }
    }",,2023. 9. 12,11,1
2023. 9. 12 오전 9:10:49,이경현,Unity,41 - 푸드 파이트 대회,"public string solution(int[] food)
{
    string answer = """";
    for(int i=1; i<food.Length; i++)
    {
        food[i] /= 2;
        for(int j=0; j < food[i]; j++)
        {
            answer += i.ToString();
        }
    }

    char[] tmp = answer.ToCharArray();
    Array.Reverse(tmp);

    return answer + ""0"" + new string(tmp);
}",https://github.com/516lkh/Algorithm,2023. 9. 12,41,2
2023. 9. 12 오전 9:12:22,이두희,Unity,1 - 짝수와 홀수,"public class Solution {
    public string solution(int num) {
        string answer = """";
        return (num % 2 == 0 ) ? ""Even"" : "" Odd"" ;
    }
}",https://github.com/Dooheee,2023. 9. 12,1,1
2023. 9. 12 오전 9:12:33,최장범,Unity,43 - 명예의 전당 (1),"using System;

public class Solution
{
    public int[] solution(int k, int[] score)
    {
        int[] answer = new int[score.Length];
        int[] temples = new int[k];

        for (int i = 0; i < temples.Length; i++)
            temples[i] = -1;

        for (int i = 0; i < score.Length; i++)
        {
            int target = score[i];
            int min = 9999;
            for (int j = 0; j < temples.Length; j++)
            {
                if (temples[j] < target)
                {
                    int temp = temples[j];
                    temples[j] = target;
                    target = temp;
                }

                if (temples[j] > -1 && min > temples[j])
                    min = temples[j];
            }
            answer[i] = min;
        }
        return answer;
    }
}",,2023. 9. 12,43,2
2023. 9. 12 오전 9:13:13,박민호,Unity,46 - 과일 장수,"using System;
using System.Linq;
public class Solution {
    public int solution(int k, int m, int[] score) {
        int box = score.Length/m;
        int answer = 0;
        Array.Sort(score, (a, b) => b.CompareTo(a));
        for(int i=1;i<=box;i++){
                answer+=m*score[(i*m)-1];
            }      
        return answer;
    }
}",,2023. 9. 12,46,2
2023. 9. 12 오전 9:15:28,김경환,Unity,68 - 피보나치 수,"public class Solution {
    public int solution(int n) {
        int[] fib = new int[n + 1];
        fib[1] = 1;
        
        for(int i = 2; i <= n ; i++)
        {
            fib[i] = fib[i - 1] + fib[i - 2];
            
            if(fib[i] > 1234567)
                fib[i] %= 1234567;
        }
        
        return fib[n];
    }
}",https://github.com/kkh9700/algorithm,2023. 9. 12,68,3
2023. 9. 12 오전 9:16:29,김나운,Unity,36 - 숫자 문자열과 영단어,"using System;

public class Solution {
    public int solution(string s) {
        int answer = 0;
        
        s = s.Replace(""zero"", ""0"");
        s = s.Replace(""one"", ""1"");
        s = s.Replace(""two"", ""2"");
        s = s.Replace(""three"", ""3"");
        s = s.Replace(""four"", ""4"");
        s = s.Replace(""five"", ""5"");
        s = s.Replace(""six"", ""6"");
        s = s.Replace(""seven"", ""7"");
        s = s.Replace(""eight"", ""8"");
        s = s.Replace(""nine"", ""9"");

        if (int.TryParse(s, out answer)) {
            return answer;
        }                   
        
        return answer;                              
    }
}",,2023. 9. 12,36,2
2023. 9. 12 오전 9:17:21,조영오,Unity,55 - 문자열 나누기,"using System;

public class Solution {
    public int solution(string s) {
        
        char first = ' ';
        int firstCount = 0;
        int others = 0;
        int answer = 0;
        
        for(int i = 0 ; i < s.Length ; i++){
            //문자열의 끝에 도달했다면 answer 증가, 반복 종료.
            if(i >= s.Length-1){
                answer++; break;
            }
            
            //남은 문자열의 첫 글자라면 first 로 지정한다.
            if(first == ' '){
                first = s[i];
                firstCount++;
            }
            //남은 문자열의 첫 글자가 아니라면
            else{
                //첫 글자와 동일한 문자라면 firstCount 증가, 아니라면 others 증가
                if(s[i] == first){firstCount++;}
                else{others++;}
                //firstCount 와 others 가 같다면 첫 글자와 각 카운트를 초기화하고, answer 증가
                if(firstCount > 0 && firstCount == others){
                    first = ' '; others = 0; firstCount = 0; answer++;
                }
            }    
        }
        
        return answer;
    }
}",,2023. 9. 12,55,3
2023. 9. 12 오전 9:17:26,신우석,Unity,69 - 카펫,"using System;

public class Solution {
    public int[] solution(int brown, int yellow) {
        int total = brown + yellow;
        
        for (int i = 3; i <= total; ++i) {
            for (int j = 3; j <= i; ++j) {
                if ((i - 2) * (j - 2) == yellow && i * j == total)
                    return new int[2] {i, j};
            }
        }
        int[] answer = new int[] {};
        return answer;
    }
}",https://github.com/seoksii/AlgorithmCodeKata/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv2/42842.%E2%80%85%EC%B9%B4%ED%8E%AB,2023. 9. 12,69,3
2023. 9. 12 오전 9:18:56,이경현,Unity,42 - 콜라 문제,"public int solution(int a, int b, int n)
{
    int answer = 0;

    int own = n;

    while (own >= a)
    {
        own -= a;
        own += b;
        answer += b;
    }


    return answer;
}",https://github.com/516lkh/Algorithm,2023. 9. 12,42,2
2023. 9. 12 오전 9:19:53,김광수,Unity,81 - 기능개발,"using System;
using System.Collections.Generic;

public class Solution {
    // 턴 마다  progresses에 speed를 더해준다.
    // 앞에서 부터 배포가 가능한지 확인해서 배포한다.
    // 배포했다면 배포한 갯수를 answer에 저장한다.
    
    int[] progresses;
    int[] speeds;
    int index;
    List<int> answer = new List<int>();
    
    public int[] solution(int[] progresses, int[] speeds) 
    {
        this.progresses = progresses;
        this.speeds = speeds;
        index = 0;
        
        while (index < progresses.Length)
        {
            OneDateLater();
            Publish();
        }

        return answer.ToArray();
    }
    
    public void OneDateLater()
    {
        for(int i =index; i< progresses.Length; i++)
        {
            progresses[i] += speeds[i];
        }
    }
    
    public void Publish()
    {
        int completed = 0;
        
        while(index < progresses.Length &&  progresses[index] >= 100)
        {
            completed++;
            index++;
        }
        
        if(completed > 0)
        {
            answer.Add(completed);    
        }
    
    }
}",https://github.com/kksoo0131/Study/commit/e0c1dafdd252e25e566918f3ce3b1d0d5e9f25e4,2023. 9. 12,81,3
2023. 9. 12 오전 9:20:28,기현빈,Unity,39 - 두 개 뽑아서 더하기,"using System;
using System.Collections.Generic;
using System.Linq;

public class Solution {
    public int[] solution(int[] numbers) {
        List<int> list = new List<int>();
        for(int i = 0; i < numbers.Length; i++) {
            for(int j = i+1; j < numbers.Length; j++) {
                list.Add(numbers[i] + numbers[j]);
            }
        }
        return list.Distinct().OrderBy(x => x).ToArray();
    }
}",,2023. 9. 12,39,2
2023. 9. 12 오전 9:21:08,이소이,Unity,47 - 모의고사완전탐색,"using System;

public class Solution {
    public int[] solution(int[] answers) {
        int[] supo1 = new int[5]{1, 2, 3, 4, 5};
        int[] supo2 = new int[8]{2, 1, 2, 3, 2, 4, 2, 5};
        int[] supo3 = new int[10]{3, 3, 1, 1, 2, 2, 4, 4, 5, 5};
        
        int[] score = new int[3];
        
        for (int i = 0; i < answers.Length; i++)
        {
            if (supo1[i % 5] == answers[i])
                score[0] += 1;
            if (supo2[i % 8] == answers[i])
                score[1] += 1;
            if (supo3[i % 10] == answers[i])
                score[2] += 1;
        }
        int[] tempScore = new int[3]{score[0], score[1], score[2]};
        Array.Sort(score);
        int topScore = score[2];        
        int topScoreCount = 0;
        for (int i = 0; i < 3; i++)
            topScoreCount += (score[i] == topScore) ? 1 : 0;
        int[] answer = new int[topScoreCount];
        int index = 0;
        for (int i = 0; i < 3; i++)
        {
            if (tempScore[i] == topScore)
                answer[index++] = i + 1;
        }
        return answer;
    }
}",https://github.com/leesy015599/AlgorithmCodeKata/blob/master/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/42840.%E2%80%85%EB%AA%A8%EC%9D%98%EA%B3%A0%EC%82%AC/%EB%AA%A8%EC%9D%98%EA%B3%A0%EC%82%AC.cs,2023. 9. 12,47,2
2023. 9. 12 오전 9:22:07,이현지,Unity,48 - 소수 만들기,"using System;

class Solution
{
    public int solution(int[] nums)
    {
        int answer = 0;
        
        for (int i = 0; i < nums.Length - 2; i++)
        {
            for (int j = i + 1; j < nums.Length - 1; j++)
            {
                for (int k = j + 1; k < nums.Length; k++)
                {
                    int sum = nums[i] + nums[j] + nums[k];
                    int count = 0;
                    for (int l = 2; l < sum; l++)
                    {
                        if (sum % l == 0) count++;
                    }
                    if (count == 0) answer ++;
                }
            }
        }

        return answer;
    }
}",https://github.com/szlovelee/Programmers-Algorithm,2023. 9. 12,48,2
2023. 9. 12 오전 9:22:44,최장범,Unity,44 - 2016년,"using System;

public class Solution {
    public string solution(int a, int b) {
        string answer = """";
        
        DateTime dateValue = new DateTime(2016, a, b);
        answer  = dateValue.DayOfWeek.ToString().Substring(0, 3).ToUpper();
        return answer;
    }
}",,2023. 9. 12,44,2
2023. 9. 12 오전 9:23:05,어하림,Unity,9 - 정수 제곱근 판별,"using System;

public class Solution {
    public long solution(long n) {
        var retN =Math.Ceiling(Math.Sqrt(n));
        long answer = 0;
        
        if(n/retN == retN){
            answer = (long)Math.Pow((retN+1), 2);
        }
        else{
            answer = -1;
        }
        return answer;
    }
}",,2023. 9. 12,9,1
2023. 9. 12 오전 9:23:50,조병우,Unity,18 - 없는 숫자 더하기,"using System;

public class Solution {
    public int solution(int[] numbers) {
        int answer = 45;
         for (int i = 0; i < numbers.Length; i++)
        {
            answer -= numbers[i];
        }
        return answer;
    }
}",,2023. 9. 12,18,1
2023. 9. 12 오전 9:24:07,김민석,Unity,21 - 수박수박수박수박수박수?,"public class Solution {
    public string solution(int n) {
        int Length = n/2;
        string answer = """";

        for (int i = 0; i < Length; i++)
        {
            answer += ""수박"";
        }
        if(n%2 == 1)
        {
            answer += ""수"";
        }
        return answer;
    }
}",https://github.com/ms0753/codekata/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12922.%E2%80%85%EC%88%98%EB%B0%95%EC%88%98%EB%B0%95%EC%88%98%EB%B0%95%EC%88%98%EB%B0%95%EC%88%98%EB%B0%95%EC%88%98%EF%BC%9F/%EC%88%98%EB%B0%95%EC%88%98%EB%B0%95%EC%88%98%EB%B0%95%EC%88%98%EB%B0%95%EC%88%98%EB%B0%95%EC%88%98%EF%BC%9F.cs,2023. 9. 12,21,1
2023. 9. 12 오전 9:24:22,조범준,Unity,47 - 모의고사완전탐색,"using System;
using System.Linq;
using System.Collections.Generic;

public class Solution {
    public int[] solution(int[] answers) {
        int[] answer = new int[3];
        int[] s1 = {1,2,3,4,5};
        int[] s2 = {2,1,2,3,2,4,2,5};
        int[] s3 = {3,3,1,1,2,2,4,4,5,5};
        
        for(int i = 0; i < answers.Length; i++){
            if(answers[i]==s1[i%s1.Length]) 
                answer[0]++;
            if(answers[i]==s2[i%s2.Length]) 
                answer[1]++;
            if(answers[i]==s3[i%s3.Length]) 
                answer[2]++;
        }
        List<int> score = new List<int>();
        if(answer.Max()==answer[0]){
            score.Add(1);
        }
        if(answer.Max()==answer[1]){
            score.Add(2);
        }
        if(answer.Max()==answer[2]){
            score.Add(3);
        }
            
        return score.ToArray();
    }
}",https://github.com/KimMaYa1/BaekJoonEx/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4,2023. 9. 12,47,2
2023. 9. 12 오전 9:27:49,김호연,Unity,37 - 문자열 내 마음대로 정렬하기,"using System;
using System.Linq;

public class Solution {
    public string[] solution(string[] strings, int n) {
        string[] answer = new string[]{};
        // 문자열의 인덱스 n을 알파벳 순서대로 정렬. >> X
        // 문자열을 알파벳 순으로 정렬 후, 다시 인덱스에 맞게 정렬
        
        answer = strings.OrderBy(str => str).OrderBy(str => str[n]).ToArray();
        
        return answer;
    }
}",,2023. 9. 12,37,2
2023. 9. 12 오전 9:28:05,최수용,Unity,36 - 숫자 문자열과 영단어,"using System;

public class Solution {
    public int solution(string s) {
        int answer = 0;
        s=s.Replace(""zero"",""0"").Replace(""one"",""1"").Replace(""two"",""2"")
            .Replace(""three"",""3"").Replace(""four"",""4"").Replace(""five"",""5"")
            .Replace(""six"",""6"").Replace(""seven"",""7"").Replace(""eight"",""8"")
            .Replace(""nine"",""9"");
        int.TryParse(s,out answer);
        return answer;
    }
}",,2023. 9. 12,36,2
2023. 9. 12 오전 9:28:17,김경환,Unity,69 - 카펫,"using System;

public class Solution {
    public int[] solution(int brown, int yellow) {
        int sum = brown + yellow;
        
        for(int i = 1; i * i <= yellow; i++)
        {
            if(i * i == yellow)
            {
                if((i + 2) * (i + 2) == sum)
                    return new int[] {i + 2, i + 2};
            }
            else if(yellow % i == 0)
            {
                if((i + 2) * (yellow / i + 2) == sum)
                {
                    int x = i > yellow / i  ? i + 2 : yellow / i + 2;
                    int y = i > yellow / i  ? yellow / i + 2 : i + 2;
                    
                    return new int[] {x, y};
                }
            }
        }
        
        
        return new int[] {0, 0};
    }
    
    
}",https://github.com/kkh9700/algorithm,2023. 9. 12,69,3
2023. 9. 12 오전 9:28:19,박희원,Unity,44 - 2016년,"public string solution(int a, int b)
            {
                string answer = """";
                DateTime date = new DateTime(2016, a, b);
                answer = date.DayOfWeek.ToString();
                answer = answer.Substring(0, 3);

                return answer.ToUpper();
            }",,2023. 9. 12,44,2
2023. 9. 12 오전 9:30:20,김민태,Unity,74 - 괄호 회전하기,"using System;
using System.Collections.Generic;

public class Solution
{
    public int solution(string s)
    {
        int answer = 0;
        var stack = new Stack<char>();
        var queue = new Queue<char>();
        foreach (var item in s)
            queue.Enqueue(item);
        for (int i = 0; i < queue.Count - 1; i++)
        {
            stack.Clear();
            answer += Check(queue, stack);
            queue.Enqueue(queue.Dequeue());
        }

        return answer;
    }

    private int Check(Queue<char> queue, Stack<char> stack)
    {
        foreach (var item in queue)
        {
            if (item == '[' || item == '(' || item == '{')
                stack.Push(item);
            else if (stack.Count == 0)
                return 0;
            else if (stack.Peek() == '[' && item != ']')
                return 0;
            else if (stack.Peek() == '(' && item != ')')
                return 0;
            else if (stack.Peek() == '{' && item != '}')
                return 0;
            else
                stack.Pop();
        }
        if (stack.Count != 0)
            return 0;

        return 1;
    }
}",https://github.com/KimDaeMins/Team_2D_Dodge-Shooting-,2023. 9. 12,74,3
2023. 9. 12 오전 9:30:24,이두희,Unity,2 - 평균 구하기,"public class Solution {
    public double solution(int[] arr) {
        double answer = 0;
        for (int i = 0; i <arr. Length ; i ++);
        {
            answer += arr[i];
        }
            answer /= arr.Length;
        return answer;
    }
}",https://github.com/Dooheee,2023. 9. 12,2,1
2023. 9. 12 오전 9:31:15,김형중,Unity,38 - K번째수정렬,"using System.Collections.Generic;

public class Solution {
    public int[] solution(int[] array, int[,] commands) {
        int[] answer = new int[commands.GetLength(0)];
            
        for (var i = 0; i < commands.GetLength(0); i++)
        {
            var a = commands[i, 0];
            var b = commands[i, 1];
            var c = commands[i, 2];

            int[] list = new int[b-a+1];
            var temp = 0;
            for (var j = a; j <= b; j++)
            {
                list[temp++] = array[j - 1];
            }

            System.Array.Sort(list);
            answer[i] = list[c - 1];
        }
        
        return answer;
    }
}",,2023. 9. 12,38,2
2023. 9. 12 오전 9:31:32,손병의,Unity,27 - 행렬의 덧셈,https://school.programmers.co.kr/learn/courses/30/lessons/12950,,2023. 9. 12,27,1
2023. 9. 12 오전 9:32:32,최장범,Unity,45 - 카드 뭉치,"using System;

public class Solution
{
    public string solution(string[] cards1, string[] cards2, string[] goal)
    {
        string answer = ""Yes"";

        int idx1 = 0;
        int idx2 = 0;
        for (int i = 0; i < goal.Length; i++)
        {
            if (idx1 < cards1.Length && goal[i] == cards1[idx1])
            {
                idx1++;
                continue;
            }
            else if (idx2 < cards2.Length && goal[i] == cards2[idx2])
            {
                idx2++;
                continue;
            }
            else
            {
                answer = ""No"";
            }
        }
        return answer;
    }
}",,2023. 9. 12,45,2
2023. 9. 12 오전 9:32:51,김진성,Unity,27 - 행렬의 덧셈,"namespace Algorithm_010
{
    public class AdditionofMatrix
    {
        public int[,] solution(int[,] arr1, int[,] arr2)
        {
            int[,] answer = new int[arr1.GetLength(0), arr1.GetLength(1)]; // GetLength(행렬의 해당 차원) : n차원 인덱스의 길이를 반환한다.

            for (int i = 0; i < arr1.GetLength(0); i++)
            {
                for (int j = 0; j < arr1.GetLength(1); j++)
                {
                    answer[i, j] = arr1[i, j] + arr2[i, j];
                }
            }
            return answer;
        }
    }
}",https://github.com/GYALLERHORN/ALGORITHM,2023. 9. 12,27,1
2023. 9. 12 오전 9:33:16,이선재,Unity,64 - 신고 결과 받기,"#include <string>
#include <vector>
#include <algorithm>
#include <map>

using namespace std;

vector<int> solution(vector<string> id_list, vector<string> report, int k) {
    vector<int> answer(id_list.size());
    map<string, vector<string>> reportMap;
    
    for(int i = 0; i < report.size(); i++){
        int split = report[i].find("" "");
        string reporter = report[i].substr(0, split);
        string reported = report[i].substr(split+1);
        
        if(find(reportMap[reported].begin(), reportMap[reported].end(), reporter) == reportMap[reported].end()){
            reportMap[reported].push_back(reporter);
        }
    }
    
    for(int i = 0; i < id_list.size(); i++){      
        if(reportMap[id_list[i]].size() >= k){
            for(int j = 0; j < reportMap[id_list[i]].size(); j++){
                answer[find(id_list.begin(), id_list.end(),  reportMap[id_list[i]][j]) - id_list.begin()] += 1;
            }
        }
    }
    
    return answer;
}",https://github.com/Lyrwhitt/Algorithm/blob/main/Programmers/LEVEL1/%EC%8B%A0%EA%B3%A0%20%EA%B2%B0%EA%B3%BC%20%EB%B0%9B%EA%B8%B0,2023. 9. 12,64,3
2023. 9. 12 오전 9:33:19,차요한,Unity,46 - 과일 장수,"using System;
using System.Linq;

public class Solution {
    public int solution(int k, int m, int[] score) {
        int answer = 0;
        int index = m - 1;
        Array.Sort(score);
        Array.Reverse(score);
        
        for(int i = 0; i < score.Length / m; i++)
        {
            answer += score[index] * m;
            index += m;
        }
        return answer;
    }
}",https://github.com/HOHOJO/Algorithm_test,2023. 9. 12,46,2
2023. 9. 12 오전 9:34:29,김예준,Unity,61 - 개인정보 수집 유효기간,"using System;
using System.Linq;
using System.Collections.Generic;

public class Solution {
    public int[] solution(string today, string[] terms, string[] privacies) {
        int[] term_types = new int[26];
        List<int> answer = new List<int>();
        
        int days = Int32.Parse(today.Substring(0, 4)) * 12 * 28 + (Int32.Parse(today.Substring(5, 2)) - 1) * 28 + Int32.Parse(today.Substring(8, 2));
        
        foreach (string term in terms)
        {
            term_types[(int)(term[0] - 'A')] = Int32.Parse(term.Substring(2));
        }
        
        for (int i = 0; i < privacies.Length; i++)
        {
            int tmp = Int32.Parse(privacies[i].Substring(0, 4)) * 12 * 28 + (Int32.Parse(privacies[i].Substring(5, 2)) - 1) * 28 + Int32.Parse(privacies[i].Substring(8, 2)) + term_types[(int)(privacies[i].Last() - 'A')] * 28 - 1;
            
            if (tmp < days) answer.Add(i+1);
        }
        
        return answer.ToArray();
    }
}",,2023. 9. 12,61,3
2023. 9. 12 오전 9:35:14,김광수,Unity,82 - 프로세스,"using System;
using System.Collections.Generic;
using System.Linq;

public class Solution {
    // 큐에서 프로세스를 꺼내서 우선순위가 가장 큰지 확인
    // 이번 프로세스의 우선순위가 가장크다면 일단 실행 -> Max를 가지고있어야하나?
    // 인덱스도 같이 저장해야된다.
    public int solution(int[] priorities, int location) 
    {
        Queue<int[]> queue = new Queue<int[]>();
        
        for(int i =0; i  < priorities.Length; i++)
        {
            queue.Enqueue(new int[] {i, priorities[i]});
        }
        
        Array.Sort(priorities, (x,y) => y.CompareTo(x));
        int answer = 0;
        
        while(queue.Count >0)
        {  
            int[] temp = queue.Dequeue();
            
            if (temp[1] != priorities[answer])
            {
                queue.Enqueue(temp);
            }
            else
            {
                answer++;
                if (temp[0] == location)
                {
                    break;
                }
            }
        }
        
        return answer;
    }
}",https://github.com/kksoo0131/Study/commit/dc43e234fb4ad7afff5428d0151aba0c6b9ec18f,2023. 9. 12,82,3
2023. 9. 12 오전 9:35:16,김진규,Unity,52 - 옹알이 (2),"using System;
using System.Linq;

public class Solution {
    public int solution(string[] babbling) {
        int answer = 0;
        string[] temp = new string[4]{""aya"", ""ye"", ""woo"", ""ma""};
        string str = """";
        
        for(int i = 0; i < babbling.Length; i++)
        {
            for(int j = 0; j < temp.Length; j++)
            {
                str = temp[j] + temp[j];
                babbling[i] = babbling[i].Replace(str, ""1"");
                babbling[i] = babbling[i].Replace(temp[j], "" "");
            }
            if(babbling[i].Trim().Length == 0)
            {
                answer++;
            }
        }
        
        return answer;
    }
}",,2023. 9. 12,52,2
2023. 9. 12 오전 9:35:37,김주형,Unity,32 - 삼총사,"using System;

public class Solution 
{
    public int solution(int[] number) 
    {
        int answer = 0;
        for (int i = 0; i<number.Length; i++)
        {
            for (int j = i+1; j<number.Length; j++)
            {
                for (int k = j+1; k<number.Length; k++)
                {
                    if (number[i] + number[j] + number[k] == 0)
                        answer++;
                }
            }
        }      
        return answer;
    }
}",https://github.com/kjuhyung/Algorithm.git,2023. 9. 12,32,2
2023. 9. 12 오전 9:35:39,김하늘,Unity,39 - 두 개 뽑아서 더하기,"using System;
using System.Collections.Generic;

public class Solution 
{
    public int[] solution(int[] numbers) 
    {
        List<int> answer = new List<int> { };

        for (int i = 0; i < numbers.Length; i++)
        {
            for (int j = i + 1; j < numbers.Length; j++)
            {
                int temp = numbers[i] + numbers[j];
                if (!answer.Contains(temp))
                    answer.Add(temp);
            }
        }
        answer.Sort();
        return answer.ToArray();
    }
}",,2023. 9. 12,39,2
2023. 9. 12 오전 9:35:49,김경환,Unity,70 - 예상 대진표,"using System;

class Solution
{
    public int solution(int n, int a, int b)
    {
        int answer = 1;
        
        while(true)
        {
            if(a % 2 == 1)
                a +=1;
        
            if(b % 2 == 1)
                b +=1;
            
            if(a == b)
                break;
            
            a/=2;
            b/=2;
            
            answer++;
        }
        
        return answer;
    }
}",https://github.com/kkh9700/algorithm,2023. 9. 12,70,3
2023. 9. 12 오전 9:36:13,이현지,Unity,49 - 덧칠하기,"using System;

public class Solution {
    public int solution(int n, int m, int[] section) {
        int answer = 0;
        int filled = 0;
        for (int i = 0; i < section.Length; i++)
        {
            if (section[i] > filled)
            {
                filled = section[i] + m - 1;
                answer ++;
            }
        }
        return answer;
    }
}",https://github.com/szlovelee/Programmers-Algorithm,2023. 9. 12,49,2
2023. 9. 12 오전 9:37:15,기현빈,Unity,40 - 가장 가까운 같은 글자,"using System;
using System.Collections.Generic;

public class Solution {
    public int[] solution(string s) {
        List<int> list = new List<int>();
        Dictionary<char, int> dict = new Dictionary<char, int>();
        
        for(int i = 0 ; i < s.Length; i++) {
            if(dict.ContainsKey(s[i])) {
                list.Add(i - dict[s[i]]);
                dict[s[i]] = i;
            }
            else {
                list.Add(-1);
                dict.Add(s[i], i);
            }
        }
        
        
        return list.ToArray();
    }
}",,2023. 9. 12,40,2
2023. 9. 12 오전 9:37:43,우민규,Unity,31 - 이상한 문자 만들기,"using System;

public class Solution {
    public string solution(string s) {
        string answer = """";
        //1.s는 한개 이상의 단어'들'로 구성
        //2.각 단어는 하나 이상의 공백 문자로 구분이 '이미 되어 있다.'
        //3.각 단어의 '짝수'번째 알파벳은 대문자, '홀수'번째 알파벳은 소문자로 바꾼 문자열을 리턴 
        //4.문제엔 없지만 입력값은 각 단어의 대문자와 소문자가 랜덤하게 들어온다.(소문자 변형도 필요)
        
        
        
        //지정된 문자에 따라 문자열을 부분 문자열로 잘라주는 메서드 .Split(지정된 문자)
        //또한 .Split(지정된 문자, 제외할 문자) 를 통해 해당 배열에서 제외하고 싶은 문자도 추가할 수 있다.
        string[] temps = s.Split("" "");
        
        //단어 개수만큼 반복
        for(int i = 0; i < temps.Length; i++)
        {
            //각 단어의 길이만큼 반복
            for(int j = 0; j < temps[i].Length; j++)
            {
                //짝수인 0의 경우를 제외
                if(j == 0)
                {
                    //Char.ToUpper == 해당하는 문자를 대문자로 변경(i단어 배열의 j번째 문자)
                    //Char.ToLower 해당 문자열 소문자로 
                    answer += Char.ToUpper(temps[i][j]);
                    //해당 반복에 한하여 종료
                    continue;
                }
                //나머지 홀짝 번째의 단어 구분(0과 다르지 않음) 
                if(j % 2 == 0)
                {
                    answer += Char.ToUpper(temps[i][j]);
                }               
                else
                {
                    answer += Char.ToLower(temps[i][j]);
                }              
            }
            //위의 결과 띄어쓰기가 생략되어 에러가 발생, 각 단어 반복 종료 후 띄어쓰기를 추가
            //배열 -1 번째라면(마지막 단어라면) 해당 과정을 생략(끝부분에 공백이 추가되므로)
            if (i != temps.Length-1)
                {
                    answer += "" "";
                }
        }                 
        return answer;
    }
}",,2023. 9. 12,31,2
2023. 9. 12 오전 9:38:19,조범준,Unity,48 - 소수 만들기,"using System;

class Solution
{
    public int solution(int[] nums)
    {
        int answer = 0;
        int num;
        for(int i = 0; i < nums.Length; i++){
            for(int j = i + 1; j < nums.Length; j++){
                for(int k = j + 1; k < nums.Length; k++){
                    num = nums[i] + nums[j] + nums[k];
                    for(int l = 2; l <= num/2; l++){
                        if(num%l==0){
                            break;
                        }
                        if(l == num/2){
                            answer++;
                        }
                    }
                }
            }
        }

        return answer;
    }
}",https://github.com/KimMaYa1/BaekJoonEx/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4,2023. 9. 12,48,2
2023. 9. 12 오전 9:38:47,박민호,Unity,47 - 모의고사완전탐색,"using System;
using System.Collections.Generic;
using System.Linq;

public class Solution {
    public int[] solution(int[] answers) {
        var aArr = new int[] { 1, 2, 3, 4, 5 };
        var bArr = new int[] { 2, 1, 2, 3, 2, 4, 2, 5 };
        var cArr = new int[] { 3, 3, 1, 1, 2, 2, 4, 4, 5, 5 };

        var rArr = new int[]
        {
            answers.Where((n, idx) => n == aArr[idx % aArr.Count()]).Count(),
            answers.Where((n, idx) => n == bArr[idx % bArr.Count()]).Count(),
            answers.Where((n, idx) => n == cArr[idx % cArr.Count()]).Count()
        };

        return rArr.Select((n, idx) => new { Index = idx + 1, N = n }).Where(t => t.N == rArr.Max()).Select(t => t.Index).ToArray();
    }
}",,2023. 9. 12,47,2
2023. 9. 12 오전 9:39:01,김도현B,Unity,49 - 덧칠하기,"using System;

public class Solution {
    public int solution(int n, int m, int[] section) {
        int answer = 0;
        int sectionLength = section.Length;
        int i = 0;
        for (int index = 0; index < sectionLength; index++)
        {
            if (i < section[index])
            {
                i = (section[index] + m) - 1;
                answer++;
            }
        }
        return answer;
    }
}",https://github.com/subscriptioncat/Algorithm,2023. 9. 12,49,2
2023. 9. 12 오전 9:39:24,이홍준,Unity,46 - 과일 장수,"using System;

public class Solution {
    public int solution(int k, int m, int[] score) {
        int answer = 0;
        int temp = 0;
        Array.Sort(score);
        Array.Reverse(score);
        
        for (int i = 0; i < (score.Length / m); i++)
        {
            temp = score[(i * m) + (m - 1)] * m;
            answer += temp;
        }
        
        return answer;
    }
}",https://github.com/dlghdwns97/Study/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/unrated/135808.%E2%80%85%EA%B3%BC%EC%9D%BC%E2%80%85%EC%9E%A5%EC%88%98,2023. 9. 12,46,2
2023. 9. 12 오전 9:39:46,김경환,Unity,71 - N개의 최소공배수,"public class Solution {
    public int solution(int[] arr) {
        int answer = 0;
        
        int num = arr[0];
        
        for(int i = 1; i < arr.Length ; i++)
        {
            num = GCM(num, arr[i]);
        }
        
        return num;
    }
    
    public int GCM(int a, int b)
    {
        return a * b / GCD(a, b);
    }
    
        public int GCD(int a, int b)
    {
        while (a != 0)
        {
            int n = b % a;
            b = a;
            a = n;
        }

        return b;
    } 
}",https://github.com/kkh9700/algorithm,2023. 9. 12,71,3
2023. 9. 12 오전 9:40:10,이선재,Unity,65 - 최댓값과 최솟값,"#include <string>
#include <vector>
#include <algorithm>
#include <sstream>

using namespace std;

bool compare(string a, string b){
    return stoi(a) < stoi(b);
}

string solution(string s) {
    string answer = """";
    vector<string> sVec;
    istringstream iss(s);
    string str_buf;
    
    while(getline(iss, str_buf, ' ')){
        sVec.push_back(str_buf);
    }
    
    sort(sVec.begin(), sVec.end(), compare);
    
    answer = sVec[0] + "" "" + sVec[sVec.size()-1];
    
    return answer;
}",https://github.com/Lyrwhitt/Algorithm/blob/main/Programmers/LEVEL2/%EC%B5%9C%EB%8C%93%EA%B0%92%EA%B3%BC%20%EC%B5%9C%EC%86%9F%EA%B0%92,2023. 9. 12,65,3
2023. 9. 12 오전 9:40:23,신현주,Unity,43 - 명예의 전당 (1),"using System;
using System.Collections.Generic;
using System.Linq;

public class Solution {
    public int[] solution(int k, int[] score) {
        int[] answer = new int[score.Length];
        List<int> board = new List<int>();
        
        for(int i = 0; i < score.Length; i++)
        {
            if(board.Count == k)
            {
                if(board[0] > score[i])
                {
                    answer[i] = board[0];
                    continue;
                }
                board.RemoveAt(0);
            }
            board.Add(score[i]);
            board.Sort();
            answer[i] = board[0];
        }
        return answer;
    }
}",https://github.com/Shyunju/codeKata,2023. 9. 12,43,2
2023. 9. 12 오전 9:40:50,김진성,Unity,28 - 직사각형 별찍기,"namespace Algorithm_010
{
    public class RectangleofAsterisk
    {
        public static void Main()
        {
            String[] s;

            Console.Clear();
            s = Console.ReadLine().Split(' ');

            int a = Int32.Parse(s[0]);
            int b = Int32.Parse(s[1]);

            for (int i = 0; i < b; i++)
            {
                for (int j = 0; j < a; j++)
                {
                    Console.Write(""*"");
                }
                Console.WriteLine();
            }
        }
    }
}",https://github.com/GYALLERHORN/ALGORITHM,2023. 9. 12,28,1
2023. 9. 12 오전 9:41:12,장현교,Unity,19 - 제일 작은 수 제거하기,"public class Solution
{
    public int[] solution(int[] arr)
    {
        int[] answer = new int[] { };
        int min = arr[0];
        for (int i = 0; i < arr.Length; i++)
        {
            if (arr.Length <= 1)
            {
                answer = new int[1] { -1 };
                return answer;
            }
            if (arr[i] < min) min = arr[i];
        }
        answer = Array.FindAll(arr, x => x != min).ToArray();
        return answer;
    }
}",,2023. 9. 12,19,1
2023. 9. 12 오전 9:41:39,강성호,Unity,57 - 둘만의 암호,"using System;
using System.Buffers;
using System.Collections.Generic;
using System.ComponentModel;
using System.Linq;

public class Solution
{
	public string solution(string s, string skip, int index)
	{
		string answer = """";
		int cnt = 0;
		int plus = 1;
		int val = 0;
		List<char> ls = new List<char>();	

		for(int i = 0; i < s.Length; i++)
		{
			ls.Add(s[i]);
		}

		for(int i = 0; i < s.Length; i++)
		{
			while (cnt != index)
			{
				val = ls[i] + plus;
				if(val > 122)
				{
					ls[i] = 'a';
					plus = 0;
					val = 97;
				}
				if (skip.Contains((char)val))
				{
					plus++;
					continue;
				}
				plus++;
				cnt++;
			}
			plus = 1;
			cnt = 0;
			answer += (char)val;
		}
        return answer;
	}
}
",,2023. 9. 12,57,3
2023. 9. 12 오전 9:41:56,노재우,Unity,43 - 명예의 전당 (1),"using System;
using System.Collections.Generic;

public class Solution
{
    public int[] solution(int k, int[] score)
    {
        List<int> sorts = new List<int>(k); 
        List<int> answer = new List<int>(); 

        for (int i = 0; i < score.Length; i++)
        {
            if (sorts.Count == 0)
            {
                sorts.Add(score[i]);
                answer.Add(score[i]);
                continue;
            }

            for (int j = 0; j < sorts.Count; j++)
            {
                if (sorts[j] > score[i])
                {
                    sorts.Insert(j, score[i]);
                    break;
                }
                else if (j == sorts.Count - 1)
                {
                    sorts.Add(score[i]);
                    break;
                }
            }

            if (sorts.Count <= k)
            {
                answer.Add(sorts[0]);
                continue;
            }                             
                                       
            sorts = sorts.GetRange(sorts.Count - k, k);
            
            answer.Add(sorts[0]);
        }

        return answer.ToArray();
    }
}",,2023. 9. 12,43,2
2023. 9. 12 오전 9:42:01,박준규,Unity,37 - 문자열 내 마음대로 정렬하기,"using System.Linq;

public class Solution 
{
    public string[] solution(string[] strings, int n) 
    {
        string[] answer = new string[strings.Length];
        
        answer = strings.OrderBy(x=>x).OrderBy(x=>x[n]).ToArray();
    
        return answer;
    }
}",,2023. 9. 12,37,2
2023. 9. 12 오전 9:42:03,정재훈,Unity,27 - 행렬의 덧셈,"using System;
public class Solution {
    public int[,] solution(int[,] arr1, int[,] arr2) {
        int[,] answer = new int[arr1.GetLength(0),arr1.GetLength(1)];
            
         
            for (int i = 0; i < arr1.GetLength(0); i++)
            {
                for (int j = 0; j < arr1.GetLength(1); j++)
                {
                    answer[i, j] = arr1[i, j] + arr2[i, j];
                }
            }
            return answer;
    }
}",https://github.com/toadsam/Algorithm,2023. 9. 12,27,1
2023. 9. 12 오전 9:42:53,지민규,Unity,43 - 명예의 전당 (1),"using System;
using System.Collections.Generic;
using System.Linq;

public class Solution {
    public int[] solution(int k, int[] score) {
        int[] answer = new int[] {};
        var dailyList = new List<int>();
        var announceList = new List<int>();
        for (int i = 0; i < score.Length; i++)
        {
            if (i < k)
            {
                dailyList.Add(score[i]);
            }
            else
            {
                dailyList.Add(score[i]);
                dailyList.Remove(dailyList.OrderBy(num => num).ToList()[0]);
            }
            int least = dailyList.OrderBy(num => num).ToList()[0];
            announceList.Add(least);
            answer = announceList.ToArray();
        }
        return answer;
    }
}",,2023. 9. 12,43,2
2023. 9. 12 오전 9:43:51,유채연,Unity,51 - 로또의 최고 순위와 최저 순위,"using System;

public class Solution {
    public int[] solution(int[] lottos, int[] win_nums) {
        System.Array.Sort(lottos);
        System.Array.Sort(win_nums);
        int zeroCount =0;
        int correctCount = 0;
        int j=0;
        foreach(int i in lottos){
            if(i==0){
                zeroCount++;
                continue;
            }
            for(;j<6;j++){
                if(i<=win_nums[j]){
                    if(i==win_nums[j]) correctCount++;
                    break;
                }
            }
        }
        int[] reward = new int[] {6,6,5,4,3,2,1};
        return new int[] {reward[correctCount+zeroCount], reward[correctCount]};
    }
}",https://github.com/ychy0006/AlgorithmCodeKata,2023. 9. 12,51,2
2023. 9. 12 오전 9:44:21,김민석,Unity,22 - 내적,"using System;

public class Solution {
    public int solution(int[] a, int[] b) {
        int answer = 0;
            
        for(int i = 0; i < a.Length; i++)
        {
            answer += a[i] * b[i];
        }
            
        return answer;
    }
}",https://github.com/ms0753/codekata/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/70128.%E2%80%85%EB%82%B4%EC%A0%81/%EB%82%B4%EC%A0%81.cs,2023. 9. 12,22,1
2023. 9. 12 오전 9:44:47,김진환,Unity,45 - 카드 뭉치,"public string solution(string[] cards1, string[] cards2, string[] goal)
        {
            // 중복되는 글자가 있을 수도 있다.
            int c1 = 0;
            int c2 = 0;

            for(int i = 0; i< goal.Length; i++)
            {
                if (c1 < cards1.Length)
                {
                    if (goal[i] == cards1[c1])
                    {
                        c1++;
                        continue;
                    }
                }
                if(c2 < cards2.Length)
                {
                    if (goal[i] == cards2[c2])
                    {
                        c2++;
                        continue;
                    }
                }
                return ""No"";
            }

            return ""Yes"";
        }",https://github.com/NewRound/AlgorithmKata.git,2023. 9. 12,45,2
2023. 9. 12 오전 9:46:26,김경환,Unity,72 - 멀리 뛰기,"public class Solution {
    public long solution(int n) {
        long[] jump = new long[n + 1];
        jump[0] = 1;
        jump[1] = 1;
        
        for(int i = 2; i <= n; i++)
        {
            jump[i] = (jump[i - 1] + jump[i - 2]) % 1234567;
        }
        
        return jump[n];
    }
}",https://github.com/kkh9700/algorithm,2023. 9. 12,72,3
2023. 9. 12 오전 9:46:29,이장원,Unity,16 - 음양 더하기,"namespace codekata
{
    public class Solution
    {
        public int solution(int[] absolutes, bool[] signs)
        {
            int answer = 0;

            for (int i = 0; i < absolutes.Length; i++)
            {
                if (!signs[i])
                {
                    absolutes[i] = -absolutes[i];
                }

                answer += absolutes[i];
            }
            return answer;
        }
    }
}",,2023. 9. 12,16,1
2023. 9. 12 오전 9:49:12,이정환,Unity,40 - 가장 가까운 같은 글자,"  int n = s.Length;
        int[] answer = new int[n];
        Dictionary<char, int> lastIndex = new Dictionary<char, int>();

        for (int i = 0; i < n; i++)
        {
            char currentChar = s[i];
            if (lastIndex.ContainsKey(currentChar))
            {
                answer[i] = i - lastIndex[currentChar];
            }
            else
            {
                answer[i] = -1; 
            }
            lastIndex[currentChar] = i; 
        }

        return answer;",,2023. 9. 12,40,2
2023. 9. 12 오전 9:49:22,김준범,Unity,13 - 콜라츠 추측,"public class Solution
    {
        public int solution(int num)
        {
            long temp = num;
            int answer = 0;

            while (temp != 1)
            {
                ++answer;
                temp = temp % 2 == 0 ? temp / 2 : temp * 3 + 1;

                if (answer > 500)
                {
                    return -1;
                }
            }
            return answer;
        }
    }",,2023. 9. 12,13,1
2023. 9. 12 오전 9:49:57,김형수,Unity,14 - 서울에서 김서방 찾기,"using System;

public class Solution {
    public string solution(string[] seoul) {
        string answer = $""김서방은 {Array.IndexOf(seoul, ""Kim"")}에 있다"";
        return answer;
    }
}",https://github.com/Kim-H-S/Programmers/blob/main/%EC%84%9C%EC%9A%B8%EC%97%90%EC%84%9C%20%EA%B9%80%EC%84%9C%EB%B0%A9%20%EC%B0%BE%EA%B8%B0.cs,2023. 9. 12,14,1
2023. 9. 12 오전 9:50:44,노재우,Unity,44 - 2016년,"using System;

public class Solution
{
    public string solution(int a, int b)
    {
        string answer = """";
        DateTime taget = new DateTime(2016, a, b);

        switch (taget.DayOfWeek)
        {
            case DayOfWeek.Sunday:
                answer = ""SUN"";
                break;
            case DayOfWeek.Monday:
                answer = ""MON"";
                break;
            case DayOfWeek.Tuesday:
                answer = ""TUE"";
                break;
            case DayOfWeek.Wednesday:
                answer = ""WED"";
                break;
            case DayOfWeek.Thursday:
                answer = ""THU"";
                break;
            case DayOfWeek.Friday:
                answer = ""FRI"";
                break;
            case DayOfWeek.Saturday:
                answer = ""SAT"";
                break;
            default:
                break;
        }
        return answer;
    }
}",,2023. 9. 12,44,2
2023. 9. 12 오전 9:51:11,이주연,Unity,41 - 푸드 파이트 대회,"#include <string>
#include <vector>
#include <algorithm>

using namespace std;

string solution(vector<int> food) {
    string answer = """";
    for(int i=1;i<food.size();i++)
    {
         while(food[i]>1)
         {
             answer.push_back(i+'0');
             //emplace_back쓰면 char 못넣는다고 오류뜸
             food[i] -= 2;
         }
    }
    string r_answer = answer;
    reverse(r_answer.begin(), r_answer.end());
    return answer + ""0"" + r_answer;
}
",,2023. 9. 12,41,2
2023. 9. 12 오전 9:52:02,김도현A,Unity,12 - 두 정수 사이의 합,"public class Solution {
    public long solution(int a, int b) {
        long answer = 0;
        
        int max = (a > b) ? a : b;
        int min = (a < b) ? a : b;


        for (int i = min; i <= max; i++) {
            answer += i;
        }
        
        return answer;
    }
}",,2023. 9. 12,12,1
2023. 9. 12 오전 9:52:15,김진성,Unity,26 - 문자열 다루기 기본,"namespace Algorithm_010
{
    public class StringBasic
    {
        public bool solution(string s)
        {
            bool answer = false;

            if (s.Length == 4 || s.Length == 6)
            {
                answer = int.TryParse(s, out int i);
            }
            return answer;
        }
    }
}",https://github.com/GYALLERHORN/ALGORITHM,2023. 9. 12,26,1
2023. 9. 12 오전 9:53:00,임전혁,Unity,57 - 둘만의 암호,"using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

public class Solution {
    public string solution(string s, string skip, int index) {
        string alphabet = ""abcdefghijklmnopqrstuvwxyz"";
        List<char> list = alphabet.ToList();

        for (int i = 0; i < skip.Length; i++)
            list.Remove(skip[i]);


        StringBuilder sb = new StringBuilder();
        for (int i = 0; i < s.Length; i++)
        {
            for (int j = 0; j < list.Count; j++)
            {
                if (s[i] != list[j])
                    continue;

                if (j + index >= list.Count)
                {
                    sb.Append(list[(j + index) % list.Count]);
                    break;
                }
                else
                {
                    sb.Append(list[j + index]);
                    break;
                }

            }
        }
        
        return sb.ToString();
    }
}",https://github.com/yarogono/Algorithm_CSharp/blob/master/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/unrated/155652.%E2%80%85%EB%91%98%EB%A7%8C%EC%9D%98%E2%80%85%EC%95%94%ED%98%B8/%EB%91%98%EB%A7%8C%EC%9D%98%E2%80%85%EC%95%94%ED%98%B8.cs,2023. 9. 12,57,3
2023. 9. 12 오전 9:53:06,김진규,Unity,53 - 숫자 짝꿍,"using System;
using System.Collections.Generic;
using System.Linq;

public class Solution {
    public string solution(string X, string Y) {
        string answer = """";

        char[] digits = X.Intersect(Y).ToArray();

        if (digits.Length == 0)
        {
            answer = ""-1"";
        }
        else if (digits.Length == 1 && digits[0] == '0')
        {
            answer = ""0"";
        }
        else
        {
            List<char> answerList = new List<char>();
            foreach (char digit in digits)
            {
                int countX = X.Count(ch => ch == digit);
                int countY = Y.Count(ch => ch == digit);
                int minCount = Math.Min(countX, countY);

                for (int i = 0; i < minCount; i++)
                {
                     answerList.Add(digit);
                }
            }
           answerList.Sort();
            answerList.Reverse();
            answer = new string(answerList.ToArray());
        }

        return answer;
    }
}",,2023. 9. 12,53,2
2023. 9. 12 오전 9:54:37,김강현,Unity,24 - 문자열 내림차순으로 배치하기,"using System.Linq;
public class Solution
{
    public string solution(string s)
    {
       
        string answer = new string(s.ToCharArray().OrderByDescending(x => x).ToArray());;
        return answer;
    }
}",,2023. 9. 12,24,1
2023. 9. 12 오전 9:54:47,신현주,Unity,44 - 2016년,"public class Solution {
    public string solution(int a, int b) {
        string[] day = new string[] {""FRI"", ""SAT"", ""SUN"", ""MON"", ""TUE"", ""WED"", ""THU""};
        int[] days = new int[] {31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31};
        int total = --b;
        for(int i = 0 ; i < a-1; i++){
            total += days[i];
        }
        string answer = day[total % 7];
        return answer;
    }
}",https://github.com/Shyunju/codeKata,2023. 9. 12,44,2
2023. 9. 12 오전 9:55:02,조범준,Unity,49 - 덧칠하기,"using System;

public class Solution {
    public int solution(int n, int m, int[] section) {
        int answer = 1;
        int result = m-1;
        for(int i = 1; i < section.Length; i++){
            result -= section[i] - section[i-1];
            if(result < 0){
                answer++;
                result = m - 1;
            }
        }
        return answer;
    }
}",https://github.com/KimMaYa1/BaekJoonEx/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4,2023. 9. 12,49,2
2023. 9. 12 오전 9:55:21,김연우,Unity,13 - 콜라츠 추측,"#include <stdio.h>
#include <stdbool.h>
#include <stdlib.h>

int solution(int num) 
{
    long long n = num;
    int answer = 0;
    
    while (n != 1) 
    {
        if (n % 2 == 0) 
        {
            n /= 2;
        } else 
        {
            n = n * 3 + 1;
        }
        
        answer++;
        
        if (answer >= 500) 
        {
            return -1;
        }
    }
    
    return answer;
}
",,2023. 9. 12,13,1
2023. 9. 12 오전 9:55:54,조영오,Unity,56 - 대충 만든 자판,"using System;
using System.Text;
using System.Collections.Generic;

public class Solution {
    public int[] solution(string[] keymap, string[] targets) {
        //같은 키를 연속으로 누르면 거기에 배정된 여러 개의 문자들이 순차적으로 바뀐다.
        //다만, 특정 키를 눌러야 입력되는 문자도 있고, 같은 문자가 자판 전체에 여러 번 배정되어 있을 수도 있다.
        //거기다가 아예 배정되지 않아 입력 불가능한 문자도 있다.
        //1번 키부터 할당된 문자가 담긴 문자열 배열 keymap 과 입력하려는 문자열 targets 가 주어질 때,
        //각 문자열을 작성하기 위해 최소한 키를 몇 번 씩 눌러야 하는지를 담은 배열 answer 를 구하라.
        //입력 불가능한 문자라면 -1 이 저장된다.
        
        //각 문자별로 입력하는 데 필요한 최소한의 키 입력을 구한다.
        //각 targets 원소 문자열에서 해당 문자가 나오는 횟수를 곱한 값을 모두 더한다.
        //만약 존재하지 않는 원소가 있다면 -1.
        
        //각 문자별로 입력하는 데 필요한 최소한의 키 입력을 구한다.
        //keymap 을 처음부터 끝까지 탐색하면서 처음으로 나오는 문자라면 모두 배열에 저장한다.
        //다른 자료형은 비효율적일 듯 하다. 각 문자와 이에 대응하는 최소한의 키 입력 횟수를 저장하면서도 
        //문자를 키 값으로 사용해야 하므로 Dictionary 를 쓰는 것이 가장 좋아 보인다.
        
        Dictionary<char, int> keys = new Dictionary<char, int>();
        int[] answer = new int[targets.Length];
        
        //keymap 의 각 원소에 대해서
        foreach(string s in keymap){
            for(int i = 0 ; i < s.Length ; i++){
                //현재 반복의 문자를 키로 가지는 원소가 keys 에 존재한다면 
                if(keys.ContainsKey(s[i])){
                    //해당 문자를 입력하는 데 필요한 키 입력 횟수가 더 작은 쪽을 저장한다.
                    if(keys[s[i]] > i+1){
                        keys[s[i]] = i+1;
                    }
                }
                //현재 반복의 문자를 키로 가지는 원소가 keys 에 없다면 
                else{
                    keys.Add(s[i], i+1);
                }
            }
        }
        
        for(int i = 0 ; i < targets.Length ; i++){
            for(int j = 0 ; j < targets[i].Length ; j++){
                //현재 반복의 문자를 키로 가지는 원소가 keys 에 존재한다면 
                if(keys.ContainsKey(targets[i][j])){
                    //해당 문자를 입력하는 데 필요한 최소 키 입력 횟수만큼 answer 의 해당 원소를 증가시킨다.
                    answer[i] += keys[targets[i][j]];
                }
                //존재하지 않는다면 answer 의 해당 인덱스에 -1을 저장하고 targets 의 다음 인덱스로 넘어간다.
                else{
                    answer[i] = -1; break;
                }
            }
        }
        
        return answer;
    }
}",,2023. 9. 12,56,3
2023. 9. 12 오전 9:56:08,김도현B,Unity,50 - 기사단원의 무기,"using System;

public class Solution {
    public int solution(int number, int limit, int power) {
        int answer = 1;
        for(int i = 2; i <= number; i++)
        {
            int count = 1;
            for(int j = 1;  j <= i/2; j++)
            {
                if(i % j == 0)
                {
                    count++;
                }
            }
            if(count > limit)
            {
                count = power;
            }
            answer += count;
        }
        return answer;
    }
}",https://github.com/subscriptioncat/Algorithm,2023. 9. 12,50,2
2023. 9. 12 오전 9:56:43,김예준,Unity,62 - 달리기 경주,"#include <string>
#include <vector>
#include <map>

using namespace std;

vector<string> solution(vector<string> players, vector<string> callings) {
    vector<string> answer;
    
    map<string, int> m1;
    map<int, string> m2;
    
    for (int i = 0; i < players.size(); i++)
    {
        m1[players[i]] = i;
        m2[i] = players[i];
    }
    
    for (string call : callings)
    {
        int idx = m1[call];
        string name = m2[idx - 1];
        m2[idx] = name;
        m2[idx - 1] = call;
        m1[call] = idx - 1;
        m1[name] = idx;
    }
    
    for(auto m : m2)
    {
        answer.push_back(m.second);
    }
    
    return answer;
}",,2023. 9. 12,62,3
2023. 9. 12 오전 9:56:48,김종훈,Unity,72 - 멀리 뛰기,"public class Solution {
    public long solution(int n) {
     long answer = 0;
        
        answer = (get_fibo2(n) % 1234567);
            
        return answer;
    }
    public long get_fibo2(int n){
        if (n == 0){
            return 0;
        }
        if (n ==1){
            return 1;
        }
        
        long a = 1;
        long b = 1;
        long result = 1;
        
        for (int i = 0; i <= n - 2; i++){
            a = b;
            b = result;
            result = (long) (a + b)%1234567;
        }
        return result;
    }    
}",,2023. 9. 12,72,3
2023. 9. 12 오전 9:57:11,최수용,Unity,37 - 문자열 내 마음대로 정렬하기,"
using System;
using System.Linq;

public class Solution {
    public string[] solution(string[] strings, int n) {
        string[] answer = new string[] {};
        answer = strings.OrderBy(str => str[n])
            .ThenBy(str => str).ToArray();
        return answer;
    }
}",,2023. 9. 12,37,2
2023. 9. 12 오전 9:58:00,이소이,Unity,48 - 소수 만들기,"using System;

class Solution
{
    public int solution(int[] nums)
    {
        int[] three = new int[3];
        int primeCount = 0;
        
        for (int i = 0; i < nums.Length - 2; i++)
        {
            three[0] = nums[i];
            for (int j = i + 1; j < nums.Length - 1; j++)
            {
                three[1] = nums[j];
                for (int k = j + 1; k < nums.Length; k++)
                {
                    three[2] = nums[k];
                    if (isPrime(three))
                        primeCount++;
                }
            }
        }
        
        return primeCount;
    }
    
    private bool isPrime(int[] three)
    {
        int num = three[0] + three[1] + three[2];
        
        for (int i = 2; i * i <= num; i++)
        {
            if (num % i == 0)
                return false;
        }
        return true;
    }
}",https://github.com/leesy015599/AlgorithmCodeKata/blob/master/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12977.%E2%80%85%EC%86%8C%EC%88%98%E2%80%85%EB%A7%8C%EB%93%A4%EA%B8%B0/%EC%86%8C%EC%88%98%E2%80%85%EB%A7%8C%EB%93%A4%EA%B8%B0.cs,2023. 9. 12,48,2
2023. 9. 12 오전 9:58:59,김대민,Unity,104 - 배달,"#include <iostream>
#include <vector>
#include <cmath>
using namespace std;
vector<vector<int>> graph;
vector<long> check;
void DFS(int now, long nowDis)
{
    check[now] = nowDis;

    for (int i = 0; i < graph.size(); ++i)
    {
        if (graph[now][i] != 10001 && check[i] > nowDis + graph[now][i])
        {
            DFS(i, nowDis + graph[now][i]);
        }
    }
    return;
}
int solution(int N, vector<vector<int> > road, int K) {
    int answer = 0;

    for (int i = 0; i < N; ++i)
    {
        vector<int> a;
        a.resize(N, 10001);
        graph.push_back(a);
    }
    check.resize(N, K + 1);

    for (int i = 0; i < road.size(); ++i)
    {
        int minLoad = min(graph[road[i][0] - 1][road[i][1] - 1], road[i][2]);
        graph[road[i][0] - 1][road[i][1] - 1] = minLoad;
        graph[road[i][1] - 1][road[i][0] - 1] = minLoad;
    }

    DFS(0, 0);

    for (int i = 0; i < N; ++i)
    {
        if (check[i] <= K)
            answer++;
    }
    return answer;
}",https://github.com/KimDaeMins/CodingTest/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/Day9/12978.%E2%80%85%EB%B0%B0%EB%8B%AC,2023. 9. 12,104,4
2023. 9. 12 오전 9:59:11,지민규,Unity,44 - 2016년,"using System;

public class Solution {
    public string solution(int a, int b) {
        string answer = """";
        int[] Month = new int[12] {31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31};
        string[] Day = new string[7] {""FRI"", ""SAT"", ""SUN"", ""MON"", ""TUE"", ""WED"", ""THU"" };
        int numDM = 0;
        for (int i = 0; i < a - 1; i++)
        {
            numDM += Month[i];
        }
        numDM += (b - 1);
        Console.WriteLine(numDM);
        answer = Day[numDM % 7];
        return answer;
    }
}",,2023. 9. 12,44,2
2023. 9. 12 오전 9:59:36,김정민,Unity,65 - 최댓값과 최솟값,"public class Solution
        {
            public string solution(string s)
            {
                string[] values = s.Split(' ');

                int[] intValue = new int[values.Length];
                for (int i = 0; i < values.Length; i++)
                {
                    intValue[i] = int.Parse(values[i]);
                }

                string answer = intValue.Min() + "" "" + intValue.Max();
                return answer;
            }
        }",https://github.com/j-miiin/Algorithm_Study/blob/main/SPARTA_ALGORITHM_2023/Level3/65_MinMaxValue.cs,2023. 9. 12,65,3
2023. 9. 12 오전 10:00:04,김정민,Unity,66 - JadenCase 문자열 만들기,"public class Solution
        {
            public string solution(string s)
            {
                string answer = """";

                string tmp = """";
                for (int i = 0; i < s.Length; i++)
                {
                    if (s[i] == ' ')
                    {
                        if (tmp.Length > 0)
                        {
                            answer += tmp;
                            tmp = """";
                        }
                        answer += s[i];
                    }
                    else if (s[i] >= '0' && s[i] <= '9') tmp += s[i];
                    else
                    {
                        if (tmp.Length == 0) tmp += (s[i] + """").ToUpper();
                        else tmp += (s[i] + """").ToLower();
                    }
                }

                answer += tmp;

                return answer;
            }
        }",https://github.com/j-miiin/Algorithm_Study/blob/main/SPARTA_ALGORITHM_2023/Level3/66_JadenCase.cs,2023. 9. 12,66,3
2023. 9. 12 오전 10:00:28,김정민,Unity,67 - 이진 변환 반복하기,"public class Solution
        {
            public int[] solution(string s)
            {
                int convertCnt = 0, zeroCnt = 0;

                string curStr = s;
                while (curStr.Length != 1)
                {
                    string tmp = """";
                    for (int i = 0; i < curStr.Length; i++)
                    {
                        if (curStr[i] == '1') tmp += curStr[i];
                        else zeroCnt++;
                    }

                    int length = tmp.Length;
                    curStr = Convert.ToString(length, 2);
                    convertCnt++;
                }

                int[] answer = new int[] { convertCnt, zeroCnt };
                return answer;
            }
        }",https://github.com/j-miiin/Algorithm_Study/blob/main/SPARTA_ALGORITHM_2023/Level3/67_RepeatConvertingBinary.cs,2023. 9. 12,67,3
2023. 9. 12 오전 10:00:42,박민혁,Unity,42 - 콜라 문제,"using System;

public class Solution {
    public int solution(int a, int b, int n) {
        int answer = 0;
        int save =n;
        while(save>=a)
        {
            save=save-a+b;
            answer+=b;
        }
        return answer;
    }
}",,2023. 9. 12,42,2
2023. 9. 12 오전 10:00:49,신해준,Unity,47 - 모의고사완전탐색,"using System;
using System.Collections.Generic;

public class Solution {
    public int[] solution(int[] answers) {
        int[] pattern1 = { 1, 2, 3, 4, 5 };
        int[] pattern2 = { 2, 1, 2, 3, 2, 4, 2, 5 };
        int[] pattern3 = { 3, 3, 1, 1, 2, 2, 4, 4, 5, 5 };

        int[] scores = new int[3];

        for (int i = 0; i < answers.Length; i++) {
            if (answers[i] == pattern1[i % pattern1.Length]) {
                scores[0]++;
            }
            if (answers[i] == pattern2[i % pattern2.Length]) {
                scores[1]++;
            }
            if (answers[i] == pattern3[i % pattern3.Length]) {
                scores[2]++;
            }
        }

        int maxScore = Math.Max(scores[0], Math.Max(scores[1], scores[2]));

        List<int> winners = new List<int>();

        for (int i = 0; i < 3; i++) {
            if (scores[i] == maxScore) {
                winners.Add(i + 1);
            }
        }

        return winners.ToArray();
    }
}
",,2023. 9. 12,47,2
2023. 9. 12 오전 10:00:57,김정민,Unity,68 - 피보나치 수,"public class Solution
        {
            static int[] dp;
            public int solution(int n)
            {
                dp = new int[n + 1];

                dp[0] = 0;
                dp[1] = 1;

                int answer = Fibonacci(n);
                return answer;
            }
            static int Fibonacci(int n)
            {
                if (n == 0) return dp[n];
                if (n == 1) return dp[n];

                if (dp[n] > 0) return dp[n];

                dp[n] = (Fibonacci(n - 1) + Fibonacci(n - 2)) % 1234567;

                return dp[n];
            }
        }",https://github.com/j-miiin/Algorithm_Study/blob/main/SPARTA_ALGORITHM_2023/Level3/68_FibonacciNum.cs,2023. 9. 12,68,3
2023. 9. 12 오전 10:02:15,곽민규,Unity,13 - 콜라츠 추측,"public class Solution {
    public int solution(int num) {
        int answer = 0;
        
        while (num != 1) {
           num = num % 2 == 1 ? num * 3 + 1 : num / 2;
            answer++;
            if (answer == 500) {
                answer = -1;
                break;
            }
        }
        return answer;
    }
}",,2023. 9. 12,13,1
2023. 9. 12 오전 10:03:27,이두희,Unity,3 - 자릿수 더하기,"using System;

public class Solution {
    public int solution(int n) {
        int answer = 0;
        string temp = n.ToString();
        for (int i =0; i <temp.Length; i++)
        {
            answer += (int)Char.GetNumericValue(temp [i]);
            
        }
        return answer;
    }
}",https://github.com/Dooheee,2023. 9. 12,3,1
2023. 9. 12 오전 10:05:32,노동균,Unity,59 - 성격 유형 검사하기,"using System;
using System.Collections.Generic;
using System.Linq;
public class Solution {
    public string solution(string[] survey, int[] choices) {
        string answer = """";
        
        answer = Solve(survey,choices);
        
        return answer;
    }
    //현재 풀이
    private string Solve(string[] survey, int[] choices)
    {
        Dictionary<string,int> scoreCount = new Dictionary<string,int>();
        string[] personality = new string[]{ ""RT"",""CF"",""JM"",""AN""};
        char[] result = new char[4];
        for(int i=0;i<survey.Length;++i)
        {
            int score = 0;
            string selected = survey[i];
            int currentScore = choices[i]-4;
            if(scoreCount.TryGetValue(selected,out score))
            {
                scoreCount[selected] += currentScore;
                
            }else
            {
                scoreCount.Add(selected, currentScore);
            }
        }
        
        for(int i=0;i<personality.GetLength(0); ++i)
        {
            string sit1 = personality[i];
            string sit2 = new string(sit1.Reverse().ToArray());
            
            int sit1Score = 0;
            int sit2Score = 0;
            scoreCount.TryGetValue(sit1, out sit1Score);
            scoreCount.TryGetValue(sit2, out sit2Score);            
            //Console.WriteLine(sit1Score + "" "" + sit2Score);           
            int resultScore = sit1Score - sit2Score;
            
            if(resultScore>0)
                result[i] = sit1[1];
            else
                result[i] = sit1[0];
        }
        return new string(result);
    }
    
    
    
    
    //이전의 풀이
    private void MakeResult( Dictionary<string,int> surveySum,string[] survey, int[] choices)
    {
        for(int i=0;i<survey.Length;i++)
        {
            string style = survey[i];
            int score = choices[i]-4;
            
            int sum = 0;
            if(surveySum.TryGetValue(style,out sum))
            {
                surveySum[style] += score;
            }
            else
            {
                surveySum.Add(style,score);
            }
        }
    }
    
    private void MakeYourStyle(Dictionary<string,int> surveySum,out string answer)
    {
        string[] arStyles = {""RT"",""CF"",""JM"",""AN""};
        int[] sumResult = new int[arStyles.Length];
        char[] result= {'R','C','J','A'};
        
        for(int i=0;i<arStyles.Length;i++)
        {
            int score1=0,score2=0;
            string baseArStyle = arStyles[i];
            
            char[] reverseTemp = baseArStyle.ToCharArray();
            Array.Reverse(reverseTemp);
            string reverseArStyle = new String(reverseTemp);
            
            surveySum.TryGetValue(baseArStyle, out score1);
            
            surveySum.TryGetValue(reverseArStyle,out score2);
            
            //Console.WriteLine(""{0} : {1} {2} : {3}"",baseArStyle,score1, reverseArStyle,score2);
            sumResult[i] = score1 - score2;
        }
        
        for(int i=0;i<sumResult.Length; i++)
        {
            if(sumResult[i] > 0)
            {
                result[i] = arStyles[i][1];
            }
        }
        //foreach(KeyValuePair<string,int> a in surveySum)
        //    Console.WriteLine(""key {0}, value {1}"",a.Key, a.Value);
        
        answer = new String(result);
    }
    
}",https://github.com/shehdrbs123/Sparta/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/118666.%E2%80%85%EC%84%B1%EA%B2%A9%E2%80%85%EC%9C%A0%ED%98%95%E2%80%85%EA%B2%80%EC%82%AC%ED%95%98%EA%B8%B0,2023. 9. 12,59,3
2023. 9. 12 오전 10:07:03,노동균,Unity,60 - 바탕화면 정리,"using System;
using System.Collections;
using System.Collections.Generic;

public class Solution {
    public int[] solution(string[] wallpaper) {
        int[] answer;
        
        solve(wallpaper,out answer);

        return answer;
    }
    
    private void solve(string[] wallpaper, out int[] answer)
    {
        int minX=int.MaxValue, maxX=int.MinValue;
        int minY=minX, maxY=maxX;
        
        answer = new int[4];
        for(int i=0;i<wallpaper.Length;++i)
        {
            string line = wallpaper[i];
            for(int j=0;j<line.Length;++j)
            {
                char isFile = line[j];
                if(isFile == '#')
                {
                    minX = Math.Min(minX,j);
                    minY = Math.Min(minY,i);
                    maxX = Math.Max(maxX,j+1);
                    maxY = Math.Max(maxY,i+1);
                }
            }
        }
        
        answer[0] = minY;
        answer[1] = minX;
        answer[2] = maxY;
        answer[3] = maxX;
    }

    
    //이전 풀이
    private void GetFilesPos(string[] wallpaper,List<Tuple<int,int>> files)
    {
        if(files == null)
            files = new List<Tuple<int, int>>();

        for(int i=0;i<wallpaper.Length;i++)
        {
            string wallpaperRow = wallpaper[i];
            for(int j=0;j<wallpaperRow.Length; j++)
            {
                if(wallpaperRow[j] == '#')
                {
                    files.Add(new Tuple<int, int>(i,j));
                }
            }
        }
        //files.ForEach( x => Console.WriteLine(x.Item1 + "" "" + x.Item2));
    }

    private void GetDragRange(List<Tuple<int,int>> filesPos,int[] answer)
    {
        int xMax, xMin;
        int yMax, yMin;
        xMin = filesPos[0].Item1;
        xMax = filesPos[0].Item1+1;
        yMin = filesPos[0].Item2;
        yMax = filesPos[0].Item2+1;
        filesPos.RemoveAt(0);

        filesPos.ForEach( (x) => {
            if(x.Item1+1 > xMax)
            {
                xMax = x.Item1+1;
            }
            else if (x.Item1 < xMin)
            {
                xMin = x.Item1;
            }

            if(x.Item2+1 > yMax)
            {
                yMax = x.Item2+1;
            }
            else if(x.Item2 < yMin)
            {
                yMin = x.Item2;
            }
        });

        answer[0] = xMin;
        answer[1] = yMin;
        answer[2] = xMax;
        answer[3] = yMax;   
    }
}",https://github.com/shehdrbs123/Sparta/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/unrated/161990.%E2%80%85%EB%B0%94%ED%83%95%ED%99%94%EB%A9%B4%E2%80%85%EC%A0%95%EB%A6%AC,2023. 9. 12,60,3
2023. 9. 12 오전 10:08:28,우민규,Unity,32 - 삼총사,"using System;

public class Solution {
    public int solution(int[] number) {
        //각 학생들(number)이 있는데, 배열에서 3가지 요소를 더하였때, 0을 만들수 있는 경우의 수를 구하여야 함
        //각 정수는 -, 0 이 포함되었다.
        //number의 길이는 최소 3이상이므로 3개의 반복문을 사용하여도 좋다.
        
        int answer = 0;
        
        //i를 기준으로 배열의 모든 요소를 체크한다.
        for (int i = 0; i < number.Length; i++)
        {
            //i는 확인 했으므로 그 다음 순서
            for (int j = i + 1; j < number.Length; j++)
            {
                //j는 확인 했으므로 그 다음 순서
                for (int k = j + 1; k < number.Length; k++)
                {
                    //이러면 i에서 j와 k번째의 모든값을 더해보고, [i]의 j에서는 k의 모든 값을 더해볼 수 있다.
                    if (number[i] + number[j] + number[k] == 0)
                        answer++;
                }
            }
        }
        return answer;
    }
}",,2023. 9. 12,32,2
2023. 9. 12 오전 10:11:42,김주형,Unity,33 - 크기가 작은 부분,"using System;

public class Solution
{
    public int solution(string t, string p) 
    {
        int answer = 0;
        string[] partString = new string[t.Length];
        long[] partLong = new long[t.Length];
        long castingP = long.Parse(p);

        for (int i = 0; i<=t.Length-p.Length; i++)
        {
            partString[i] = t.Substring(i, p.Length);
            partLong[i] = long.Parse(partString[i]);
            if(partLong[i] <= castingP)
            {
                answer++;
            }
        }
        return answer;
    }
}",https://github.com/kjuhyung/Algorithm.git,2023. 9. 12,33,2
2023. 9. 12 오전 10:18:23,김규승,Unity,122 - 과제 진행하기,"#include <iostream>
#include <string>
#include <vector>
#include <algorithm>
#include <functional>

using namespace std;

struct HOMEWORK
{
    int planIndex;  //데이터 인덱스
    int minute;     //남은 시간
};

int TimeToMinute(const string& s)
{
    
    int hour{(s[0] - '0') * 10 + s[1] - '0'};
    int minute{(s[3] - '0') * 10 + s[4] - '0'};
    
    return hour * 60 + minute;
    
}

int MinuteToMinute(const string& durationMinute)
{
    int minute{0};
    
    int digit{1};
    for(int i = durationMinute.size() - 1; i >= 0; --i)
    {
        minute += (durationMinute[i] - '0') * digit;
        digit *= 10;
    }
    
    return minute;
}

int TimeToMinute(const string& start, const string& durationMinute)
{
    return TimeToMinute(start) + MinuteToMinute(durationMinute);
}

bool Functor(const vector<string>& left, const vector<string>& right)
{
    
    return left[1] < right[1];
    
}

vector<string> solution(vector<vector<string>> plans) {
    
    vector<string> answer;
    
    //시간 순으로 정렬합니다.
    sort(plans.begin(), plans.end(), bind(Functor, placeholders::_1, placeholders::_2));
    /*
    for(int i = 0; i < plans.size(); ++i)
    {
        cout << ""["" << plans[i][0] << "", "" << plans[i][1] << "", "" << plans[i][2] << ""] [Time to minute: ""
             << TimeToMinute(plans[i][1]) << "", Minute: ""
             << MinuteToMinute(plans[i][2]) << "", Total minute: ""
             << TimeToMinute(plans[i][1], plans[i][2]) << ""]"" << endl;
    }
    */
    
    //하나씩 스택에 쌓으며 처리합니다.
    vector<HOMEWORK>    stack{};
    for(int index = 0; index < plans.size(); ++index)
    {
        
        //아니면 스택의 데이터랑 비교합니다.
            
        if(!stack.empty())
        {
                
            //이전 과제와 시작 시간 차이를 구합니다.
            //이 시간 차이를 이용해 이전 과제들을 해결할 수 있다면 그 요소들을 제거합니다.
            int delta{TimeToMinute(plans[index][1]) - TimeToMinute(plans[stack.back().planIndex][1])};
            //cout << ""Start time delta: "" << delta << endl;
            for(int i = stack.size() - 1; i >= 0; --i)
            {
                
                //뺀 시간만큼 차이 시간도 감소 시킵니다.
                //뒤에서 부터 벡터의 원소를 제거하는 것이니 문제는 발생하지 않습니다.
                if(delta >= stack[i].minute)
                {
                    answer.emplace_back(plans[stack[i].planIndex][0]);
                    stack.pop_back();
                    delta -= stack[i].minute;
                }
                else
                {
                    stack[i].minute -= delta;
                    delta = 0;
                    break;
                }
                
            }
            
        }
            
        HOMEWORK homework;
        homework.planIndex  = index;
        homework.minute     = MinuteToMinute(plans[index][2]);
        stack.emplace_back(homework);
        //cout << ""Push stack: ["" << homework.planIndex << "", "" << homework.minute << ""]"" << endl;
            
    }
    
    for(int i = stack.size() - 1; i >= 0; --i)
    {
        answer.emplace_back(plans[stack[i].planIndex][0]);
    }
    
    return answer;
    
}",,2023. 9. 12,122,5
2023. 9. 12 오전 10:38:43,진우성,Unity,15 - 나누어 떨어지는 숫자,"using System.Collections.Generic;
public class Solution 
{
    public int[] solution(int[] arr, int divisor) 
    {
        int[] answer = new int[] {};
        List<int> result = new List<int>();
        for(int i = 0; i < arr.Length; i++)
        {
            if(arr[i] % divisor == 0)
            {
                result.Add(arr[i]);
            }
        }
        if(result.Count == 0)
        {
            result.Add(-1);
        }
        result.Sort();
        answer = result.ToArray();
        return answer;
    }
}",https://github.com/xjwsx/Algorithm,2023. 9. 12,15,1
2023. 9. 12 오전 10:40:15,김어진,Unity,20 - 가운데 글자 가져오기,"public class Solution {
    public string solution(string s) {
        string answer = """";
        int sNum = ((s.Length + 1) % 2) + 1;
        int sStart = (s.Length - 1) / 2;
        answer = s.Substring(sStart, sNum);
        return answer;
    }
}",https://github.com/KimEoJin24/ProgrammersCodingTests/commit/992ae61421ca020114097102082559a6c3ac1303,2023. 9. 12,20,1
2023. 9. 12 오전 10:46:28,조성훈,Unity,26 - 문자열 다루기 기본,"public class Solution 
{
    public bool solution(string s) 
    {
        bool answer = false;
        
        if(s.Length == 4 || s.Length == 6)
        {
            answer = int.TryParse(s, out int temp);
        }
        
        return answer;
    }
}",,2023. 9. 12,26,1
2023. 9. 12 오전 10:48:54,김어진,Unity,21 - 수박수박수박수박수박수?,"public class Solution {
    public string solution(int n) {
        string answer = """";
        for(int i=0; i<n; i++){
            if(i%2==0){
                answer += ""수"";
            }
            else{
                answer += ""박"";
            }
        }
        return answer;
    }
}",https://github.com/KimEoJin24/ProgrammersCodingTests/commit/6dd882191bb45c3e88bde036a3267144cec4e325,2023. 9. 12,21,1
2023. 9. 12 오전 10:59:22,이성권,Unity,13 - 콜라츠 추측,"public class Solution
    {
        public int solution(int num)
        {
            long temp = num;
            int answer = 0;
            while (temp != 1)
            {
                ++answer;
                temp = temp % 2 == 0 ? temp / 2 : temp * 3 + 1;
                if (answer > 500)
                {
                    return -1;
                }
            }
            return answer;
        }
    }",https://github.com/LeeSeongGwon,2023. 9. 12,13,1
2023. 9. 12 오전 11:07:06,김어진,Unity,22 - 내적,"using System;

public class Solution {
    public int solution(int[] a, int[] b) {
        int answer = 0;
        for(int i=0; i<a.Length; i++){
            answer += a[i] * b[i];
        }
        return answer;
    }
}",https://github.com/KimEoJin24/ProgrammersCodingTests/commit/43359bd1ff260284dc1f65a4ae73c64b67732ad0,2023. 9. 12,22,1
2023. 9. 12 오전 11:54:36,최석준,Unity,14 - 서울에서 김서방 찾기,"#include <string>
#include <vector>

using namespace std;

string solution(vector<string> seoul) {
    string answer = """";
    for(int i=0;i<seoul.size();i++){
        if(seoul[i]==""Kim"")
            answer=""김서방은 ""+to_string(i)+""에 있다"";
    }
    return answer;
}",,2023. 9. 12,14,1
2023. 9. 12 오후 12:12:34,채이환,Unity,48 - 소수 만들기,"using System;

class Solution
{
    public int solution(int[] nums)
    {
        int answer = 0;
        for (int i = 0; i < nums.Length; ++i)
            for (int j = i + 1; j < nums.Length; ++j)
                for (int k = j + 1; k < nums.Length; ++k)
                {
                    int num = nums[i] + nums[j] + nums[k];
                    bool isDivided = false;
                    for (int l = 2; l < num; ++l)
                        if (num % l == 0)
                        {
                            isDivided = true;
                            break;
                        }
                    if (isDivided == false)
                        ++answer;
                }

        return answer;
    }
}",,2023. 9. 12,48,2
2023. 9. 12 오후 12:12:55,채이환,Unity,49 - 덧칠하기,"using System;

public class Solution {
    public int solution(int n, int m, int[] section) {
        int answer = 0;
        int left = 0, right = 0;
        
        for (int i = 0; i < section.Length; )
        {
            left = section[i];
            for (int j = i + 1; j < section.Length; ++j)
            {
                right = section[j];
                //Console.WriteLine($""check {left} ~ {right}"");
                if (right - left >= m)
                {
                    i = j;
                    ++answer;
                    //Console.WriteLine($""paint {left} ~ {section[j-1]}/{right}"");
                    break;
                }
                else if (j == section.Length-1)
                {
                    i = j + 1;
                    ++answer;
                    //Console.WriteLine($""paint {left} ~ {right}"");
                }
            }
            if (i < section.Length && left == section[i])
            {
                ++answer;
                //Console.WriteLine($""paint {left}"");
                ++i;
            }
        }
        return answer;
    }
}",,2023. 9. 12,49,2
2023. 9. 12 오후 3:09:36,안소정,Unity,24 - 문자열 내림차순으로 배치하기,"using System;

public class Solution {
    public string solution(string s) {
        string answer = """";
        Char[] chr = s.ToCharArray();
        Array.Sort(chr);
        Array.Reverse(chr);
        return new string (chr);
    }
}",,2023. 9. 12,24,1
2023. 9. 12 오후 3:37:21,안소정,Unity,25 - 부족한 금액 계산하기,"using System;

class Solution
{
    public long solution(int price, int money, int count)
    {
        long pay = 0; //지불할 돈
        long answer = 0;
        
        for (int i=0;i<=count;i++)
        {
            pay += i*price;
            if (pay > money)
            {
                answer = pay - money;
            }
            else answer = 0;
        }
        return answer;
    }
}",,2023. 9. 12,25,1
2023. 9. 12 오후 3:58:31,김광수,Unity,83 - 피로도,"using System;
using System.Collections.Generic;

public class Solution {
    // 최소 피로도, 소모 피로도
    // 던전 리스트를 순회하면서 탐험할 수 있는 최대 던전수를 return
    
    // 던전 탐험의 순서에 따라서 결과가 달라진다.
    
    // 최소 피로도가 크고 소모 피로도가 작을수록 우선순위가 높아야함
    
    // 던전의 개수는 8이하임 모든 순서를 고려해도 될듯?
    
    
    // n개의 던전에서 최소 피로도가 k보다 낮은 던전중 하나를 선택해서 탐험.
    
    // 재귀, 필요한것 1. 현재 피로도, 2. 남은 던전 리스트, 3. 탐험한 던전의 수
    
    // 최소피로도를 만족못하는것들은 버림
    
    int answer = 0;
    public int solution(int k, int[,] dungeons) 
    {   
        Queue<int[]> queue = new Queue<int[]>();
        
        for(int i =0; i< dungeons.GetLength(0); i++)
        {
            queue.Enqueue(new int[]{dungeons[i,0], dungeons[i,1]});
        }
        
        RecursiveDungeon(0, k, queue);
        
        return answer;
        
    }
    
    public void RecursiveDungeon(int num,int k, Queue<int[]> queue)
    {
        Queue<int[]> tempQueue = new Queue<int[]>();
        
        // queue를 깊은복사.
        foreach (int[] arr in queue)
        {
            tempQueue.Enqueue(arr);
        }
        
               
        int length = tempQueue.Count;
        
        // queue의 요소 갯수만큼 반복
        // 다음 재귀에는 각각의 요소를 선택하고 남은 큐를 복사해서 사용하게됨
        for(int i =0; i <length; i++)
        {
            int[] temp = tempQueue.Dequeue();
            
            if(temp[0] <= k)
            {
                RecursiveDungeon(num+1, k-temp[1], tempQueue);
                tempQueue.Enqueue(temp);
            }
        }
        
                // 길이가 0이라면 끝
        if(tempQueue.Count == 0)
        {
            answer = Math.Max(answer, num);
            return;
        }
        
    }
}",https://github.com/kksoo0131/Study/commit/c01a1e6682fcc648004900169fb2b5a7b8e377dc,2023. 9. 12,83,4
2023. 9. 12 오후 4:56:30,이진형,AI,32 - 삼총사,"import itertools
def solution(number):
    it = itertools.combinations(number, 3)
    count=0
    for num in it:
        if sum(num)==0:
            count+=1
    return count",,2023. 9. 12,32,2
2023. 9. 12 오후 5:15:16,이진형,AI,33 - 크기가 작은 부분,"def solution(t, p):
    a=[1 for i in range(len(t)-len(p)+1) if int(t[i:i+len(p)])<=int(p)]
    return len(a)",,2023. 9. 12,33,2
2023. 9. 12 오후 5:36:45,이진형,AI,34 - 최소직사각형,"import functools
def submax(lis):
    return max(lis)
def submin(lis):
    return min(lis)
def solution(sizes):
    a=max(map(submax,sizes))
    b=max(map(submin,sizes))
    return a*b",,2023. 9. 12,34,2
2023. 9. 12 오후 8:10:11,문현우,Unity,31 - 이상한 문자 만들기,"using System;

public class Solution {
    public string solution(string s) {
        string[] answerArray = s.Split(new char[] { ' ' }, StringSplitOptions.None);
        
        for(int i = 0; i < answerArray.Length; i++) {
            for(int j = 0; j < answerArray[i].Length; j++) {
                if(j % 2 == 0) {
                    answerArray[i] = answerArray[i].Substring(0, j) + char.ToUpper(answerArray[i][j]) 
                        + answerArray[i].Substring(j + 1);
                }
                else if(j % 2 == 1){
                    answerArray[i] = answerArray[i].Substring(0,j) + char.ToLower(answerArray[i][j]) 
                        + answerArray[i].Substring(j + 1);
                }
            }
        }
        
        string answer = string.Join("" "", answerArray);
        return answer;
    }
}",https://github.com/Munch310/Algorithm-Csharp/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12930.%E2%80%85%EC%9D%B4%EC%83%81%ED%95%9C%E2%80%85%EB%AC%B8%EC%9E%90%E2%80%85%EB%A7%8C%EB%93%A4%EA%B8%B0,2023. 9. 12,31,2
2023. 9. 12 오후 9:15:04,이솔,AI,37 - 문자열 내 마음대로 정렬하기,"def solution(strings, n):
    strings = sorted(strings)
    answer = sorted(strings, key=lambda x:x[n])
    return answer",,2023. 9. 11,37,2
2023. 9. 12 오후 9:15:41,이솔,AI,38 - K번째수정렬,"def solution(array, commands):
    answer = []

    for c in commands:
        arr = sorted(array[c[0]-1:c[1]])
        answer.append(arr[c[2]-1])

    return answer",,2023. 9. 11,38,2
2023. 9. 12 오후 9:16:09,이솔,AI,39 - 두 개 뽑아서 더하기,"from itertools import *

def solution(numbers):
    comb = list(combinations(numbers,2))
    answer = sorted(set([sum(i) for i in comb]))
    return answer",,2023. 9. 11,39,2
2023. 9. 12 오후 9:38:31,이솔,AI,40 - 가장 가까운 같은 글자,"def solution(s):
    answer = [-1]
    for i in range(1,len(s)):
        string = s[:i]
        index = [j for j, c in enumerate(string) if c == s[i]]
        if index == []:
            answer.append(-1)
        else:
            answer.append(i - max(index))    

    return answer",,2023. 9. 12,40,2
2023. 9. 12 오후 9:38:52,이솔,AI,41 - 푸드 파이트 대회,"def solution(food):
    answer_l = ''
    for i in range(len(food)):
        if food[i] <= 1:
            continue
        else:
            num = food[i] // 2
            answer_l +=  str(i) * num
    answer_r = answer_l[::-1]
    return answer_l + '0' + answer_r",,2023. 9. 12,41,2
2023. 9. 12 오후 9:39:18,이솔,AI,42 - 콜라 문제,"def solution(a, b, n):
    answer = 0

    while n >= a:    
        r, c = divmod(n, a)
        result = r * b
        answer += result
        n = c + result
        
    return answer",,2023. 9. 12,42,2
2023. 9. 13 오전 7:42:35,이도현,Unity,13 - 콜라츠 추측,"public class Solution {
    public int solution(long num) {
        int count = 0;

        if (num == 1)
            return 0;
        while (num!=1)
        {
            if (num == 1)
                break;
            else if (count >= 500)
                return -1;

            if (num % 2 == 0)
                num /= 2;
            else
                num = num * 3 + 1;

            count++;
        }

        return count;
    }
}",,2023. 9. 12,13,1
2023. 9. 13 오전 7:54:46,이도현,Unity,15 - 나누어 떨어지는 숫자,"using System;
using System.Collections.Generic;

public class Solution {
    public int[] solution(int[] arr, int divisor) {
        List<int> list = new List<int>();

        foreach(int i in arr)
        {
            if (i % divisor == 0 && !(list.Contains(i)))
                list.Add(i);
        }

        if (list.Count == 0)
            list.Add(-1);

        list.Sort();
        
        return list.ToArray();
    }
}",,2023. 9. 13,15,1
2023. 9. 13 오전 9:06:01,김명식,Unity,32 - 삼총사,"using System;

public class Solution {
    public int solution(int[] number) {
        int answer = 0;
        for(int i = 0; i < number.Length; i++)
        {
            for(int j = i + 1; j < number.Length; j++)
            {
                for(int k = j + 1; k < number.Length; k++)
                {
                    if(number[i] + number[j] + number[k] == 0)
                    {
                        answer++;
                    }
                }
            }
        }
        return answer;
    }
}",https://github.com/D0ryeon/Algorithm-Code-Kata,2023. 9. 13,32,2
2023. 9. 13 오전 9:06:12,박도현,Unity,17 - 핸드폰 번호 가리기,"public class Solution {
    public string solution(string phone_number) {
        string answer = """";
        int cut = phone_number.Length-4;
        for(int i = 0; i < cut; i++)
        {
            answer += ""*"";
        }
        answer += phone_number.Substring(cut);
        return answer;
    }
}",,2023. 9. 13,17,1
2023. 9. 13 오전 9:12:31,김광수,Unity,84 - 타겟 넘버,"using System;
using System.Collections.Generic;

public class Solution {
    
    // numbers를 순회하면서
    
    // resultQueue에 더하거나 뺀값을 저장한다.
    public int solution(int[] numbers, int target) 
    {
        int answer =0;
        Queue<int> resultQueue = new Queue<int>();
        resultQueue.Enqueue(0);
        
        foreach(int number in numbers)
        {
            int count = resultQueue.Count;
            
            for(int i =0; i<count; i++)
            {
                int result = resultQueue.Dequeue();
                resultQueue.Enqueue(result - number);
                resultQueue.Enqueue(result + number);
            }

        }
        
        foreach(int i in resultQueue)
        {
            answer += i == target ? 1 : 0;
        }
        
        return answer;
    }
}",https://github.com/kksoo0131/Study/commit/290636ba718343d2de0f61e80a4b825a7cb6a19f,2023. 9. 13,84,4
2023. 9. 13 오전 9:12:52,이세진,Unity,29 - 최대공약수와 최소공배수,"using System;
public class Solution {
    public int[] solution(int n, int m) {
        int[] answer = new int[] {0,0};
                
        for (int i = 1; i <= n; i++)
        {
            if(n % i == 0)
            {
                for(int j = 1; j <= m ; j++)
                {
                    if(i < j)
                    {
                        break;
                    }
                    if(m % j == 0 && i == j)
                    {
                        answer[0] = j;
                    }
                }
            }
        }
        
        answer[1] =  (n * m) /  answer[0];
        
        return answer;
    }
}",,2023. 9. 13,29,1
2023. 9. 13 오전 9:13:00,이현지,Unity,50 - 기사단원의 무기,"using System;

public class Solution 
{
    public int solution(int number, int limit, int power) 
    {
        int answer = 0;
        for (int n = 1; n < number + 1; n ++)
        {
            int divisor = 1;
            int half = (n % 2 ==0)? n / 2 : (n - 1) / 2;
            for (int i = 1; i < half + 1; i++)
            {
                if (n % i == 0)
                {
                    ++ divisor;
                }
            }

            if (divisor > limit) answer += power;
            else answer += divisor;
        }
        return answer;
    }
}",https://github.com/szlovelee/Programmers-Algorithm,2023. 9. 13,50,2
2023. 9. 13 오전 9:14:17,곽민규,Unity,14 - 서울에서 김서방 찾기,"public class Solution {
    public string solution(string[] seoul) {
        string answer = """";
        
        for (int i = 0; i < seoul.Length; i++) {
            if (seoul[i] == ""Kim"") {
                answer = $""김서방은 {i}에 있다"";
                break;
            }
        }
        return answer;
    }
}",,2023. 9. 13,14,1
2023. 9. 13 오전 9:16:07,김민태,Unity,75 - 연속 부분 수열 합의 개수,"using System;
using System.Collections.Generic;

public class Solution
{
    public int solution(int[] elements)
    {
        int n = elements.Length;
        HashSet<int> sum = new HashSet<int>();
        int[,] dp = new int[n, n+ 1];
        for(int i = 0; i < n; i++)
        {
            dp[i, 1] = elements[i];
            sum.Add(elements[i]);
        }
        for(int i = 2; i <= n; ++i)
        {
            for(int j = 0; j < n; ++j)
            {
                dp[j, i] = dp[j, i - 1] + elements[(i + j - 1) % n];
                sum.Add(dp[j, i]);
            }
        }

        return sum.Count;
    }
}",https://github.com/rlaalsxo/CodingTest,2023. 9. 13,75,3
2023. 9. 13 오전 9:16:15,최장범,Unity,46 - 과일 장수,"using System;
using System.Linq;

public class Solution
{
    public int solution(int k, int m, int[] score)
    {
        int answer = 0;

        Array.Sort(score);

        int count = 1;
        int min = 9999;
        foreach (var item in score.Reverse())
        {
            if (min > item)
                min = item;

            if (count == m)
            {
                count = 0;
                answer += min * m;
                min = 9999;
            }
            count++;
        }
        return answer;
    }
}",,2023. 9. 13,46,2
2023. 9. 13 오전 9:17:56,신우석,Unity,70 - 예상 대진표,"using System;

class Solution
{
    public int solution(int n, int a, int b)
    {
        int answer = 1;
        int min = Math.Min(a, b);
        int max = Math.Max(a, b);

        while (true) {
            min = (min + 1) / 2;
            max = (max + 1) / 2;
            if ( max == min ) return answer;
            answer++;
        }

        return answer;
    }
}",https://github.com/seoksii/AlgorithmCodeKata/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv2/12985.%E2%80%85%EC%98%88%EC%83%81%E2%80%85%EB%8C%80%EC%A7%84%ED%91%9C,2023. 9. 13,70,3
2023. 9. 13 오전 9:23:05,최장범,Unity,47 - 모의고사완전탐색,"using System;
using System.Linq;

public class Solution
{
    public int solution(int k, int m, int[] score)
    {
        int answer = 0;

        Array.Sort(score);

        int count = 1;
        int min = 9999;
        foreach (var item in score.Reverse())
        {
            if (min > item)
                min = item;

            if (count == m)
            {
                count = 0;
                answer += min * m;
                min = 9999;
            }
            count++;
        }
        return answer;
    }
}",,2023. 9. 13,47,2
2023. 9. 13 오전 9:23:21,김정민,Unity,69 - 카펫,"public class Solution
        {
            public int[] solution(int brown, int yellow)
            {
                int carpet = brown + yellow;
                int resultX = 0, resultY = 0;
                bool isBreak = false;

                for (int i = 1; i <= carpet / 2; i++)
                {
                    for (int j = 1; j <= i; j++)
                    {
                        if (i * j > carpet) break;
                        if (i * j == carpet && (i - 2)*(j - 2) == yellow)
                        {
                            resultX = i;
                            resultY = j;
                            isBreak = true;
                            break;
                        }
                    }
                    if (isBreak) break;
                }

                int[] answer = new int[] { resultX, resultY };
                return answer;
            }
        }",https://github.com/j-miiin/Algorithm_Study/blob/main/SPARTA_ALGORITHM_2023/Level3/69_Carpet.cs,2023. 9. 13,69,3
2023. 9. 13 오전 9:24:29,신우석,Unity,71 - N개의 최소공배수,"using System;

public class Solution {
    int GCD (int a, int b) {
        if (a % b == 0) return b;
        return GCD (b, a % b);
    }
    
    int LCM (int a, int b) {
        int min = Math.Min(a, b);
        int max = Math.Max(a, b);
        return min * max / GCD(max, min);
    }
    
    public int solution(int[] arr) {
        int answer = 1;
        foreach (int i in arr)
            answer = LCM(answer, i);
        return answer;
    }
}",https://github.com/seoksii/AlgorithmCodeKata/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv2/12953.%E2%80%85N%EA%B0%9C%EC%9D%98%E2%80%85%EC%B5%9C%EC%86%8C%EA%B3%B5%EB%B0%B0%EC%88%98,2023. 9. 13,71,3
2023. 9. 13 오전 9:25:22,김민석,Unity,23 - 약수의 개수와 덧셈,"using System;

public class Solution {
    public int solution(int left, int right) 
    {
        int answer = 0;

        for(int i = left; i <= right; i++)
        {
            int count = 0;
            for(int j = 1; j <= i; j++)
            {
                if(i%j == 0) count++;
            }
            if(count%2 == 0) answer += i;
            else answer -= i;
        }
        return answer;
    }
}",https://github.com/ms0753/codekata/blob/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/77884.%E2%80%85%EC%95%BD%EC%88%98%EC%9D%98%E2%80%85%EA%B0%9C%EC%88%98%EC%99%80%E2%80%85%EB%8D%A7%EC%85%88/%EC%95%BD%EC%88%98%EC%9D%98%E2%80%85%EA%B0%9C%EC%88%98%EC%99%80%E2%80%85%EB%8D%A7%EC%85%88.cs,2023. 9. 13,23,1
2023. 9. 13 오전 9:25:46,노재우,Unity,45 - 카드 뭉치,"using System;

public class Solution
{
    public string solution(string[] cards1, string[] cards2, string[] goal)
    {
        int collectGoal = 0;
        int usedCards1 = 0;
        int usedCards2 = 0;
        int count;
        string answer = ""No"";

        for (int i = collectGoal; i < goal.Length; i++)
        {
            count = 0;


            for (int j = usedCards1; j < cards1.Length; j++)
            {
                if (goal[collectGoal] == cards1[usedCards1])
                {
                    count++;
                    usedCards1++;
                    collectGoal++;
                    if (collectGoal == goal.Length)
                        return ""Yes"";
                    continue;
                }
                if (count < 1)
                {
                    answer = ""No"";
                }
                break;
            }
            count = 0;
            for (int j = usedCards2; j < cards2.Length; j++)
            {
                if (goal[collectGoal] == cards2[usedCards2])
                {
                    count++;
                    usedCards2++;
                    collectGoal++;
                    if (collectGoal == goal.Length)
                        return ""Yes"";
                    continue;
                }
                if (count < 1)
                {
                    answer = ""No"";
                }
                break;
            }

        }
        if (collectGoal == goal.Length)
        {
            answer = ""Yes"";
        }

        return answer;
    }
}",,2023. 9. 13,45,2
2023. 9. 13 오전 9:26:28,김강현,Unity,25 - 부족한 금액 계산하기,"using System;

class Solution
{
    public long solution(int price, int money, int count)
    {
        long pricesum =0;
        
        for(int i = 1 ; i <= count ; i++)
        {
            pricesum += price*i;
        }
            long result = (long)money - pricesum;
            if(result < 0)
            {
                    result *= -1;
            }
           else if(result >= 0)
           {
               result = 0;
           }
        return result;
    }
}",,2023. 9. 13,25,1
2023. 9. 13 오전 9:26:54,정재훈,Unity,28 - 직사각형 별찍기,"using System;

public class Example
{
    public static void Main()
    {
        String[] s;

        Console.Clear();
        s = Console.ReadLine().Split(' ');

        int a = Int32.Parse(s[0]);
        int b = Int32.Parse(s[1]);
        for(int i = 0; i < b; i++ )
        {
            for(int j = 0; j<a; j++)
            {
                Console.Write(""*"");
            }
            Console.WriteLine("" "");
        }

       
    }
}",https://github.com/toadsam/Algorithm,2023. 9. 13,28,1
2023. 9. 13 오전 9:27:16,이두희,Unity,4 - 약수의 합,"     public int solution(int n)
     {
         int answer = 0;

         for(int i = 1; i <= n/2; i++)
         {
             if (n%1 == 0)
             {
                 answer += i;

             }
         }
         return answer + n;

     }
     
 }",https://github.com/Dooheee,2023. 9. 13,4,1
2023. 9. 13 오전 9:27:40,우성훈,Unity,12 - 두 정수 사이의 합,"public class Solution {
    public long solution(int a, int b) {
        long answer = 0;
        
        //a가 b보다 작으면 a부터 b까지 1씩 더한 값 answer에 더함
        if( a < b)
        {
            for(int i=a; i<=b; i++)
            {
                answer += i;
            }    
        }
        //a가 b보다 크면 a부터 b까지 1씩 뺀 값 answer에 더함
        else
        {
            for(int i=a; i>=b; i--)
            {
                answer += i;
            }    
        }
        
        return answer;
    }
}",,2023. 9. 13,12,1
2023. 9. 13 오전 9:28:02,김진규,Unity,54 - 체육복,"using System;
using System.Linq;

public class Solution {
    public int solution(int n, int[] lost, int[] reserve) {
        int[] students = new int[n];
        for (int i = 0; i < n; i++) {
            students[i] = 1;
        }
        
        foreach (int l in lost) {
            students[l - 1]--;
        }
        
        foreach (int r in reserve) {
            students[r - 1]++;
        }
        
        for (int i = 0; i < n; i++) {
            if (students[i] == 0) {
                if (i - 1 >= 0 && students[i - 1] == 2) {
                    students[i]++;
                    students[i - 1]--;
                } else if (i + 1 < n && students[i + 1] == 2) {
                    students[i]++;
                    students[i + 1]--;
                }
            }
        }
        
        int answer = students.Count(x => x > 0);
        
        return answer;
    }
}",,2023. 9. 13,54,2
2023. 9. 13 오전 9:30:23,김도현B,Unity,51 - 로또의 최고 순위와 최저 순위,"using System;

public class Solution {
    public int[] solution(int[] lottos, int[] win_nums) {
         int[] answer = new int[2];
         int count = 0;
         int zeroCount = 0;
         for(int i = 0; i < lottos.Length; i++)
         {
             if(lottos[i] == 0)
             {
                 zeroCount++;
             }
             else
             {
                for(int j = 0; j < win_nums.Length; j++)
                {
                    if(win_nums[j] == lottos[i]){
                        count++;
                        break;
                    }
                }
             }
         }
         answer[0] = 7- (count + zeroCount) == 7 ? 6 : 7 - (count + zeroCount);
         answer[1] = 7- count == 7 ? 6 : 7 - count;
        return answer;
    }
}",https://github.com/subscriptioncat/Algorithm,2023. 9. 13,51,2
2023. 9. 13 오전 9:30:51,김형중,Unity,41 - 푸드 파이트 대회,"using System;
using System.Linq;

public class Solution {
    public string solution(int[] food) {
        string answer = """";
        string str = """";
        
        for (int i = 0; i < food.Length; i++)
        {
            for (int j = 0; j < food[i] / 2; j++)
            {
                answer += i.ToString();
            }
        }
        str = String.Concat(answer.Reverse());
        answer += ""0"" + str;
        return answer;
    }
}",,2023. 9. 13,41,2
2023. 9. 13 오전 9:31:10,권선영,Unity,14 - 서울에서 김서방 찾기,"using System;

public class Solution {
    public string solution(string[] seoul) 
   {    
        return new string($""김서방은 {Array.IndexOf(seoul, ""Kim"")}에 있다"");    
    }
}",https://github.com/Tealss,2023. 9. 13,14,1
2023. 9. 13 오전 9:31:48,한병권,Unity,61 - 개인정보 수집 유효기간,"using System;
using System.Collections.Generic;

public class Solution {
    public int[] solution(string today, string[] terms, string[] privacies) {
        List<int> temp = new List<int>();

        string[] strArray = today.Split(""."");
        int[] todays = new int[3];
        
        for(int i = 0; i < strArray.Length; i++)
        {
            todays[i] = int.Parse(strArray[i]);
        }
        
        List<string[]> t = new List<string[]>();
        
        for(int i =0; i < terms.Length; i++)
        {
            t.Add(terms[i].Split("" ""));
        }
        
        for(int i = 0; i < privacies.Length; i++)
        {
            string term = privacies[i].Substring(11);
            string[] privacie = privacies[i].Substring(0,10).Split(""."");
            int[] p = new int[3];
            for(int a = 0; a < privacie.Length; a++)
            {
                p[a] = int.Parse(privacie[a]);
            }

            int index = t.FindIndex(item => item[0] == term );
           
            int b =  int.Parse(t[index][1]);

            p[2] = p[2] - 1;           
            p[1] = p[1] + b;
            
            Console.WriteLine(p[1]);
            
            if(p[1] > 12)
            {
                p[0] = p[0] + (p[1] - 1)/12;
                p[1] = p[1] % 12 == 0 ? 12 : p[1] % 12;
            }

            if(p[2] == 0)
            {
                p[2] = 28;
                p[1] = p[1] - 1;
            }

            if(p[1] == 0)
            {
                p[1] = 12;
                p[0] = p[0] - 1;
            }
            
            if(todays[0] == p[0])
            {
                if(todays[1] == p[1])
                {
                    if(todays[2] > p[2])
                    {
                        temp.Add(i+1); 
                    }
                }
                else if(todays[1] > p[1])
                {
                    temp.Add(i+1); 
                }
            }
            else if(todays[0] > p[0])
            {
               temp.Add(i+1); 
            }
        }
        int[] answer = temp.ToArray();
        return answer;
    }
}",https://github.com/hbg9212/AlgorithmCodekata,2023. 9. 13,61,3
2023. 9. 13 오전 9:33:01,김호연,Unity,38 - K번째수정렬,"using System;

public class Solution {
    public int[] solution(int[] array, int[,] commands) {
        // 이차원 배열의 요소로 array를 자른 후 정렬, k번째 수 저장
        // i = [n, 0], j = [n, 1], k = [n, 3]
        
        //commands 2차원 배열의 행 갯수만큼 answer 배열 초기화
        int cLength = commands.GetLength(0);
        int[] answer = new int[cLength];
        
        for(int n = 0; n < cLength; n++)
        {
            int i = commands[n,0];
            int j = commands[n,1];
            int k = commands[n,2];
            
            //i 번째 부터 j 번째 까지 자른 배열 선언
            int[] temp = new int[j - i + 1];
            
            //자른 배열 크기 만큼 반복하여 자른 i 번째 부터 숫자 대입
            for(int a = 0; a<temp.Length; a++)
            {
                temp[a] = array[a+i-1];
            }
            
            //자른 배열 정렬
            Array.Sort(temp);
            
            //k 번째 숫자를 answer배열에 대입
            answer[n] = temp[k-1];
        }
        
        return answer;
    }
}",,2023. 9. 13,38,2
2023. 9. 13 오전 9:33:02,김하늘,Unity,40 - 가장 가까운 같은 글자,"using System;

public class Solution 
{
    public int[] solution(string s) 
    {
        int[] answer = new int[s.Length];
        int index = -1;
        
        for(int i = 0; i < s.Length; i++)
        {
            index = -1;
            for(int j = i - 1; j >= 0; j--)
            {
                if(s[i] == s[j])
                {
                    index = i - j;
                    break;
                }
            }
            answer[i] = index;
        }
        return answer;
    }
}",,2023. 9. 13,40,2
2023. 9. 13 오전 9:33:19,차요한,Unity,47 - 모의고사완전탐색,"using System;
using System.Collections.Generic;
using System.Linq;
public class Solution {
    public int[] solution(int[] answers) {
          int[] first = new int[] { 1, 2, 3, 4, 5 };
            int[] second = new int[] { 2, 1, 2, 3, 2, 4, 2, 5 };
            int[] third = new int[] { 3, 3, 1, 1, 2, 2, 4, 4, 5, 5 };

            Dictionary<int, int> counts = new Dictionary<int, int>
            {
                { 1, 0 },
                { 2, 0 },
                { 3, 0 }
            };

            for (int i = 0; i < answers.Length; i++)
            {
                    counts[1] += first[i % first.Length] == answers[i] ? 1 : 0;
                counts[2] += second[i % second.Length] == answers[i] ? 1 : 0;
                counts[3] += third[i % third.Length] == answers[i] ? 1 : 0;
            }

            int max = counts.Select(x => x.Value).Max();
            var answer = counts.Where(w => w.Value == max).Select(s => s.Key).ToArray();

            return answer;
    }
}",https://github.com/HOHOJO/Algorithm_test,2023. 9. 13,47,2
2023. 9. 13 오전 9:33:19,신해준,Unity,48 - 소수 만들기,"using System;

public class Solution {
    public int solution(int[] nums) {
        int answer = 0;
        
        // 가능한 3개의 수의 조합을 찾는 이중 반복문
        for (int i = 0; i < nums.Length - 2; i++) {
            for (int j = i + 1; j < nums.Length - 1; j++) {
                for (int k = j + 1; k < nums.Length; k++) {
                    int sum = nums[i] + nums[j] + nums[k];
                    
                    // 더한 결과가 소수인지 확인
                    if (IsPrime(sum)) {
                        answer++;
                    }
                }
            }
        }
        
        return answer;
    }
    
    // 주어진 숫자가 소수인지 확인하는 함수
    private bool IsPrime(int num) {
        if (num < 2) {
            return false;
        }
        
        for (int i = 2; i * i <= num; i++) {
            if (num % i == 0) {
                return false;
            }
        }
        
        return true;
    }
}
",,2023. 9. 13,48,2
2023. 9. 13 오전 9:35:22,유채연,Unity,52 - 옹알이 (2),"using System;

public class Solution {
    public int solution(string[] babbling) {
        int answer = 0;
        string temp = """";
        string prev = """";
        foreach(string s in babbling){
            temp = String.Copy(s);
            prev = """";
            while(true){
                if(temp == """") {
                    answer++;
                    break;
                }
                if(temp.Length>=3){
                    if(temp.IndexOf(""aya"", 0, 3)==0){
                        if(prev == ""aya"") break;
                        temp = temp.Substring(3,temp.Length-3);
                        prev = ""aya"";
                        continue;
                    }
                    else if(temp.IndexOf(""woo"", 0, 3)==0){
                        if(prev == ""woo"") break;
                        temp = temp.Substring(3,temp.Length-3);
                        prev = ""woo"";
                        continue;
                    }
                    else if(temp.IndexOf(""ye"", 0, 2)==0){
                        if(prev == ""ye"") break;
                        temp = temp.Substring(2,temp.Length-2);
                        prev = ""ye"";
                        continue;
                    }
                    else if(temp.IndexOf(""ma"", 0, 2)==0){
                        if(prev == ""ma"") break;
                        temp = temp.Substring(2,temp.Length-2);
                        prev = ""ma"";
                        continue;
                    }
                    else break;
                }
                else if(temp.Length==2)
                {
                    if(temp.IndexOf(""ye"", 0, 2)==0){
                        if(prev == ""ye"") break;
                        temp = temp.Substring(2,temp.Length-2);
                        continue;
                    }
                    else if(temp.IndexOf(""ma"", 0, 2)==0){
                        if(prev == ""ma"") break;
                        temp = temp.Substring(2,temp.Length-2);
                        continue;
                    }
                    else break;
                }
                else break;
                
            }
        }
        return answer;
    }
}",https://github.com/ychy0006/AlgorithmCodeKata/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4,2023. 9. 13,52,2
2023. 9. 13 오전 9:35:35,우성훈,Unity,13 - 콜라츠 추측,"public class Solution
    {
        public int solution(int num)
        {
        // 입력받은 int형의 num을 long으로 변환해준다.
            long temp = num;
            // 반복 횟수를 측정
            int answer = 0;
            // 숫자가 1이될때까지 반복한다.
            while (temp != 1)
            {
            // 반복횟수를 1 올려준다.
                ++answer;
                
                // 숫자가 짝수면 나누기 2 , 홀수면 3곱하고 1을 더함
                temp = temp % 2 == 0 ? temp / 2 : temp * 3 + 1;
                
                // 만약 반복숫자가 500이 넘어버리면
                if (answer > 500)
                {
                    return -1;
                }
            }
            // 몇번 반복했는지 리턴
            return answer;
        }
    }",,2023. 9. 13,13,1
2023. 9. 13 오전 9:36:22,이두희,Unity,5 - 나머지가 1이 되는 수 찾기,"        public class Solution
    {
        public int solution(int n)
        {
            int answer = 0;

            for (int i = 2; i <n ;i++ )
            {
               if (n%i == 1)
                {
                    answer = i;
                    break;
                }           
            return answer;

        }
    }",https://github.com/Dooheee,2023. 9. 13,5,1
2023. 9. 13 오전 9:37:16,조병우,Unity,19 - 제일 작은 수 제거하기,"using System;
using System.Linq;

public class Solution {
    public int[] solution(int[] arr) {
      int[] answer = new int[] { };

            int min = arr.Min(x => x);

            answer = arr.Where(w => w > min).ToArray();

            if (answer.Count() < 1)
                answer = new int[] { -1 };

            return answer.ToArray();
    }
}",,2023. 9. 13,19,1
2023. 9. 13 오전 9:37:23,노재우,Unity,46 - 과일 장수,"using System;

public class Solution
{
    public int solution(int k, int m, int[] score) // k 점수 // m 박스 갯수 // score 사과 점수
    {
        Array.Sort(score);
        Array.Reverse(score);
        int answer = 0;

        for (int i = 0; i < score.Length; i += m)
        {
            if (i + m-1 >= score.Length)
                break;

            answer += score[i + m - 1]*m;
        }

        return answer;
    }
}",,2023. 9. 13,46,2
2023. 9. 13 오전 9:37:54,이장원,Unity,17 - 핸드폰 번호 가리기,"namespace codekata
{
    public class Solution
    {
        public string solution(string phone_number)
        {
            string answer = """";

            string temp_str = phone_number.Substring(phone_number.Length - 4, 4);

            for (int i = 0; i < phone_number.Length - 4; ++i)
            {
                answer += ""*"";
            }

            answer += temp_str;

            return answer;
        }
    }
}",,2023. 9. 13,17,1
2023. 9. 13 오전 9:38:12,강성호,Unity,58 - 햄버거 만들기,"using System;
using System.Buffers;
using System.Collections.Generic;
using System.ComponentModel;
using System.Linq;

public class Solution {
    public int solution(int[] ingredient) {
        int answer = 0;
		
		List<int> list = new List<int>();

		foreach (int i in ingredient)
		{
			list.Add(i);

			if(list.Count >= 4)
			{
				if (list[list.Count - 4] == 1 && list[list.Count - 3] == 2 && list[list.Count - 2] == 3 && list[list.Count - 1] == 1)
				{
					answer++;
					list.RemoveRange(list.Count - 4, 4);
				}
			}
		}

		return answer;
    }
}",,2023. 9. 13,58,3
2023. 9. 13 오전 9:38:17,이홍준,Unity,47 - 모의고사완전탐색,"using System;
using System.Collections.Generic;

public class Solution {
    public int[] solution(int[] answers) {
        int[] answer = new int[] {};
        int[] first = new int[5] {1, 2, 3, 4, 5};
        int[] second = new int[8] {2, 1, 2, 3, 2, 4, 2, 5};
        int[] third = new int[10] {3, 3, 1, 1, 2, 2, 4, 4, 5, 5};
        int[] score = new int[3] {0, 0, 0};
        int max = 0;
        List<int> student = new List<int>();
        
        for (int i = 0; i < answers.Length; i++)
        {
            if (first[i % 5] == answers[i])
            {
                score[0]++;
            }
            if (second[i % 8] == answers[i])
            {
                score[1]++;
            }
            if (third[i % 10] == answers[i])
            {
                score[2]++;
            }
        }
        
        for (int i = 0; i < 3; i++)
        {
            if (max < score[i])
            {
                max = score[i];
            }
        }
        
        for (int i = 0; i < 3; i++)
        {
            if (max == score[i])
            {
                student.Add(i + 1);
            }
        }
        answer = student.ToArray();
        return answer;
    }
}",https://github.com/dlghdwns97/Study/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/42840.%E2%80%85%EB%AA%A8%EC%9D%98%EA%B3%A0%EC%82%AC,2023. 9. 13,47,2
2023. 9. 13 오전 9:39:07,김진규,Unity,55 - 문자열 나누기,"using System;

public class Solution {
    public int solution(string s) {
        int answer = 0;
        int startIndex = 0;
        while (startIndex < s.Length) {
            char x = s[startIndex]; 
            int countX = 0;
            int countNotX = 0;
            int currentIndex = startIndex;

            while (currentIndex < s.Length) {
                if (s[currentIndex] == x) {
                    countX++;
                } else {
                    countNotX++;
                }

                if (countX == countNotX) {
                    break;
                }

                currentIndex++;
            }
            answer++;

            startIndex = currentIndex + 1;
        }

        return answer;
    }
}",,2023. 9. 13,55,3
2023. 9. 13 오전 9:39:14,최성원,Unity,13 - 콜라츠 추측,"public class Solution {
    public int solution(int num) {
        int answer = 0;
        long n = num; 
        
        while (n != 1) {
            if (answer >= 500) {
                return -1; 
            }
            
            if (n % 2 == 0) {
                n /= 2; 
            } else {
                n = n * 3 + 1; 
            }
            
            answer++; 
        }
        
        return answer; 
    }
}",,2023. 9. 13,13,1
2023. 9. 13 오전 9:39:20,김진환,Unity,46 - 과일 장수,"public int solution(int k, int m, int[] score)
        {
            int answer = 0;
            List<int> scores = new List<int>();
            for(int i = 0; i < score.Length; i++)
            {
                scores.Add(score[i]);
            }
            scores.Sort();
            scores.Reverse();

            for(int i = 0; i < scores.Count; i++)
            {
                 if( i % m == m - 1)
                {
                    answer += m * scores[i];
                }
            }

            return answer;
        }",https://github.com/NewRound/AlgorithmKata.git,2023. 9. 13,46,2
2023. 9. 13 오전 9:39:37,김형중,Unity,42 - 콜라 문제,"public class Solution {
    public int solution(int a, int b, int n) {
        int answer = 0;
        
        while(n > a -1)
        {
            answer += (n / a) * b;
            n = (n / a) * b + n % a;
        }
        
        return answer;
    }
}",,2023. 9. 13,42,2
2023. 9. 13 오전 9:39:51,박준규,Unity,38 - K번째수정렬,"using System;
using System.Collections.Generic;

public class Solution 
{
    public int[] solution(int[] array, int[,] commands) 
    {
        int[] answer = new int[commands.GetLongLength(0)];
        
        for(int n = 0; n < commands.GetLongLength(0); n++)
        {
            int i = commands[n, 0];
            int j = commands[n, 1];
            int k = commands[n, 2];
            
            int[] temp = new int[j - i + 1];
            
            for(int a = 0; a<temp.Length; a++)
            {
                temp[a] = array[a+i-1];
            }
            Array.Sort(temp);
            
            answer[n] = temp[k-1];
        }
        return answer;
    }
}",,2023. 9. 13,38,2
2023. 9. 13 오전 9:41:29,기현빈,Unity,41 - 푸드 파이트 대회,"using System;

public class Solution {
    public string solution(int[] food) {
        string answer = """";
        
        for(int i = 1; i < food.Length; i++) {
            answer += """".PadLeft(food[i] / 2, i.ToString()[0]);
        }
        
        answer += ""0"";
        
        for(int i = food.Length - 1; i > 0; i--) {
            answer += """".PadLeft(food[i] / 2, i.ToString()[0]);
        }
        
        return answer;
    }
}",,2023. 9. 13,41,2
2023. 9. 13 오전 9:42:06,정재호,Unity,46 - 과일 장수,"using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.Linq;

public class Solution
{
    public int solution(int k, int m, int[] score)
    {
        int answer = 0;

        int left = score.Length % m;
        Array.Sort(score);
        List<int> listScore = score.ToList();

        for (int i = 0; i < left; i++)
        {
            listScore.RemoveAt(0);
        }

        List<int> boxSort = new List<int>();
        for (int i = 1; i <= listScore.Count; i++)
        {
            boxSort.Add(listScore[i - 1]);
            if (i % m == 0)
            {
                answer += boxSort[0] * m;
                boxSort.Clear();
                continue;
            }
        }
        return answer;
    }
}",,2023. 9. 13,46,2
2023. 9. 13 오전 9:43:28,조범준,Unity,50 - 기사단원의 무기,"using System;

public class Solution {
    public int solution(int number, int limit, int power) {
        int answer = 0;
        int count = 0;
        for(int i = 1; i <= number; i++){
            count = 0;
            int a = (int)Math.Sqrt(i);
            for(int j = 1; j <= a;j++){
                if(i % j == 0){
                    count+=2;
                }
                if((float)i/j == j){
                    count--;
                }
            }
            if(count > limit){
                count = power;
            }
            answer+=count;
        }
        return answer;
    }
}",https://github.com/KimMaYa1/BaekJoonEx/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4,2023. 9. 13,50,2
2023. 9. 13 오전 9:44:27,이주연,Unity,47 - 모의고사완전탐색,"#include <string>
#include <vector>

using namespace std;

int tester1[5] = {1,2,3,4,5};
int tester2[8] = {2,1,2,3,2,4,2,5};
int tester3[10] = {3,3,1,1,2,2,4,4,5,5};

int max(int a, int b){
    return a < b ? b : a;
}

vector<int> solution(vector<int> answers) {
    vector<int> answer;
    vector<int> score(3);
    int maxScore = 0;
    
    for(int i=0; i < answers.size(); i++){
        if(tester1[i % 5] == answers[i]) score[0]++; 
        if(tester2[i % 8] == answers[i]) score[1]++;     
        if(tester3[i % 10] == answers[i]) score[2]++;
    }

    
    maxScore = max(max(score[0],score[1]),score[2]);
    
    for (int i=0; i<3; i++){
        if(score[i] == maxScore) answer.push_back(i+1);
    }
    
    return answer;
}",,2023. 9. 13,47,2
2023. 9. 13 오전 9:44:34,이현지,Unity,51 - 로또의 최고 순위와 최저 순위,"using System;
using System.Linq;

public class Solution {
    public int[] solution(int[] lottos, int[] win_nums) {
        int[] answer = new int[2];
        
        int winCount = 0;
        int zeroCount = 0;
        
        foreach (int num in lottos)
        {
            if (win_nums.Count(n => n == num) != 0)
            {
                winCount ++;
            }
            
            if (num == 0)
            {
                zeroCount ++;
            }
        }
        answer[0] = (7 - (winCount + zeroCount) <= 6)? 7 - (winCount + zeroCount) : 6;
        answer[1] = (7 - winCount <= 6)? 7 - winCount : 6;
        
        return answer;
    }
}",https://github.com/szlovelee/Programmers-Algorithm,2023. 9. 13,51,2
2023. 9. 13 오전 9:45:06,이경현,Unity,43 - 명예의 전당 (1),"public int[] solution(int k, int[] score)
{
    int[] answer = new int[score.Length];
    List<int> award = new List<int>();
    int count = 0;
    foreach (int s in score)
    {
        award.Add(s);
        award.Sort();
        if (award.Count > k)
            award.RemoveAt(0);
        answer[count++] = award[0];
    }
    return answer;
}",https://github.com/516lkh/Algorithm,2023. 9. 13,43,2
2023. 9. 13 오전 9:46:11,김명식,Unity,33 - 크기가 작은 부분,"using System;

public class Solution {
    public int solution(string t, string p) {
        int answer = 0;
            int leng = p.Length;
            for (int i = 0; i < t.Length - leng + 1; i++)
            {

                    long num = long.Parse(t.Substring(i, p.Length));
                    if (num <= long.Parse(p)) answer++;

            }
            return answer;
    }
}",https://github.com/D0ryeon/Algorithm-Code-Kata,2023. 9. 13,33,2
2023. 9. 13 오전 9:46:42,김진성,Unity,29 - 최대공약수와 최소공배수,"namespace Algorithm_011
{
    public class GCDandLCM
    {
        public int[] solution(int n, int m)
        {
            int[] answer = new int[2];

            int min = Math.Min(n, m);
            int max = Math.Max(n, m);

            int gcd = min;

            while (true) //최대공약수 만들기 : 유클리드 호제법
            {
                gcd = max % min;
                if (gcd == 0)
                {
                    break;
                }
                max = min;
                min = gcd;
            }

            answer = new int[2] { min, n * m / min };

            return answer;
        }
    }
}",https://github.com/GYALLERHORN/ALGORITHM,2023. 9. 13,29,1
2023. 9. 13 오전 9:46:54,이소이,Unity,49 - 덧칠하기,"using System;

public class Solution {
    public int solution(int n, int m, int[] section) {
        int answer = 0;
        int sectionIndex = 0;
        for (int i = 1; i <= n; i++)
        {
            if (i < section[sectionIndex])
                continue;
            i = i + m - 1; // 이 칸까지 칠했음
            while (true)
            {
                sectionIndex++;
                if (sectionIndex >= section.Length)
                    break;
                if (i < section[sectionIndex])
                    break;
            }
            answer++;
            if (sectionIndex >= section.Length)
                break;
        }
        return answer;
    }
}",https://github.com/leesy015599/AlgorithmCodeKata/blob/master/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/unrated/161989.%E2%80%85%EB%8D%A7%EC%B9%A0%ED%95%98%EA%B8%B0/%EB%8D%A7%EC%B9%A0%ED%95%98%EA%B8%B0.cs,2023. 9. 13,49,2
2023. 9. 13 오전 9:47:02,김연우,Unity,14 - 서울에서 김서방 찾기,"#include <string>
#include <vector>

using namespace std;

string solution(vector<string> seoul) {
    string answer = """";

    for (int i = 0; i < seoul.size(); i++) {
        if (seoul[i] == ""Kim"") {
            answer = ""김서방은 "" + to_string(i) + ""에 있다"";
            break;
        }
    }

    return answer;
}
",,2023. 9. 13,14,1
2023. 9. 13 오전 9:47:04,최석준,Unity,15 - 나누어 떨어지는 숫자,"#include <string>
#include <vector>
#include <algorithm>

using namespace std;

vector<int> solution(vector<int> arr, int divisor) {
    vector<int> answer;
    for(int i = 0; i < arr.size(); i++)
    {
        if(arr[i]%divisor == 0)
            answer.push_back(arr[i]);
    }
    if(answer.empty())
        answer.push_back(-1);
    sort(answer.begin(), answer.end());
    return answer;
}",,2023. 9. 13,15,1
2023. 9. 13 오전 9:47:40,박희원,Unity,45 - 카드 뭉치,"using System;

public class Solution {
     public string solution(string[] cards1, string[] cards2, string[] goal)
            {
                string answer = ""Yes"";
                int idx1 = 0, idx2 = 0; 
                for(int i = 0; i<goal.Length; i++)
                {
                    if (idx1 < cards1.Length && goal[i] == cards1[idx1])
                    {
                        idx1++;
                        continue;
                    }
                    else if (idx2 < cards2.Length && goal[i] == cards2[idx2])
                    {
                        idx2++;
                        continue;
                    }
                    else
                        return ""No""; 
                }
               
                return answer;
            }
}",,2023. 9. 13,45,2
2023. 9. 13 오전 9:48:06,이선재,Unity,66 - JadenCase 문자열 만들기,"#include <string>
#include <vector>

using namespace std;

string solution(string s) {
    string answer = """";
    int lastIdx = 0;

    for (int i = 0; i < s.length(); i++) {
        if (s[i] == ' ') {
            string newString = s.substr(lastIdx, i - lastIdx +1);

            for (int j = 0; j < newString.length(); j++) {
                if (j == 0) {
                    newString[j] = toupper(newString[j]);
                }
                else {
                    newString[j] = tolower(newString[j]);
                }
            }

            answer += newString;

            lastIdx = i + 1;
        }
    }

    if (lastIdx < s.length()) {
        string newString = s.substr(lastIdx);
        
        for (int j = 0; j < newString.length(); j++) {
            if (j == 0) {
                newString[j] = toupper(newString[j]);
            }
            else {
                newString[j] = tolower(newString[j]);
            }
        }
        
        answer += newString;
    }

    return answer;
}",https://github.com/Lyrwhitt/Algorithm/blob/main/Programmers/LEVEL2/JadenCase%20%EB%AC%B8%EC%9E%90%EC%97%B4%20%EB%A7%8C%EB%93%A4%EA%B8%B0,2023. 9. 13,66,3
2023. 9. 13 오전 9:48:08,함영주,Unity,25 - 부족한 금액 계산하기,"using System;

class Solution
{
    public long solution(int price, int money, int count)
    {   long total = 0;
        for (var i = 1; i <= count; i++)
        {
            total += price * i;
        }
        return (total - money)<0 ? 0 :  total- money;
    }
}",,2023. 9. 13,25,1
2023. 9. 13 오전 9:48:23,박희원,Unity,47 - 모의고사완전탐색,"using System;
using System.Collections.Generic;
using System.Linq; 

public class Solution {
    public List<int> solution(int[] answers)
            {
                List<int> answer= new List<int>();

                int[][] stus = new int[3][];
                stus[0]= new int[] { 1, 2, 3, 4, 5 };
                stus[1] = new int[] { 2, 1, 2, 3, 2, 4, 2, 5 };
                stus[2] = new int[] { 3, 3, 1, 1, 2, 2, 4, 4, 5, 5 };

                int[] score = { 0, 0, 0 };

                for(int i = 0; i<answers.Length; i++)
                {
                    for(int j = 0; j<score.Length; j++)
                    {
                        if (stus[j][i % stus[j].Length] == answers[i])
                            score[j]++; 
                    }
                        
                }
                for(int i = 0; i<score.Length; i++)
                {
                    if (score[i] == score.Max())
                        answer.Add(i + 1); 
                }

                return answer;
            }
}",,2023. 9. 13,47,2
2023. 9. 13 오전 9:48:54,진우성,Unity,16 - 음양 더하기,"using System;

public class Solution 
{
    public int solution(int[] absolutes, bool[] signs) 
    {
        int answer = 0;
        for(int i = 0; i < absolutes.Length; i++)
        {
            if(signs[i] == true)
            {
                answer += absolutes[i];
            }
            else
            {
                answer += -absolutes[i];
            }
        }
        return answer;
    }
}",https://github.com/xjwsx/Algorithm,2023. 9. 13,16,1
2023. 9. 13 오전 9:49:20,진우성,Unity,19 - 제일 작은 수 제거하기,"using System;
using System.Linq;
using System.Collections.Generic;

public class Solution 
{
    public int[] solution(int[] arr) 
    {
        int[] answer = new int[] {};
        List<int> arrList = new List<int>();
        int min = arr.Min();
        if(arr.Length <= 1)
        {
            arrList.Add(-1);
            answer = arrList.ToArray();
        }
        for(int i = 0; i < arr.Length; i++)
        {
            arrList.Add(arr[i]);
            arrList.Remove(min);
            answer = arrList.ToArray();
        }
        return answer;
    }
}",https://github.com/xjwsx/Algorithm,2023. 9. 13,19,1
2023. 9. 13 오전 9:49:29,조병우,Unity,20 - 가운데 글자 가져오기,"public class Solution {
    public string solution(string s) {
        string answer = """";
        if(s.Length % 2 == 0){
            answer += s[(s.Length/2) -1];
            answer += s[s.Length / 2];
        }
        if(s.Length % 2 == 1){
            answer += s[s.Length / 2];
        }
        return answer;
    }",,2023. 9. 13,20,1
2023. 9. 13 오전 9:51:42,박희원,Unity,46 - 과일 장수,"public int solution(int k, int m, int[] score) {
        int answer = 0;
        int index = m - 1;
        Array.Sort(score);
        Array.Reverse(score);
        
        for(int i = 0; i < score.Length / m; i++)
        {
            answer += score[index] * m;
            index += m;
        }
        return answer;
    }",,2023. 9. 13,46,2
2023. 9. 13 오전 9:51:50,손병의,Unity,28 - 직사각형 별찍기,"using System;

public class Example
{
    public static void Main()
    {
        String[] s;

        Console.Clear();    
        s = Console.ReadLine().Split(' ');

        int a = Int32.Parse(s[0]);
        int b = Int32.Parse(s[1]);
        
        for(int i = 0; i < b; i++)
        {
            for(int j = 0; j < a; j++)
            {
                Console.Write(""*"",a + b);
            }
              Console.WriteLine();
        }

      
    }
}",,2023. 9. 13,28,1
2023. 9. 13 오전 9:51:54,이홍준,Unity,48 - 소수 만들기,"using System;

class Solution
{
    public int solution(int[] nums)
    {
        int answer = 0;
        int temp = 0;
        bool isRight = true;

        for (int i = 0; i < nums.Length - 2; i++)
        {
            for (int j = i + 1; j < nums.Length - 1; j++)
            {
                for (int k = j + 1; k < nums.Length; k++)
                {
                    temp = nums[i] + nums[j] + nums[k];
                    isRight = true;
                    for (int x = 2; x < temp; x++)
                    {
                        if (temp % x == 0)
                        {
                            isRight = false;
                            break;
                        }
                        else {}
                    }
                    if (isRight == true)
                    {
                        answer++;
                    }
                    temp = 0;
                }
            }
        }

        return answer;
    }
}",https://github.com/dlghdwns97/Study/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12977.%E2%80%85%EC%86%8C%EC%88%98%E2%80%85%EB%A7%8C%EB%93%A4%EA%B8%B0,2023. 9. 13,48,2
2023. 9. 13 오전 9:52:05,박희원,Unity,47 - 모의고사완전탐색,"using System;
using System.Collections.Generic;
using System.Linq; 

public class Solution {
    public List<int> solution(int[] answers)
            {
                List<int> answer= new List<int>();

                int[][] stus = new int[3][];
                stus[0]= new int[] { 1, 2, 3, 4, 5 };
                stus[1] = new int[] { 2, 1, 2, 3, 2, 4, 2, 5 };
                stus[2] = new int[] { 3, 3, 1, 1, 2, 2, 4, 4, 5, 5 };

                int[] score = { 0, 0, 0 };

                for(int i = 0; i<answers.Length; i++)
                {
                    for(int j = 0; j<score.Length; j++)
                    {
                        if (stus[j][i % stus[j].Length] == answers[i])
                            score[j]++; 
                    }
                        
                }
                for(int i = 0; i<score.Length; i++)
                {
                    if (score[i] == score.Max())
                        answer.Add(i + 1); 
                }

                return answer;
            }
}",,2023. 9. 13,47,2
2023. 9. 13 오전 9:52:29,박희원,Unity,48 - 소수 만들기,"using System;

class Solution
{
     public int solution(int[] nums)
            {
                int answer = 0;

                for (int i = 0; i < nums.Length - 2; ++i)
                {
                    for (int j = i + 1; j < nums.Length - 1; ++j)
                    {
                        for (int k = j + 1; k < nums.Length; ++k)
                        {
                            int sum = nums[i] + nums[j] + nums[k];
                            if (IsPrime(sum))
                            {
                                answer++;
                            }
                        }
                    }
                }

                return answer;
            }


            public bool IsPrime(int n)
            {
                bool isBool = true; 
                for (int i = 2; i <= n / 2; i++)
                {
                    if (n % i == 0)
                    {
                        isBool = false;
                        break;
                    }
                        
                }
                return isBool; 
            }
}",,2023. 9. 13,48,2
2023. 9. 13 오전 9:53:18,이승연,Unity,29 - 최대공약수와 최소공배수,"public class Solution {
    public int[] solution(int n, int m) {
        int[] answer = new int[] {};
        int min=n;
        int max=m;
            
        while(m>0)
        {
            int a=max%min;
            max=min;
            if(a==0)
            {
                break;
            }
            min =a;
        }
        
        return answer=new int[]{min,n*m/min};
    }
}",,2023. 9. 12,29,1
2023. 9. 13 오전 9:53:44,이승연,Unity,30 - 3진법 뒤집기,"using System;
using System.Collections.Generic;

public class Solution {
    public int solution(int n) {
        int answer = 0;
        int Value=0;
        List<int> list =new List<int>();
        while(n>0)
        {
            int d=n%3;
            list.Add(d);
            n=n/3;
        }
        list.Reverse();
        for(int i=0;i<list.Count;i++)
        {
            answer += (int)(list[i] * Math.Pow(3,i));
        }
        return answer;
    }
}",,2023. 9. 13,30,1
2023. 9. 13 오전 9:53:54,박민혁,Unity,41 - 푸드 파이트 대회,"using System;

public class Solution {
    public string solution(int[] food) {
        string answer = """";
        
        for(int i = 1; i < food.Length; i++)
        {
            for(int j = 0; j < food[i] / 2; j++)
            {
                answer += i.ToString();
            }
        }
        char[] chars = answer.ToCharArray();
        Array.Reverse(chars);
        string str = new string(chars);
        answer += ""0"" + str;
        return answer;
    }
}",,2023. 9. 13,41,2
2023. 9. 13 오전 9:55:47,김예준,Unity,63 - 공원 산책,"using System;

public class Solution {
    public int[] solution(string[] park, string[] routes) {
        int[] answer = new int[2];
        
        int x = 0;
        int y = 0;
        int H = park.Length;
        int W = park[0].Length;
        
        for (int i = 0; i < H; i++)
        {
            for (int j = 0; j < W; j++)
            {
                if (park[i][j] == 'S')
                {
                    x = j;
                    y = i;
                    break;
                }
            }
        }
        
        foreach (string route in routes)
        {
            char dir = route[0];
            int dist = route[2] - '0';
            bool flag = true;
            
            if (dir == 'E')
            {
                if (x + dist >= W) continue;
                
                for(int i = 1; i <= dist; i++)
                {
                    if (park[y][x + i] == 'X')
                    {
                        flag = false;
                        break;
                    }
                }
                
                if (flag) x = x + dist;
            }
            else if (dir == 'W')
            {
                if (x - dist < 0) continue;
                
                for(int i = 1; i <= dist; i++)
                {
                    if (park[y][x - i] == 'X')
                    {
                        flag = false;
                        break;
                    }
                }
                
                if (flag) x = x - dist;
            }
            else if (dir == 'S')
            {
                if (y + dist >= H) continue;
                
                for(int i = 1; i <= dist; i++)
                {
                    if (park[y + i][x] == 'X')
                    {
                        flag = false;
                        break;
                    }
                }
                
                if (flag) y = y + dist;
            }
            else
            {
                if (y - dist < 0) continue;
                
                for(int i = 1; i <= dist; i++)
                {
                    if (park[y - i][x] == 'X')
                    {
                        flag = false;
                        break;
                    }
                }
                
                if (flag) y = y - dist;
            }
        }
        
        answer[0] = y;
        answer[1] = x;
        
        return answer;
    }
}",,2023. 9. 13,63,3
2023. 9. 13 오전 9:56:59,김종,Unity,73 - 귤 고르기,"using System;

public class Solution {
    public int solution(int k, int[] tangerine) {
        map<Integer, Integer> map = new LinkedHashMap<>();
        
        for (int t : tangerine) {
            if (map.containskey(t)){
                int sum = map.get(t);
                map.put(t, sum+1);
            }
            else {
                map.put(t,1);
            }
        }

        List<Map.Entry<Integer,Integer>> List = new ArrayList<>(map.entrySet());
        List.sort((obj1, obj2) -> obj2.getValue().compareTo(obj1.getValue()));

        List<Integer> T = new ArrayList<>();

        for(int i = 0; i<list.size(); i++){
            if( k<=0 ){
                break;
            }

            int count = list.get(i).getValue();
            T.add(list.get(i).getKey());
            k -= count;
        }

        return T.size();
    }
}",,2023. 9. 13,73,3
2023. 9. 13 오전 9:57:02,문현우,Unity,32 - 삼총사,"using System;

public class Solution {
    public int solution(int[] number) {
        int answer = 0;
        for(int i = 0; i< number.Length; i++){
            for(int j = i+1; j < number.Length; j++){
                for(int k = j+1; k< number.Length; k++){
                    if(number[i] + number[j] + number[k] == 0){
                        answer++;
                    }
                }
            }
        }
        return answer;
    }
}",https://github.com/Munch310/Algorithm-Csharp/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/131705.%E2%80%85%EC%82%BC%EC%B4%9D%EC%82%AC,2023. 9. 13,32,2
2023. 9. 13 오전 9:58:18,이정환,Unity,41 - 푸드 파이트 대회,"using System;
using System.Text;
using System.Collections.Generic;
public class Solution {

        public string solution(int[] food)
        {
            string answer = """";
            StringBuilder sb = new StringBuilder(answer);
            for (int index = 0; index < food.Length; index++)
            {
                int foodNum = food[index];
                if (foodNum % 2 == 0)
                {
                    for(int i = 0; i < foodNum / 2; i++)
                    {
                        sb.Append(index);
                    }

                }
                else
                {
                    for(int i = 0;i < foodNum / 2; i++)
                    {
                        sb.Append(index);
                    }
                }
            }
            answer = sb.ToString();
            char[] reversedChars = answer.ToCharArray();
            Array.Reverse(reversedChars);
            sb.Append('0');
            sb.Append(reversedChars);

            return sb.ToString();
        }
}",,2023. 9. 13,41,2
2023. 9. 13 오전 9:58:38,조범준,Unity,51 - 로또의 최고 순위와 최저 순위,"using System;

public class Solution {
    public int[] solution(int[] lottos, int[] win_nums) {
        int[] answer = new int[2];
        int count = 0;
        int nullcount = 0;
        int num = 6;
        for(int i = 0 ; i < lottos.Length; i++){
            if(lottos[i] == 0 ){
                nullcount++;
            }
            else if(Array.Find(win_nums,element => element == lottos[i]) == lottos[i]){
                 count++;
            }
        }
        answer[0] = LottoNum(count+nullcount);
        answer[1] = LottoNum(count);
        return answer;
    }
    
    int LottoNum(int num){
        switch(num){
            case 6 :
                num = 1;
                break;
            case 5 :
                num = 2;
                break;
            case 4 :
                num = 3;
                break;
            case 3 :
                num = 4;
                break;
            case 2 :
                num = 5;
                break;
            case 1 :
            case 0 :
                num = 6;
                break;
        }
        return num;
    }
}",https://github.com/KimMaYa1/BaekJoonEx/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4,2023. 9. 13,51,2
2023. 9. 13 오전 9:59:10,송유섭,Unity,16 - 음양 더하기,"using System;

public class Solution 
{
    public int solution(int[] absolutes, bool[] signs) 
    {
        int answer = 0;
        
        for(int i = 0; i < absolutes.Length; i++)
        {
            if (signs[i] == false)
            absolutes[i] *= -1;
            answer += absolutes[i];
        }
        
        return answer;
    }
}",https://github.com/SongJinx3512/NBC/blob/main/codeKata/codeKata%20lv%201%20%23016%20%EC%9D%8C%EC%96%91%20%EB%8D%94%ED%95%98%EA%B8%B0,2023. 9. 13,16,1
2023. 9. 13 오전 9:59:15,이성,Unity,14 - 서울에서 김서방 찾기,"public class Solution {
    public string solution(string[] seoul) {
        string answer = """";
        for(int i=0; i<seoul.Length; i++)
        {
            if(seoul[i]==""Kim"") 
            {
                answer = ""김서방은 "" + i + ""에 있다"";
                break;
            }
        }
        return answer;
    }
}",https://github.com/LeeSeongGwon,2023. 9. 13,14,1
2023. 9. 13 오전 9:59:37,송유섭,Unity,17 - 핸드폰 번호 가리기,"public class Solution
{
    public string solution(string phone_number)
    {
        string answer = """";

        for (int i = 0; i < phone_number.Length; i++)
        {
            if (i < phone_number.Length-4)
            {
            answer += ""*"";
            }
            
            else
            {
            answer += phone_number[i];
            }
        }

            return answer;
    }
}",https://github.com/SongJinx3512/NBC/blob/main/codeKata/codeKata%20lv%201%20%23017%20%ED%95%B8%EB%93%9C%ED%8F%B0%20%EB%B2%88%ED%98%B8%20%EA%B0%80%EB%A6%AC%EA%B8%B0,2023. 9. 13,17,1
2023. 9. 13 오전 9:59:49,박준규,Unity,39 - 두 개 뽑아서 더하기,"using System;
using System.Collections.Generic;
using System.Linq;

public class Solution 
{
    public int[] solution(int[] numbers)
    {
        int[] answer = {};
        int num = 0;
        List<int> list = new List<int>();
        
        for(int i =0; i<numbers.Length; i++){
            for(int j =i+1; j<numbers.Length; j++){
                num = numbers[i]+numbers[j];
                list.Add(num);
            }
        }
        answer = list.ToArray();
        answer = answer.Distinct().ToArray();
        Array.Sort(answer);
        return answer;
    }
}",,2023. 9. 13,39,2
2023. 9. 13 오전 9:59:57,이두희,Unity,6 - x만큼 간격이 있는 n개의 숫자,"public class Solution {
    public long[] solution(int x, int n) {
         long[] answer = new long[n];
        long longX = x;
        for (int i = 0; i < n; i++)
        {
            answer[i] = longX;
            longX += x;
        }
        return answer;
    }
}",https://github.com/Dooheee,2023. 9. 13,6,1
2023. 9. 13 오전 10:01:08,채이환,Unity,50 - 기사단원의 무기,"using System;
using System.Linq;
using System.Collections.Generic;
public class Solution {
    public int solution(int number, int limit, int power) {
        int answer = 0;
        for (int i = 0; i < number; ++i)
        {
            int divisorCount = GetDivisorCount(i+1);
            if (limit < divisorCount)
                answer += power;
            else
                answer += divisorCount;
        }
        return answer;
    }
    public int GetDivisorCount(int num)
    {
        int ret = 1;
        Dictionary<int, int> divisor = new Dictionary<int, int>();
        int i = 2;
        while (num > 1)
        {
            if (num % i == 0)
            {
                if (divisor.ContainsKey(i))
                    divisor[i] += 1;
                else
                    divisor.Add(i, 1);
                num /= i;
                i = 2;
            }
            else
                ++i;
        }
        int[] divisorCount = divisor.Values.ToArray();
        foreach (int count in divisorCount)
        {
            ret = ret * (count + 1);
        }
        Console.WriteLine(ret);
        return ret;
    }
}",,2023. 9. 13,50,2
2023. 9. 13 오전 10:01:36,채이환,Unity,51 - 로또의 최고 순위와 최저 순위,"using System;

public class Solution {
    public int[] solution(int[] lottos, int[] win_nums) {
        int[] answer = new int[2];
        int count = 0;
        int dis = 0;
        foreach (int num in lottos)
            foreach (int win in win_nums)
            {
                if (num == win)
                {
                    ++count;
                    break;
                }
                else if (num == 0)
                {
                    ++dis;
                    break;
                }
            }
        int[] rank = {6, 6, 5, 4, 3, 2, 1};
        answer[0] = rank[count + dis];
        answer[1] = rank[count];
        return answer;
    }
}",,2023. 9. 13,51,2
2023. 9. 13 오전 10:03:17,우민규,Unity,33 - 크기가 작은 부분,"using System;

public class Solution {
    public int solution(string t, string p) {
        int answer = 0;
        
        
        //p를 long으로 변환
        long longP = long.Parse(p);
        
        //t길이에 p 길이만큼 뺀 값 EX) 12456, 356 = 2
        for (int i = 0; i <= t.Length - p.Length; i++)
        {
            //저번에 사용한 문자열 자르기 .Substring()
            long temp = long.Parse(t.Substring(i, p.Length));

            if (temp <= longP)
                answer++;
        }
        return answer;
        
        //다시 공부하고 프로그래머스에 메모★    
    }
}",,2023. 9. 13,33,2
2023. 9. 13 오전 10:03:52,김형수,Unity,15 - 나누어 떨어지는 숫자,"using System;
using System.Collections.Generic;

public class Solution {
    public int[] solution(int[] arr, int divisor) {
        
        List<int> answer = new List<int>();

        for (int i = 0; i < arr.Length; i++)
        {
            if (arr[i] % divisor == 0)
            {
                answer.Add(arr[i]);
            }
        }

        if (answer.Count == 0)
        {
            answer.Add(-1);
        }

        answer.Sort();

        return answer.ToArray();
        
        
        
        //int[] answer = new int[] {};
        //return answer;
    }
}",https://github.com/Kim-H-S/Programmers/blob/main/%EB%82%98%EB%88%84%EC%96%B4%20%EB%96%A8%EC%96%B4%EC%A7%80%EB%8A%94%20%EC%88%AB%EC%9E%90%20%EB%B0%B0%EC%97%B4.cs,2023. 9. 13,15,1
2023. 9. 13 오전 10:04:58,한병권,Unity,62 - 달리기 경주,"using System;
using System.Collections.Generic;

public class Solution {
    public string[] solution(string[] players, string[] callings) {
        Dictionary<string,int> name = new Dictionary<string,int>();
        Dictionary<int,string> temp = new Dictionary<int,string>();
        
        for(int i = 0; i < players.Length; i ++)
        {
            name.Add(players[i],i);
            temp.Add(i,players[i]);
        }
        foreach(string s in callings)
        {
            int a = name[s];
            string str = temp[a-1];
            
            name[s] -= 1;
            name[str] +=1;
            
            temp[a-1] = s;
            temp[a] = str;
            
        }

        string[] answer = new string[players.Length];
        
        for(int i = 0; i < players.Length; i++)
        {
            answer[i] = temp[i];
        }
        
        return answer;
    }
}",https://github.com/hbg9212/AlgorithmCodekata,2023. 9. 13,62,3
2023. 9. 13 오전 10:05:01,이경민,Unity,36 - 숫자 문자열과 영단어,"using System;

public class Solution {
    public int solution(string s) {
        s = s.Replace(""zero"", ""0"");
        s = s.Replace(""one"", ""1"");
        s = s.Replace(""two"", ""2"");
        s = s.Replace(""three"", ""3"");
        s = s.Replace(""four"", ""4"");
        s = s.Replace(""five"", ""5"");
        s = s.Replace(""six"", ""6"");
        s = s.Replace(""seven"", ""7"");
        s = s.Replace(""eight"", ""8"");
        s = s.Replace(""nine"", ""9"");
        return int.Parse(s);
    }
               
}",https://github.com/kminsmin/Algorithm_Test_Practice/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/81301.%E2%80%85%EC%88%AB%EC%9E%90%E2%80%85%EB%AC%B8%EC%9E%90%EC%97%B4%EA%B3%BC%E2%80%85%EC%98%81%EB%8B%A8%EC%96%B4,2023. 9. 12,36,2
2023. 9. 13 오전 10:05:46,이경민,Unity,37 - 문자열 내 마음대로 정렬하기,"using System.Linq;
public class Solution {
    public string[] solution(string[] strings, int n) {
        string[] answer = new string[] {};
        answer = strings.OrderBy(x => x.Substring(n, 1)).ThenBy(x => x).ToArray();
        return answer;
    }
}",https://github.com/kminsmin/Algorithm_Test_Practice/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/12915.%E2%80%85%EB%AC%B8%EC%9E%90%EC%97%B4%E2%80%85%EB%82%B4%E2%80%85%EB%A7%88%EC%9D%8C%EB%8C%80%EB%A1%9C%E2%80%85%EC%A0%95%EB%A0%AC%ED%95%98%EA%B8%B0,2023. 9. 13,37,2
2023. 9. 13 오전 10:06:21,이경민,Unity,38 - K번째수정렬,"using System;
using System.Linq;
using System.Collections.Generic;

public class Solution {
    public List<int> solution(int[] array, int[,] commands) {       
        List<int> temp = new List<int>();
        List<int> answerList = new List<int>();
        
        for(int i = 0; i < commands.GetLength(0); i++)
        {
            temp.Clear();
            temp = array.Skip(commands[i,0]-1).Take(commands[i,1] - commands[i,0] + 1).ToList();
            temp.Sort();
            answerList.Add(temp[commands[i,2]-1]);
        }
        return answerList;
    }
}",https://github.com/kminsmin/Algorithm_Test_Practice/tree/main/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/42748.%E2%80%85K%EB%B2%88%EC%A7%B8%EC%88%98,2023. 9. 13,38,2
2023. 9. 13 오전 10:11:13,이성권,Unity,4 - 약수의 합,"public class Solution {
    public int solution(int n) {
        int answer = 0;
        
        //1부터 n까지 반복하여 n을 i로 나눈 나머지가 0이면
        //n의 약수이다.
        for(int i = 1; i<=n; i++)
        {
            if(n%i==0) answer += i;
        }
        return answer;
    }
}",https://github.com/LeeSeongGwon,2023. 8. 30,4,1
2023. 9. 13 오전 10:12:24,이성권,Unity,6 - x만큼 간격이 있는 n개의 숫자,"public class Solution {
    public long[] solution(int x, int n) {
        long[] answer = new long[n];
        //0부터 n까지 반복
        for(int i=0; i<n; i++)
        {
            if(i!=0)
                answer[i] += answer[i-1] + x;
            else
                answer[i] = x;
        }
        return answer;
    }
}",http://github.com/LeeSeongGwon,2023. 9. 1,6,1
2023. 9. 13 오전 10:14:31,이성권,Unity,10 - 정수 내림차순으로 배치하기,"using System;

public class Solution {

    public long solution(long n) {
        long answer = 0;
        // n을 곧장 char형태로 변환해서 새로운 char 배열에 저장함
        char[] temp = n.ToString().ToCharArray();
        

        Array.Sort(temp);
                Array.Reverse(temp);

        answer = Convert.ToInt64(new string(temp));
        return answer;
    }
}",http://github.com/LeeSeongGwon,2023. 9. 7,10,1
2023. 9. 13 오전 10:15:48,이성권,Unity,14 - 서울에서 김서방 찾기,"public class Solution {
    public string solution(string[] seoul) {
        string answer = """";
        //반복문을 이용하여 문자열 중 ""Kim""이 있는지 확인
        for(int i=0; i<seoul.Length; i++)
        {
            //만약 해당 문자열이 ""Kim"" 이면 i 번째에 있는 것.
            if(seoul[i]==""Kim"") 
            {
                answer = ""김서방은 "" + i + ""에 있다"";
                break;
            }
        }
        return answer;
    }
}",http://www.github.com/LeeSeongGwon,2023. 9. 13,14,1
,,,,,,,,
,,,,,,,,
,,,,,,,,
,,,,,,,,
,,,,,,,,
,,,,,,,,
,,,,,,,,
,,,,,,,,
,,,,,,,,
,,,,,,,,
,,,,,,,,
,,,,,,,,
,,,,,,,,
,,,,,,,,
,,,,,,,,
,,,,,,,,
,,,,,,,,
,,,,,,,,
,,,,,,,,
,,,,,,,,
,,,,,,,,
,,,,,,,,
,,,,,,,,
,,,,,,,,
,,,,,,,,
,,,,,,,,
,,,,,,,,
,,,,,,,,
,,,,,,,,
,,,,,,,,
,,,,,,,,
,,,,,,,,
,,,,,,,,
,,,,,,,,
,,,,,,,,
,,,,,,,,
,,,,,,,,
,,,,,,,,
,,,,,,,,
,,,,,,,,
,,,,,,,,
,,,,,,,,
,,,,,,,,
,,,,,,,,
,,,,,,,,
,,,,,,,,
,,,,,,,,
2023. 8. 23 오후 10:29:25,테스트,AI,18 -,-,-,2023. 8. 24,18,1